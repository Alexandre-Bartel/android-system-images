public final class org.apache.harmony.luni.internal.reflect.ProxyClassFile extends java.lang.Object implements org.apache.harmony.luni.internal.reflect.ProxyConstants
{
    private static java.lang.reflect.Method ClassForNameMethod;
    private static java.lang.reflect.Method ClassGetMethod;
    private static java.lang.reflect.Method HandlerInvokeMethod;
    private static final int INCREMENT_SIZE;
    private static final int INITIAL_CONTENTS_SIZE;
    private static final int INITIAL_HEADER_SIZE;
    private static java.lang.reflect.Method ObjectEqualsMethod;
    private static java.lang.reflect.Method ObjectHashCodeMethod;
    private static java.lang.reflect.Method ObjectToStringMethod;
    private static java.lang.reflect.Constructor ProxyConstructor;
    private static java.lang.reflect.Field ProxyHandlerField;
    private static java.lang.reflect.Constructor UndeclaredThrowableExceptionConstructor;
    private org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool;
    private int constantPoolOffset;
    private byte[] contents;
    private int contentsOffset;
    byte[] header;
    int headerOffset;
    private org.apache.harmony.luni.internal.reflect.ProxyMethod[] proxyMethods;

    void <init>(java.lang.String, java.lang.Class[])
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.String $r1;
        java.lang.Class[] $r2;
        int $i0, $i1, $i3, $i4, $i5;
        byte[] $r3;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r4;
        byte $b2;
        java.lang.Class $r5;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Class[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (byte)[500];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header> = $r3;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i1;

        $r3[$i0] = -54;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i1;

        $r3[$i0] = -2;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i1;

        $r3[$i0] = -70;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i1;

        $r3[$i0] = -66;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i1;

        $r3[$i0] = 0;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i1;

        $r3[$i0] = 0;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i1;

        $r3[$i0] = 0;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i1;

        $r3[$i0] = 46;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int constantPoolOffset> = $i0;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i0 = $i0 + 2;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i0;

        $r4 = new org.apache.harmony.luni.internal.reflect.ProxyConstantPool;

        specialinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: void <init>(org.apache.harmony.luni.internal.reflect.ProxyClassFile)>($r0);

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool> = $r4;

        $r3 = newarray (byte)[1000];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents> = $r3;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i1;

        $b2 = 49 >> 8;

        $b2 = (byte) $b2;

        $r3[$i0] = $b2;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i1 = $i0 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i1;

        $b2 = (byte) 49;

        $r3[$i0] = $b2;

        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $i0 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r1);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i3 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i3;

        $i3 = $i0 >> 8;

        $b2 = (byte) $i3;

        $r3[$i1] = $b2;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i3 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i3;

        $b2 = (byte) $i0;

        $r3[$i1] = $b2;

        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $i0 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>("java/lang/reflect/Proxy");

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i3 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i3;

        $i3 = $i0 >> 8;

        $b2 = (byte) $i3;

        $r3[$i1] = $b2;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i3 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i3;

        $b2 = (byte) $i0;

        $r3[$i1] = $b2;

        $i0 = lengthof $r2;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i3 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i3;

        $i3 = $i0 >> 8;

        $b2 = (byte) $i3;

        $r3[$i1] = $b2;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i3 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i3;

        $b2 = (byte) $i0;

        $r3[$i1] = $b2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r5 = $r2[$i1];

        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $i3 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r1);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i5 = $i4 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i5;

        $i5 = $i3 >> 8;

        $b2 = (byte) $i5;

        $r3[$i4] = $b2;

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i5 = $i4 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i5;

        $b2 = (byte) $i3;

        $r3[$i4] = $b2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void addAttributes()
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        int $i0, $i1, $i2;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r1;
        byte[] $r2;
        byte $b3;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(0);

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r2 = $r1.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: byte[] poolContent>;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header> = $r2;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $i0 = $r1.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentOffset>;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset> = $i0;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $i0 = $r1.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int currentIndex>;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int constantPoolOffset>;

        $i2 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int constantPoolOffset> = $i2;

        $i2 = $i0 >> 8;

        $b3 = (byte) $i2;

        $r2[$i1] = $b3;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int constantPoolOffset>;

        $b3 = (byte) $i0;

        $r2[$i1] = $b3;

        return;
    }

    private void addFields()
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(0);

        return;
    }

    private void addMethods()
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.reflect.Method $r1;
        org.apache.harmony.luni.internal.reflect.ProxyMethod $r2;
        java.lang.Class[] $r3;
        org.apache.harmony.luni.internal.reflect.ProxyMethod[] $r4;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r5;
        char[] $r6;
        java.lang.reflect.Constructor $r7;
        java.lang.Class $r8;
        java.lang.String $r9;
        java.lang.NoSuchMethodException $r10;
        java.lang.InternalError $r11;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyMethod[] proxyMethods>;

        $i1 = lengthof $r4;

        $i2 = $i1 + 1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(1);

        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r6 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] Init>;

        $i2 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i2);

        $r7 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Constructor ProxyConstructor>;

        if $r7 != null goto label3;

        $r8 = class "java/lang/reflect/Proxy";

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "java/lang/reflect/InvocationHandler";

     label1:
        $r7 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r3);

     label2:
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Constructor ProxyConstructor> = $r7;

     label3:
        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r7 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Constructor ProxyConstructor>;

        $r6 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.reflect.Constructor)>($r7);

        $i2 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(1);

        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r6 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] CodeName>;

        $i2 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i2);

        $i2 = 6 + 12;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedWord(int)>($i2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedWord(int)>(6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(42);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(43);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(183);

        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r7 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Constructor ProxyConstructor>;

        $i2 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(java.lang.reflect.Constructor)>($r7);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(177);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(0);

        $i2 = 0;

     label4:
        if $i2 >= $i1 goto label9;

        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyMethod[] proxyMethods>;

        $r2 = $r4[$i2];

        $r1 = $r2.<org.apache.harmony.luni.internal.reflect.ProxyMethod: java.lang.reflect.Method method>;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(17);

        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r9 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r6 = virtualinvoke $r9.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r6 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.reflect.Method)>($r1);

        $i0 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        $r3 = $r2.<org.apache.harmony.luni.internal.reflect.ProxyMethod: java.lang.Class[] commonExceptions>;

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label7;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(2);

        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r6 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] ExceptionsName>;

        $i3 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i3);

        $i3 = $i0 * 2;

        $i3 = $i3 + 2;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedWord(int)>($i3);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        $i3 = 0;

     label5:
        if $i3 >= $i0 goto label8;

        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r8 = $r3[$i3];

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $i4 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r9);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i4);

        $i3 = $i3 + 1;

        goto label5;

     label6:
        $r10 := @caughtexception;

        $r11 = new java.lang.InternalError;

        specialinvoke $r11.<java.lang.InternalError: void <init>()>();

        throw $r11;

     label7:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(1);

     label8:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void generateCodeAttribute(org.apache.harmony.luni.internal.reflect.ProxyMethod)>($r2);

        $i2 = $i2 + 1;

        goto label4;

     label9:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label6;
    }

    private void findMethods(java.lang.Class, java.util.ArrayList, java.util.HashSet)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.Class $r1;
        java.util.ArrayList $r2;
        java.util.HashSet $r3;
        java.lang.reflect.Method $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.reflect.Method[] $r5;
        java.lang.Object $r6;
        org.apache.harmony.luni.internal.reflect.ProxyMethod $r7;
        java.lang.Class[] $r8;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.HashSet;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $i1 = lengthof $r5;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label7;

        $r4 = $r5[$i2];

        $i3 = 0;

     label3:
        if $i3 >= $i0 goto label6;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r7 = (org.apache.harmony.luni.internal.reflect.ProxyMethod) $r6;

        $z0 = virtualinvoke $r7.<org.apache.harmony.luni.internal.reflect.ProxyMethod: boolean matchMethod(java.lang.reflect.Method)>($r4);

        if $z0 == 0 goto label5;

     label4:
        $i2 = $i2 + 1;

        goto label2;

     label5:
        $i3 = $i3 + 1;

        goto label3;

     label6:
        $r7 = new org.apache.harmony.luni.internal.reflect.ProxyMethod;

        specialinvoke $r7.<org.apache.harmony.luni.internal.reflect.ProxyMethod: void <init>(java.lang.reflect.Method)>($r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label4;

     label7:
        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof $r8;

        $i1 = 0;

     label8:
        if $i1 >= $i0 goto label9;

        $r1 = $r8[$i1];

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void findMethods(java.lang.Class,java.util.ArrayList,java.util.HashSet)>($r1, $r2, $r3);

        $i1 = $i1 + 1;

        goto label8;

     label9:
        return;
    }

    private void findMethods(java.lang.Class[])
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.Class[] $r1, $r6;
        java.util.ArrayList $r2;
        java.lang.Class $r3;
        java.util.HashSet $r4;
        int $i0, $i1;
        java.lang.reflect.Method $r5;
        org.apache.harmony.luni.internal.reflect.ProxyMethod $r7;
        java.lang.NoSuchMethodException $r8;
        java.lang.InternalError $r9;
        org.apache.harmony.luni.internal.reflect.ProxyMethod[] $r10;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.Class[];

        $r5 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ObjectEqualsMethod>;

        if $r5 != null goto label07;

        $r3 = class "java/lang/Object";

        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "java/lang/Object";

     label01:
        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("equals", $r6);

     label02:
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ObjectEqualsMethod> = $r5;

        $r3 = class "java/lang/Object";

     label03:
        $r6 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("hashCode", $r6);

     label04:
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ObjectHashCodeMethod> = $r5;

        $r3 = class "java/lang/Object";

     label05:
        $r6 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("toString", $r6);

     label06:
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ObjectToStringMethod> = $r5;

     label07:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(25);

        $r7 = new org.apache.harmony.luni.internal.reflect.ProxyMethod;

        $r5 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ObjectEqualsMethod>;

        specialinvoke $r7.<org.apache.harmony.luni.internal.reflect.ProxyMethod: void <init>(java.lang.reflect.Method)>($r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r7 = new org.apache.harmony.luni.internal.reflect.ProxyMethod;

        $r5 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ObjectHashCodeMethod>;

        specialinvoke $r7.<org.apache.harmony.luni.internal.reflect.ProxyMethod: void <init>(java.lang.reflect.Method)>($r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r7 = new org.apache.harmony.luni.internal.reflect.ProxyMethod;

        $r5 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ObjectToStringMethod>;

        specialinvoke $r7.<org.apache.harmony.luni.internal.reflect.ProxyMethod: void <init>(java.lang.reflect.Method)>($r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label08:
        if $i1 >= $i0 goto label10;

        $r3 = $r1[$i1];

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void findMethods(java.lang.Class,java.util.ArrayList,java.util.HashSet)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        goto label08;

     label09:
        $r8 := @caughtexception;

        $r9 = new java.lang.InternalError;

        specialinvoke $r9.<java.lang.InternalError: void <init>()>();

        throw $r9;

     label10:
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r10 = newarray (org.apache.harmony.luni.internal.reflect.ProxyMethod)[$i0];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyMethod[] proxyMethods> = $r10;

        $r10 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyMethod[] proxyMethods>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        return;

        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.NoSuchMethodException from label03 to label04 with label09;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
    }

    private void genCallClassForName(java.lang.String)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.String $r1;
        java.lang.reflect.Method $r2;
        java.lang.Class $r3;
        java.lang.Class[] $r4;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r5;
        int $i0;
        java.lang.NoSuchMethodException $r6;
        java.lang.InternalError $r7;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeLdc(java.lang.String)>($r1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(184);

        $r2 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ClassForNameMethod>;

        if $r2 != null goto label3;

        $r3 = class "java/lang/Class";

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "java/lang/String";

     label1:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("forName", $r4);

     label2:
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ClassForNameMethod> = $r2;

     label3:
        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r2 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ClassForNameMethod>;

        $i0 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(java.lang.reflect.Method)>($r2);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        return;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.InternalError;

        specialinvoke $r7.<java.lang.InternalError: void <init>()>();

        throw $r7;

        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
    }

    private void genCallGetMethod(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.Class $r1;
        java.lang.String $r2, $r4;
        java.lang.Class[] $r3;
        int $i0, $i1, $i2;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r5;
        boolean $z0;
        java.lang.reflect.Field $r6;
        java.lang.reflect.Method $r7;
        java.lang.NoSuchMethodException $r8;
        java.lang.InternalError $r9;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Class[];

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void genCallClassForName(java.lang.String)>($r4);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeLdc(java.lang.String)>($r2);

        $i0 = lengthof $r3;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeIntConstant(int)>($i0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(189);

        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $i1 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>("java/lang/Class");

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i1);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(89);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeIntConstant(int)>($i1);

        $r1 = $r3[$i1];

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label3;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(178);

        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r6 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Field typeField(java.lang.Class)>($r1);

        $i2 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(java.lang.reflect.Field)>($r6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i2);

     label2:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(83);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void genCallClassForName(java.lang.String)>($r2);

        goto label2;

     label4:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(182);

        $r7 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ClassGetMethod>;

        if $r7 != null goto label7;

        $r1 = class "java/lang/Class";

        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = class "java/lang/String";

        $r3[1] = class "[Ljava/lang/Class;";

     label5:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getMethod", $r3);

     label6:
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ClassGetMethod> = $r7;

     label7:
        $r5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r7 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method ClassGetMethod>;

        $i0 = virtualinvoke $r5.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(java.lang.reflect.Method)>($r7);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        return;

     label8:
        $r8 := @caughtexception;

        $r9 = new java.lang.InternalError;

        specialinvoke $r9.<java.lang.InternalError: void <init>()>();

        throw $r9;

        catch java.lang.NoSuchMethodException from label5 to label6 with label8;
    }

    private void genCastReturnType(java.lang.Class)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.Class $r1, $r2;
        boolean $z0;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r3;
        java.lang.String $r4;
        int $i0;
        java.lang.reflect.Method $r5;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label5;

        $r2 = <java.lang.Void: java.lang.Class TYPE>;

        if $r1 != $r2 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(87);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(177);

        return;

     label1:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(192);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r4 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.String typeWrapperName(java.lang.Class)>($r1);

        $i0 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r4);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(182);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r5 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method typeAccessMethod(java.lang.Class)>($r1);

        $i0 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(java.lang.reflect.Method)>($r5);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        if $r1 != $r2 goto label2;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(173);

        return;

     label2:
        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        if $r1 != $r2 goto label3;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(174);

        return;

     label3:
        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        if $r1 != $r2 goto label4;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(175);

        return;

     label4:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(172);

        return;

     label5:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(192);

        $r3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r3.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r4);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(176);

        return;
    }

    private int genInvokeArg(java.lang.Class, int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.Class $r1, $r4;
        int $i0, $i1;
        boolean $z0;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r2;
        java.lang.String $r3;
        java.lang.reflect.Constructor $r5;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.Class;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label34;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(187);

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r3 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.String typeWrapperName(java.lang.Class)>($r1);

        $i1 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r3);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(89);

        if $i0 <= 255 goto label01;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(196);

     label01:
        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        if $r1 != $r4 goto label10;

        lookupswitch($i0)
        {
            case 0: goto label05;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            default: goto label02;
        };

     label02:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(22);

        if $i0 <= 255 goto label09;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

     label03:
        $i0 = $i0 + 2;

     label04:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(183);

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r5 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Constructor typeInitMethod(java.lang.Class)>($r1);

        $i1 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(java.lang.reflect.Constructor)>($r5);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i1);

        return $i0;

     label05:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(30);

        goto label03;

     label06:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(31);

        goto label03;

     label07:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(32);

        goto label03;

     label08:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(33);

        goto label03;

     label09:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        goto label03;

     label10:
        $r4 = <java.lang.Float: java.lang.Class TYPE>;

        if $r1 != $r4 goto label18;

        lookupswitch($i0)
        {
            case 0: goto label13;
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label16;
            default: goto label11;
        };

     label11:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(23);

        if $i0 <= 255 goto label17;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

     label12:
        $i0 = $i0 + 1;

        goto label04;

     label13:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(34);

        goto label12;

     label14:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(35);

        goto label12;

     label15:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(36);

        goto label12;

     label16:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(37);

        goto label12;

     label17:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        goto label12;

     label18:
        $r4 = <java.lang.Double: java.lang.Class TYPE>;

        if $r1 != $r4 goto label26;

        lookupswitch($i0)
        {
            case 0: goto label21;
            case 1: goto label22;
            case 2: goto label23;
            case 3: goto label24;
            default: goto label19;
        };

     label19:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(24);

        if $i0 <= 255 goto label25;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

     label20:
        $i0 = $i0 + 2;

        goto label04;

     label21:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(38);

        goto label20;

     label22:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(39);

        goto label20;

     label23:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(40);

        goto label20;

     label24:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(41);

        goto label20;

     label25:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        goto label20;

     label26:
        lookupswitch($i0)
        {
            case 0: goto label29;
            case 1: goto label30;
            case 2: goto label31;
            case 3: goto label32;
            default: goto label27;
        };

     label27:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(21);

        if $i0 <= 255 goto label33;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

     label28:
        $i0 = $i0 + 1;

        goto label04;

     label29:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(26);

        goto label28;

     label30:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(27);

        goto label28;

     label31:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(28);

        goto label28;

     label32:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(29);

        goto label28;

     label33:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        goto label28;

     label34:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void genLoadArg(int)>($i0);

        $i0 = $i0 + 1;

        return $i0;
    }

    private int genInvokeArgs(java.lang.Class[])
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.Class[] $r1;
        int $i0, $i1, $i2;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r2;
        java.lang.Class $r3;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.Class[];

        $i1 = 1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(1);

        return 1;

     label1:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeIntConstant(int)>($i0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(189);

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $i2 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>("java/lang/Object");

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i2);

        $i2 = 0;

     label2:
        if $i2 >= $i0 goto label3;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(89);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeIntConstant(int)>($i2);

        $r3 = $r1[$i2];

        $i1 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int genInvokeArg(java.lang.Class,int)>($r3, $i1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(83);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        return $i1;
    }

    private void genLoadArg(int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $i0 := @parameter0: int;

        if $i0 <= 255 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(196);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(25);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        return;

     label1:
        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label2;
        };

     label2:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(25);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        return;

     label3:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(42);

        return;

     label4:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(43);

        return;

     label5:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(44);

        return;

     label6:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(45);

        return;
    }

    private void genStoreArg(int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $i0 := @parameter0: int;

        if $i0 <= 255 goto label1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(196);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(58);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        return;

     label1:
        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label2;
        };

     label2:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(58);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        return;

     label3:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(75);

        return;

     label4:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(76);

        return;

     label5:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(77);

        return;

     label6:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(78);

        return;
    }

    public static byte[] generateBytes(java.lang.String, java.lang.Class[])
    {
        java.lang.String $r0;
        java.lang.Class[] $r1;
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r2;
        byte[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Class[];

        $r2 = new org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        specialinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void <init>(java.lang.String,java.lang.Class[])>($r0, $r1);

        specialinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void addFields()>();

        specialinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void findMethods(java.lang.Class[])>($r1);

        specialinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void addMethods()>();

        specialinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void addAttributes()>();

        $r3 = specialinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] getBytes()>();

        return $r3;
    }

    private void generateCodeAttribute(org.apache.harmony.luni.internal.reflect.ProxyMethod)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        org.apache.harmony.luni.internal.reflect.ProxyMethod $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        byte[] $r2, $r3;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r4;
        char[] $r5;
        java.lang.reflect.Field $r6;
        java.lang.Class $r7;
        java.lang.reflect.Method $r8, $r11;
        java.lang.Class[] $r9, $r13;
        java.lang.String $r10;
        java.lang.reflect.Constructor $r12;
        java.lang.NoSuchFieldException $r14;
        java.lang.InternalError $r15;
        java.lang.NoSuchMethodException $r16, $r17;
        byte $b7;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: org.apache.harmony.luni.internal.reflect.ProxyMethod;

        $i2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i3 = lengthof $r2;

        $i4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i4 = $i4 + 20;

        $i4 = $i4 + 100;

        if $i4 < $i3 goto label01;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i4 = $i3 + 250;

        $r3 = newarray (byte)[$i4];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents> = $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i3);

     label01:
        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r5 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] CodeName>;

        $i3 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(char[])>($r5);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i3);

        $i3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i3 = $i3 + 12;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i3;

        $i5 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(42);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(180);

        $r6 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Field ProxyHandlerField>;

        if $r6 != null goto label04;

        $r7 = class "java/lang/reflect/Proxy";

     label02:
        $r6 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("h");

     label03:
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Field ProxyHandlerField> = $r6;

     label04:
        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r6 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Field ProxyHandlerField>;

        $i3 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(java.lang.reflect.Field)>($r6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i3);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(42);

        $r8 = $r1.<org.apache.harmony.luni.internal.reflect.ProxyMethod: java.lang.reflect.Method method>;

        $r9 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r7 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r10 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.String getName()>();

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void genCallGetMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r7, $r10, $r9);

        $i6 = specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int genInvokeArgs(java.lang.Class[])>($r9);

        $i4 = $i6;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(185);

        $r11 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method HandlerInvokeMethod>;

        if $r11 != null goto label07;

        $r7 = class "java/lang/reflect/InvocationHandler";

        $r9 = newarray (java.lang.Class)[3];

        $r9[0] = class "java/lang/Object";

        $r9[1] = class "java/lang/reflect/Method";

        $r9[2] = class "[Ljava/lang/Object;";

     label05:
        $r11 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("invoke", $r9);

     label06:
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method HandlerInvokeMethod> = $r11;

     label07:
        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r11 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Method HandlerInvokeMethod>;

        $i3 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(java.lang.reflect.Method)>($r11);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i3);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(4);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(0);

        $r7 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void genCastReturnType(java.lang.Class)>($r7);

        $i3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i3 = $i3 - $i5;

        $r9 = virtualinvoke $r1.<org.apache.harmony.luni.internal.reflect.ProxyMethod: java.lang.Class[] getCheckedExceptions()>();

        $i0 = lengthof $r9;

        if $i0 <= 0 goto label17;

        $i3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i1 = $i3 - $i5;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(191);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void genStoreArg(int)>($i6);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(187);

        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $i3 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>("java/lang/reflect/UndeclaredThrowableException");

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i3);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(89);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void genLoadArg(int)>($i6);

        $i4 = $i6 + 1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(183);

        $r12 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Constructor UndeclaredThrowableExceptionConstructor>;

        if $r12 != null goto label10;

        $r7 = class "java/lang/reflect/UndeclaredThrowableException";

        $r13 = newarray (java.lang.Class)[1];

        $r13[0] = class "java/lang/Throwable";

     label08:
        $r12 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r13);

     label09:
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Constructor UndeclaredThrowableExceptionConstructor> = $r12;

     label10:
        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r12 = <org.apache.harmony.luni.internal.reflect.ProxyClassFile: java.lang.reflect.Constructor UndeclaredThrowableExceptionConstructor>;

        $i3 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndex(java.lang.reflect.Constructor)>($r12);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i3);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(191);

        $i3 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i3 = $i3 - $i5;

        $i5 = $i0 + 1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i5);

        $i5 = 0;

     label11:
        if $i5 >= $i0 goto label15;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i1);

        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r7 = $r9[$i5];

        $r10 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $i6 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>($r10);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i6);

        $i5 = $i5 + 1;

        goto label11;

     label12:
        $r14 := @caughtexception;

        $r15 = new java.lang.InternalError;

        specialinvoke $r15.<java.lang.InternalError: void <init>()>();

        throw $r15;

     label13:
        $r16 := @caughtexception;

        $r15 = new java.lang.InternalError;

        specialinvoke $r15.<java.lang.InternalError: void <init>()>();

        throw $r15;

     label14:
        $r17 := @caughtexception;

        $r15 = new java.lang.InternalError;

        specialinvoke $r15.<java.lang.InternalError: void <init>()>();

        throw $r15;

     label15:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(0);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i1);

        $i0 = $i1 + 1;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        $r4 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $i0 = virtualinvoke $r4.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int typeIndex(java.lang.String)>("java/lang/Throwable");

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

     label16:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(0);

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i5 = $i2 + 6;

        $i0 = $i0 - $i5;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i5 = $i2 + 2;

        $i1 = $i0 >> 24;

        $b7 = (byte) $i1;

        $r2[$i5] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i5 = $i2 + 3;

        $i1 = $i0 >> 16;

        $b7 = (byte) $i1;

        $r2[$i5] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i5 = $i2 + 4;

        $i1 = $i0 >> 8;

        $b7 = (byte) $i1;

        $r2[$i5] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i5 = $i2 + 5;

        $b7 = (byte) $i0;

        $r2[$i5] = $b7;

        $i0 = $i4 + 10;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i5 = $i2 + 6;

        $i1 = $i0 >> 8;

        $b7 = (byte) $i1;

        $r2[$i5] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i5 = $i2 + 7;

        $b7 = (byte) $i0;

        $r2[$i5] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i0 = $i2 + 8;

        $i5 = $i4 >> 8;

        $b7 = (byte) $i5;

        $r2[$i0] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i0 = $i2 + 9;

        $b7 = (byte) $i4;

        $r2[$i0] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i4 = $i2 + 10;

        $i0 = $i3 >> 24;

        $b7 = (byte) $i0;

        $r2[$i4] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i4 = $i2 + 11;

        $i0 = $i3 >> 16;

        $b7 = (byte) $i0;

        $r2[$i4] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i4 = $i2 + 12;

        $i0 = $i3 >> 8;

        $b7 = (byte) $i0;

        $r2[$i4] = $b7;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i2 = $i2 + 13;

        $b7 = (byte) $i3;

        $r2[$i2] = $b7;

        return;

     label17:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>(0);

        goto label16;

        catch java.lang.NoSuchFieldException from label02 to label03 with label12;
        catch java.lang.NoSuchMethodException from label05 to label06 with label13;
        catch java.lang.NoSuchMethodException from label08 to label09 with label14;
    }

    private byte[] getBytes()
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i0 = $i0 + $i1;

        $r1 = newarray (byte)[$i0];

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] header>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int headerOffset>;

        $i0 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i1, $i0);

        return $r1;
    }

    static char[] getConstantPoolName(java.lang.Class)
    {
        java.lang.Class $r0, $r3;
        boolean $z0;
        java.lang.String $r1;
        char[] $r2;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label01;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        return $r2;

     label01:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label10;

        $r3 = <java.lang.Void: java.lang.Class TYPE>;

        if $r0 != $r3 goto label02;

        $r2 = newarray (char)[1];

        $r2[0] = 86;

        return $r2;

     label02:
        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r0 != $r3 goto label03;

        $r2 = newarray (char)[1];

        $r2[0] = 73;

        return $r2;

     label03:
        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r0 != $r3 goto label04;

        $r2 = newarray (char)[1];

        $r2[0] = 90;

        return $r2;

     label04:
        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r0 != $r3 goto label05;

        $r2 = newarray (char)[1];

        $r2[0] = 66;

        return $r2;

     label05:
        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if $r0 != $r3 goto label06;

        $r2 = newarray (char)[1];

        $r2[0] = 67;

        return $r2;

     label06:
        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        if $r0 != $r3 goto label07;

        $r2 = newarray (char)[1];

        $r2[0] = 83;

        return $r2;

     label07:
        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        if $r0 != $r3 goto label08;

        $r2 = newarray (char)[1];

        $r2[0] = 74;

        return $r2;

     label08:
        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        if $r0 != $r3 goto label09;

        $r2 = newarray (char)[1];

        $r2[0] = 70;

        return $r2;

     label09:
        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        if $r0 != $r3 goto label10;

        $r2 = newarray (char)[1];

        $r2[0] = 68;

        return $r2;

     label10:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        return $r2;
    }

    static char[] getConstantPoolName(java.lang.reflect.Constructor)
    {
        java.lang.reflect.Constructor $r0;
        java.lang.StringBuffer $r1;
        java.lang.Class $r2;
        int $i0, $i1;
        java.lang.Class[] $r3;
        char[] $r4;
        java.lang.String $r5;

        $r0 := @parameter0: java.lang.reflect.Constructor;

        $r3 = virtualinvoke $r0.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $r1 = new java.lang.StringBuffer;

        $i0 = lengthof $r3;

        $i0 = $i0 + 20;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r3[$i1];

        $r4 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.Class)>($r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r2 = <java.lang.Void: java.lang.Class TYPE>;

        $r4 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.Class)>($r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r4);

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        return $r4;
    }

    static char[] getConstantPoolName(java.lang.reflect.Method)
    {
        java.lang.reflect.Method $r0;
        java.lang.StringBuffer $r1;
        java.lang.Class $r2;
        int $i0, $i1;
        java.lang.Class[] $r3;
        char[] $r4;
        java.lang.String $r5;

        $r0 := @parameter0: java.lang.reflect.Method;

        $r3 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r1 = new java.lang.StringBuffer;

        $i0 = lengthof $r3;

        $i0 = $i0 + 20;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r3[$i1];

        $r4 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.Class)>($r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r2 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r4 = staticinvoke <org.apache.harmony.luni.internal.reflect.ProxyClassFile: char[] getConstantPoolName(java.lang.Class)>($r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r4);

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        return $r4;
    }

    private java.lang.reflect.Method typeAccessMethod(java.lang.Class)
    {
        java.lang.Class $r0, $r2;
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r1;
        java.lang.reflect.Method $r3;
        java.lang.NoSuchMethodException $r4;
        java.lang.InternalError $r5;

        $r1 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r0 := @parameter0: java.lang.Class;

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r0 != $r2 goto label03;

        $r0 = class "java/lang/Integer";

     label01:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("intValue", null);

     label02:
        return $r3;

     label03:
        $r2 = <java.lang.Short: java.lang.Class TYPE>;

        if $r0 != $r2 goto label06;

     label04:
        $r0 = class "java/lang/Short";

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("shortValue", null);

     label05:
        return $r3;

     label06:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r0 != $r2 goto label09;

     label07:
        $r0 = class "java/lang/Byte";

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("byteValue", null);

     label08:
        return $r3;

     label09:
        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r0 != $r2 goto label12;

     label10:
        $r0 = class "java/lang/Boolean";

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("booleanValue", null);

     label11:
        return $r3;

     label12:
        $r2 = <java.lang.Character: java.lang.Class TYPE>;

        if $r0 != $r2 goto label15;

     label13:
        $r0 = class "java/lang/Character";

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("charValue", null);

     label14:
        return $r3;

     label15:
        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        if $r0 != $r2 goto label18;

     label16:
        $r0 = class "java/lang/Long";

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("longValue", null);

     label17:
        return $r3;

     label18:
        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        if $r0 != $r2 goto label21;

     label19:
        $r0 = class "java/lang/Float";

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("floatValue", null);

     label20:
        return $r3;

     label21:
        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        if $r0 != $r2 goto label25;

     label22:
        $r0 = class "java/lang/Double";

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("doubleValue", null);

     label23:
        return $r3;

     label24:
        $r4 := @caughtexception;

        $r5 = new java.lang.InternalError;

        specialinvoke $r5.<java.lang.InternalError: void <init>()>();

        throw $r5;

     label25:
        return null;

        catch java.lang.NoSuchMethodException from label01 to label02 with label24;
        catch java.lang.NoSuchMethodException from label04 to label05 with label24;
        catch java.lang.NoSuchMethodException from label07 to label08 with label24;
        catch java.lang.NoSuchMethodException from label10 to label11 with label24;
        catch java.lang.NoSuchMethodException from label13 to label14 with label24;
        catch java.lang.NoSuchMethodException from label16 to label17 with label24;
        catch java.lang.NoSuchMethodException from label19 to label20 with label24;
        catch java.lang.NoSuchMethodException from label22 to label23 with label24;
    }

    private java.lang.reflect.Field typeField(java.lang.Class)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.Class $r1, $r2;
        java.lang.reflect.Field $r3;
        java.lang.NoSuchFieldException $r4;
        java.lang.InternalError $r5;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.Class;

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r1 != $r2 goto label03;

        $r1 = class "java/lang/Integer";

     label01:
        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TYPE");

     label02:
        return $r3;

     label03:
        $r2 = <java.lang.Short: java.lang.Class TYPE>;

        if $r1 != $r2 goto label06;

     label04:
        $r1 = class "java/lang/Short";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TYPE");

     label05:
        return $r3;

     label06:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r1 != $r2 goto label09;

     label07:
        $r1 = class "java/lang/Byte";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TYPE");

     label08:
        return $r3;

     label09:
        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r1 != $r2 goto label12;

     label10:
        $r1 = class "java/lang/Boolean";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TYPE");

     label11:
        return $r3;

     label12:
        $r2 = <java.lang.Character: java.lang.Class TYPE>;

        if $r1 != $r2 goto label15;

     label13:
        $r1 = class "java/lang/Character";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TYPE");

     label14:
        return $r3;

     label15:
        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        if $r1 != $r2 goto label18;

     label16:
        $r1 = class "java/lang/Long";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TYPE");

     label17:
        return $r3;

     label18:
        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        if $r1 != $r2 goto label21;

     label19:
        $r1 = class "java/lang/Float";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TYPE");

     label20:
        return $r3;

     label21:
        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        if $r1 != $r2 goto label25;

     label22:
        $r1 = class "java/lang/Double";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TYPE");

     label23:
        return $r3;

     label24:
        $r4 := @caughtexception;

        $r5 = new java.lang.InternalError;

        specialinvoke $r5.<java.lang.InternalError: void <init>()>();

        throw $r5;

     label25:
        return null;

        catch java.lang.NoSuchFieldException from label01 to label02 with label24;
        catch java.lang.NoSuchFieldException from label04 to label05 with label24;
        catch java.lang.NoSuchFieldException from label07 to label08 with label24;
        catch java.lang.NoSuchFieldException from label10 to label11 with label24;
        catch java.lang.NoSuchFieldException from label13 to label14 with label24;
        catch java.lang.NoSuchFieldException from label16 to label17 with label24;
        catch java.lang.NoSuchFieldException from label19 to label20 with label24;
        catch java.lang.NoSuchFieldException from label22 to label23 with label24;
    }

    private java.lang.reflect.Constructor typeInitMethod(java.lang.Class)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.Class $r1, $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.NoSuchMethodException $r5;
        java.lang.InternalError $r6;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.Class;

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r1 != $r2 goto label03;

        $r1 = class "java/lang/Integer";

        $r3 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[0] = $r2;

     label01:
        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label02:
        return $r4;

     label03:
        $r2 = <java.lang.Short: java.lang.Class TYPE>;

        if $r1 != $r2 goto label06;

        $r1 = class "java/lang/Short";

        $r3 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Short: java.lang.Class TYPE>;

     label04:
        $r3[0] = $r2;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label05:
        return $r4;

     label06:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r1 != $r2 goto label09;

        $r1 = class "java/lang/Byte";

        $r3 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

     label07:
        $r3[0] = $r2;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label08:
        return $r4;

     label09:
        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r1 != $r2 goto label12;

        $r1 = class "java/lang/Boolean";

        $r3 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

     label10:
        $r3[0] = $r2;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label11:
        return $r4;

     label12:
        $r2 = <java.lang.Character: java.lang.Class TYPE>;

        if $r1 != $r2 goto label15;

        $r1 = class "java/lang/Character";

        $r3 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Character: java.lang.Class TYPE>;

     label13:
        $r3[0] = $r2;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label14:
        return $r4;

     label15:
        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        if $r1 != $r2 goto label18;

        $r1 = class "java/lang/Long";

        $r3 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Long: java.lang.Class TYPE>;

     label16:
        $r3[0] = $r2;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label17:
        return $r4;

     label18:
        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        if $r1 != $r2 goto label21;

        $r1 = class "java/lang/Float";

        $r3 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Float: java.lang.Class TYPE>;

     label19:
        $r3[0] = $r2;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label20:
        return $r4;

     label21:
        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        if $r1 != $r2 goto label25;

        $r1 = class "java/lang/Double";

        $r3 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

     label22:
        $r3[0] = $r2;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label23:
        return $r4;

     label24:
        $r5 := @caughtexception;

        $r6 = new java.lang.InternalError;

        specialinvoke $r6.<java.lang.InternalError: void <init>()>();

        throw $r6;

     label25:
        return null;

        catch java.lang.NoSuchMethodException from label01 to label02 with label24;
        catch java.lang.NoSuchMethodException from label04 to label05 with label24;
        catch java.lang.NoSuchMethodException from label07 to label08 with label24;
        catch java.lang.NoSuchMethodException from label10 to label11 with label24;
        catch java.lang.NoSuchMethodException from label13 to label14 with label24;
        catch java.lang.NoSuchMethodException from label16 to label17 with label24;
        catch java.lang.NoSuchMethodException from label19 to label20 with label24;
        catch java.lang.NoSuchMethodException from label22 to label23 with label24;
    }

    private java.lang.String typeWrapperName(java.lang.Class)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.Class $r1, $r2;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.Class;

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r1 != $r2 goto label1;

        return "java/lang/Integer";

     label1:
        $r2 = <java.lang.Short: java.lang.Class TYPE>;

        if $r1 != $r2 goto label2;

        return "java/lang/Short";

     label2:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r1 != $r2 goto label3;

        return "java/lang/Byte";

     label3:
        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r1 != $r2 goto label4;

        return "java/lang/Boolean";

     label4:
        $r2 = <java.lang.Character: java.lang.Class TYPE>;

        if $r1 != $r2 goto label5;

        return "java/lang/Character";

     label5:
        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        if $r1 != $r2 goto label6;

        return "java/lang/Long";

     label6:
        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        if $r1 != $r2 goto label7;

        return "java/lang/Float";

     label7:
        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        if $r1 != $r2 goto label8;

        return "java/lang/Double";

     label8:
        return null;
    }

    private void writeIntConstant(int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label1;
        };

     label1:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(16);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        return;

     label2:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(3);

        return;

     label3:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(4);

        return;

     label4:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(5);

        return;

     label5:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(6);

        return;

     label6:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(7);

        return;

     label7:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(8);

        return;
    }

    private void writeLdc(java.lang.String)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        java.lang.String $r1;
        org.apache.harmony.luni.internal.reflect.ProxyConstantPool $r2;
        char[] $r3;
        int $i0;
        java.lang.InternalError $r4;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: org.apache.harmony.luni.internal.reflect.ProxyConstantPool constantPool>;

        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke $r2.<org.apache.harmony.luni.internal.reflect.ProxyConstantPool: int literalIndexForLdc(char[])>($r3);

        if $i0 > 0 goto label1;

        $r4 = new java.lang.InternalError;

        specialinvoke $r4.<java.lang.InternalError: void <init>()>();

        throw $r4;

     label1:
        if $i0 <= 255 goto label2;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(19);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedShort(int)>($i0);

        return;

     label2:
        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>(18);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        return;
    }

    private void writeUnsignedByte(int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        int $i0, $i1, $i2;
        byte[] $r1, $r3;
        byte $b3;
        java.lang.IndexOutOfBoundsException $r2;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i2 = $i1 + 1;

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset> = $i2;

        $b3 = (byte) $i0;

     label1:
        $r1[$i1] = $b3;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = lengthof $r1;

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i2 = $i1 + 250;

        $r3 = newarray (byte)[$i2];

        $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents> = $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, 0, $i1);

        $r1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: byte[] contents>;

        $i1 = $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: int contentsOffset>;

        $i1 = $i1 - 1;

        $b3 = (byte) $i0;

        $r1[$i1] = $b3;

        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    private void writeUnsignedShort(int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $i0 := @parameter0: int;

        $i1 = $i0 >>> 8;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        return;
    }

    private void writeUnsignedWord(int)
    {
        org.apache.harmony.luni.internal.reflect.ProxyClassFile $r0;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.luni.internal.reflect.ProxyClassFile;

        $i0 := @parameter0: int;

        $i1 = $i0 >>> 24;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i1);

        $i1 = $i0 >>> 16;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i1);

        $i1 = $i0 >>> 8;

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i1);

        specialinvoke $r0.<org.apache.harmony.luni.internal.reflect.ProxyClassFile: void writeUnsignedByte(int)>($i0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: int INITIAL_HEADER_SIZE> = 500;

        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: int INITIAL_CONTENTS_SIZE> = 1000;

        <org.apache.harmony.luni.internal.reflect.ProxyClassFile: int INCREMENT_SIZE> = 250;

        return;
    }
}
