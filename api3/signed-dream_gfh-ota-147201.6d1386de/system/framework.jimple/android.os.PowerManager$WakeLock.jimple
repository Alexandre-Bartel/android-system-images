public class android.os.PowerManager$WakeLock extends java.lang.Object
{
    static final int RELEASE_WAKE_LOCK;
    int mCount;
    int mFlags;
    boolean mHeld;
    boolean mRefCounted;
    java.lang.Runnable mReleaser;
    java.lang.String mTag;
    android.os.IBinder mToken;
    final android.os.PowerManager this$0;

    void <init>(android.os.PowerManager, int, java.lang.String)
    {
        android.os.PowerManager$WakeLock $r0;
        android.os.PowerManager $r1;
        int $i0, $i1;
        java.lang.String $r2;
        android.os.PowerManager$WakeLock$1 $r3;
        java.lang.IllegalArgumentException $r4;
        android.os.Binder $r5;

        $r0 := @this: android.os.PowerManager$WakeLock;

        $r1 := @parameter0: android.os.PowerManager;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.PowerManager$WakeLock$1;

        specialinvoke $r3.<android.os.PowerManager$WakeLock$1: void <init>(android.os.PowerManager$WakeLock)>($r0);

        $r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser> = $r3;

        $r0.<android.os.PowerManager$WakeLock: int mCount> = 0;

        $r0.<android.os.PowerManager$WakeLock: boolean mRefCounted> = 1;

        $r0.<android.os.PowerManager$WakeLock: boolean mHeld> = 0;

        $i1 = $i0 & 31;

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 6: goto label2;
            case 10: goto label2;
            case 26: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label2:
        $r0.<android.os.PowerManager$WakeLock: int mFlags> = $i0;

        $r0.<android.os.PowerManager$WakeLock: java.lang.String mTag> = $r2;

        $r5 = new android.os.Binder;

        specialinvoke $r5.<android.os.Binder: void <init>()>();

        $r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken> = $r5;

        return;
    }

    public void acquire()
    {
        android.os.PowerManager$WakeLock $r0;
        android.os.IBinder $r1, $r2;
        java.lang.String $r3;
        boolean $z0;
        int $i0, $i1;
        android.os.PowerManager $r4;
        android.os.IPowerManager $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;

        $r0 := @this: android.os.PowerManager$WakeLock;

        $r1 = $r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor $r1;

     label01:
        $z0 = $r0.<android.os.PowerManager$WakeLock: boolean mRefCounted>;

        if $z0 == 0 goto label03;

        $i0 = $r0.<android.os.PowerManager$WakeLock: int mCount>;

        $i1 = $i0 + 1;

        $r0.<android.os.PowerManager$WakeLock: int mCount> = $i1;

     label02:
        if $i0 != 0 goto label06;

     label03:
        $r4 = $r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r5 = $r4.<android.os.PowerManager: android.os.IPowerManager mService>;

        $i0 = $r0.<android.os.PowerManager$WakeLock: int mFlags>;

        $r2 = $r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        $r3 = $r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

     label04:
        interfaceinvoke $r5.<android.os.IPowerManager: void acquireWakeLock(int,android.os.IBinder,java.lang.String)>($i0, $r2, $r3);

     label05:
        $r0.<android.os.PowerManager$WakeLock: boolean mHeld> = 1;

     label06:
        exitmonitor $r1;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label09:
        throw $r6;

     label10:
        $r7 := @caughtexception;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void acquire(long)
    {
        android.os.PowerManager$WakeLock $r0;
        long $l0;
        java.lang.Runnable $r1;
        android.os.PowerManager $r2;
        android.os.Handler $r3;

        $r0 := @this: android.os.PowerManager$WakeLock;

        $l0 := @parameter0: long;

        virtualinvoke $r0.<android.os.PowerManager$WakeLock: void acquire()>();

        $r2 = $r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r3 = $r2.<android.os.PowerManager: android.os.Handler mHandler>;

        $r1 = $r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser>;

        virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, $l0);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.PowerManager$WakeLock $r0;
        android.os.IBinder $r1, $r4;
        boolean $z0;
        android.os.PowerManager $r2;
        android.os.IPowerManager $r3;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;

        $r0 := @this: android.os.PowerManager$WakeLock;

        $r1 = $r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor $r1;

     label01:
        $z0 = $r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

     label02:
        if $z0 == 0 goto label06;

     label03:
        $r2 = $r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r3 = $r2.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r4 = $r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

     label04:
        interfaceinvoke $r3.<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder)>($r4);

     label05:
        $r5 = new java.lang.Exception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock finalized while still held: ");

        $r7 = $r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>($r7);

        staticinvoke <com.android.internal.os.RuntimeInit: void crash(java.lang.String,java.lang.Throwable)>("PowerManager", $r5);

     label06:
        exitmonitor $r1;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label09:
        throw $r8;

     label10:
        $r9 := @caughtexception;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean isHeld()
    {
        android.os.PowerManager$WakeLock $r0;
        android.os.IBinder $r1;
        java.lang.Throwable $r2;
        boolean z0;

        $r0 := @this: android.os.PowerManager$WakeLock;

        $r1 = $r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor $r1;

     label1:
        z0 = $r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        exitmonitor $r1;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void release()
    {
        android.os.PowerManager$WakeLock $r0;
        android.os.IBinder $r1, $r4;
        boolean $z0;
        int $i0;
        android.os.PowerManager $r2;
        android.os.IPowerManager $r3;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;

        $r0 := @this: android.os.PowerManager$WakeLock;

        $r1 = $r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor $r1;

     label01:
        $z0 = $r0.<android.os.PowerManager$WakeLock: boolean mRefCounted>;

        if $z0 == 0 goto label03;

        $i0 = $r0.<android.os.PowerManager$WakeLock: int mCount>;

        $i0 = $i0 - 1;

        $r0.<android.os.PowerManager$WakeLock: int mCount> = $i0;

     label02:
        if $i0 != 0 goto label06;

     label03:
        $r2 = $r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r3 = $r2.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r4 = $r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

     label04:
        interfaceinvoke $r3.<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder)>($r4);

     label05:
        $r0.<android.os.PowerManager$WakeLock: boolean mHeld> = 0;

     label06:
        $i0 = $r0.<android.os.PowerManager$WakeLock: int mCount>;

        if $i0 >= 0 goto label09;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock under-locked ");

        $r7 = $r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label07:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label08:
        throw $r8;

     label09:
        exitmonitor $r1;

     label10:
        return;

     label11:
        $r9 := @caughtexception;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch android.os.RemoteException from label04 to label05 with label11;
        catch java.lang.Throwable from label03 to label05 with label07;
        catch java.lang.Throwable from label05 to label08 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
    }

    public void setReferenceCounted(boolean)
    {
        android.os.PowerManager$WakeLock $r0;
        boolean $z0;

        $r0 := @this: android.os.PowerManager$WakeLock;

        $z0 := @parameter0: boolean;

        $r0.<android.os.PowerManager$WakeLock: boolean mRefCounted> = $z0;

        return;
    }

    public java.lang.String toString()
    {
        android.os.PowerManager$WakeLock $r0;
        android.os.IBinder $r1;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        $r0 := @this: android.os.PowerManager$WakeLock;

        $r1 = $r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor $r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" held=");

        $z0 = $r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", refCount=");

        $i0 = $r0.<android.os.PowerManager$WakeLock: int mCount>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <android.os.PowerManager$WakeLock: int RELEASE_WAKE_LOCK> = 1;

        return;
    }
}
