class com.android.internal.app.IBatteryStats$Stub$Proxy extends java.lang.Object implements com.android.internal.app.IBatteryStats
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public long getAwakeTimeBattery() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        long $l0;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $l0 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $l0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getAwakeTimePlugged() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        long $l0;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $l0 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $l0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        return "com.android.internal.app.IBatteryStats";
    }

    public byte[] getStatistics() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        byte[] $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke $r2.<android.os.Parcel: byte[] createByteArray()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteBluetoothOff() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteBluetoothOn() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteFullWifiLockAcquired(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteFullWifiLockReleased(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteInputEvent() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void notePhoneDataConnectionState(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        boolean $z0;
        android.os.Parcel $r1, $r2;
        byte $b1;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b1 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b1 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void notePhoneOff() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void notePhoneOn() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void notePhoneSignalStrength(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteScanWifiLockAcquired(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteScanWifiLockReleased(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteScreenBrightness(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteScreenOff() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteScreenOn() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteStartGps(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteStartSensor(int, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteStartWakelock(int, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0, $i1;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i1);

        $r4 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteStopGps(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteStopSensor(int, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteStopWakelock(int, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0, $i1;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i1);

        $r4 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteUserActivity(int, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteWifiOff(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteWifiOn(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteWifiRunning() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noteWifiStopped() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setOnBattery(boolean, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy $r0;
        boolean $z0;
        int $i0;
        android.os.Parcel $r1, $r2;
        byte $b1;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b1 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b1);

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b1 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }
}
