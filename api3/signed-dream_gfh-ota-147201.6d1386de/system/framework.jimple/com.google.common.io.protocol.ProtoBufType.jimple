public class com.google.common.io.protocol.ProtoBufType extends java.lang.Object
{
    public static final int MASK_MODIFIER;
    public static final int MASK_TYPE;
    public static final int OPTIONAL;
    public static final int REPEATED;
    public static final int REQUIRED;
    public static final int TYPE_BOOL;
    public static final int TYPE_BYTES;
    public static final int TYPE_DATA;
    public static final int TYPE_DOUBLE;
    public static final int TYPE_ENUM;
    public static final int TYPE_FIXED32;
    public static final int TYPE_FIXED64;
    public static final int TYPE_FLOAT;
    public static final int TYPE_GROUP;
    public static final int TYPE_INT32;
    public static final int TYPE_INT64;
    public static final int TYPE_MESSAGE;
    public static final int TYPE_SFIXED32;
    public static final int TYPE_SFIXED64;
    public static final int TYPE_SINT32;
    public static final int TYPE_SINT64;
    public static final int TYPE_STRING;
    public static final int TYPE_TEXT;
    public static final int TYPE_UINT32;
    public static final int TYPE_UINT64;
    public static final int TYPE_UNDEFINED;
    private final java.util.Vector data;
    private final java.lang.String typeName;
    private final java.lang.StringBuffer types;

    public void <init>()
    {
        com.google.common.io.protocol.ProtoBufType $r0;
        java.lang.StringBuffer $r1;
        java.util.Vector $r2;

        $r0 := @this: com.google.common.io.protocol.ProtoBufType;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types> = $r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r0.<com.google.common.io.protocol.ProtoBufType: java.util.Vector data> = $r2;

        $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.String typeName> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.google.common.io.protocol.ProtoBufType $r0;
        java.lang.String $r1;
        java.lang.StringBuffer $r2;
        java.util.Vector $r3;

        $r0 := @this: com.google.common.io.protocol.ProtoBufType;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        $r0.<com.google.common.io.protocol.ProtoBufType: java.util.Vector data> = $r3;

        $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.String typeName> = $r1;

        return;
    }

    public static boolean stringEquals(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence $r0, $r1;
        int $i0, $i1;
        boolean $z0;
        char $c2, $c3;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.CharSequence;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        if $r0 == null goto label6;

        if $r1 == null goto label6;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != $i1 goto label6;

        $z0 = $r0 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label2:
        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        if $c2 == $c3 goto label4;

        return 0;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return 1;

     label6:
        return 0;
    }

    public com.google.common.io.protocol.ProtoBufType addElement(int, int, java.lang.Object)
    {
        com.google.common.io.protocol.ProtoBufType $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        java.lang.StringBuffer $r2;
        java.util.Vector $r3;
        char $c3;

        $r0 := @this: com.google.common.io.protocol.ProtoBufType;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

     label1:
        $r2 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        $i2 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i2 > $i1 goto label2;

        $r2 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(16);

        $r3 = $r0.<com.google.common.io.protocol.ProtoBufType: java.util.Vector data>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(null);

        goto label1;

     label2:
        $r2 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        $c3 = (char) $i0;

        virtualinvoke $r2.<java.lang.StringBuffer: void setCharAt(int,char)>($i1, $c3);

        $r3 = $r0.<com.google.common.io.protocol.ProtoBufType: java.util.Vector data>;

        virtualinvoke $r3.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r1, $i1);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.io.protocol.ProtoBufType $r0, $r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.lang.StringBuffer $r5, $r6;
        boolean $z0;

        $r0 := @this: com.google.common.io.protocol.ProtoBufType;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        if $r0 != $r1 goto label2;

        return 1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        $r4 = (com.google.common.io.protocol.ProtoBufType) $r1;

        $r5 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        $r6 = $r4.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        $z0 = staticinvoke <com.google.common.io.protocol.ProtoBufType: boolean stringEquals(java.lang.CharSequence,java.lang.CharSequence)>($r5, $r6);

        return $z0;
    }

    public java.lang.Object getData(int)
    {
        com.google.common.io.protocol.ProtoBufType $r0;
        int $i0, $i1;
        java.util.Vector $r1;
        java.lang.Object $r2;

        $r0 := @this: com.google.common.io.protocol.ProtoBufType;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = $r0.<com.google.common.io.protocol.ProtoBufType: java.util.Vector data>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r1 = $r0.<com.google.common.io.protocol.ProtoBufType: java.util.Vector data>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        return $r2;
    }

    public int getModifiers(int)
    {
        com.google.common.io.protocol.ProtoBufType $r0;
        int $i0, $i1;
        java.lang.StringBuffer $r1;
        char $c2;

        $r0 := @this: com.google.common.io.protocol.ProtoBufType;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        $i1 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i0 < $i1 goto label2;

     label1:
        return 1536;

     label2:
        $r1 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        $c2 = virtualinvoke $r1.<java.lang.StringBuffer: char charAt(int)>($i0);

        $c2 = $c2 & 65280;

        return $c2;
    }

    public int getType(int)
    {
        com.google.common.io.protocol.ProtoBufType $r0;
        int $i0, $i1;
        java.lang.StringBuffer $r1;
        char $c2;

        $r0 := @this: com.google.common.io.protocol.ProtoBufType;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        $i1 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i0 < $i1 goto label2;

     label1:
        return 16;

     label2:
        $r1 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        $c2 = virtualinvoke $r1.<java.lang.StringBuffer: char charAt(int)>($i0);

        $c2 = $c2 & 255;

        return $c2;
    }

    public int hashCode()
    {
        com.google.common.io.protocol.ProtoBufType $r0;
        java.lang.StringBuffer $r1;
        int $i0;

        $r0 := @this: com.google.common.io.protocol.ProtoBufType;

        $r1 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.StringBuffer types>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;

     label1:
        $i0 = specialinvoke $r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.io.protocol.ProtoBufType $r0;
        java.lang.String r1;

        $r0 := @this: com.google.common.io.protocol.ProtoBufType;

        r1 = $r0.<com.google.common.io.protocol.ProtoBufType: java.lang.String typeName>;

        return r1;
    }

    public static void <clinit>()
    {
        <com.google.common.io.protocol.ProtoBufType: int TYPE_UNDEFINED> = 16;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_UINT64> = 20;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_UINT32> = 29;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_TEXT> = 28;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_STRING> = 36;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_SINT64> = 34;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_SINT32> = 33;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_SFIXED64> = 32;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_SFIXED32> = 31;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_MESSAGE> = 27;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_INT64> = 19;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_INT32> = 21;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_GROUP> = 26;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_FLOAT> = 18;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_FIXED64> = 22;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_FIXED32> = 23;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_ENUM> = 30;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_DOUBLE> = 17;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_DATA> = 25;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_BYTES> = 35;

        <com.google.common.io.protocol.ProtoBufType: int TYPE_BOOL> = 24;

        <com.google.common.io.protocol.ProtoBufType: int REQUIRED> = 256;

        <com.google.common.io.protocol.ProtoBufType: int REPEATED> = 1024;

        <com.google.common.io.protocol.ProtoBufType: int OPTIONAL> = 512;

        <com.google.common.io.protocol.ProtoBufType: int MASK_TYPE> = 255;

        <com.google.common.io.protocol.ProtoBufType: int MASK_MODIFIER> = 65280;

        return;
    }
}
