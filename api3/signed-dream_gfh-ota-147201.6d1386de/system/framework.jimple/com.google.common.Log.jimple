public class com.google.common.Log extends java.lang.Object
{
    public static final java.lang.String EVENT_LOG_PREFERENCE;
    public static final int EVENT_LOG_REQUEST_TYPE;
    private static final java.lang.String EVENT_TUPLE_SEPARATOR;
    private static final int EXCEPTION_REQUEST_ID;
    private static final int MAX_ENTRIES;
    private static final int MAX_EVENT_LOG_LENGTH;
    private static final long MAX_EVENT_TIME_DELTA_MS;
    private static final int MAX_LAST_THROWABLE_STRING_LENGTH;
    private static final int MAX_THROWABLES;
    private static final int SERVER_LOG_REQUEST_ID;
    public static final java.lang.String SOURCE_CATEGORY;
    public static final java.lang.String SOURCE_ENGINE;
    public static final java.lang.String SOURCE_FLASH;
    public static final java.lang.String SOURCE_GPS;
    public static final java.lang.String SOURCE_LAYER;
    public static final java.lang.String SOURCE_MAP;
    public static final java.lang.String SOURCE_MEDIA;
    public static final java.lang.String SOURCE_MEMORY;
    public static final java.lang.String SOURCE_MENU;
    public static final java.lang.String SOURCE_PERMISSION;
    public static final java.lang.String SOURCE_REQUEST;
    public static final java.lang.String SOURCE_SPEECH;
    public static final java.lang.String SOURCE_STATS;
    public static final java.lang.String SOURCE_STUN;
    public static final java.lang.String SOURCE_UI;
    public static final java.lang.String SOURCE_UNKNOWN;
    private static final long START_TIME;
    private static final int TARGET_ENTRIES;
    private static java.lang.StringBuffer entryBuffer;
    private static long lastEventTimeMillis;
    private static long lastServerLogTimestamp;
    private static final java.lang.Object lastThrowableLock;
    private static java.lang.String lastThrowableString;
    private static final java.util.Vector logEntries;
    private static boolean logMemory;
    private static boolean logThread;
    private static boolean logTime;
    private static final java.util.Vector logsToServer;
    private static int throwableCount;
    private static final java.util.Hashtable timers;

    static void <clinit>()
    {
        long $l0;
        java.util.Vector $r0;
        java.util.Hashtable $r1;
        java.lang.Object $r2;
        java.lang.StringBuffer $r3;

        <com.google.common.Log: int TARGET_ENTRIES> = 50;

        <com.google.common.Log: java.lang.String SOURCE_UNKNOWN> = "UNKNOWN";

        <com.google.common.Log: java.lang.String SOURCE_UI> = "UI";

        <com.google.common.Log: java.lang.String SOURCE_STUN> = "STUN";

        <com.google.common.Log: java.lang.String SOURCE_STATS> = "STATS";

        <com.google.common.Log: java.lang.String SOURCE_SPEECH> = "SPEECH";

        <com.google.common.Log: java.lang.String SOURCE_REQUEST> = "REQUEST";

        <com.google.common.Log: java.lang.String SOURCE_PERMISSION> = "PERM";

        <com.google.common.Log: java.lang.String SOURCE_MENU> = "MENU";

        <com.google.common.Log: java.lang.String SOURCE_MEMORY> = "MEMORY";

        <com.google.common.Log: java.lang.String SOURCE_MEDIA> = "MEDIA";

        <com.google.common.Log: java.lang.String SOURCE_MAP> = "MAP";

        <com.google.common.Log: java.lang.String SOURCE_LAYER> = "LAYER";

        <com.google.common.Log: java.lang.String SOURCE_GPS> = "GPS";

        <com.google.common.Log: java.lang.String SOURCE_FLASH> = "FLASH";

        <com.google.common.Log: java.lang.String SOURCE_ENGINE> = "ENGINE";

        <com.google.common.Log: java.lang.String SOURCE_CATEGORY> = "CATEGORY";

        <com.google.common.Log: int SERVER_LOG_REQUEST_ID> = 12;

        <com.google.common.Log: int MAX_THROWABLES> = 10;

        <com.google.common.Log: int MAX_LAST_THROWABLE_STRING_LENGTH> = 300;

        <com.google.common.Log: long MAX_EVENT_TIME_DELTA_MS> = 6553500L;

        <com.google.common.Log: int MAX_EVENT_LOG_LENGTH> = 600;

        <com.google.common.Log: int MAX_ENTRIES> = 150;

        <com.google.common.Log: int EXCEPTION_REQUEST_ID> = 8;

        <com.google.common.Log: java.lang.String EVENT_TUPLE_SEPARATOR> = "|";

        <com.google.common.Log: int EVENT_LOG_REQUEST_TYPE> = 10;

        <com.google.common.Log: java.lang.String EVENT_LOG_PREFERENCE> = "EVENT_LOG";

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        <com.google.common.Log: long START_TIME> = $l0;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>(int)>(150);

        <com.google.common.Log: java.util.Vector logEntries> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <com.google.common.Log: java.util.Hashtable timers> = $r1;

        $l0 = <com.google.common.Log: long START_TIME>;

        <com.google.common.Log: long lastServerLogTimestamp> = $l0;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        <com.google.common.Log: java.util.Vector logsToServer> = $r0;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.google.common.Log: java.lang.Object lastThrowableLock> = $r2;

        <com.google.common.Log: java.lang.String lastThrowableString> = null;

        <com.google.common.Log: int throwableCount> = 0;

        <com.google.common.Log: long lastEventTimeMillis> = 0L;

        <com.google.common.Log: boolean logTime> = 1;

        <com.google.common.Log: boolean logThread> = 0;

        <com.google.common.Log: boolean logMemory> = 0;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>(256);

        <com.google.common.Log: java.lang.StringBuffer entryBuffer> = $r3;

        return;
    }

    private void <init>()
    {
        com.google.common.Log $r0;

        $r0 := @this: com.google.common.Log;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean addEvent(short)
    {
        short $s0;
        boolean $z0;

        $s0 := @parameter0: short;

        $z0 = staticinvoke <com.google.common.Log: boolean addEvent(short,java.lang.String,java.lang.String)>($s0, "", "");

        return $z0;
    }

    public static boolean addEvent(short, java.lang.String)
    {
        short $s0;
        java.lang.String $r0;
        boolean $z0;

        $s0 := @parameter0: short;

        $r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.google.common.Log: boolean addEvent(short,java.lang.String,java.lang.String)>($s0, $r0, "");

        return $z0;
    }

    public static boolean addEvent(short, java.lang.String, java.lang.String)
    {
        short $s0, $s5;
        java.lang.String $r0, $r1;
        long $l1, $l3;
        com.google.common.io.PersistentStore $r2;
        byte[] $r3;
        int $i2;
        byte $b4;
        java.io.ByteArrayOutputStream $r4;
        java.io.DataOutputStream $r5;
        java.io.IOException $r6;

        $s0 := @parameter0: short;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = staticinvoke <com.google.common.Log: com.google.common.io.PersistentStore getPersistentStore()>();

        $r3 = interfaceinvoke $r2.<com.google.common.io.PersistentStore: byte[] readPreference(java.lang.String)>("EVENT_LOG");

        if $r3 == null goto label01;

        $i2 = lengthof $r3;

        if $i2 > 600 goto label01;

        $l3 = <com.google.common.Log: long lastEventTimeMillis>;

        $l3 = $l1 - $l3;

        $b4 = $l3 cmp 6553500L;

        if $b4 <= 0 goto label16;

     label01:
        if $r3 != null goto label13;

        staticinvoke <com.google.common.Log: void resetPersistentEventLog(long)>($l1);

     label02:
        $r3 = interfaceinvoke $r2.<com.google.common.io.PersistentStore: byte[] readPreference(java.lang.String)>("EVENT_LOG");

     label03:
        $i2 = lengthof $r3;

        if $i2 <= 2 goto label15;

        $b4 = $r3[0];

        $s5 = $b4 & 255;

        $i2 = $s5 << 8;

        $b4 = $r3[1];

        $s5 = $b4 & 255;

        $i2 = $i2 | $s5;

        $s5 = (short) $i2;

     label04:
        $i2 = $s5 + 1;

        $s5 = (short) $i2;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        $r5 = new java.io.DataOutputStream;

        specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r4);

     label05:
        virtualinvoke $r5.<java.io.DataOutputStream: void writeShort(int)>($s5);

     label06:
        $i2 = lengthof $r3;

     label07:
        $i2 = $i2 - 2;

        virtualinvoke $r5.<java.io.DataOutputStream: void write(byte[],int,int)>($r3, 2, $i2);

        virtualinvoke $r5.<java.io.DataOutputStream: void writeShort(int)>($s0);

     label08:
        $l3 = <com.google.common.Log: long lastEventTimeMillis>;

     label09:
        $l3 = $l1 - $l3;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l3, 6553500L);

     label10:
        $l3 = $l3 / 100L;

     label11:
        $i2 = (int) $l3;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeShort(int)>($i2);

        virtualinvoke $r5.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r0);

        virtualinvoke $r5.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r1);

        $r2 = staticinvoke <com.google.common.Log: com.google.common.io.PersistentStore getPersistentStore()>();

        $r3 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        interfaceinvoke $r2.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>("EVENT_LOG", $r3);

     label12:
        <com.google.common.Log: long lastEventTimeMillis> = $l1;

        return 1;

     label13:
        staticinvoke <com.google.common.Log: com.google.common.SimpleDataRequest uploadEventLog(boolean,java.lang.Object,long)>(0, null, $l1);

        goto label02;

     label14:
        $r6 := @caughtexception;

        return 0;

     label15:
        $s5 = 0;

        goto label04;

     label16:
        goto label03;

        catch java.io.IOException from label05 to label06 with label14;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.io.IOException from label11 to label12 with label14;
    }

    public static void addThrowableString(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.lang.Object $r1;
        int $i0;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = <com.google.common.Log: java.lang.Object lastThrowableLock>;

        entermonitor $r1;

     label2:
        $r2 = <com.google.common.Log: java.lang.String lastThrowableString>;

        if $r2 != null goto label8;

        <com.google.common.Log: java.lang.String lastThrowableString> = $r0;

     label3:
        $r0 = <com.google.common.Log: java.lang.String lastThrowableString>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 300 goto label4;

        $r0 = <com.google.common.Log: java.lang.String lastThrowableString>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 300);

        <com.google.common.Log: java.lang.String lastThrowableString> = $r0;

     label4:
        exitmonitor $r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r3;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = <com.google.common.Log: java.lang.String lastThrowableString>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.google.common.Log: java.lang.String lastThrowableString> = $r0;

     label9:
        goto label3;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label8 to label9 with label6;
    }

    public static void clear()
    {
        entermonitor class "com/google/common/Log";

        exitmonitor class "com/google/common/Log";

        return;
    }

    public static void clearEventLogForTest()
    {
        long $l0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        staticinvoke <com.google.common.Log: void resetPersistentEventLog(long)>($l0);

        return;
    }

    public static void config(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("CONFIG", $r1);

        return;
    }

    public static java.lang.String createEventTuple(java.lang.String[])
    {
        java.lang.String[] $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.lang.StringBuffer $r2, $r3;

        $r0 := @parameter0: java.lang.String[];

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("|");

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label4;

        $r1 = $r0[$i0];

        if $r1 == null goto label3;

        $r3 = new java.lang.StringBuffer;

        $r1 = $r0[$i0];

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        staticinvoke <com.google.common.util.text.TextUtil: int replace(java.lang.String,java.lang.String,java.lang.StringBuffer)>("|", "", $r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("|");

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static long endTimer(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        return 0L;
    }

    public static long endTimerAndLog(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        return 0L;
    }

    public static long endTimerAndLogConditionally(java.lang.String, java.lang.String, long)
    {
        java.lang.String $r0, $r1;
        long $l0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        return 0L;
    }

    public static void fine(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("FINE", $r1);

        return;
    }

    public static void finer(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("FINER", $r1);

        return;
    }

    public static void finest(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("FINEST", $r1);

        return;
    }

    public static void forcePostToServer()
    {
        return;
    }

    public static java.util.Vector getEventLogForTest() throws java.io.IOException
    {
        java.util.Vector $r0;
        java.io.DataInputStream $r1;
        long $l0, $l3;
        com.google.common.io.PersistentStore $r2;
        byte[] $r3;
        java.io.ByteArrayInputStream $r4;
        short $s1, $s2, $s4, $s5;
        java.lang.String $r5, $r6;
        int $i6;
        com.google.common.Log$TestEventLogEntry $r7;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = staticinvoke <com.google.common.Log: com.google.common.io.PersistentStore getPersistentStore()>();

        $r3 = interfaceinvoke $r2.<com.google.common.io.PersistentStore: byte[] readPreference(java.lang.String)>("EVENT_LOG");

        if $r3 != null goto label1;

        return $r0;

     label1:
        $r1 = new java.io.DataInputStream;

        $r4 = new java.io.ByteArrayInputStream;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r4);

        $s1 = virtualinvoke $r1.<java.io.DataInputStream: short readShort()>();

        $s2 = 0;

        $l3 = virtualinvoke $r1.<java.io.DataInputStream: long readLong()>();

     label2:
        if $s2 >= $s1 goto label3;

        $s4 = virtualinvoke $r1.<java.io.DataInputStream: short readShort()>();

        $s5 = virtualinvoke $r1.<java.io.DataInputStream: short readShort()>();

        $r5 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r6 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $i6 = $s5 * 100;

        $l0 = (long) $i6;

        $l3 = $l3 + $l0;

        $r7 = new com.google.common.Log$TestEventLogEntry;

        specialinvoke $r7.<com.google.common.Log$TestEventLogEntry: void <init>(short,long,java.lang.String,java.lang.String)>($s4, $l3, $r5, $r6);

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r7);

        $i6 = $s2 + 1;

        $s2 = (short) $i6;

        goto label2;

     label3:
        return $r0;
    }

    public static java.lang.String getLastThrowableString()
    {
        java.lang.Object $r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        $r0 = <com.google.common.Log: java.lang.Object lastThrowableLock>;

        entermonitor $r0;

     label1:
        r2 = <com.google.common.Log: java.lang.String lastThrowableString>;

        <com.google.common.Log: java.lang.String lastThrowableString> = null;

        exitmonitor $r0;

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.lang.String getLog()
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;

        entermonitor class "com/google/common/Log";

     label1:
        $r0 = staticinvoke <com.google.common.Log: java.lang.String getLog(int)>(2147483647);

     label2:
        exitmonitor class "com/google/common/Log";

        return $r0;

     label3:
        $r1 := @caughtexception;

        exitmonitor class "com/google/common/Log";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.String getLog(int)
    {
        int $i0;
        java.lang.String $r0;
        java.lang.StringBuffer $r1;
        java.lang.Throwable $r2;

        $i0 := @parameter0: int;

        entermonitor class "com/google/common/Log";

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        exitmonitor class "com/google/common/Log";

        return $r0;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "com/google/common/Log";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.util.Vector getLogEntries()
    {
        return null;
    }

    private static com.google.common.io.PersistentStore getPersistentStore()
    {
        com.google.common.Config $r0;
        com.google.common.io.PersistentStore $r1;

        $r0 = staticinvoke <com.google.common.Config: com.google.common.Config getInstance()>();

        $r1 = virtualinvoke $r0.<com.google.common.Config: com.google.common.io.PersistentStore getPersistentStore()>();

        return $r1;
    }

    public static void info(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("INFO", $r1);

        return;
    }

    public static void log(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        entermonitor class "com/google/common/Log";

        exitmonitor class "com/google/common/Log";

        return;
    }

    public static void log(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "com/google/common/Log";

        exitmonitor class "com/google/common/Log";

        return;
    }

    public static void logQuietThrowable(java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        virtualinvoke $r1.<java.lang.Throwable: void printStackTrace()>();

        staticinvoke <com.google.common.Log: void sendThrowable(java.lang.String,java.lang.Throwable,boolean)>($r0, $r1, 1);

        return;
    }

    public static void logThrowable(java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r3;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        virtualinvoke $r1.<java.lang.Throwable: void printStackTrace()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void addThrowableString(java.lang.String)>($r3);

        staticinvoke <com.google.common.Log: void sendThrowable(java.lang.String,java.lang.Throwable,boolean)>($r0, $r1, 0);

        return;
    }

    public static void logToServer(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        return;
    }

    private static void logToServer(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        return;
    }

    public static void print()
    {
        entermonitor class "com/google/common/Log";

        exitmonitor class "com/google/common/Log";

        return;
    }

    public static void print(java.lang.String)
    {
        java.lang.String $r0;
        java.io.PrintStream $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r0);

        return;
    }

    private static void resetPersistentEventLog(long)
    {
        long $l0;
        java.io.ByteArrayOutputStream $r0;
        java.io.DataOutputStream $r1;
        com.google.common.io.PersistentStore $r2;
        byte[] $r3;
        java.io.IOException $r4;
        java.lang.Throwable $r5;

        $l0 := @parameter0: long;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.DataOutputStream;

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r0);

     label1:
        virtualinvoke $r1.<java.io.DataOutputStream: void writeShort(int)>(0);

        virtualinvoke $r1.<java.io.DataOutputStream: void writeLong(long)>($l0);

     label2:
        <com.google.common.Log: long lastEventTimeMillis> = $l0;

     label3:
        $r2 = staticinvoke <com.google.common.Log: com.google.common.io.PersistentStore getPersistentStore()>();

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        interfaceinvoke $r2.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>("EVENT_LOG", $r3);

        return;

     label4:
        $r4 := @caughtexception;

        $r2 = staticinvoke <com.google.common.Log: com.google.common.io.PersistentStore getPersistentStore()>();

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        interfaceinvoke $r2.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>("EVENT_LOG", $r3);

        return;

     label5:
        $r5 := @caughtexception;

        $r2 = staticinvoke <com.google.common.Log: com.google.common.io.PersistentStore getPersistentStore()>();

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        interfaceinvoke $r2.<com.google.common.io.PersistentStore: boolean setPreference(java.lang.String,byte[])>("EVENT_LOG", $r3);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label5;
    }

    private static void sendThrowable(java.lang.String, java.lang.Throwable, boolean)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        $z0 := @parameter2: boolean;

        return;
    }

    public static void setOptions(boolean, boolean, boolean)
    {
        boolean $z0, $z1, $z2;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 := @parameter2: boolean;

        <com.google.common.Log: boolean logTime> = $z0;

        <com.google.common.Log: boolean logThread> = $z1;

        <com.google.common.Log: boolean logMemory> = $z2;

        return;
    }

    public static void severe(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("SEVERE", $r1);

        return;
    }

    public static void startTimer(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        return;
    }

    public static com.google.common.SimpleDataRequest uploadEventLog(boolean, java.lang.Object)
    {
        boolean $z0;
        java.lang.Object $r0;
        long $l0;
        com.google.common.SimpleDataRequest $r1;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.Object;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = staticinvoke <com.google.common.Log: com.google.common.SimpleDataRequest uploadEventLog(boolean,java.lang.Object,long)>($z0, $r0, $l0);

        return $r1;
    }

    private static com.google.common.SimpleDataRequest uploadEventLog(boolean, java.lang.Object, long)
    {
        boolean $z0;
        java.lang.Object $r0;
        long $l0;
        com.google.common.io.PersistentStore $r1;
        byte[] $r2;
        com.google.common.SimpleDataRequest $r3;
        int $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.google.common.DataRequestDispatcher $r6;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.Object;

        $l0 := @parameter2: long;

        $r1 = staticinvoke <com.google.common.Log: com.google.common.io.PersistentStore getPersistentStore()>();

        $r2 = interfaceinvoke $r1.<com.google.common.io.PersistentStore: byte[] readPreference(java.lang.String)>("EVENT_LOG");

        $r3 = null;

        if $r2 == null goto label1;

        $i1 = lengthof $r2;

        if $i1 <= 2 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uploading events: ");

        $i1 = lengthof $r2;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("Log", $r5);

        $r3 = new com.google.common.SimpleDataRequest;

        specialinvoke $r3.<com.google.common.SimpleDataRequest: void <init>(int,byte[],boolean,boolean,java.lang.Object)>(10, $r2, $z0, 0, $r0);

        $r6 = staticinvoke <com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher getInstance()>();

        virtualinvoke $r6.<com.google.common.DataRequestDispatcher: void addDataRequest(com.google.common.DataRequest)>($r3);

     label1:
        staticinvoke <com.google.common.Log: void resetPersistentEventLog(long)>($l0);

        return $r3;
    }

    public static void warning(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("WARNING", $r1);

        return;
    }
}
