public final class org.apache.http.util.EntityUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.http.util.EntityUtils $r0;

        $r0 := @this: org.apache.http.util.EntityUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getContentCharSet(org.apache.http.HttpEntity) throws org.apache.http.ParseException
    {
        org.apache.http.HttpEntity $r0;
        java.lang.IllegalArgumentException $r1;
        org.apache.http.Header $r2;
        org.apache.http.HeaderElement[] $r3;
        int $i0;
        org.apache.http.HeaderElement $r4;
        org.apache.http.NameValuePair $r5;
        java.lang.String $r6;

        $r0 := @parameter0: org.apache.http.HttpEntity;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity may not be null");

        throw $r1;

     label1:
        $r2 = interfaceinvoke $r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        if $r2 == null goto label2;

        $r2 = interfaceinvoke $r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        $r3 = interfaceinvoke $r2.<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>();

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label3;

        $r4 = $r3[0];

        $r5 = interfaceinvoke $r4.<org.apache.http.HeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)>("charset");

        if $r5 == null goto label4;

        $r6 = interfaceinvoke $r5.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        return $r6;

     label2:
        return null;

     label3:
        return null;

     label4:
        return null;
    }

    public static byte[] toByteArray(org.apache.http.HttpEntity) throws java.io.IOException
    {
        org.apache.http.HttpEntity $r0;
        org.apache.http.util.ByteArrayBuffer $r1;
        byte[] $r2;
        java.lang.IllegalArgumentException $r3;
        java.io.InputStream $r4;
        long $l0;
        byte $b1;
        int $i2;
        java.lang.Throwable $r5;

        $r0 := @parameter0: org.apache.http.HttpEntity;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity may not be null");

        throw $r3;

     label1:
        $r4 = interfaceinvoke $r0.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        if $r4 != null goto label2;

        $r2 = newarray (byte)[0];

        return $r2;

     label2:
        $l0 = interfaceinvoke $r0.<org.apache.http.HttpEntity: long getContentLength()>();

        $b1 = $l0 cmp 2147483647L;

        if $b1 <= 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity too large to be buffered in memory");

        throw $r3;

     label3:
        $l0 = interfaceinvoke $r0.<org.apache.http.HttpEntity: long getContentLength()>();

        $i2 = (int) $l0;

        if $i2 >= 0 goto label4;

        $i2 = 4096;

     label4:
        $r1 = new org.apache.http.util.ByteArrayBuffer;

        specialinvoke $r1.<org.apache.http.util.ByteArrayBuffer: void <init>(int)>($i2);

     label5:
        $r2 = newarray (byte)[4096];

     label6:
        $i2 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>($r2);

        if $i2 == -1 goto label9;

        virtualinvoke $r1.<org.apache.http.util.ByteArrayBuffer: void append(byte[],int,int)>($r2, 0, $i2);

     label7:
        goto label6;

     label8:
        $r5 := @caughtexception;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

        throw $r5;

     label9:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        $r2 = virtualinvoke $r1.<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>();

        return $r2;

        catch java.lang.Throwable from label5 to label7 with label8;
    }

    public static java.lang.String toString(org.apache.http.HttpEntity) throws java.io.IOException, org.apache.http.ParseException
    {
        org.apache.http.HttpEntity $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.apache.http.HttpEntity;

        $r1 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>($r0, null);

        return $r1;
    }

    public static java.lang.String toString(org.apache.http.HttpEntity, java.lang.String) throws java.io.IOException, org.apache.http.ParseException
    {
        org.apache.http.HttpEntity $r0;
        java.lang.String $r1, $r7, $r8;
        org.apache.http.util.CharArrayBuffer $r2;
        java.io.InputStreamReader $r3;
        char[] $r4;
        java.lang.IllegalArgumentException $r5;
        java.io.InputStream $r6;
        long $l0;
        byte $b1;
        int $i2;
        java.lang.Throwable $r9;

        $r0 := @parameter0: org.apache.http.HttpEntity;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity may not be null");

        throw $r5;

     label01:
        $r6 = interfaceinvoke $r0.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        if $r6 != null goto label02;

        return "";

     label02:
        $l0 = interfaceinvoke $r0.<org.apache.http.HttpEntity: long getContentLength()>();

        $b1 = $l0 cmp 2147483647L;

        if $b1 <= 0 goto label03;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity too large to be buffered in memory");

        throw $r5;

     label03:
        $l0 = interfaceinvoke $r0.<org.apache.http.HttpEntity: long getContentLength()>();

        $i2 = (int) $l0;

        if $i2 >= 0 goto label04;

        $i2 = 4096;

     label04:
        $r7 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>($r0);

        $r8 = $r7;

        if $r7 != null goto label05;

        $r8 = $r1;

     label05:
        if $r8 != null goto label06;

        $r8 = "ISO-8859-1";

     label06:
        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r6, $r8);

        $r2 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r2.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i2);

     label07:
        $r4 = newarray (char)[1024];

     label08:
        $i2 = virtualinvoke $r3.<java.io.Reader: int read(char[])>($r4);

        if $i2 == -1 goto label11;

        virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: void append(char[],int,int)>($r4, 0, $i2);

     label09:
        goto label08;

     label10:
        $r9 := @caughtexception;

        virtualinvoke $r3.<java.io.InputStreamReader: void close()>();

        throw $r9;

     label11:
        virtualinvoke $r3.<java.io.InputStreamReader: void close()>();

        $r1 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r1;

        catch java.lang.Throwable from label07 to label09 with label10;
    }
}
