class org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream extends java.io.OutputStream
{
    java.nio.channels.SocketChannel channel;

    public void <init>(java.nio.channels.SocketChannel)
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream $r0;
        java.nio.channels.SocketChannel $r1;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream;

        $r1 := @parameter0: java.nio.channels.SocketChannel;

        specialinvoke $r0.<java.io.OutputStream: void <init>()>();

        $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream: java.nio.channels.SocketChannel channel> = $r1;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream $r0;
        java.nio.channels.SocketChannel $r1;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream;

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream: java.nio.channels.SocketChannel channel>;

        virtualinvoke $r1.<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>();

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream $r0;
        int $i0;
        java.nio.channels.SocketChannel $r1;
        boolean $z0;
        java.nio.channels.IllegalBlockingModeException $r2;
        java.nio.ByteBuffer $r3;
        byte $b1;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream: java.nio.channels.SocketChannel channel>;

        $z0 = virtualinvoke $r1.<java.nio.channels.spi.AbstractSelectableChannel: boolean isBlocking()>();

        if $z0 != 0 goto label1;

        $r2 = new java.nio.channels.IllegalBlockingModeException;

        specialinvoke $r2.<java.nio.channels.IllegalBlockingModeException: void <init>()>();

        throw $r2;

     label1:
        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(1);

        $i0 = $i0 & 255;

        $b1 = (byte) $i0;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(0, $b1);

        $r1 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream: java.nio.channels.SocketChannel channel>;

        virtualinvoke $r1.<java.nio.channels.SocketChannel: int write(java.nio.ByteBuffer)>($r3);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.IndexOutOfBoundsException $r2;
        java.nio.ByteBuffer $r3;
        java.nio.channels.SocketChannel $r4;
        boolean $z0;
        java.nio.channels.IllegalBlockingModeException $r5;

        $r0 := @this: org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 < 0 goto label1;

        if $i1 < 0 goto label1;

        $i3 = $i1 + $i0;

        $i2 = lengthof $r1;

        if $i3 <= $i2 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, $i0, $i1);

        $r4 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream: java.nio.channels.SocketChannel channel>;

        $z0 = virtualinvoke $r4.<java.nio.channels.spi.AbstractSelectableChannel: boolean isBlocking()>();

        if $z0 != 0 goto label3;

        $r5 = new java.nio.channels.IllegalBlockingModeException;

        specialinvoke $r5.<java.nio.channels.IllegalBlockingModeException: void <init>()>();

        throw $r5;

     label3:
        $r4 = $r0.<org.apache.harmony.nio.internal.SocketChannelImpl$SocketChannelOutputStream: java.nio.channels.SocketChannel channel>;

        virtualinvoke $r4.<java.nio.channels.SocketChannel: int write(java.nio.ByteBuffer)>($r3);

        return;
    }
}
