public class org.apache.harmony.awt.ClipRegion extends java.awt.Rectangle
{
    private final org.apache.harmony.awt.gl.MultiRectArea clip;

    public void <init>(org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.ClipRegion $r0;
        org.apache.harmony.awt.gl.MultiRectArea $r1, $r3;
        java.awt.Rectangle $r2;

        $r0 := @this: org.apache.harmony.awt.ClipRegion;

        $r1 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r0.<java.awt.Rectangle: void <init>()>();

        $r3 = new org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r3.<org.apache.harmony.awt.gl.MultiRectArea: void <init>(org.apache.harmony.awt.gl.MultiRectArea)>($r1);

        $r0.<org.apache.harmony.awt.ClipRegion: org.apache.harmony.awt.gl.MultiRectArea clip> = $r3;

        $r2 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: java.awt.Rectangle getBounds()>();

        virtualinvoke $r0.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r2);

        return;
    }

    public static void convertRegion(java.awt.Component, org.apache.harmony.awt.gl.MultiRectArea, java.awt.Component)
    {
        java.awt.Component $r0, $r2;
        org.apache.harmony.awt.gl.MultiRectArea $r1;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;

        $r0 := @parameter0: java.awt.Component;

        $r1 := @parameter1: org.apache.harmony.awt.gl.MultiRectArea;

        $r2 := @parameter2: java.awt.Component;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.51");

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: void translate(int,int)>(0, 0);

        return;
    }

    public void convertRegion(java.awt.Component, java.awt.Component)
    {
        org.apache.harmony.awt.ClipRegion $r0;
        java.awt.Component $r1, $r2;
        org.apache.harmony.awt.gl.MultiRectArea $r3;

        $r0 := @this: org.apache.harmony.awt.ClipRegion;

        $r1 := @parameter0: java.awt.Component;

        $r2 := @parameter1: java.awt.Component;

        $r3 = $r0.<org.apache.harmony.awt.ClipRegion: org.apache.harmony.awt.gl.MultiRectArea clip>;

        staticinvoke <org.apache.harmony.awt.ClipRegion: void convertRegion(java.awt.Component,org.apache.harmony.awt.gl.MultiRectArea,java.awt.Component)>($r1, $r3, $r2);

        return;
    }

    public org.apache.harmony.awt.gl.MultiRectArea getClip()
    {
        org.apache.harmony.awt.ClipRegion $r0;
        org.apache.harmony.awt.gl.MultiRectArea r1;

        $r0 := @this: org.apache.harmony.awt.ClipRegion;

        r1 = $r0.<org.apache.harmony.awt.ClipRegion: org.apache.harmony.awt.gl.MultiRectArea clip>;

        return r1;
    }

    public void intersect(java.awt.Rectangle)
    {
        org.apache.harmony.awt.ClipRegion $r0;
        java.awt.Rectangle $r1;
        org.apache.harmony.awt.gl.MultiRectArea $r2;

        $r0 := @this: org.apache.harmony.awt.ClipRegion;

        $r1 := @parameter0: java.awt.Rectangle;

        $r2 = $r0.<org.apache.harmony.awt.ClipRegion: org.apache.harmony.awt.gl.MultiRectArea clip>;

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea: void intersect(java.awt.Rectangle)>($r1);

        return;
    }

    public boolean isEmpty()
    {
        org.apache.harmony.awt.ClipRegion $r0;
        boolean $z0;
        org.apache.harmony.awt.gl.MultiRectArea $r1;

        $r0 := @this: org.apache.harmony.awt.ClipRegion;

        $r1 = $r0.<org.apache.harmony.awt.ClipRegion: org.apache.harmony.awt.gl.MultiRectArea clip>;

        $z0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: boolean isEmpty()>();

        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.awt.ClipRegion $r0;
        org.apache.harmony.awt.gl.MultiRectArea $r1;
        java.lang.String $r2, $r3;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;

        $r0 := @this: org.apache.harmony.awt.ClipRegion;

        $r1 = $r0.<org.apache.harmony.awt.ClipRegion: org.apache.harmony.awt.gl.MultiRectArea clip>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(91);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = $r3;

        $r1 = $r0.<org.apache.harmony.awt.ClipRegion: org.apache.harmony.awt.gl.MultiRectArea clip>;

        $i0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>();

        if $i0 != 1 goto label1;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
