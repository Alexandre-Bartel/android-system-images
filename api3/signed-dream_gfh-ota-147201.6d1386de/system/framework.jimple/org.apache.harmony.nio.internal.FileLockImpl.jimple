final class org.apache.harmony.nio.internal.FileLockImpl extends java.nio.channels.FileLock
{
    private boolean isReleased;

    public void <init>(java.nio.channels.FileChannel, long, long, boolean)
    {
        org.apache.harmony.nio.internal.FileLockImpl $r0;
        java.nio.channels.FileChannel $r1;
        long $l0, $l1;
        boolean $z0;

        $r0 := @this: org.apache.harmony.nio.internal.FileLockImpl;

        $r1 := @parameter0: java.nio.channels.FileChannel;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $z0 := @parameter3: boolean;

        specialinvoke $r0.<java.nio.channels.FileLock: void <init>(java.nio.channels.FileChannel,long,long,boolean)>($r1, $l0, $l1, $z0);

        $r0.<org.apache.harmony.nio.internal.FileLockImpl: boolean isReleased> = 0;

        return;
    }

    public boolean isValid()
    {
        org.apache.harmony.nio.internal.FileLockImpl $r0;
        boolean $z0;
        java.nio.channels.FileChannel $r1;

        $r0 := @this: org.apache.harmony.nio.internal.FileLockImpl;

        $z0 = $r0.<org.apache.harmony.nio.internal.FileLockImpl: boolean isReleased>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke $r0.<java.nio.channels.FileLock: java.nio.channels.FileChannel channel()>();

        $z0 = virtualinvoke $r1.<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void release() throws java.io.IOException
    {
        org.apache.harmony.nio.internal.FileLockImpl $r0;
        java.nio.channels.FileChannel $r1;
        boolean $z0;
        java.nio.channels.ClosedChannelException $r2;
        org.apache.harmony.nio.internal.FileChannelImpl $r3;

        $r0 := @this: org.apache.harmony.nio.internal.FileLockImpl;

        $r1 = virtualinvoke $r0.<java.nio.channels.FileLock: java.nio.channels.FileChannel channel()>();

        $z0 = virtualinvoke $r1.<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $r2 = new java.nio.channels.ClosedChannelException;

        specialinvoke $r2.<java.nio.channels.ClosedChannelException: void <init>()>();

        throw $r2;

     label1:
        $z0 = $r0.<org.apache.harmony.nio.internal.FileLockImpl: boolean isReleased>;

        if $z0 != 0 goto label2;

        $r1 = virtualinvoke $r0.<java.nio.channels.FileLock: java.nio.channels.FileChannel channel()>();

        $r3 = (org.apache.harmony.nio.internal.FileChannelImpl) $r1;

        virtualinvoke $r3.<org.apache.harmony.nio.internal.FileChannelImpl: void release(java.nio.channels.FileLock)>($r0);

        $r0.<org.apache.harmony.nio.internal.FileLockImpl: boolean isReleased> = 1;

        return;

     label2:
        return;
    }
}
