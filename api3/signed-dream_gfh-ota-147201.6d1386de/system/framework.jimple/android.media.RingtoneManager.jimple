public class android.media.RingtoneManager extends java.lang.Object
{
    public static final java.lang.String ACTION_RINGTONE_PICKER;
    private static final java.lang.String[] DRM_COLUMNS;
    public static final java.lang.String EXTRA_RINGTONE_DEFAULT_URI;
    public static final java.lang.String EXTRA_RINGTONE_EXISTING_URI;
    public static final java.lang.String EXTRA_RINGTONE_INCLUDE_DRM;
    public static final java.lang.String EXTRA_RINGTONE_PICKED_URI;
    public static final java.lang.String EXTRA_RINGTONE_SHOW_DEFAULT;
    public static final java.lang.String EXTRA_RINGTONE_SHOW_SILENT;
    public static final java.lang.String EXTRA_RINGTONE_TITLE;
    public static final java.lang.String EXTRA_RINGTONE_TYPE;
    public static final int ID_COLUMN_INDEX;
    private static final java.lang.String[] INTERNAL_COLUMNS;
    private static final java.lang.String[] MEDIA_COLUMNS;
    private static final java.lang.String TAG;
    public static final int TITLE_COLUMN_INDEX;
    public static final int TYPE_ALARM;
    public static final int TYPE_ALL;
    public static final int TYPE_NOTIFICATION;
    public static final int TYPE_RINGTONE;
    public static final int URI_COLUMN_INDEX;
    private android.app.Activity mActivity;
    private android.content.Context mContext;
    private android.database.Cursor mCursor;
    private java.util.List mFilterColumns;
    private boolean mIncludeDrm;
    private android.media.Ringtone mPreviousRingtone;
    private boolean mStopPreviousRingtone;
    private int mType;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.StringBuilder $r1;
        android.net.Uri $r2;
        java.lang.String $r3;

        <android.media.RingtoneManager: int URI_COLUMN_INDEX> = 2;

        <android.media.RingtoneManager: int TYPE_RINGTONE> = 1;

        <android.media.RingtoneManager: int TYPE_NOTIFICATION> = 2;

        <android.media.RingtoneManager: int TYPE_ALL> = 7;

        <android.media.RingtoneManager: int TYPE_ALARM> = 4;

        <android.media.RingtoneManager: int TITLE_COLUMN_INDEX> = 1;

        <android.media.RingtoneManager: java.lang.String TAG> = "RingtoneManager";

        <android.media.RingtoneManager: int ID_COLUMN_INDEX> = 0;

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_TYPE> = "android.intent.extra.ringtone.TYPE";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_TITLE> = "android.intent.extra.ringtone.TITLE";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_SHOW_SILENT> = "android.intent.extra.ringtone.SHOW_SILENT";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_SHOW_DEFAULT> = "android.intent.extra.ringtone.SHOW_DEFAULT";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_PICKED_URI> = "android.intent.extra.ringtone.PICKED_URI";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_INCLUDE_DRM> = "android.intent.extra.ringtone.INCLUDE_DRM";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_EXISTING_URI> = "android.intent.extra.ringtone.EXISTING_URI";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_DEFAULT_URI> = "android.intent.extra.ringtone.DEFAULT_URI";

        <android.media.RingtoneManager: java.lang.String ACTION_RINGTONE_PICKER> = "android.intent.action.RINGTONE_PICKER";

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "title";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r2 = <android.provider.MediaStore$Audio$Media: android.net.Uri INTERNAL_CONTENT_URI>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[2] = $r3;

        <android.media.RingtoneManager: java.lang.String[] INTERNAL_COLUMNS> = $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "title";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r2 = <android.provider.DrmStore$Audio: android.net.Uri CONTENT_URI>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[2] = $r3;

        <android.media.RingtoneManager: java.lang.String[] DRM_COLUMNS> = $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "title";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r2 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[2] = $r3;

        <android.media.RingtoneManager: java.lang.String[] MEDIA_COLUMNS> = $r0;

        return;
    }

    public void <init>(android.app.Activity)
    {
        android.media.RingtoneManager $r0;
        android.app.Activity $r1;
        java.util.ArrayList $r2;
        int $i0;

        $r0 := @this: android.media.RingtoneManager;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.media.RingtoneManager: int mType> = 1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<android.media.RingtoneManager: java.util.List mFilterColumns> = $r2;

        $r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone> = 1;

        $r0.<android.media.RingtoneManager: android.app.Activity mActivity> = $r1;

        $r0.<android.media.RingtoneManager: android.content.Context mContext> = $r1;

        $i0 = $r0.<android.media.RingtoneManager: int mType>;

        virtualinvoke $r0.<android.media.RingtoneManager: void setType(int)>($i0);

        return;
    }

    public void <init>(android.content.Context)
    {
        android.media.RingtoneManager $r0;
        android.content.Context $r1;
        java.util.ArrayList $r2;
        int $i0;

        $r0 := @this: android.media.RingtoneManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.media.RingtoneManager: int mType> = 1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<android.media.RingtoneManager: java.util.List mFilterColumns> = $r2;

        $r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone> = 1;

        $r0.<android.media.RingtoneManager: android.content.Context mContext> = $r1;

        $i0 = $r0.<android.media.RingtoneManager: int mType>;

        virtualinvoke $r0.<android.media.RingtoneManager: void setType(int)>($i0);

        return;
    }

    private static java.lang.String constructBooleanTrueWhereClause(java.util.List)
    {
        java.util.List $r0;
        java.lang.StringBuilder $r1, $r4;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.util.List;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = $i0 - 1;

     label2:
        if $i0 < 0 goto label3;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=1 or ");

        $i0 = $i0 + -1;

        goto label2;

     label3:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 <= 0 goto label4;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $i0 = $i0 - 4;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>($i0);

     label4:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static android.net.Uri getActualDefaultRingtoneUri(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.String $r1;
        android.content.ContentResolver $r2;
        android.net.Uri $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <android.media.RingtoneManager: java.lang.String getSettingForType(int)>($i0);

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, $r1);

        if $r1 == null goto label2;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        return $r3;

     label2:
        $r3 = staticinvoke <android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>($r0);

        return $r3;
    }

    public static int getDefaultType(android.net.Uri)
    {
        android.net.Uri $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: android.net.Uri;

        if $r0 != null goto label1;

        return -1;

     label1:
        $r1 = <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI>;

        $z0 = virtualinvoke $r0.<android.net.Uri: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r1 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        $z0 = virtualinvoke $r0.<android.net.Uri: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        return 2;

     label3:
        return -1;
    }

    public static android.net.Uri getDefaultUri(int)
    {
        int $i0, $i1;
        android.net.Uri r0;

        $i0 := @parameter0: int;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        r0 = <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI>;

        return r0;

     label1:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        r0 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        return r0;

     label2:
        return null;
    }

    private android.database.Cursor getDrmRingtones()
    {
        android.media.RingtoneManager $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        android.database.Cursor $r3;

        $r0 := @this: android.media.RingtoneManager;

        $r1 = <android.provider.DrmStore$Audio: android.net.Uri CONTENT_URI>;

        $r2 = <android.media.RingtoneManager: java.lang.String[] DRM_COLUMNS>;

        $r3 = specialinvoke $r0.<android.media.RingtoneManager: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, null, null, "title");

        return $r3;
    }

    private android.database.Cursor getInternalRingtones()
    {
        android.media.RingtoneManager $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        java.util.List $r3;
        java.lang.String $r4;
        android.database.Cursor $r5;

        $r0 := @this: android.media.RingtoneManager;

        $r1 = <android.provider.MediaStore$Audio$Media: android.net.Uri INTERNAL_CONTENT_URI>;

        $r2 = <android.media.RingtoneManager: java.lang.String[] INTERNAL_COLUMNS>;

        $r3 = $r0.<android.media.RingtoneManager: java.util.List mFilterColumns>;

        $r4 = staticinvoke <android.media.RingtoneManager: java.lang.String constructBooleanTrueWhereClause(java.util.List)>($r3);

        $r5 = specialinvoke $r0.<android.media.RingtoneManager: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r4, null, "title");

        return $r5;
    }

    private android.database.Cursor getMediaRingtones()
    {
        android.media.RingtoneManager $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        java.lang.String $r3;
        boolean $z0;
        java.util.List $r4;
        android.database.Cursor $r5;

        $r0 := @this: android.media.RingtoneManager;

        $r3 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mounted_ro");

        if $z0 == 0 goto label2;

     label1:
        $r1 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r2 = <android.media.RingtoneManager: java.lang.String[] MEDIA_COLUMNS>;

        $r4 = $r0.<android.media.RingtoneManager: java.util.List mFilterColumns>;

        $r3 = staticinvoke <android.media.RingtoneManager: java.lang.String constructBooleanTrueWhereClause(java.util.List)>($r4);

        $r5 = specialinvoke $r0.<android.media.RingtoneManager: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r3, null, "title");

        return $r5;

     label2:
        return null;
    }

    public static android.media.Ringtone getRingtone(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        android.media.Ringtone $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,int)>($r0, $r1, -1);

        return $r2;
    }

    private static android.media.Ringtone getRingtone(android.content.Context, android.net.Uri, int)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        int $i0;
        android.media.Ringtone $r2;
        java.lang.Exception $r3, $r8;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.content.res.Resources $r6;
        android.content.res.AssetFileDescriptor $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $i0 := @parameter2: int;

        $r2 = new android.media.Ringtone;

     label01:
        specialinvoke $r2.<android.media.Ringtone: void <init>(android.content.Context)>($r0);

        if $i0 < 0 goto label02;

        virtualinvoke $r2.<android.media.Ringtone: void setStreamType(int)>($i0);

     label02:
        virtualinvoke $r2.<android.media.Ringtone: void open(android.net.Uri)>($r1);

     label03:
        return $r2;

     label04:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to open ringtone ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RingtoneManager", $r5);

     label05:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>(17563648);

     label06:
        if $r7 == null goto label10;

     label07:
        $r2 = new android.media.Ringtone;

        specialinvoke $r2.<android.media.Ringtone: void <init>(android.content.Context)>($r0);

        virtualinvoke $r2.<android.media.Ringtone: void open(android.content.res.AssetFileDescriptor)>($r7);

        virtualinvoke $r7.<android.content.res.AssetFileDescriptor: void close()>();

     label08:
        return $r2;

     label09:
        $r8 := @caughtexception;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RingtoneManager", "unable to find a usable ringtone");

        return null;

        catch java.lang.Exception from label01 to label03 with label04;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private static java.lang.String getSettingForType(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        return "ringtone";

     label1:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        return "notification_sound";

     label2:
        return null;
    }

    private static android.net.Uri getUriFromCursor(android.database.Cursor)
    {
        android.database.Cursor $r0;
        java.lang.String $r1;
        android.net.Uri $r2;
        long $l0;

        $r0 := @parameter0: android.database.Cursor;

        $r1 = interfaceinvoke $r0.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        $l0 = interfaceinvoke $r0.<android.database.Cursor: long getLong(int)>(0);

        $r2 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r2, $l0);

        return $r2;
    }

    public static android.net.Uri getValidRingtoneUri(android.content.Context)
    {
        android.content.Context $r0;
        android.media.RingtoneManager $r1;
        android.database.Cursor $r2;
        android.net.Uri $r3, $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = new android.media.RingtoneManager;

        specialinvoke $r1.<android.media.RingtoneManager: void <init>(android.content.Context)>($r0);

        $r2 = specialinvoke $r1.<android.media.RingtoneManager: android.database.Cursor getInternalRingtones()>();

        $r3 = staticinvoke <android.media.RingtoneManager: android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context,android.database.Cursor)>($r0, $r2);

        $r4 = $r3;

        if $r3 != null goto label1;

        $r2 = specialinvoke $r1.<android.media.RingtoneManager: android.database.Cursor getMediaRingtones()>();

        $r4 = staticinvoke <android.media.RingtoneManager: android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context,android.database.Cursor)>($r0, $r2);

     label1:
        if $r4 != null goto label2;

        $r2 = specialinvoke $r1.<android.media.RingtoneManager: android.database.Cursor getDrmRingtones()>();

        $r3 = staticinvoke <android.media.RingtoneManager: android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context,android.database.Cursor)>($r0, $r2);

        return $r3;

     label2:
        return $r4;
    }

    private static android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context, android.database.Cursor)
    {
        android.content.Context $r0;
        android.database.Cursor $r1;
        android.net.Uri $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.database.Cursor;

        if $r1 == null goto label2;

        $r2 = null;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <android.media.RingtoneManager: android.net.Uri getUriFromCursor(android.database.Cursor)>($r1);

     label1:
        interfaceinvoke $r1.<android.database.Cursor: void close()>();

        return $r2;

     label2:
        return null;
    }

    public static boolean isDefault(android.net.Uri)
    {
        android.net.Uri $r0;
        int $i0;

        $r0 := @parameter0: android.net.Uri;

        $i0 = staticinvoke <android.media.RingtoneManager: int getDefaultType(android.net.Uri)>($r0);

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.media.RingtoneManager $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4;
        java.lang.String $r3, $r5;
        android.app.Activity $r6;
        android.database.Cursor $r7;
        android.content.Context $r8;
        android.content.ContentResolver $r9;

        $r0 := @this: android.media.RingtoneManager;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r6 = $r0.<android.media.RingtoneManager: android.app.Activity mActivity>;

        if $r6 == null goto label1;

        $r6 = $r0.<android.media.RingtoneManager: android.app.Activity mActivity>;

        $r7 = virtualinvoke $r6.<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r3, $r4, $r5);

        return $r7;

     label1:
        $r8 = $r0.<android.media.RingtoneManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke $r9.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, $r3, $r4, $r5);

        return $r7;
    }

    public static void setActualDefaultRingtoneUri(android.content.Context, int, android.net.Uri)
    {
        android.content.Context $r0;
        int $i0;
        android.net.Uri $r1;
        java.lang.String $r2, $r4;
        android.content.ContentResolver $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.net.Uri;

        $r2 = staticinvoke <android.media.RingtoneManager: java.lang.String getSettingForType(int)>($i0);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r3, $r2, $r4);

        return;
    }

    private void setFilterColumnsList(int)
    {
        android.media.RingtoneManager $r0;
        int $i0, $i1;
        java.util.List $r1;

        $r0 := @this: android.media.RingtoneManager;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.media.RingtoneManager: java.util.List mFilterColumns>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("is_ringtone");

     label1:
        $i1 = $i0 & 2;

        if $i1 == 0 goto label2;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("is_notification");

     label2:
        $i0 = $i0 & 4;

        if $i0 == 0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("is_alarm");

        return;

     label3:
        return;
    }

    public android.database.Cursor getCursor()
    {
        android.media.RingtoneManager $r0;
        android.database.Cursor $r1, $r3, $r4;
        boolean $z0;
        com.android.internal.database.SortCursor $r2;
        android.database.Cursor[] $r5;

        $r0 := @this: android.media.RingtoneManager;

        $r1 = $r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean requery()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        return $r1;

     label1:
        $r1 = specialinvoke $r0.<android.media.RingtoneManager: android.database.Cursor getInternalRingtones()>();

        $z0 = $r0.<android.media.RingtoneManager: boolean mIncludeDrm>;

        if $z0 == 0 goto label3;

        $r3 = specialinvoke $r0.<android.media.RingtoneManager: android.database.Cursor getDrmRingtones()>();

     label2:
        $r4 = specialinvoke $r0.<android.media.RingtoneManager: android.database.Cursor getMediaRingtones()>();

        $r2 = new com.android.internal.database.SortCursor;

        $r5 = newarray (android.database.Cursor)[3];

        $r5[0] = $r1;

        $r5[1] = $r3;

        $r5[2] = $r4;

        specialinvoke $r2.<com.android.internal.database.SortCursor: void <init>(android.database.Cursor[],java.lang.String)>($r5, "title");

        $r0.<android.media.RingtoneManager: android.database.Cursor mCursor> = $r2;

        return $r2;

     label3:
        $r3 = null;

        goto label2;
    }

    public boolean getIncludeDrm()
    {
        android.media.RingtoneManager $r0;
        boolean z0;

        $r0 := @this: android.media.RingtoneManager;

        z0 = $r0.<android.media.RingtoneManager: boolean mIncludeDrm>;

        return z0;
    }

    public android.media.Ringtone getRingtone(int)
    {
        android.media.RingtoneManager $r0;
        int $i0;
        boolean $z0;
        android.media.Ringtone $r1;
        android.content.Context $r2;
        android.net.Uri $r3;

        $r0 := @this: android.media.RingtoneManager;

        $i0 := @parameter0: int;

        $z0 = $r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        virtualinvoke $r1.<android.media.Ringtone: void stop()>();

     label1:
        $r2 = $r0.<android.media.RingtoneManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r0.<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>($i0);

        $i0 = virtualinvoke $r0.<android.media.RingtoneManager: int inferStreamType()>();

        $r1 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,int)>($r2, $r3, $i0);

        $r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone> = $r1;

        $r1 = $r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        return $r1;
    }

    public int getRingtonePosition(android.net.Uri)
    {
        android.media.RingtoneManager $r0;
        android.net.Uri $r1, $r3, $r6;
        android.database.Cursor $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.String $r4, $r5;
        long $l2;

        $r0 := @this: android.media.RingtoneManager;

        $r1 := @parameter0: android.net.Uri;

        if $r1 != null goto label1;

        return -1;

     label1:
        $r2 = virtualinvoke $r0.<android.media.RingtoneManager: android.database.Cursor getCursor()>();

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getCount()>();

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label2;

        return -1;

     label2:
        $r3 = null;

        $r4 = null;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label7;

        $r5 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>(2);

        if $r3 == null goto label4;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label5;

     label4:
        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

     label5:
        $l2 = interfaceinvoke $r2.<android.database.Cursor: long getLong(int)>(0);

        $r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r3, $l2);

        $z0 = virtualinvoke $r1.<android.net.Uri: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

        return $i1;

     label6:
        interfaceinvoke $r2.<android.database.Cursor: boolean move(int)>(1);

        $r4 = $r5;

        $i1 = $i1 + 1;

        goto label3;

     label7:
        return -1;
    }

    public android.net.Uri getRingtoneUri(int)
    {
        android.media.RingtoneManager $r0;
        int $i0;
        android.database.Cursor $r1;
        boolean $z0;
        android.net.Uri $r2;

        $r0 := @this: android.media.RingtoneManager;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.media.RingtoneManager: android.database.Cursor getCursor()>();

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean moveToPosition(int)>($i0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = staticinvoke <android.media.RingtoneManager: android.net.Uri getUriFromCursor(android.database.Cursor)>($r1);

        return $r2;
    }

    public boolean getStopPreviousRingtone()
    {
        android.media.RingtoneManager $r0;
        boolean z0;

        $r0 := @this: android.media.RingtoneManager;

        z0 = $r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone>;

        return z0;
    }

    public int inferStreamType()
    {
        android.media.RingtoneManager $r0;
        int $i0;

        $r0 := @this: android.media.RingtoneManager;

        $i0 = $r0.<android.media.RingtoneManager: int mType>;

        lookupswitch($i0)
        {
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label2;
            default: goto label1;
        };

     label1:
        return 2;

     label2:
        return 4;

     label3:
        return 5;
    }

    public void setIncludeDrm(boolean)
    {
        android.media.RingtoneManager $r0;
        boolean $z0;

        $r0 := @this: android.media.RingtoneManager;

        $z0 := @parameter0: boolean;

        $r0.<android.media.RingtoneManager: boolean mIncludeDrm> = $z0;

        return;
    }

    public void setStopPreviousRingtone(boolean)
    {
        android.media.RingtoneManager $r0;
        boolean $z0;

        $r0 := @this: android.media.RingtoneManager;

        $z0 := @parameter0: boolean;

        $r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone> = $z0;

        return;
    }

    public void setType(int)
    {
        android.media.RingtoneManager $r0;
        int $i0;
        android.database.Cursor $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: android.media.RingtoneManager;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Setting filter columns should be done before querying for ringtones.");

        throw $r2;

     label1:
        $r0.<android.media.RingtoneManager: int mType> = $i0;

        specialinvoke $r0.<android.media.RingtoneManager: void setFilterColumnsList(int)>($i0);

        return;
    }

    public void stopPreviousRingtone()
    {
        android.media.RingtoneManager $r0;
        android.media.Ringtone $r1;

        $r0 := @this: android.media.RingtoneManager;

        $r1 = $r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        virtualinvoke $r1.<android.media.Ringtone: void stop()>();

        return;

     label1:
        return;
    }
}
