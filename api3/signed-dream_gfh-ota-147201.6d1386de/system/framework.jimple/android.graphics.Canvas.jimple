public class android.graphics.Canvas extends java.lang.Object
{
    public static final int ALL_SAVE_FLAG;
    public static final int CLIP_SAVE_FLAG;
    public static final int CLIP_TO_LAYER_SAVE_FLAG;
    public static final int FULL_COLOR_LAYER_SAVE_FLAG;
    public static final int HAS_ALPHA_LAYER_SAVE_FLAG;
    public static final int MATRIX_SAVE_FLAG;
    private android.graphics.Bitmap mBitmap;
    private float mDensityScale;
    private android.graphics.DrawFilter mDrawFilter;
    private javax.microedition.khronos.opengles.GL mGL;
    final int mNativeCanvas;
    private int mSurfaceFormat;

    public void <init>()
    {
        android.graphics.Canvas $r0;
        int $i0;

        $r0 := @this: android.graphics.Canvas;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.graphics.Canvas: float mDensityScale> = 1.0F;

        $i0 = staticinvoke <android.graphics.Canvas: int initRaster(int)>(0);

        $r0.<android.graphics.Canvas: int mNativeCanvas> = $i0;

        return;
    }

    void <init>(int)
    {
        android.graphics.Canvas $r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        $r0 := @this: android.graphics.Canvas;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.graphics.Canvas: float mDensityScale> = 1.0F;

        if $i0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $r0.<android.graphics.Canvas: int mNativeCanvas> = $i0;

        return;
    }

    public void <init>(android.graphics.Bitmap)
    {
        android.graphics.Canvas $r0;
        android.graphics.Bitmap $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        int $i0;
        float $f0;
        byte $b1;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.graphics.Canvas: float mDensityScale> = 1.0F;

        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean isMutable()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Immutable bitmap passed to Canvas constructor");

        throw $r2;

     label1:
        staticinvoke <android.graphics.Canvas: void throwIfRecycled(android.graphics.Bitmap)>($r1);

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int ni()>();

        $i0 = staticinvoke <android.graphics.Canvas: int initRaster(int)>($i0);

        $r0.<android.graphics.Canvas: int mNativeCanvas> = $i0;

        $r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap> = $r1;

        $f0 = virtualinvoke $r1.<android.graphics.Bitmap: float getDensityScale()>();

        $r0.<android.graphics.Canvas: float mDensityScale> = $f0;

        $f0 = $r0.<android.graphics.Canvas: float mDensityScale>;

        $b1 = $f0 cmpl -1.0F;

        if $b1 != 0 goto label2;

        $r0.<android.graphics.Canvas: float mDensityScale> = 1.0F;

        return;

     label2:
        return;
    }

    public void <init>(javax.microedition.khronos.opengles.GL)
    {
        android.graphics.Canvas $r0;
        javax.microedition.khronos.opengles.GL $r1;
        int $i0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: javax.microedition.khronos.opengles.GL;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.graphics.Canvas: float mDensityScale> = 1.0F;

        $i0 = staticinvoke <android.graphics.Canvas: int initGL()>();

        $r0.<android.graphics.Canvas: int mNativeCanvas> = $i0;

        $r0.<android.graphics.Canvas: javax.microedition.khronos.opengles.GL mGL> = $r1;

        return;
    }

    private static void checkRange(int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.ArrayIndexOutOfBoundsException $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $i1 | $i2;

        if $i3 < 0 goto label1;

        $i1 = $i1 + $i2;

        if $i1 <= $i0 goto label2;

     label1:
        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label2:
        return;
    }

    private static native void finalizer(int);

    public static native void freeGlCaches();

    private static native int initGL();

    private static native int initRaster(int);

    private static native void nativeDrawBitmapMatrix(int, int, int, int);

    private static native void nativeDrawBitmapMesh(int, int, int, int, float[], int, int[], int, int);

    private static native void nativeDrawVertices(int, int, int, float[], int, float[], int, int[], int, short[], int, int, int);

    private static native void nativeSetDrawFilter(int, int);

    private static native void nativeSetViewport(int, int, int);

    private static native boolean native_clipPath(int, int, int);

    private static native boolean native_clipRect(int, float, float, float, float, int);

    private static native boolean native_clipRegion(int, int, int);

    private static native void native_concat(int, int);

    private static native void native_drawARGB(int, int, int, int, int);

    private static native void native_drawArc(int, android.graphics.RectF, float, float, boolean, int);

    private native void native_drawBitmap(int, int, float, float, int, boolean, float);

    private static native void native_drawBitmap(int, int, android.graphics.Rect, android.graphics.Rect, int);

    private native void native_drawBitmap(int, int, android.graphics.Rect, android.graphics.RectF, int);

    private static native void native_drawBitmap(int, int[], int, int, float, float, int, int, boolean, int);

    private static native void native_drawCircle(int, float, float, float, int);

    private static native void native_drawColor(int, int);

    private static native void native_drawColor(int, int, int);

    private static native void native_drawLine(int, float, float, float, float, int);

    private static native void native_drawOval(int, android.graphics.RectF, int);

    private static native void native_drawPaint(int, int);

    private static native void native_drawPath(int, int, int);

    private static native void native_drawPicture(int, int);

    private static native void native_drawPosText(int, java.lang.String, float[], int);

    private static native void native_drawPosText(int, char[], int, int, float[], int);

    private static native void native_drawRGB(int, int, int, int);

    private static native void native_drawRect(int, float, float, float, float, int);

    private static native void native_drawRect(int, android.graphics.RectF, int);

    private static native void native_drawRoundRect(int, android.graphics.RectF, float, float, int);

    private static native void native_drawText(int, java.lang.String, int, int, float, float, int);

    private static native void native_drawText(int, char[], int, int, float, float, int);

    private static native void native_drawTextOnPath(int, java.lang.String, int, float, float, int);

    private static native void native_drawTextOnPath(int, char[], int, int, int, float, float, int);

    private static native void native_getCTM(int, int);

    private static native boolean native_getClipBounds(int, android.graphics.Rect);

    private static native boolean native_quickReject(int, float, float, float, float, int);

    private static native boolean native_quickReject(int, int, int);

    private static native boolean native_quickReject(int, android.graphics.RectF, int);

    private static native int native_saveLayer(int, float, float, float, float, int, int);

    private static native int native_saveLayer(int, android.graphics.RectF, int, int);

    private static native int native_saveLayerAlpha(int, float, float, float, float, int, int);

    private static native int native_saveLayerAlpha(int, android.graphics.RectF, int, int);

    private static native void native_setBitmap(int, int);

    private static native void native_setMatrix(int, int);

    private static void throwIfRecycled(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        boolean $z0;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.graphics.Bitmap;

        $z0 = virtualinvoke $r0.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canvas: trying to use a recycled bitmap ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        return;
    }

    public boolean clipPath(android.graphics.Path)
    {
        android.graphics.Canvas $r0;
        android.graphics.Path $r1;
        boolean $z0;
        android.graphics.Region$Op $r2;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Path;

        $r2 = <android.graphics.Region$Op: android.graphics.Region$Op INTERSECT>;

        $z0 = virtualinvoke $r0.<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region$Op)>($r1, $r2);

        return $z0;
    }

    public boolean clipPath(android.graphics.Path, android.graphics.Region$Op)
    {
        android.graphics.Canvas $r0;
        android.graphics.Path $r1;
        android.graphics.Region$Op $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Path;

        $r2 := @parameter1: android.graphics.Region$Op;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = virtualinvoke $r1.<android.graphics.Path: int ni()>();

        $i0 = $r2.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipPath(int,int,int)>($i1, $i2, $i0);

        return $z0;
    }

    public native boolean clipRect(float, float, float, float);

    public boolean clipRect(float, float, float, float, android.graphics.Region$Op)
    {
        android.graphics.Canvas $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Region$Op $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 := @parameter4: android.graphics.Region$Op;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = $r1.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipRect(int,float,float,float,float,int)>($i1, $f0, $f1, $f2, $f3, $i0);

        return $z0;
    }

    public native boolean clipRect(int, int, int, int);

    public native boolean clipRect(android.graphics.Rect);

    public boolean clipRect(android.graphics.Rect, android.graphics.Region$Op)
    {
        android.graphics.Canvas $r0;
        android.graphics.Rect $r1;
        android.graphics.Region$Op $r2;
        int $i0, $i1;
        boolean $z0;
        float $f0, $f1, $f2, $f3;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 := @parameter1: android.graphics.Region$Op;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $f0 = (float) $i0;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $f1 = (float) $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $f2 = (float) $i0;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $f3 = (float) $i0;

        $i0 = $r2.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipRect(int,float,float,float,float,int)>($i1, $f0, $f1, $f2, $f3, $i0);

        return $z0;
    }

    public native boolean clipRect(android.graphics.RectF);

    public boolean clipRect(android.graphics.RectF, android.graphics.Region$Op)
    {
        android.graphics.Canvas $r0;
        android.graphics.RectF $r1;
        android.graphics.Region$Op $r2;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: android.graphics.Region$Op;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $f0 = $r1.<android.graphics.RectF: float left>;

        $f1 = $r1.<android.graphics.RectF: float top>;

        $f2 = $r1.<android.graphics.RectF: float right>;

        $f3 = $r1.<android.graphics.RectF: float bottom>;

        $i0 = $r2.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipRect(int,float,float,float,float,int)>($i1, $f0, $f1, $f2, $f3, $i0);

        return $z0;
    }

    public boolean clipRegion(android.graphics.Region)
    {
        android.graphics.Canvas $r0;
        android.graphics.Region $r1;
        boolean $z0;
        android.graphics.Region$Op $r2;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Region;

        $r2 = <android.graphics.Region$Op: android.graphics.Region$Op INTERSECT>;

        $z0 = virtualinvoke $r0.<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region$Op)>($r1, $r2);

        return $z0;
    }

    public boolean clipRegion(android.graphics.Region, android.graphics.Region$Op)
    {
        android.graphics.Canvas $r0;
        android.graphics.Region $r1;
        android.graphics.Region$Op $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Region;

        $r2 := @parameter1: android.graphics.Region$Op;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = virtualinvoke $r1.<android.graphics.Region: int ni()>();

        $i0 = $r2.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipRegion(int,int,int)>($i1, $i2, $i0);

        return $z0;
    }

    public void concat(android.graphics.Matrix)
    {
        android.graphics.Canvas $r0;
        android.graphics.Matrix $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Matrix;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = $r1.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Canvas: void native_concat(int,int)>($i0, $i1);

        return;
    }

    public void drawARGB(int, int, int, int)
    {
        android.graphics.Canvas $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.graphics.Canvas;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void native_drawARGB(int,int,int,int,int)>($i4, $i0, $i1, $i2, $i3);

        return;
    }

    public void drawArc(android.graphics.RectF, float, float, boolean, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.RectF $r1;
        float $f0, $f1;
        boolean $z0;
        android.graphics.Paint $r2;
        int $i0, $i1;
        java.lang.NullPointerException $r3;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.RectF;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        $r2 := @parameter4: android.graphics.Paint;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = $r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawArc(int,android.graphics.RectF,float,float,boolean,int)>($i1, $r1, $f0, $f1, $z0, $i0);

        return;
    }

    public void drawBitmap(android.graphics.Bitmap, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Bitmap $r1;
        float $f0, $f1, $f2;
        android.graphics.Paint $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Bitmap;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r2 := @parameter3: android.graphics.Paint;

        staticinvoke <android.graphics.Canvas: void throwIfRecycled(android.graphics.Bitmap)>($r1);

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int ni()>();

        if $r2 == null goto label2;

        $i2 = $r2.<android.graphics.Paint: int mNativePaint>;

     label1:
        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean isAutoScalingEnabled()>();

        $f2 = virtualinvoke $r1.<android.graphics.Bitmap: float getDensityScale()>();

        specialinvoke $r0.<android.graphics.Canvas: void native_drawBitmap(int,int,float,float,int,boolean,float)>($i0, $i1, $f0, $f1, $i2, $z0, $f2);

        return;

     label2:
        $i2 = 0;

        goto label1;
    }

    public void drawBitmap(android.graphics.Bitmap, android.graphics.Matrix, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Bitmap $r1;
        android.graphics.Matrix $r2;
        android.graphics.Paint $r3;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: android.graphics.Matrix;

        $r3 := @parameter2: android.graphics.Paint;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int ni()>();

        $i2 = virtualinvoke $r2.<android.graphics.Matrix: int ni()>();

        if $r3 == null goto label2;

        $i3 = $r3.<android.graphics.Paint: int mNativePaint>;

     label1:
        staticinvoke <android.graphics.Canvas: void nativeDrawBitmapMatrix(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;

     label2:
        $i3 = 0;

        goto label1;
    }

    public void drawBitmap(android.graphics.Bitmap, android.graphics.Rect, android.graphics.Rect, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Bitmap $r1;
        android.graphics.Rect $r2, $r3;
        android.graphics.Paint $r4;
        int $i0, $i1, $i2;
        java.lang.NullPointerException $r5;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 := @parameter2: android.graphics.Rect;

        $r4 := @parameter3: android.graphics.Paint;

        if $r3 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        staticinvoke <android.graphics.Canvas: void throwIfRecycled(android.graphics.Bitmap)>($r1);

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int ni()>();

        if $r4 == null goto label3;

        $i2 = $r4.<android.graphics.Paint: int mNativePaint>;

     label2:
        staticinvoke <android.graphics.Canvas: void native_drawBitmap(int,int,android.graphics.Rect,android.graphics.Rect,int)>($i1, $i0, $r2, $r3, $i2);

        return;

     label3:
        $i2 = 0;

        goto label2;
    }

    public void drawBitmap(android.graphics.Bitmap, android.graphics.Rect, android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Bitmap $r1;
        android.graphics.Rect $r2;
        android.graphics.RectF $r3;
        android.graphics.Paint $r4;
        int $i0, $i1, $i2;
        java.lang.NullPointerException $r5;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 := @parameter2: android.graphics.RectF;

        $r4 := @parameter3: android.graphics.Paint;

        if $r3 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        staticinvoke <android.graphics.Canvas: void throwIfRecycled(android.graphics.Bitmap)>($r1);

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int ni()>();

        if $r4 == null goto label3;

        $i2 = $r4.<android.graphics.Paint: int mNativePaint>;

     label2:
        specialinvoke $r0.<android.graphics.Canvas: void native_drawBitmap(int,int,android.graphics.Rect,android.graphics.RectF,int)>($i0, $i1, $r2, $r3, $i2);

        return;

     label3:
        $i2 = 0;

        goto label2;
    }

    public void drawBitmap(int[], int, int, float, float, int, int, boolean, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1;
        boolean $z0;
        android.graphics.Paint $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $i2 := @parameter5: int;

        $i3 := @parameter6: int;

        $z0 := @parameter7: boolean;

        $r2 := @parameter8: android.graphics.Paint;

        if $i2 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("width must be >= 0");

        throw $r3;

     label1:
        if $i3 >= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("height must be >= 0");

        throw $r3;

     label2:
        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        if $i5 >= $i2 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("abs(stride) must be >= width");

        throw $r3;

     label3:
        $i5 = $i3 - 1;

        $i5 = $i5 * $i1;

        $i4 = $i0 + $i5;

        $i5 = lengthof $r1;

        if $i0 < 0 goto label4;

        $i6 = $i0 + $i2;

        if $i6 > $i5 goto label4;

        if $i4 < 0 goto label4;

        $i4 = $i4 + $i2;

        if $i4 <= $i5 goto label5;

     label4:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label5:
        if $i2 == 0 goto label9;

        if $i3 != 0 goto label6;

        return;

     label6:
        $i5 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        if $r2 == null goto label8;

        $i4 = $r2.<android.graphics.Paint: int mNativePaint>;

     label7:
        staticinvoke <android.graphics.Canvas: void native_drawBitmap(int,int[],int,int,float,float,int,int,boolean,int)>($i5, $r1, $i0, $i1, $f0, $f1, $i2, $i3, $z0, $i4);

        return;

     label8:
        $i4 = 0;

        goto label7;

     label9:
        return;
    }

    public void drawBitmap(int[], int, int, int, int, int, int, boolean, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        android.graphics.Paint $r2;
        float $f0, $f1;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $i5 := @parameter6: int;

        $z0 := @parameter7: boolean;

        $r2 := @parameter8: android.graphics.Paint;

        $f0 = (float) $i2;

        $f1 = (float) $i3;

        virtualinvoke $r0.<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>($r1, $i0, $i1, $f0, $f1, $i4, $i5, $z0, $r2);

        return;
    }

    public void drawBitmapMesh(android.graphics.Bitmap, int, int, float[], int, int[], int, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Bitmap $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float[] $r2;
        int[] $r3;
        android.graphics.Paint $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: float[];

        $i2 := @parameter4: int;

        $r3 := @parameter5: int[];

        $i3 := @parameter6: int;

        $r4 := @parameter7: android.graphics.Paint;

        $i4 = $i0 | $i1;

        $i4 = $i4 | $i2;

        $i4 = $i4 | $i3;

        if $i4 >= 0 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        if $i0 == 0 goto label6;

        if $i1 != 0 goto label2;

        return;

     label2:
        $i4 = $i0 + 1;

        $i5 = $i1 + 1;

        $i4 = $i4 * $i5;

        $i5 = lengthof $r2;

        $i6 = $i4 * 2;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i5, $i2, $i6);

        if $r3 == null goto label3;

        $i5 = lengthof $r3;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i5, $i3, $i4);

     label3:
        $i5 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i4 = virtualinvoke $r1.<android.graphics.Bitmap: int ni()>();

        if $r4 == null goto label5;

        $i6 = $r4.<android.graphics.Paint: int mNativePaint>;

     label4:
        staticinvoke <android.graphics.Canvas: void nativeDrawBitmapMesh(int,int,int,int,float[],int,int[],int,int)>($i5, $i4, $i0, $i1, $r2, $i2, $r3, $i3, $i6);

        return;

     label5:
        $i6 = 0;

        goto label4;

     label6:
        return;
    }

    public void drawCircle(float, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        float $f0, $f1, $f2;
        android.graphics.Paint $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r1 := @parameter3: android.graphics.Paint;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = $r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawCircle(int,float,float,float,int)>($i0, $f0, $f1, $f2, $i1);

        return;
    }

    public void drawColor(int)
    {
        android.graphics.Canvas $r0;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void native_drawColor(int,int)>($i1, $i0);

        return;
    }

    public void drawColor(int, android.graphics.PorterDuff$Mode)
    {
        android.graphics.Canvas $r0;
        int $i0, $i1, $i2;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @this: android.graphics.Canvas;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = $r1.<android.graphics.PorterDuff$Mode: int nativeInt>;

        staticinvoke <android.graphics.Canvas: void native_drawColor(int,int,int)>($i1, $i0, $i2);

        return;
    }

    public void drawLine(float, float, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 := @parameter4: android.graphics.Paint;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = $r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawLine(int,float,float,float,float,int)>($i0, $f0, $f1, $f2, $f3, $i1);

        return;
    }

    public native void drawLines(float[], int, int, android.graphics.Paint);

    public void drawLines(float[], android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        float[] $r1;
        android.graphics.Paint $r2;
        int $i0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: android.graphics.Paint;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>($r1, 0, $i0, $r2);

        return;
    }

    public void drawOval(android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.RectF $r1;
        android.graphics.Paint $r2;
        int $i0, $i1;
        java.lang.NullPointerException $r3;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: android.graphics.Paint;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = $r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawOval(int,android.graphics.RectF,int)>($i1, $r1, $i0);

        return;
    }

    public void drawPaint(android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Paint $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Paint;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = $r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawPaint(int,int)>($i0, $i1);

        return;
    }

    public void drawPath(android.graphics.Path, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Path $r1;
        android.graphics.Paint $r2;
        int $i0, $i1, $i2;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Path;

        $r2 := @parameter1: android.graphics.Paint;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = virtualinvoke $r1.<android.graphics.Path: int ni()>();

        $i1 = $r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawPath(int,int,int)>($i0, $i2, $i1);

        return;
    }

    public void drawPicture(android.graphics.Picture)
    {
        android.graphics.Canvas $r0;
        android.graphics.Picture $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Picture;

        virtualinvoke $r1.<android.graphics.Picture: void endRecording()>();

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke $r1.<android.graphics.Picture: int ni()>();

        staticinvoke <android.graphics.Canvas: void native_drawPicture(int,int)>($i0, $i1);

        return;
    }

    public void drawPicture(android.graphics.Picture, android.graphics.Rect)
    {
        android.graphics.Canvas $r0;
        android.graphics.Picture $r1;
        android.graphics.Rect $r2;
        int $i0;
        float $f0, $f1, $f2;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Picture;

        $r2 := @parameter1: android.graphics.Rect;

        virtualinvoke $r0.<android.graphics.Canvas: int save()>();

        $i0 = $r2.<android.graphics.Rect: int left>;

        $f0 = (float) $i0;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $f1 = (float) $i0;

        virtualinvoke $r0.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $i0 = virtualinvoke $r1.<android.graphics.Picture: int getWidth()>();

        if $i0 <= 0 goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Picture: int getHeight()>();

        if $i0 <= 0 goto label1;

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Picture: int getWidth()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $f1 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Picture: int getHeight()>();

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        virtualinvoke $r0.<android.graphics.Canvas: void scale(float,float)>($f0, $f1);

     label1:
        virtualinvoke $r0.<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>($r1);

        virtualinvoke $r0.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void drawPicture(android.graphics.Picture, android.graphics.RectF)
    {
        android.graphics.Canvas $r0;
        android.graphics.Picture $r1;
        android.graphics.RectF $r2;
        float $f0, $f1, $f2;
        int $i0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Picture;

        $r2 := @parameter1: android.graphics.RectF;

        virtualinvoke $r0.<android.graphics.Canvas: int save()>();

        $f0 = $r2.<android.graphics.RectF: float left>;

        $f1 = $r2.<android.graphics.RectF: float top>;

        virtualinvoke $r0.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $i0 = virtualinvoke $r1.<android.graphics.Picture: int getWidth()>();

        if $i0 <= 0 goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Picture: int getHeight()>();

        if $i0 <= 0 goto label1;

        $f0 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $i0 = virtualinvoke $r1.<android.graphics.Picture: int getWidth()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $f1 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        $i0 = virtualinvoke $r1.<android.graphics.Picture: int getHeight()>();

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        virtualinvoke $r0.<android.graphics.Canvas: void scale(float,float)>($f0, $f1);

     label1:
        virtualinvoke $r0.<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>($r1);

        virtualinvoke $r0.<android.graphics.Canvas: void restore()>();

        return;
    }

    public native void drawPoint(float, float, android.graphics.Paint);

    public native void drawPoints(float[], int, int, android.graphics.Paint);

    public void drawPoints(float[], android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        float[] $r1;
        android.graphics.Paint $r2;
        int $i0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: android.graphics.Paint;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.graphics.Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>($r1, 0, $i0, $r2);

        return;
    }

    public void drawPosText(java.lang.String, float[], android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        java.lang.String $r1;
        float[] $r2;
        android.graphics.Paint $r3;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: float[];

        $r3 := @parameter2: android.graphics.Paint;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 * 2;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label1;

        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label1:
        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = $r3.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawPosText(int,java.lang.String,float[],int)>($i0, $r1, $r2, $i1);

        return;
    }

    public void drawPosText(char[], int, int, float[], android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i3;
        float[] $r2;
        android.graphics.Paint $r3;
        java.lang.IndexOutOfBoundsException $r4;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: float[];

        $r3 := @parameter4: android.graphics.Paint;

        if $i0 < 0 goto label1;

        $i2 = $i0 + $i1;

        $i3 = lengthof $r1;

        if $i2 > $i3 goto label1;

        $i2 = $i1 * 2;

        $i3 = lengthof $r2;

        if $i2 <= $i3 goto label2;

     label1:
        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label2:
        $i3 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = $r3.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawPosText(int,char[],int,int,float[],int)>($i3, $r1, $i0, $i1, $r2, $i2);

        return;
    }

    public void drawRGB(int, int, int)
    {
        android.graphics.Canvas $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.graphics.Canvas;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void native_drawRGB(int,int,int,int)>($i3, $i0, $i1, $i2);

        return;
    }

    public void drawRect(float, float, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 := @parameter4: android.graphics.Paint;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = $r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawRect(int,float,float,float,float,int)>($i0, $f0, $f1, $f2, $f3, $i1);

        return;
    }

    public void drawRect(android.graphics.Rect, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Rect $r1;
        android.graphics.Paint $r2;
        float $f0, $f1, $f2, $f3;
        int $i0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 := @parameter1: android.graphics.Paint;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $f0 = (float) $i0;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $f1 = (float) $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $f2 = (float) $i0;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $f3 = (float) $i0;

        virtualinvoke $r0.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r2);

        return;
    }

    public void drawRect(android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.RectF $r1;
        android.graphics.Paint $r2;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: android.graphics.Paint;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = $r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawRect(int,android.graphics.RectF,int)>($i0, $r1, $i1);

        return;
    }

    public void drawRoundRect(android.graphics.RectF, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.RectF $r1;
        float $f0, $f1;
        android.graphics.Paint $r2;
        int $i0, $i1;
        java.lang.NullPointerException $r3;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.RectF;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r2 := @parameter3: android.graphics.Paint;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = $r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawRoundRect(int,android.graphics.RectF,float,float,int)>($i1, $r1, $f0, $f1, $i0);

        return;
    }

    public void drawText(java.lang.CharSequence, int, int, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.graphics.Paint $r2;
        boolean $z0;
        java.lang.String $r3;
        android.text.GraphicsOperations $r4;
        char[] $r5;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $r2 := @parameter5: android.graphics.Paint;

        $z0 = $r1 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof android.text.SpannedString;

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof android.text.SpannableString;

        if $z0 == 0 goto label2;

     label1:
        $i2 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $i3 = $r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawText(int,java.lang.String,int,int,float,float,int)>($i2, $r3, $i0, $i1, $f0, $f1, $i3);

        return;

     label2:
        $z0 = $r1 instanceof android.text.GraphicsOperations;

        if $z0 == 0 goto label3;

        $r4 = (android.text.GraphicsOperations) $r1;

        interfaceinvoke $r4.<android.text.GraphicsOperations: void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint)>($r0, $i0, $i1, $f0, $f1, $r2);

        return;

     label3:
        $i2 = $i1 - $i0;

        $r5 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>($i2);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r1, $i0, $i1, $r5, 0);

        $i0 = $i1 - $i0;

        virtualinvoke $r0.<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>($r5, 0, $i0, $f0, $f1, $r2);

        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>($r5);

        return;
    }

    public native void drawText(java.lang.String, float, float, android.graphics.Paint);

    public void drawText(java.lang.String, int, int, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.graphics.Paint $r2;
        java.lang.IndexOutOfBoundsException $r3;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $r2 := @parameter5: android.graphics.Paint;

        $i2 = $i0 | $i1;

        $i3 = $i1 - $i0;

        $i2 = $i2 | $i3;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i3 = $i3 - $i1;

        $i2 = $i2 | $i3;

        if $i2 >= 0 goto label1;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $i3 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = $r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawText(int,java.lang.String,int,int,float,float,int)>($i3, $r1, $i0, $i1, $f0, $f1, $i2);

        return;
    }

    public void drawText(char[], int, int, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.graphics.Paint $r2;
        java.lang.IndexOutOfBoundsException $r3;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $r2 := @parameter5: android.graphics.Paint;

        $i2 = $i0 | $i1;

        $i3 = $i0 + $i1;

        $i2 = $i2 | $i3;

        $i3 = lengthof $r1;

        $i3 = $i3 - $i0;

        $i3 = $i3 - $i1;

        $i2 = $i2 | $i3;

        if $i2 >= 0 goto label1;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $i3 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = $r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawText(int,char[],int,int,float,float,int)>($i3, $r1, $i0, $i1, $f0, $f1, $i2);

        return;
    }

    public void drawTextOnPath(java.lang.String, android.graphics.Path, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        java.lang.String $r1;
        android.graphics.Path $r2;
        float $f0, $f1;
        android.graphics.Paint $r3;
        int $i0, $i1, $i2;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Path;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $r3 := @parameter4: android.graphics.Paint;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = virtualinvoke $r2.<android.graphics.Path: int ni()>();

        $i0 = $r3.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawTextOnPath(int,java.lang.String,int,float,float,int)>($i1, $r1, $i2, $f0, $f1, $i0);

        return;

     label1:
        return;
    }

    public void drawTextOnPath(char[], int, int, android.graphics.Path, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        char[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Path $r2;
        float $f0, $f1;
        android.graphics.Paint $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.graphics.Path;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $r3 := @parameter6: android.graphics.Paint;

        if $i0 < 0 goto label1;

        $i2 = $i0 + $i1;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label2;

     label1:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label2:
        $i4 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i3 = virtualinvoke $r2.<android.graphics.Path: int ni()>();

        $i2 = $r3.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawTextOnPath(int,char[],int,int,int,float,float,int)>($i4, $r1, $i0, $i1, $i3, $f0, $f1, $i2);

        return;
    }

    public void drawVertices(android.graphics.Canvas$VertexMode, int, float[], int, float[], int, int[], int, short[], int, int, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Canvas$VertexMode $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float[] $r2, $r3;
        int[] $r4;
        short[] $r5;
        android.graphics.Paint $r6;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Canvas$VertexMode;

        $i0 := @parameter1: int;

        $r2 := @parameter2: float[];

        $i1 := @parameter3: int;

        $r3 := @parameter4: float[];

        $i2 := @parameter5: int;

        $r4 := @parameter6: int[];

        $i3 := @parameter7: int;

        $r5 := @parameter8: short[];

        $i4 := @parameter9: int;

        $i5 := @parameter10: int;

        $r6 := @parameter11: android.graphics.Paint;

        $i6 = lengthof $r2;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i6, $i1, $i0);

        if $r3 == null goto label1;

        $i6 = lengthof $r3;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i6, $i2, $i0);

     label1:
        if $r4 == null goto label2;

        $i6 = lengthof $r4;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i6, $i3, $i0);

     label2:
        if $r5 == null goto label3;

        $i6 = lengthof $r5;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i6, $i4, $i5);

     label3:
        $i6 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i7 = $r1.<android.graphics.Canvas$VertexMode: int nativeInt>;

        $i8 = $r6.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void nativeDrawVertices(int,int,int,float[],int,float[],int,int[],int,short[],int,int,int)>($i6, $i7, $i0, $r2, $i1, $r3, $i2, $r4, $i3, $r5, $i4, $i5, $i8);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.Canvas $r0;
        int $i0;

        $r0 := @this: android.graphics.Canvas;

        specialinvoke $r0.<java.lang.Object: void finalize()>();

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void finalizer(int)>($i0);

        return;
    }

    public final android.graphics.Rect getClipBounds()
    {
        android.graphics.Canvas $r0;
        android.graphics.Rect $r1;

        $r0 := @this: android.graphics.Canvas;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        virtualinvoke $r0.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>($r1);

        return $r1;
    }

    public boolean getClipBounds(android.graphics.Rect)
    {
        android.graphics.Canvas $r0;
        android.graphics.Rect $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Rect;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_getClipBounds(int,android.graphics.Rect)>($i0, $r1);

        return $z0;
    }

    public float getDensityScale()
    {
        android.graphics.Canvas $r0;
        float $f0;
        android.graphics.Bitmap $r1;

        $r0 := @this: android.graphics.Canvas;

        $r1 = $r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap>;

        $f0 = virtualinvoke $r1.<android.graphics.Bitmap: float getDensityScale()>();

        return $f0;

     label1:
        $f0 = $r0.<android.graphics.Canvas: float mDensityScale>;

        return $f0;
    }

    public android.graphics.DrawFilter getDrawFilter()
    {
        android.graphics.Canvas $r0;
        android.graphics.DrawFilter r1;

        $r0 := @this: android.graphics.Canvas;

        r1 = $r0.<android.graphics.Canvas: android.graphics.DrawFilter mDrawFilter>;

        return r1;
    }

    public javax.microedition.khronos.opengles.GL getGL()
    {
        android.graphics.Canvas $r0;
        javax.microedition.khronos.opengles.GL r1;

        $r0 := @this: android.graphics.Canvas;

        r1 = $r0.<android.graphics.Canvas: javax.microedition.khronos.opengles.GL mGL>;

        return r1;
    }

    public native int getHeight();

    public final android.graphics.Matrix getMatrix()
    {
        android.graphics.Canvas $r0;
        android.graphics.Matrix $r1;

        $r0 := @this: android.graphics.Canvas;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r0.<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>($r1);

        return $r1;
    }

    public void getMatrix(android.graphics.Matrix)
    {
        android.graphics.Canvas $r0;
        android.graphics.Matrix $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Matrix;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = $r1.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Canvas: void native_getCTM(int,int)>($i0, $i1);

        return;
    }

    public native int getSaveCount();

    public native int getWidth();

    public native boolean isOpaque();

    public boolean quickReject(float, float, float, float, android.graphics.Canvas$EdgeType)
    {
        android.graphics.Canvas $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Canvas$EdgeType $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 := @parameter4: android.graphics.Canvas$EdgeType;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = $r1.<android.graphics.Canvas$EdgeType: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_quickReject(int,float,float,float,float,int)>($i1, $f0, $f1, $f2, $f3, $i0);

        return $z0;
    }

    public boolean quickReject(android.graphics.Path, android.graphics.Canvas$EdgeType)
    {
        android.graphics.Canvas $r0;
        android.graphics.Path $r1;
        android.graphics.Canvas$EdgeType $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Path;

        $r2 := @parameter1: android.graphics.Canvas$EdgeType;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = virtualinvoke $r1.<android.graphics.Path: int ni()>();

        $i0 = $r2.<android.graphics.Canvas$EdgeType: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_quickReject(int,int,int)>($i1, $i2, $i0);

        return $z0;
    }

    public boolean quickReject(android.graphics.RectF, android.graphics.Canvas$EdgeType)
    {
        android.graphics.Canvas $r0;
        android.graphics.RectF $r1;
        android.graphics.Canvas$EdgeType $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: android.graphics.Canvas$EdgeType;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = $r2.<android.graphics.Canvas$EdgeType: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_quickReject(int,android.graphics.RectF,int)>($i1, $r1, $i0);

        return $z0;
    }

    public native void restore();

    public native void restoreToCount(int);

    public native void rotate(float);

    public final void rotate(float, float, float)
    {
        android.graphics.Canvas $r0;
        float $f0, $f1, $f2;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        virtualinvoke $r0.<android.graphics.Canvas: void translate(float,float)>($f1, $f2);

        virtualinvoke $r0.<android.graphics.Canvas: void rotate(float)>($f0);

        $f0 = neg $f1;

        $f1 = neg $f2;

        virtualinvoke $r0.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        return;
    }

    public native int save();

    public native int save(int);

    public int saveLayer(float, float, float, float, android.graphics.Paint, int)
    {
        android.graphics.Canvas $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 := @parameter4: android.graphics.Paint;

        $i0 := @parameter5: int;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        if $r1 == null goto label2;

        $i2 = $r1.<android.graphics.Paint: int mNativePaint>;

     label1:
        $i0 = staticinvoke <android.graphics.Canvas: int native_saveLayer(int,float,float,float,float,int,int)>($i1, $f0, $f1, $f2, $f3, $i2, $i0);

        return $i0;

     label2:
        $i2 = 0;

        goto label1;
    }

    public int saveLayer(android.graphics.RectF, android.graphics.Paint, int)
    {
        android.graphics.Canvas $r0;
        android.graphics.RectF $r1;
        android.graphics.Paint $r2;
        int $i0, $i1, $i2;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.RectF;

        $r2 := @parameter1: android.graphics.Paint;

        $i0 := @parameter2: int;

        $i1 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        if $r2 == null goto label2;

        $i2 = $r2.<android.graphics.Paint: int mNativePaint>;

     label1:
        $i0 = staticinvoke <android.graphics.Canvas: int native_saveLayer(int,android.graphics.RectF,int,int)>($i1, $r1, $i2, $i0);

        return $i0;

     label2:
        $i2 = 0;

        goto label1;
    }

    public int saveLayerAlpha(float, float, float, float, int, int)
    {
        android.graphics.Canvas $r0;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $i2 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = staticinvoke <android.graphics.Canvas: int native_saveLayerAlpha(int,float,float,float,float,int,int)>($i2, $f0, $f1, $f2, $f3, $i0, $i1);

        return $i0;
    }

    public int saveLayerAlpha(android.graphics.RectF, int, int)
    {
        android.graphics.Canvas $r0;
        android.graphics.RectF $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.RectF;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(255, $i1);

        $i2 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = staticinvoke <android.graphics.Canvas: int native_saveLayerAlpha(int,android.graphics.RectF,int,int)>($i2, $r1, $i1, $i0);

        return $i1;
    }

    public native void scale(float, float);

    public final void scale(float, float, float, float)
    {
        android.graphics.Canvas $r0;
        float $f0, $f1, $f2, $f3;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        virtualinvoke $r0.<android.graphics.Canvas: void translate(float,float)>($f2, $f3);

        virtualinvoke $r0.<android.graphics.Canvas: void scale(float,float)>($f0, $f1);

        $f0 = neg $f2;

        $f1 = neg $f3;

        virtualinvoke $r0.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        return;
    }

    public void setBitmap(android.graphics.Bitmap)
    {
        android.graphics.Canvas $r0;
        android.graphics.Bitmap $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        javax.microedition.khronos.opengles.GL $r3;
        java.lang.RuntimeException $r4;
        int $i0, $i1;
        float $f0;
        byte $b2;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Bitmap;

        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean isMutable()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        $r3 = $r0.<android.graphics.Canvas: javax.microedition.khronos.opengles.GL mGL>;

        if $r3 == null goto label2;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t set a bitmap device on a GL canvas");

        throw $r4;

     label2:
        staticinvoke <android.graphics.Canvas: void throwIfRecycled(android.graphics.Bitmap)>($r1);

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int ni()>();

        staticinvoke <android.graphics.Canvas: void native_setBitmap(int,int)>($i0, $i1);

        $r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap> = $r1;

        $f0 = virtualinvoke $r1.<android.graphics.Bitmap: float getDensityScale()>();

        $r0.<android.graphics.Canvas: float mDensityScale> = $f0;

        $f0 = $r0.<android.graphics.Canvas: float mDensityScale>;

        $b2 = $f0 cmpl -1.0F;

        if $b2 != 0 goto label3;

        $r0.<android.graphics.Canvas: float mDensityScale> = 1.0F;

        return;

     label3:
        return;
    }

    public void setDensityScale(float)
    {
        android.graphics.Canvas $r0;
        float $f0;
        android.graphics.Bitmap $r1;
        byte $b0;

        $r0 := @this: android.graphics.Canvas;

        $f0 := @parameter0: float;

        $r1 = $r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r1.<android.graphics.Bitmap: void setDensityScale(float)>($f0);

     label1:
        $r0.<android.graphics.Canvas: float mDensityScale> = $f0;

        $f0 = $r0.<android.graphics.Canvas: float mDensityScale>;

        $b0 = $f0 cmpl -1.0F;

        if $b0 != 0 goto label2;

        $r0.<android.graphics.Canvas: float mDensityScale> = 1.0F;

        return;

     label2:
        return;
    }

    public void setDrawFilter(android.graphics.DrawFilter)
    {
        android.graphics.Canvas $r0;
        android.graphics.DrawFilter $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.DrawFilter;

        $i1 = 0;

        if $r1 == null goto label1;

        $i1 = $r1.<android.graphics.DrawFilter: int mNativeInt>;

     label1:
        $r0.<android.graphics.Canvas: android.graphics.DrawFilter mDrawFilter> = $r1;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void nativeSetDrawFilter(int,int)>($i0, $i1);

        return;
    }

    public void setMatrix(android.graphics.Matrix)
    {
        android.graphics.Canvas $r0;
        android.graphics.Matrix $r1;
        int $i0, $i1;

        $r0 := @this: android.graphics.Canvas;

        $r1 := @parameter0: android.graphics.Matrix;

        $i0 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        if $r1 != null goto label2;

        $i1 = 0;

     label1:
        staticinvoke <android.graphics.Canvas: void native_setMatrix(int,int)>($i0, $i1);

        return;

     label2:
        $i1 = $r1.<android.graphics.Matrix: int native_instance>;

        goto label1;
    }

    public void setViewport(int, int)
    {
        android.graphics.Canvas $r0;
        int $i0, $i1, $i2;
        javax.microedition.khronos.opengles.GL $r1;

        $r0 := @this: android.graphics.Canvas;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.graphics.Canvas: javax.microedition.khronos.opengles.GL mGL>;

        if $r1 == null goto label1;

        $i2 = $r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void nativeSetViewport(int,int,int)>($i2, $i0, $i1);

        return;

     label1:
        return;
    }

    public native void skew(float, float);

    public native void translate(float, float);

    public static void <clinit>()
    {
        <android.graphics.Canvas: int MATRIX_SAVE_FLAG> = 1;

        <android.graphics.Canvas: int HAS_ALPHA_LAYER_SAVE_FLAG> = 4;

        <android.graphics.Canvas: int FULL_COLOR_LAYER_SAVE_FLAG> = 8;

        <android.graphics.Canvas: int CLIP_TO_LAYER_SAVE_FLAG> = 16;

        <android.graphics.Canvas: int CLIP_SAVE_FLAG> = 2;

        <android.graphics.Canvas: int ALL_SAVE_FLAG> = 31;

        return;
    }
}
