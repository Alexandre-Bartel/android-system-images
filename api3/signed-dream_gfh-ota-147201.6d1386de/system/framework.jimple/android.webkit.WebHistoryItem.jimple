public class android.webkit.WebHistoryItem extends java.lang.Object implements java.lang.Cloneable
{
    private static int sNextId;
    private android.graphics.Bitmap mFavicon;
    private byte[] mFlattenedData;
    private final int mId;
    private java.lang.String mOriginalUrl;
    private java.lang.String mTitle;
    private java.lang.String mUrl;

    static void <clinit>()
    {
        <android.webkit.WebHistoryItem: int sNextId> = 0;

        return;
    }

    private void <init>()
    {
        android.webkit.WebHistoryItem $r0;
        int $i0, $i1;
        java.lang.Throwable $r1;

        $r0 := @this: android.webkit.WebHistoryItem;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        entermonitor class "android/webkit/WebHistoryItem";

     label1:
        $i1 = <android.webkit.WebHistoryItem: int sNextId>;

        $i0 = $i1 + 1;

        <android.webkit.WebHistoryItem: int sNextId> = $i0;

        $r0.<android.webkit.WebHistoryItem: int mId> = $i1;

        exitmonitor class "android/webkit/WebHistoryItem";

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor class "android/webkit/WebHistoryItem";

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void <init>(android.webkit.WebHistoryItem)
    {
        android.webkit.WebHistoryItem $r0, $r1;
        java.lang.String $r2;
        byte[] $r3;
        android.graphics.Bitmap $r4;
        int $i0;

        $r0 := @this: android.webkit.WebHistoryItem;

        $r1 := @parameter0: android.webkit.WebHistoryItem;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<android.webkit.WebHistoryItem: java.lang.String mUrl>;

        $r0.<android.webkit.WebHistoryItem: java.lang.String mUrl> = $r2;

        $r2 = $r1.<android.webkit.WebHistoryItem: java.lang.String mTitle>;

        $r0.<android.webkit.WebHistoryItem: java.lang.String mTitle> = $r2;

        $r3 = $r1.<android.webkit.WebHistoryItem: byte[] mFlattenedData>;

        $r0.<android.webkit.WebHistoryItem: byte[] mFlattenedData> = $r3;

        $r4 = $r1.<android.webkit.WebHistoryItem: android.graphics.Bitmap mFavicon>;

        $r0.<android.webkit.WebHistoryItem: android.graphics.Bitmap mFavicon> = $r4;

        $i0 = $r1.<android.webkit.WebHistoryItem: int mId>;

        $r0.<android.webkit.WebHistoryItem: int mId> = $i0;

        return;
    }

    void <init>(byte[])
    {
        android.webkit.WebHistoryItem $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Throwable $r2;

        $r0 := @this: android.webkit.WebHistoryItem;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.webkit.WebHistoryItem: java.lang.String mUrl> = null;

        $r0.<android.webkit.WebHistoryItem: byte[] mFlattenedData> = $r1;

        entermonitor class "android/webkit/WebHistoryItem";

     label1:
        $i1 = <android.webkit.WebHistoryItem: int sNextId>;

        $i0 = $i1 + 1;

        <android.webkit.WebHistoryItem: int sNextId> = $i0;

        $r0.<android.webkit.WebHistoryItem: int mId> = $i1;

        exitmonitor class "android/webkit/WebHistoryItem";

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "android/webkit/WebHistoryItem";

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private native void inflate(int, byte[]);

    private void update(java.lang.String, java.lang.String, java.lang.String, android.graphics.Bitmap, byte[])
    {
        android.webkit.WebHistoryItem $r0;
        java.lang.String $r1, $r2, $r3;
        android.graphics.Bitmap $r4;
        byte[] $r5;

        $r0 := @this: android.webkit.WebHistoryItem;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: android.graphics.Bitmap;

        $r5 := @parameter4: byte[];

        $r0.<android.webkit.WebHistoryItem: java.lang.String mUrl> = $r1;

        $r0.<android.webkit.WebHistoryItem: java.lang.String mOriginalUrl> = $r2;

        $r0.<android.webkit.WebHistoryItem: java.lang.String mTitle> = $r3;

        $r0.<android.webkit.WebHistoryItem: android.graphics.Bitmap mFavicon> = $r4;

        $r0.<android.webkit.WebHistoryItem: byte[] mFlattenedData> = $r5;

        return;
    }

    protected android.webkit.WebHistoryItem clone()
    {
        android.webkit.WebHistoryItem $r0, $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.webkit.WebHistoryItem;

        entermonitor $r0;

     label1:
        $r1 = new android.webkit.WebHistoryItem;

        specialinvoke $r1.<android.webkit.WebHistoryItem: void <init>(android.webkit.WebHistoryItem)>($r0);

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.webkit.WebHistoryItem $r0;

        $r0 := @this: android.webkit.WebHistoryItem;

        $r0 = virtualinvoke $r0.<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>();

        return $r0;
    }

    public android.graphics.Bitmap getFavicon()
    {
        android.webkit.WebHistoryItem $r0;
        android.graphics.Bitmap r1;

        $r0 := @this: android.webkit.WebHistoryItem;

        r1 = $r0.<android.webkit.WebHistoryItem: android.graphics.Bitmap mFavicon>;

        return r1;
    }

    byte[] getFlattenedData()
    {
        android.webkit.WebHistoryItem $r0;
        byte[] r1;

        $r0 := @this: android.webkit.WebHistoryItem;

        r1 = $r0.<android.webkit.WebHistoryItem: byte[] mFlattenedData>;

        return r1;
    }

    public int getId()
    {
        android.webkit.WebHistoryItem $r0;
        int i0;

        $r0 := @this: android.webkit.WebHistoryItem;

        i0 = $r0.<android.webkit.WebHistoryItem: int mId>;

        return i0;
    }

    public java.lang.String getOriginalUrl()
    {
        android.webkit.WebHistoryItem $r0;
        java.lang.String r1;

        $r0 := @this: android.webkit.WebHistoryItem;

        r1 = $r0.<android.webkit.WebHistoryItem: java.lang.String mOriginalUrl>;

        return r1;
    }

    public java.lang.String getTitle()
    {
        android.webkit.WebHistoryItem $r0;
        java.lang.String r1;

        $r0 := @this: android.webkit.WebHistoryItem;

        r1 = $r0.<android.webkit.WebHistoryItem: java.lang.String mTitle>;

        return r1;
    }

    public java.lang.String getUrl()
    {
        android.webkit.WebHistoryItem $r0;
        java.lang.String r1;

        $r0 := @this: android.webkit.WebHistoryItem;

        r1 = $r0.<android.webkit.WebHistoryItem: java.lang.String mUrl>;

        return r1;
    }

    void inflate(int)
    {
        android.webkit.WebHistoryItem $r0;
        int $i0;
        byte[] $r1;

        $r0 := @this: android.webkit.WebHistoryItem;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.webkit.WebHistoryItem: byte[] mFlattenedData>;

        specialinvoke $r0.<android.webkit.WebHistoryItem: void inflate(int,byte[])>($i0, $r1);

        return;
    }

    void setFavicon(android.graphics.Bitmap)
    {
        android.webkit.WebHistoryItem $r0;
        android.graphics.Bitmap $r1;

        $r0 := @this: android.webkit.WebHistoryItem;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r0.<android.webkit.WebHistoryItem: android.graphics.Bitmap mFavicon> = $r1;

        return;
    }
}
