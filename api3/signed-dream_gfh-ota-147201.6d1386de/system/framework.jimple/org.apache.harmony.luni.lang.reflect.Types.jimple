public class org.apache.harmony.luni.lang.reflect.Types extends java.lang.Object
{

    public void <init>()
    {
        org.apache.harmony.luni.lang.reflect.Types $r0;

        $r0 := @this: org.apache.harmony.luni.lang.reflect.Types;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.reflect.Type[] getClonedTypeArray(org.apache.harmony.luni.lang.reflect.ListOfTypes)
    {
        org.apache.harmony.luni.lang.reflect.ListOfTypes $r0;
        java.lang.reflect.Type[] $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: org.apache.harmony.luni.lang.reflect.ListOfTypes;

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.lang.reflect.ListOfTypes: java.lang.reflect.Type[] getResolvedTypes()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (java.lang.reflect.Type[]) $r2;

        return $r1;
    }

    public static java.lang.reflect.Type getType(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;
        boolean $z0;
        org.apache.harmony.luni.lang.reflect.ImplForType $r1;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof org.apache.harmony.luni.lang.reflect.ImplForType;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.harmony.luni.lang.reflect.ImplForType) $r0;

        $r0 = virtualinvoke $r1.<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type getResolvedType()>();

        return $r0;

     label1:
        return $r0;
    }
}
