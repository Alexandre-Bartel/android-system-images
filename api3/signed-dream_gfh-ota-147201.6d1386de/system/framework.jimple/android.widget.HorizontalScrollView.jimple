public class android.widget.HorizontalScrollView extends android.widget.FrameLayout
{
    private static final int ANIMATED_SCROLL_GAP;
    private static final float MAX_SCROLL_FACTOR;
    private android.view.View mChildToScrollTo;
    private boolean mFillViewport;
    private boolean mIsBeingDragged;
    private boolean mIsLayoutDirty;
    private float mLastMotionX;
    private long mLastScroll;
    private boolean mScrollViewMovedFocus;
    private android.widget.Scroller mScroller;
    private boolean mSmoothScrollingEnabled;
    private final android.graphics.Rect mTempRect;
    private int mTouchSlop;
    private android.view.VelocityTracker mVelocityTracker;

    public void <init>(android.content.Context)
    {
        android.widget.HorizontalScrollView $r0;
        android.content.Context $r1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.HorizontalScrollView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 16843367);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.HorizontalScrollView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.Rect $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        boolean $z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect> = $r3;

        $r0.<android.widget.HorizontalScrollView: boolean mIsLayoutDirty> = 1;

        $r0.<android.widget.HorizontalScrollView: android.view.View mChildToScrollTo> = null;

        $r0.<android.widget.HorizontalScrollView: boolean mIsBeingDragged> = 0;

        $r0.<android.widget.HorizontalScrollView: boolean mSmoothScrollingEnabled> = 1;

        specialinvoke $r0.<android.widget.HorizontalScrollView: void initScrollView()>();

        $r4 = <android.R$styleable: int[] HorizontalScrollView>;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r4, $i0, 0);

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke $r0.<android.widget.HorizontalScrollView: void setFillViewport(boolean)>($z0);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private boolean canScroll()
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2;
        android.view.View $r1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i2 = $r0.<android.view.View: int mPaddingLeft>;

        $i2 = $i2 + $i0;

        $i0 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i2 + $i0;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 0;
    }

    private int clamp(int, int, int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i1 >= $i2 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        return 0;

     label2:
        $i3 = $i1 + $i0;

        if $i3 <= $i2 goto label3;

        $i0 = $i2 - $i1;

        return $i0;

     label3:
        return $i0;
    }

    private void doScrollX(int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        $z0 = $r0.<android.widget.HorizontalScrollView: boolean mSmoothScrollingEnabled>;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.widget.HorizontalScrollView: void smoothScrollBy(int,int)>($i0, 0);

        return;

     label1:
        virtualinvoke $r0.<android.view.View: void scrollBy(int,int)>($i0, 0);

        return;

     label2:
        return;
    }

    private android.view.View findFocusableViewInBounds(boolean, int, int)
    {
        android.widget.HorizontalScrollView $r0;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.ArrayList $r1;
        android.view.View $r2, $r4;
        java.lang.Object $r3;

        $r0 := @this: android.widget.HorizontalScrollView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = virtualinvoke $r0.<android.view.View: java.util.ArrayList getFocusables(int)>(2);

        $r2 = null;

        $z1 = 0;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i3 = 0;

     label01:
        if $i3 >= $i2 goto label12;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i3);

        $r4 = (android.view.View) $r3;

        $i4 = virtualinvoke $r4.<android.view.View: int getLeft()>();

        $i5 = virtualinvoke $r4.<android.view.View: int getRight()>();

        if $i0 >= $i5 goto label03;

        if $i4 >= $i1 goto label03;

        if $i0 >= $i4 goto label04;

        if $i5 >= $i1 goto label04;

        $z2 = 1;

     label02:
        if $r2 != null goto label05;

        $r2 = $r4;

        $z1 = $z2;

     label03:
        $i3 = $i3 + 1;

        goto label01;

     label04:
        $z2 = 0;

        goto label02;

     label05:
        if $z0 == 0 goto label06;

        $i6 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        if $i4 < $i6 goto label07;

     label06:
        if $z0 != 0 goto label09;

        $i4 = virtualinvoke $r2.<android.view.View: int getRight()>();

        if $i5 <= $i4 goto label09;

     label07:
        $z3 = 1;

     label08:
        if $z1 == 0 goto label10;

        if $z2 == 0 goto label03;

        if $z3 == 0 goto label03;

        $r2 = $r4;

        goto label03;

     label09:
        $z3 = 0;

        goto label08;

     label10:
        if $z2 == 0 goto label11;

        $r2 = $r4;

        $z1 = 1;

        goto label03;

     label11:
        if $z3 == 0 goto label03;

        $r2 = $r4;

        goto label03;

     label12:
        return $r2;
    }

    private android.view.View findFocusableViewInMyBounds(boolean, int, android.view.View)
    {
        android.widget.HorizontalScrollView $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.view.View;

        $i2 = virtualinvoke $r0.<android.view.View: int getHorizontalFadingEdgeLength()>();

        $i1 = $i2 / 2;

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i0 = $i3 + $i0;

        $i0 = $i0 - $i1;

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        if $i1 >= $i0 goto label1;

        $i1 = virtualinvoke $r1.<android.view.View: int getRight()>();

        if $i1 <= $i2 goto label1;

        return $r1;

     label1:
        $r1 = specialinvoke $r0.<android.widget.HorizontalScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)>($z0, $i2, $i0);

        return $r1;
    }

    private void initScrollView()
    {
        android.widget.HorizontalScrollView $r0;
        android.widget.Scroller $r1;
        android.content.Context $r2;
        android.view.ViewConfiguration $r3;
        int $i0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 = new android.widget.Scroller;

        $r2 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r1.<android.widget.Scroller: void <init>(android.content.Context)>($r2);

        $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller> = $r1;

        virtualinvoke $r0.<android.view.View: void setFocusable(boolean)>(1);

        virtualinvoke $r0.<android.view.ViewGroup: void setDescendantFocusability(int)>(262144);

        virtualinvoke $r0.<android.view.View: void setWillNotDraw(boolean)>(0);

        $r2 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke $r3.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $r0.<android.widget.HorizontalScrollView: int mTouchSlop> = $i0;

        return;
    }

    private boolean isOffScreen(android.view.View)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        boolean $z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean isWithinDeltaOfScreen(android.view.View,int)>($r1, 0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isViewDescendantOf(android.view.View, android.view.View)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1, $r2;
        android.view.ViewParent $r3;
        boolean $z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r3 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r1 = (android.view.View) $r3;

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r1, $r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean isWithinDeltaOfScreen(android.view.View, int)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        android.graphics.Rect $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $i1 = $i1 + $i0;

        $i2 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

        if $i1 < $i2 goto label1;

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i0 = $i1 - $i0;

        $i1 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

        $i2 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i1 = $i1 + $i2;

        if $i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean scrollAndFocus(int, int, int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        android.view.View $r1, $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 = 1;

        $i3 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i4 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

        $i3 = $i4 + $i3;

        if $i0 != 17 goto label4;

        $z1 = 1;

     label1:
        $r1 = specialinvoke $r0.<android.widget.HorizontalScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)>($z1, $i1, $i2);

        $r2 = $r1;

        if $r1 != null goto label2;

        $r2 = $r0;

     label2:
        if $i1 < $i4 goto label5;

        if $i2 > $i3 goto label5;

        $z0 = 0;

     label3:
        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View findFocus()>();

        if $r2 == $r1 goto label8;

        $z1 = virtualinvoke $r2.<android.view.View: boolean requestFocus(int)>($i0);

        if $z1 == 0 goto label9;

        $r0.<android.widget.HorizontalScrollView: boolean mScrollViewMovedFocus> = 1;

        $r0.<android.widget.HorizontalScrollView: boolean mScrollViewMovedFocus> = 0;

        return $z0;

     label4:
        $z1 = 0;

        goto label1;

     label5:
        if $z1 == 0 goto label7;

        $i1 = $i1 - $i4;

     label6:
        specialinvoke $r0.<android.widget.HorizontalScrollView: void doScrollX(int)>($i1);

        goto label3;

     label7:
        $i1 = $i2 - $i3;

        goto label6;

     label8:
        return $z0;

     label9:
        return $z0;
    }

    private void scrollToChild(android.view.View)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        int $i0;
        android.graphics.Rect $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i0 = virtualinvoke $r0.<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r2);

        if $i0 == 0 goto label1;

        virtualinvoke $r0.<android.view.View: void scrollBy(int,int)>($i0, 0);

        return;

     label1:
        return;
    }

    private boolean scrollToChildRect(android.graphics.Rect, boolean)
    {
        android.widget.HorizontalScrollView $r0;
        android.graphics.Rect $r1;
        boolean $z0, $z1;
        int $i0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.graphics.Rect;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke $r0.<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r1);

        if $i0 == 0 goto label2;

        $z1 = 1;

     label1:
        if $z1 == 0 goto label4;

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<android.view.View: void scrollBy(int,int)>($i0, 0);

        return $z1;

     label2:
        $z1 = 0;

        goto label1;

     label3:
        virtualinvoke $r0.<android.widget.HorizontalScrollView: void smoothScrollBy(int,int)>($i0, 0);

        return $z1;

     label4:
        return $z1;
    }

    public void addView(android.view.View)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        int $i0;
        java.lang.IllegalStateException $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("HorizontalScrollView can host only one direct child");

        throw $r2;

     label1:
        specialinvoke $r0.<android.view.ViewGroup: void addView(android.view.View)>($r1);

        return;
    }

    public void addView(android.view.View, int)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        int $i0, $i1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("HorizontalScrollView can host only one direct child");

        throw $r2;

     label1:
        specialinvoke $r0.<android.view.ViewGroup: void addView(android.view.View,int)>($r1, $i0);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("HorizontalScrollView can host only one direct child");

        throw $r3;

     label1:
        specialinvoke $r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("HorizontalScrollView can host only one direct child");

        throw $r3;

     label1:
        specialinvoke $r0.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);

        return;
    }

    public boolean arrowScroll(int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1, $r2;
        android.view.FocusFinder $r3;
        boolean $z0;
        android.graphics.Rect $r4;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View findFocus()>();

        $r2 = $r1;

        if $r1 != $r0 goto label1;

        $r2 = null;

     label1:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r1 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, $r2, $i0);

        $i2 = virtualinvoke $r0.<android.widget.HorizontalScrollView: int getMaxScrollAmount()>();

        if $r1 == null goto label4;

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean isWithinDeltaOfScreen(android.view.View,int)>($r1, $i2);

        if $z0 == 0 goto label4;

        $r4 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r4);

        $r4 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r4);

        $r4 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r0.<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r4);

        specialinvoke $r0.<android.widget.HorizontalScrollView: void doScrollX(int)>($i2);

        virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>($i0);

     label2:
        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label3;

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean isOffScreen(android.view.View)>($r2);

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getDescendantFocusability()>();

        virtualinvoke $r0.<android.view.ViewGroup: void setDescendantFocusability(int)>(131072);

        virtualinvoke $r0.<android.view.View: boolean requestFocus()>();

        virtualinvoke $r0.<android.view.ViewGroup: void setDescendantFocusability(int)>($i0);

     label3:
        return 1;

     label4:
        $i3 = $i2;

        if $i0 != 17 goto label6;

        $i4 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

        if $i4 >= $i2 goto label6;

        $i3 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

     label5:
        if $i3 != 0 goto label7;

        return 0;

     label6:
        if $i0 != 66 goto label5;

        $i4 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i4 = $i4 - 1;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

        $i4 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i1 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

        $i5 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i1 = $i1 + $i5;

        $i5 = $i4 - $i1;

        if $i5 >= $i2 goto label5;

        $i3 = $i4 - $i1;

        goto label5;

     label7:
        if $i0 != 66 goto label9;

        $i0 = $i3;

     label8:
        specialinvoke $r0.<android.widget.HorizontalScrollView: void doScrollX(int)>($i0);

        goto label2;

     label9:
        $i0 = neg $i3;

        goto label8;
    }

    protected int computeHorizontalScrollRange()
    {
        android.widget.HorizontalScrollView $r0;
        int $i0;
        android.view.View $r1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 != 0 goto label1;

        $i0 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        return $i0;

     label1:
        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r1.<android.view.View: int getRight()>();

        return $i0;
    }

    public void computeScroll()
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.Scroller $r1;
        boolean $z0;
        android.view.View $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label5;

        $i0 = $r0.<android.view.View: int mScrollX>;

        $i1 = $r0.<android.view.View: int mScrollY>;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        $i2 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r1 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        $i3 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        $i4 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i4 <= 0 goto label4;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i4 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i5 = $r0.<android.view.View: int mPaddingRight>;

        $i4 = $i4 - $i5;

        $i5 = $r0.<android.view.View: int mPaddingLeft>;

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i2 = specialinvoke $r0.<android.widget.HorizontalScrollView: int clamp(int,int,int)>($i2, $i4, $i5);

        $r0.<android.view.View: int mScrollX> = $i2;

        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i4 = $r0.<android.view.View: int mPaddingBottom>;

        $i2 = $i2 - $i4;

        $i4 = $r0.<android.view.View: int mPaddingTop>;

        $i2 = $i2 - $i4;

        $i4 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $i3 = specialinvoke $r0.<android.widget.HorizontalScrollView: int clamp(int,int,int)>($i3, $i2, $i4);

        $r0.<android.view.View: int mScrollY> = $i3;

     label1:
        $i3 = $r0.<android.view.View: int mScrollX>;

        if $i0 != $i3 goto label2;

        $i3 = $r0.<android.view.View: int mScrollY>;

        if $i1 == $i3 goto label3;

     label2:
        $i3 = $r0.<android.view.View: int mScrollX>;

        $i2 = $r0.<android.view.View: int mScrollY>;

        virtualinvoke $r0.<android.view.View: void onScrollChanged(int,int,int,int)>($i3, $i2, $i0, $i1);

     label3:
        virtualinvoke $r0.<android.view.View: void postInvalidate()>();

        return;

     label4:
        $r0.<android.view.View: int mScrollX> = $i2;

        $r0.<android.view.View: int mScrollY> = $i3;

        goto label1;

     label5:
        return;
    }

    protected int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
    {
        android.widget.HorizontalScrollView $r0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.graphics.Rect;

        $i1 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

        $i3 = $i2;

        $i0 = $i2 + $i1;

        $i4 = virtualinvoke $r0.<android.view.View: int getHorizontalFadingEdgeLength()>();

        $i5 = $r1.<android.graphics.Rect: int left>;

        if $i5 <= 0 goto label1;

        $i3 = $i2 + $i4;

     label1:
        $i2 = $r1.<android.graphics.Rect: int right>;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i5 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        if $i2 >= $i5 goto label2;

        $i0 = $i0 - $i4;

     label2:
        $i4 = $r1.<android.graphics.Rect: int right>;

        if $i4 <= $i0 goto label5;

        $i4 = $r1.<android.graphics.Rect: int left>;

        if $i4 <= $i3 goto label5;

        $i4 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        if $i4 <= $i1 goto label4;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i3 = $i1 - $i3;

        $i3 = 0 + $i3;

     label3:
        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i1 = $i1 - 1;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $i1 = virtualinvoke $r2.<android.view.View: int getRight()>();

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i0);

        return $i0;

     label4:
        $i3 = $r1.<android.graphics.Rect: int right>;

        $i3 = $i3 - $i0;

        $i3 = 0 + $i3;

        goto label3;

     label5:
        $i4 = $r1.<android.graphics.Rect: int left>;

        if $i4 >= $i3 goto label8;

        $i4 = $r1.<android.graphics.Rect: int right>;

        if $i4 >= $i0 goto label9;

        $i4 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        if $i4 <= $i1 goto label7;

        $i3 = $r1.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i3;

        $i0 = 0 - $i0;

     label6:
        $i3 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

        $i3 = neg $i3;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i3);

        return $i0;

     label7:
        $i0 = $r1.<android.graphics.Rect: int left>;

        $i0 = $i3 - $i0;

        $i0 = 0 - $i0;

        goto label6;

     label8:
        return 0;

     label9:
        return 0;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke $r0.<android.widget.HorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.KeyEvent $r1;
        android.graphics.Rect $r2;
        boolean $z0, $z1;
        android.view.View $r3, $r4;
        android.view.FocusFinder $r5;
        int $i0;
        byte $b1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean canScroll()>();

        if $z0 != 0 goto label04;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label03;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View findFocus()>();

        $r4 = $r3;

        if $r3 != $r0 goto label01;

        $r4 = null;

     label01:
        $r5 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r3 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, $r4, 66);

        if $r3 == null goto label02;

        if $r3 == $r0 goto label02;

        $z0 = virtualinvoke $r3.<android.view.View: boolean requestFocus(int)>(66);

        if $z0 == 0 goto label02;

        return 1;

     label02:
        return 0;

     label03:
        return 0;

     label04:
        $z0 = 0;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label05;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch($i0)
        {
            case 21: goto label06;
            case 22: goto label08;
            case 62: goto label10;
            default: goto label05;
        };

     label05:
        return $z0;

     label06:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke $r0.<android.widget.HorizontalScrollView: boolean arrowScroll(int)>(17);

        goto label05;

     label07:
        $z0 = virtualinvoke $r0.<android.widget.HorizontalScrollView: boolean fullScroll(int)>(17);

        goto label05;

     label08:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label09;

        $z0 = virtualinvoke $r0.<android.widget.HorizontalScrollView: boolean arrowScroll(int)>(66);

        goto label05;

     label09:
        $z0 = virtualinvoke $r0.<android.widget.HorizontalScrollView: boolean fullScroll(int)>(66);

        goto label05;

     label10:
        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $z1 == 0 goto label12;

        $b1 = 17;

     label11:
        virtualinvoke $r0.<android.widget.HorizontalScrollView: boolean pageScroll(int)>($b1);

        goto label05;

     label12:
        $b1 = 66;

        goto label11;
    }

    public void fling(int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1, $r3;
        android.widget.Scroller $r2;
        boolean $z0;
        byte $b5;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i3 = $r0.<android.view.View: int mPaddingRight>;

        $i1 = $i1 - $i3;

        $i3 = $r0.<android.view.View: int mPaddingLeft>;

        $i2 = $i1 - $i3;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i4 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $r2 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        $i3 = $r0.<android.view.View: int mScrollX>;

        $i1 = $r0.<android.view.View: int mScrollY>;

        $i2 = $i4 - $i2;

        virtualinvoke $r2.<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>($i3, $i1, $i0, 0, 0, $i2, 0, 0);

        if $i0 <= 0 goto label5;

        $z0 = 1;

     label1:
        $r2 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r2.<android.widget.Scroller: int getFinalX()>();

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View findFocus()>();

        $r3 = specialinvoke $r0.<android.widget.HorizontalScrollView: android.view.View findFocusableViewInMyBounds(boolean,int,android.view.View)>($z0, $i0, $r1);

        $r1 = $r3;

        if $r3 != null goto label2;

        $r1 = $r0;

     label2:
        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View findFocus()>();

        if $r1 == $r3 goto label4;

        if $z0 == 0 goto label6;

        $b5 = 66;

     label3:
        $z0 = virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>($b5);

        if $z0 == 0 goto label4;

        $r0.<android.widget.HorizontalScrollView: boolean mScrollViewMovedFocus> = 1;

        $r0.<android.widget.HorizontalScrollView: boolean mScrollViewMovedFocus> = 0;

     label4:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label5:
        $z0 = 0;

        goto label1;

     label6:
        $b5 = 17;

        goto label3;
    }

    public boolean fullScroll(int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        android.graphics.Rect $r1, $r3;
        android.view.View $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        if $i0 != 66 goto label3;

        $z0 = 1;

     label1:
        $i1 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int left> = 0;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int right> = $i1;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i2 <= 0 goto label2;

        $i2 = $i2 - 1;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r2.<android.view.View: int getRight()>();

        $r1.<android.graphics.Rect: int right> = $i2;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $r3 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r3.<android.graphics.Rect: int right>;

        $i1 = $i2 - $i1;

        $r1.<android.graphics.Rect: int left> = $i1;

     label2:
        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r1.<android.graphics.Rect: int right>;

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean scrollAndFocus(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label3:
        $z0 = 0;

        goto label1;
    }

    protected float getLeftFadingEdgeStrength()
    {
        android.widget.HorizontalScrollView $r0;
        float $f0, $f1;
        int $i0, $i1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0.0F;

     label1:
        $i0 = virtualinvoke $r0.<android.view.View: int getHorizontalFadingEdgeLength()>();

        $i1 = $r0.<android.view.View: int mScrollX>;

        if $i1 >= $i0 goto label2;

        $i1 = $r0.<android.view.View: int mScrollX>;

        $f1 = (float) $i1;

        $f0 = (float) $i0;

        $f0 = $f1 / $f0;

        return $f0;

     label2:
        return 1.0F;
    }

    public int getMaxScrollAmount()
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1;
        float $f0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i1 = $r0.<android.view.View: int mRight>;

        $i0 = $r0.<android.view.View: int mLeft>;

        $i0 = $i1 - $i0;

        $f0 = (float) $i0;

        $f0 = 0.5F * $f0;

        $i0 = (int) $f0;

        return $i0;
    }

    protected float getRightFadingEdgeStrength()
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.view.View $r1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i1 != 0 goto label1;

        return 0.0F;

     label1:
        $i1 = virtualinvoke $r0.<android.view.View: int getHorizontalFadingEdgeLength()>();

        $i0 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i2 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 - $i2;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i3 = $r0.<android.view.View: int mScrollX>;

        $i2 = $i2 - $i3;

        $i0 = $i2 - $i0;

        if $i0 >= $i1 goto label2;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        return $f0;

     label2:
        return 1.0F;
    }

    public boolean isFillViewport()
    {
        android.widget.HorizontalScrollView $r0;
        boolean z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        z0 = $r0.<android.widget.HorizontalScrollView: boolean mFillViewport>;

        return z0;
    }

    public boolean isSmoothScrollingEnabled()
    {
        android.widget.HorizontalScrollView $r0;
        boolean z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        z0 = $r0.<android.widget.HorizontalScrollView: boolean mSmoothScrollingEnabled>;

        return z0;
    }

    protected void measureChild(android.view.View, int, int)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r0.<android.view.View: int mPaddingTop>;

        $i2 = $r0.<android.view.View: int mPaddingBottom>;

        $i0 = $i0 + $i2;

        $i2 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        $i0 = staticinvoke <android.widget.HorizontalScrollView: int getChildMeasureSpec(int,int,int)>($i1, $i0, $i2);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i1, $i0);

        return;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i0 = $r0.<android.view.View: int mPaddingTop>;

        $i1 = $r0.<android.view.View: int mPaddingBottom>;

        $i0 = $i0 + $i1;

        $i1 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i0 = $i0 + $i1;

        $i1 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i0 = $i0 + $i1;

        $i0 = $i0 + $i3;

        $i1 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        $i0 = staticinvoke <android.widget.HorizontalScrollView: int getChildMeasureSpec(int,int,int)>($i2, $i0, $i1);

        $i1 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i1 = $i1 + $i2;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 0);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i1, $i0);

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1;
        boolean $z0;
        float $f0, $f1;
        android.view.ViewParent $r2;
        android.widget.Scroller $r3;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 2 goto label1;

        $z0 = $r0.<android.widget.HorizontalScrollView: boolean mIsBeingDragged>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean canScroll()>();

        if $z0 != 0 goto label2;

        $r0.<android.widget.HorizontalScrollView: boolean mIsBeingDragged> = 0;

        return 0;

     label2:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label8;
            case 2: goto label4;
            case 3: goto label8;
            default: goto label3;
        };

     label3:
        $z0 = $r0.<android.widget.HorizontalScrollView: boolean mIsBeingDragged>;

        return $z0;

     label4:
        $f1 = $r0.<android.widget.HorizontalScrollView: float mLastMotionX>;

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $i0 = (int) $f0;

        $i1 = $r0.<android.widget.HorizontalScrollView: int mTouchSlop>;

        if $i0 <= $i1 goto label3;

        $r0.<android.widget.HorizontalScrollView: boolean mIsBeingDragged> = 1;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label3;

        $r2 = $r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        goto label3;

     label5:
        $r0.<android.widget.HorizontalScrollView: float mLastMotionX> = $f0;

        $r3 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r3.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label7;

        $z0 = 1;

     label6:
        $r0.<android.widget.HorizontalScrollView: boolean mIsBeingDragged> = $z0;

        goto label3;

     label7:
        $z0 = 0;

        goto label6;

     label8:
        $r0.<android.widget.HorizontalScrollView: boolean mIsBeingDragged> = 0;

        goto label3;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.HorizontalScrollView $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke $r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $r0.<android.widget.HorizontalScrollView: boolean mIsLayoutDirty> = 0;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.view.View mChildToScrollTo>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.view.View mChildToScrollTo>;

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r1, $r0);

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.view.View mChildToScrollTo>;

        specialinvoke $r0.<android.widget.HorizontalScrollView: void scrollToChild(android.view.View)>($r1);

     label1:
        $r0.<android.widget.HorizontalScrollView: android.view.View mChildToScrollTo> = null;

        $i1 = $r0.<android.view.View: int mScrollX>;

        $i0 = $r0.<android.view.View: int mScrollY>;

        virtualinvoke $r0.<android.widget.HorizontalScrollView: void scrollTo(int,int)>($i1, $i0);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.FrameLayout$LayoutParams $r3;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.widget.FrameLayout: void onMeasure(int,int)>($i0, $i1);

        $z0 = $r0.<android.widget.HorizontalScrollView: boolean mFillViewport>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        if $i0 == 0 goto label2;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r0.<android.view.View: int getMeasuredWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        if $i2 >= $i0 goto label3;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;

        $i2 = $r0.<android.view.View: int mPaddingTop>;

        $i3 = $r0.<android.view.View: int mPaddingBottom>;

        $i2 = $i2 + $i3;

        $i3 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        $i1 = staticinvoke <android.widget.HorizontalScrollView: int getChildMeasureSpec(int,int,int)>($i1, $i2, $i3);

        $i2 = $r0.<android.view.View: int mPaddingLeft>;

        $i0 = $i0 - $i2;

        $i2 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 - $i2;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        return;

     label2:
        return;

     label3:
        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.widget.HorizontalScrollView $r0;
        android.graphics.Rect $r1;
        int $i0;
        android.view.FocusFinder $r2;
        android.view.View $r3;
        boolean $z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        if $i0 != 2 goto label3;

        $i0 = 66;

     label1:
        if $r1 != null goto label4;

        $r2 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r3 = virtualinvoke $r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, null, $i0);

     label2:
        if $r3 != null goto label5;

        return 0;

     label3:
        if $i0 != 1 goto label1;

        $i0 = 17;

        goto label1;

     label4:
        $r2 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r3 = virtualinvoke $r2.<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>($r0, $r1, $i0);

        goto label2;

     label5:
        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean isOffScreen(android.view.View)>($r3);

        if $z0 == 0 goto label6;

        return 0;

     label6:
        $z0 = virtualinvoke $r3.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);

        return $z0;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        boolean $z0;
        android.graphics.Rect $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View findFocus()>();

        if $r1 == null goto label2;

        if $r0 != $r1 goto label1;

        return;

     label1:
        $i1 = $r0.<android.view.View: int mRight>;

        $i0 = $r0.<android.view.View: int mLeft>;

        $i0 = $i1 - $i0;

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean isWithinDeltaOfScreen(android.view.View,int)>($r1, $i0);

        if $z0 == 0 goto label3;

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r0.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i0 = virtualinvoke $r0.<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r2);

        specialinvoke $r0.<android.widget.HorizontalScrollView: void doScrollX(int)>($i0);

        return;

     label2:
        return;

     label3:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3;
        android.view.VelocityTracker $r2;
        boolean $z0;
        float $f0, $f1;
        android.widget.Scroller $r3;
        android.view.View $r4;
        android.content.Context $r5;
        android.view.ViewConfiguration $r6;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i1 != 0 goto label01;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getEdgeFlags()>();

        if $i1 == 0 goto label01;

        return 0;

     label01:
        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean canScroll()>();

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r2 = $r0.<android.widget.HorizontalScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label03;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        $r0.<android.widget.HorizontalScrollView: android.view.VelocityTracker mVelocityTracker> = $r2;

     label03:
        $r2 = $r0.<android.widget.HorizontalScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        lookupswitch($i1)
        {
            case 0: goto label05;
            case 1: goto label09;
            case 2: goto label07;
            default: goto label04;
        };

     label04:
        return 1;

     label05:
        $r3 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r3.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label06;

        $r3 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        virtualinvoke $r3.<android.widget.Scroller: void abortAnimation()>();

     label06:
        $r0.<android.widget.HorizontalScrollView: float mLastMotionX> = $f0;

        goto label04;

     label07:
        $f1 = $r0.<android.widget.HorizontalScrollView: float mLastMotionX>;

        $f1 = $f1 - $f0;

        $i1 = (int) $f1;

        $r0.<android.widget.HorizontalScrollView: float mLastMotionX> = $f0;

        if $i1 >= 0 goto label08;

        $i0 = $r0.<android.view.View: int mScrollX>;

        if $i0 <= 0 goto label04;

        virtualinvoke $r0.<android.view.View: void scrollBy(int,int)>($i1, 0);

        goto label04;

     label08:
        if $i1 <= 0 goto label04;

        $i0 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i2 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 - $i2;

        $r4 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r4.<android.view.View: int getRight()>();

        $i3 = $r0.<android.view.View: int mScrollX>;

        $i2 = $i2 - $i3;

        $i0 = $i2 - $i0;

        if $i0 <= 0 goto label04;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        virtualinvoke $r0.<android.view.View: void scrollBy(int,int)>($i1, 0);

        goto label04;

     label09:
        $r2 = $r0.<android.widget.HorizontalScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $f0 = virtualinvoke $r2.<android.view.VelocityTracker: float getXVelocity()>();

        $i1 = (int) $f0;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $r5 = $r0.<android.view.View: android.content.Context mContext>;

        $r6 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r5);

        $i2 = virtualinvoke $r6.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        if $i0 <= $i2 goto label10;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label10;

        $i1 = neg $i1;

        virtualinvoke $r0.<android.widget.HorizontalScrollView: void fling(int)>($i1);

     label10:
        $r2 = $r0.<android.widget.HorizontalScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label04;

        $r2 = $r0.<android.widget.HorizontalScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

        $r0.<android.widget.HorizontalScrollView: android.view.VelocityTracker mVelocityTracker> = null;

        goto label04;
    }

    public boolean pageScroll(int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.graphics.Rect $r1, $r3;
        android.view.View $r2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        if $i0 != 66 goto label3;

        $z0 = 1;

     label1:
        $i1 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        if $z0 == 0 goto label4;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

        $i2 = $i2 + $i1;

        $r1.<android.graphics.Rect: int left> = $i2;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i2 <= 0 goto label2;

        $i2 = $i2 - 1;

        $r2 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i2);

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r1.<android.graphics.Rect: int left>;

        $i2 = $i2 + $i1;

        $i3 = virtualinvoke $r2.<android.view.View: int getRight()>();

        if $i2 <= $i3 goto label2;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r2.<android.view.View: int getRight()>();

        $i2 = $i2 - $i1;

        $r1.<android.graphics.Rect: int left> = $i2;

     label2:
        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $r3 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r3.<android.graphics.Rect: int left>;

        $i1 = $i2 + $i1;

        $r1.<android.graphics.Rect: int right> = $i1;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r1.<android.graphics.Rect: int right>;

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean scrollAndFocus(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r0.<android.view.View: int getScrollX()>();

        $i2 = $i2 - $i1;

        $r1.<android.graphics.Rect: int left> = $i2;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r1.<android.graphics.Rect: int left>;

        if $i2 >= 0 goto label2;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int left> = 0;

        goto label2;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1, $r2;
        boolean $z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $z0 = $r0.<android.widget.HorizontalScrollView: boolean mScrollViewMovedFocus>;

        if $z0 != 0 goto label1;

        $z0 = $r0.<android.widget.HorizontalScrollView: boolean mIsLayoutDirty>;

        if $z0 != 0 goto label2;

        specialinvoke $r0.<android.widget.HorizontalScrollView: void scrollToChild(android.view.View)>($r2);

     label1:
        specialinvoke $r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>($r1, $r2);

        return;

     label2:
        $r0.<android.widget.HorizontalScrollView: android.view.View mChildToScrollTo> = $r2;

        goto label1;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.widget.HorizontalScrollView $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $z0 = specialinvoke $r0.<android.widget.HorizontalScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>($r2, $z0);

        return $z0;
    }

    public void requestLayout()
    {
        android.widget.HorizontalScrollView $r0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $r0.<android.widget.HorizontalScrollView: boolean mIsLayoutDirty> = 1;

        specialinvoke $r0.<android.view.View: void requestLayout()>();

        return;
    }

    public void scrollTo(int, int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i2 <= 0 goto label2;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i3 = $r0.<android.view.View: int mPaddingRight>;

        $i2 = $i2 - $i3;

        $i3 = $r0.<android.view.View: int mPaddingLeft>;

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i0 = specialinvoke $r0.<android.widget.HorizontalScrollView: int clamp(int,int,int)>($i0, $i2, $i3);

        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i3 = $r0.<android.view.View: int mPaddingBottom>;

        $i2 = $i2 - $i3;

        $i3 = $r0.<android.view.View: int mPaddingTop>;

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = specialinvoke $r0.<android.widget.HorizontalScrollView: int clamp(int,int,int)>($i1, $i2, $i3);

        $i2 = $r0.<android.view.View: int mScrollX>;

        if $i0 != $i2 goto label1;

        $i2 = $r0.<android.view.View: int mScrollY>;

        if $i1 == $i2 goto label3;

     label1:
        specialinvoke $r0.<android.view.View: void scrollTo(int,int)>($i0, $i1);

        return;

     label2:
        return;

     label3:
        return;
    }

    public void setFillViewport(boolean)
    {
        android.widget.HorizontalScrollView $r0;
        boolean $z0, $z1;

        $r0 := @this: android.widget.HorizontalScrollView;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.widget.HorizontalScrollView: boolean mFillViewport>;

        if $z0 == $z1 goto label1;

        $r0.<android.widget.HorizontalScrollView: boolean mFillViewport> = $z0;

        virtualinvoke $r0.<android.widget.HorizontalScrollView: void requestLayout()>();

        return;

     label1:
        return;
    }

    public void setSmoothScrollingEnabled(boolean)
    {
        android.widget.HorizontalScrollView $r0;
        boolean $z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.HorizontalScrollView: boolean mSmoothScrollingEnabled> = $z0;

        return;
    }

    public final void smoothScrollBy(int, int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i3, $i6;
        long $l2, $l4;
        byte $b5;
        android.widget.Scroller $r1;
        boolean $z0;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l4 = $r0.<android.widget.HorizontalScrollView: long mLastScroll>;

        $l2 = $l2 - $l4;

        $b5 = $l2 cmp 250L;

        if $b5 <= 0 goto label2;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        $i3 = $r0.<android.view.View: int mScrollX>;

        $i6 = $r0.<android.view.View: int mScrollY>;

        virtualinvoke $r1.<android.widget.Scroller: void startScroll(int,int,int,int)>($i3, $i6, $i0, $i1);

        virtualinvoke $r0.<android.view.View: void invalidate()>();

     label1:
        $l2 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $r0.<android.widget.HorizontalScrollView: long mLastScroll> = $l2;

        return;

     label2:
        $r1 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label3;

        $r1 = $r0.<android.widget.HorizontalScrollView: android.widget.Scroller mScroller>;

        virtualinvoke $r1.<android.widget.Scroller: void abortAnimation()>();

     label3:
        virtualinvoke $r0.<android.view.View: void scrollBy(int,int)>($i0, $i1);

        goto label1;
    }

    public final void smoothScrollTo(int, int)
    {
        android.widget.HorizontalScrollView $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.HorizontalScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<android.view.View: int mScrollX>;

        $i0 = $i0 - $i2;

        $i2 = $r0.<android.view.View: int mScrollY>;

        $i1 = $i1 - $i2;

        virtualinvoke $r0.<android.widget.HorizontalScrollView: void smoothScrollBy(int,int)>($i0, $i1);

        return;
    }

    public static void <clinit>()
    {
        <android.widget.HorizontalScrollView: float MAX_SCROLL_FACTOR> = 0.5F;

        <android.widget.HorizontalScrollView: int ANIMATED_SCROLL_GAP> = 250;

        return;
    }
}
