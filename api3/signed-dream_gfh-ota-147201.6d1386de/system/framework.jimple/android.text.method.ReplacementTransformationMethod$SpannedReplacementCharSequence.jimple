class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence extends android.text.method.ReplacementTransformationMethod$ReplacementCharSequence implements android.text.Spanned
{
    private android.text.Spanned mSpanned;

    public void <init>(android.text.Spanned, char[], char[])
    {
        android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence $r0;
        android.text.Spanned $r1;
        char[] $r2, $r3;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence;

        $r1 := @parameter0: android.text.Spanned;

        $r2 := @parameter1: char[];

        $r3 := @parameter2: char[];

        specialinvoke $r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: void <init>(java.lang.CharSequence,char[],char[])>($r1, $r2, $r3);

        $r0.<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: android.text.Spanned mSpanned> = $r1;

        return;
    }

    public int getSpanEnd(java.lang.Object)
    {
        android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence $r0;
        java.lang.Object $r1;
        int $i0;
        android.text.Spanned $r2;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: android.text.Spanned mSpanned>;

        $i0 = interfaceinvoke $r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r1);

        return $i0;
    }

    public int getSpanFlags(java.lang.Object)
    {
        android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence $r0;
        java.lang.Object $r1;
        int $i0;
        android.text.Spanned $r2;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: android.text.Spanned mSpanned>;

        $i0 = interfaceinvoke $r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r1);

        return $i0;
    }

    public int getSpanStart(java.lang.Object)
    {
        android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence $r0;
        java.lang.Object $r1;
        int $i0;
        android.text.Spanned $r2;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: android.text.Spanned mSpanned>;

        $i0 = interfaceinvoke $r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r1);

        return $i0;
    }

    public java.lang.Object[] getSpans(int, int, java.lang.Class)
    {
        android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence $r0;
        int $i0, $i1;
        java.lang.Class $r1;
        java.lang.Object[] $r2;
        android.text.Spanned $r3;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Class;

        $r3 = $r0.<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: android.text.Spanned mSpanned>;

        $r2 = interfaceinvoke $r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, $r1);

        return $r2;
    }

    public int nextSpanTransition(int, int, java.lang.Class)
    {
        android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence $r0;
        int $i0, $i1;
        java.lang.Class $r1;
        android.text.Spanned $r2;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Class;

        $r2 = $r0.<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: android.text.Spanned mSpanned>;

        $i0 = interfaceinvoke $r2.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>($i0, $i1, $r1);

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence $r0;
        int $i0, $i1;
        java.lang.CharSequence $r1;
        android.text.SpannedString $r2;

        $r0 := @this: android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = new android.text.SpannedString;

        specialinvoke $r2.<android.text.SpannedString: void <init>(java.lang.CharSequence)>($r0);

        $r1 = virtualinvoke $r2.<android.text.SpannedString: java.lang.CharSequence subSequence(int,int)>($i0, $i1);

        return $r1;
    }
}
