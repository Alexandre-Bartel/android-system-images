class org.apache.harmony.awt.gl.MultiRectAreaOp$Union extends java.lang.Object
{
    int bottom;
    org.apache.harmony.awt.gl.MultiRectArea$RectCash dst;
    int rx1;
    int rx2;
    int top;

    void <init>()
    {
        org.apache.harmony.awt.gl.MultiRectAreaOp$Union $r0;

        $r0 := @this: org.apache.harmony.awt.gl.MultiRectAreaOp$Union;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void simpleUnion(org.apache.harmony.awt.gl.MultiRectArea, org.apache.harmony.awt.gl.MultiRectArea, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.MultiRectArea $r0, $r1, $r2;
        int $i0, $i1;
        int[] $r3, $r4;

        $r0 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r1 := @parameter1: org.apache.harmony.awt.gl.MultiRectArea;

        $r2 := @parameter2: org.apache.harmony.awt.gl.MultiRectArea;

        $i0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>();

        $i1 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>();

        if $i0 >= $i1 goto label1;

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Union: void simpleUnion(org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea)>($r1, $r0, $r2);

        return;

     label1:
        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Subtraction: void simpleSubtract(org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea)>($r0, $r1, $r2);

        $r3 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i0 = $r3[0];

        $r3 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i1 = $r3[0];

        $i1 = $i1 - 1;

        $r3 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r3 = staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp: int[] checkBufSize(int[],int)>($r3, $i1);

        $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect> = $r3;

        $r3 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r4 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 1, $r4, $i0, $i1);

        virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea: void resort()>();

        return;
    }

    int[] addHorRegion(int[], int[])
    {
        org.apache.harmony.awt.gl.MultiRectAreaOp$Union $r0;
        int[] $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        $r0 := @this: org.apache.harmony.awt.gl.MultiRectAreaOp$Union;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: int[];

        $i0 = $r1[0];

        $i1 = $r2[0];

        $i3 = $i0 + $i1;

        $i3 = $i3 + 1;

        $r3 = newarray (int)[$i3];

        $i3 = 1;

        $i4 = 1;

        $i5 = 1;

        $i6 = $r1[2];

        $i7 = $r2[2];

     label01:
        if $i4 < $i0 goto label03;

        $i0 = $i1 - $i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i5, $r3, $i3, $i0);

        $i0 = $i1 - $i5;

        $i0 = $i3 + $i0;

     label02:
        $r3[0] = $i0;

        return $r3;

     label03:
        if $i5 < $i1 goto label04;

        $i1 = $i0 - $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i4, $r3, $i3, $i1);

        $i0 = $i0 - $i4;

        $i0 = $i3 + $i0;

        goto label02;

     label04:
        if $i6 >= $i7 goto label07;

        $i8 = $i4;

     label05:
        $i4 = $i4 + 4;

        if $i4 >= $i0 goto label06;

        $i6 = $i4 + 1;

        $i6 = $r1[$i6];

        if $i6 < $i7 goto label05;

     label06:
        $i9 = $i4 - $i8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i8, $r3, $i3, $i9);

        $i8 = $i4 - $i8;

        $i3 = $i3 + $i8;

        goto label01;

     label07:
        if $i6 <= $i7 goto label10;

        $i8 = $i5;

     label08:
        $i5 = $i5 + 4;

        if $i5 >= $i1 goto label09;

        $i7 = $i5 + 1;

        $i7 = $r2[$i7];

        if $i7 < $i6 goto label08;

     label09:
        $i9 = $i5 - $i8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i8, $r3, $i3, $i9);

        $i8 = $i5 - $i8;

        $i3 = $i3 + $i8;

        goto label01;

     label10:
        $i2 = $i6;

        $i9 = $i4;

        $i8 = $i5;

     label11:
        $i4 = $i4 + 4;

        if $i4 >= $i0 goto label12;

        $i6 = $i4 + 1;

        $i6 = $r1[$i6];

        if $i6 == $i2 goto label11;

     label12:
        $i5 = $i5 + 4;

        if $i5 >= $i1 goto label13;

        $i7 = $i5 + 1;

        $i7 = $r2[$i7];

        if $i7 == $i2 goto label12;

     label13:
        $i2 = $i4 - $i9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i9, $r3, $i3, $i2);

        $i9 = $i4 - $i9;

        $i3 = $i3 + $i9;

        $i9 = $i5 - $i8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i8, $r3, $i3, $i9);

        $i8 = $i5 - $i8;

        $i3 = $i3 + $i8;

        goto label01;
    }

    int[] addVerRegion(int[], int[])
    {
        org.apache.harmony.awt.gl.MultiRectAreaOp$Union $r0;
        int[] $r1, $r2, $r3;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.awt.gl.MultiRectAreaOp$Union;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: int[];

        $i0 = $r1[0];

        $i1 = $r2[0];

        $i0 = $i0 + $i1;

        $i0 = $i0 - 1;

        $r3 = newarray (int)[$i0];

        $r3[0] = $i0;

        $i0 = $r1[0];

        $i0 = $i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 1, $r3, 1, $i0);

        $i0 = $r1[0];

        $i1 = $r2[0];

        $i1 = $i1 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 1, $r3, $i0, $i1);

        return $r3;
    }

    void check(org.apache.harmony.awt.gl.MultiRectAreaOp$Region, int, boolean)
    {
        org.apache.harmony.awt.gl.MultiRectAreaOp$Union $r0;
        org.apache.harmony.awt.gl.MultiRectAreaOp$Region $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        int[] $r2;
        org.apache.harmony.awt.gl.MultiRectArea$RectCash $r3;

        $r0 := @this: org.apache.harmony.awt.gl.MultiRectAreaOp$Union;

        $r1 := @parameter0: org.apache.harmony.awt.gl.MultiRectAreaOp$Region;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i1 = $r2[$i0];

        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i2 = $i0 + 2;

        $i2 = $r2[$i2];

        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i3 = $i0 + 1;

        $i3 = $r2[$i3];

        $i4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        if $i3 >= $i4 goto label1;

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i3 = $i0 + 1;

        $i3 = $r2[$i3];

        $i4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        $i4 = $i4 - 1;

        virtualinvoke $r3.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i1, $i3, $i2, $i4);

     label1:
        if $z0 == 0 goto label2;

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        $i4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        virtualinvoke $r3.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i1, $i3, $i2, $i4);

     label2:
        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i1 = $i0 + 3;

        $i1 = $r2[$i1];

        $i2 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        if $i1 <= $i2 goto label3;

        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i0 = $i0 + 1;

        $i1 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        $i1 = $i1 + 1;

        $r2[$i0] = $i1;

        return;

     label3:
        return;
    }

    org.apache.harmony.awt.gl.MultiRectArea getResult(org.apache.harmony.awt.gl.MultiRectArea, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.MultiRectAreaOp$Union $r0;
        org.apache.harmony.awt.gl.MultiRectArea $r1, $r2, $r3;
        boolean $z0;
        org.apache.harmony.awt.gl.MultiRectArea$RectCash $r4;
        int $i0, $i1;
        java.awt.Rectangle $r5, $r6, $r7;
        int[] $r8, $r9;

        $r0 := @this: org.apache.harmony.awt.gl.MultiRectAreaOp$Union;

        $r1 := @parameter0: org.apache.harmony.awt.gl.MultiRectArea;

        $r2 := @parameter1: org.apache.harmony.awt.gl.MultiRectArea;

        if $r1 == null goto label01;

        $z0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: boolean isEmpty()>();

        if $z0 == 0 goto label02;

     label01:
        $r3 = new org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r3.<org.apache.harmony.awt.gl.MultiRectArea: void <init>(org.apache.harmony.awt.gl.MultiRectArea)>($r2);

        return $r3;

     label02:
        if $r2 == null goto label03;

        $z0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea: boolean isEmpty()>();

        if $z0 == 0 goto label04;

     label03:
        $r3 = new org.apache.harmony.awt.gl.MultiRectArea;

        specialinvoke $r3.<org.apache.harmony.awt.gl.MultiRectArea: void <init>(org.apache.harmony.awt.gl.MultiRectArea)>($r1);

        return $r3;

     label04:
        $r4 = new org.apache.harmony.awt.gl.MultiRectArea$RectCash;

        specialinvoke $r4.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst> = $r4;

        $z0 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: boolean sorted>;

        if $z0 == 0 goto label05;

        $z0 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: boolean sorted>;

        if $z0 == 0 goto label05;

        $i0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>();

        if $i0 <= 8 goto label05;

        $i0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>();

        if $i0 > 8 goto label07;

     label05:
        $r4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Union: void simpleUnion(org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea)>($r1, $r2, $r4);

     label06:
        $r4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        return $r4;

     label07:
        $r5 = virtualinvoke $r1.<org.apache.harmony.awt.gl.MultiRectArea: java.awt.Rectangle getBounds()>();

        $r6 = virtualinvoke $r2.<org.apache.harmony.awt.gl.MultiRectArea: java.awt.Rectangle getBounds()>();

        $r7 = virtualinvoke $r5.<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>($r6);

        $i0 = $r7.<java.awt.Rectangle: int width>;

        if $i0 < 0 goto label08;

        $i0 = $r7.<java.awt.Rectangle: int height>;

        if $i0 >= 0 goto label12;

     label08:
        $i0 = $r5.<java.awt.Rectangle: int y>;

        $i1 = $r5.<java.awt.Rectangle: int height>;

        $i0 = $i0 + $i1;

        $i1 = $r6.<java.awt.Rectangle: int y>;

        if $i0 >= $i1 goto label09;

        $r4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $r8 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r9 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r8 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int[] addVerRegion(int[],int[])>($r8, $r9);

        virtualinvoke $r4.<org.apache.harmony.awt.gl.MultiRectArea: void setRect(int[],boolean)>($r8, 0);

        goto label06;

     label09:
        $i0 = $r6.<java.awt.Rectangle: int y>;

        $i1 = $r6.<java.awt.Rectangle: int height>;

        $i0 = $i0 + $i1;

        $i1 = $r5.<java.awt.Rectangle: int y>;

        if $i0 >= $i1 goto label10;

        $r4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $r8 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r9 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r8 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int[] addVerRegion(int[],int[])>($r8, $r9);

        virtualinvoke $r4.<org.apache.harmony.awt.gl.MultiRectArea: void setRect(int[],boolean)>($r8, 0);

        goto label06;

     label10:
        $i0 = $r5.<java.awt.Rectangle: int x>;

        $i1 = $r6.<java.awt.Rectangle: int x>;

        if $i0 >= $i1 goto label11;

        $r4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $r8 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r9 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r8 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int[] addHorRegion(int[],int[])>($r8, $r9);

        virtualinvoke $r4.<org.apache.harmony.awt.gl.MultiRectArea: void setRect(int[],boolean)>($r8, 0);

        goto label06;

     label11:
        $r4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $r8 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r9 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r8 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int[] addHorRegion(int[],int[])>($r8, $r9);

        virtualinvoke $r4.<org.apache.harmony.awt.gl.MultiRectArea: void setRect(int[],boolean)>($r8, 0);

        goto label06;

     label12:
        $r8 = $r1.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $r9 = $r2.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

        $i0 = $r5.<java.awt.Rectangle: int height>;

        $i0 = $i0 + 2;

        $i1 = $r6.<java.awt.Rectangle: int height>;

        $i1 = $i1 + 2;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: void unionRegions(int[],int[],int,int)>($r8, $r9, $i0, $i1);

        goto label06;
    }

    boolean next(org.apache.harmony.awt.gl.MultiRectAreaOp$Region, int)
    {
        org.apache.harmony.awt.gl.MultiRectAreaOp$Union $r0;
        org.apache.harmony.awt.gl.MultiRectAreaOp$Region $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r2;
        boolean $z0;
        org.apache.harmony.awt.gl.MultiRectArea$RectCash $r3;

        $r0 := @this: org.apache.harmony.awt.gl.MultiRectAreaOp$Union;

        $r1 := @parameter0: org.apache.harmony.awt.gl.MultiRectAreaOp$Region;

        $i0 := @parameter1: int;

        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i1 = $r2[$i0];

        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i2 = $i0 + 2;

        $i2 = $r2[$i2];

        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx1>;

        $i3 = $i3 - 1;

        if $i2 >= $i3 goto label3;

        $z0 = 1;

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        $i4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        virtualinvoke $r3.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i1, $i3, $i2, $i4);

     label1:
        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i3 = $i0 + 1;

        $i3 = $r2[$i3];

        $i4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        if $i3 >= $i4 goto label2;

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i3 = $i0 + 1;

        $i3 = $r2[$i3];

        $i4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        $i4 = $i4 - 1;

        virtualinvoke $r3.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i1, $i3, $i2, $i4);

     label2:
        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i1 = $i0 + 3;

        $i1 = $r2[$i1];

        $i2 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        if $i1 <= $i2 goto label7;

        $r2 = $r1.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i0 = $i0 + 1;

        $i1 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        $i1 = $i1 + 1;

        $r2[$i0] = $i1;

        return $z0;

     label3:
        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2>;

        $i3 = $i3 + 1;

        if $i1 <= $i3 goto label4;

        $z0 = 0;

        $r3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $i5 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx1>;

        $i6 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2>;

        $i4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        virtualinvoke $r3.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i5, $i6, $i3, $i4);

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx1> = $i1;

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2> = $i2;

        goto label1;

     label4:
        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2>;

        if $i2 > $i3 goto label6;

        $z0 = 1;

     label5:
        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx1>;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx1> = $i3;

        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2> = $i3;

        goto label1;

     label6:
        $z0 = 0;

        goto label5;

     label7:
        return $z0;
    }

    void unionRegions(int[], int[], int, int)
    {
        org.apache.harmony.awt.gl.MultiRectAreaOp$Union $r0;
        int[] $r1, $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.harmony.awt.gl.MultiRectAreaOp$Region $r3, $r4;
        boolean $z0, $z1;
        org.apache.harmony.awt.gl.MultiRectArea$RectCash $r6;

        $r0 := @this: org.apache.harmony.awt.gl.MultiRectAreaOp$Union;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = new org.apache.harmony.awt.gl.MultiRectAreaOp$Region;

        specialinvoke $r3.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void <init>(int[])>($r1);

        $r4 = new org.apache.harmony.awt.gl.MultiRectAreaOp$Region;

        specialinvoke $r4.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void <init>(int[])>($r2);

        $i2 = $i0 + $i1;

        $r1 = newarray (int)[$i2];

        $r2 = newarray (int)[$i0];

        $r5 = newarray (int)[$i1];

        virtualinvoke $r3.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void createLevel(int[])>($r2);

        virtualinvoke $r4.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void createLevel(int[])>($r5);

        staticinvoke <org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void sortOrdered(int[],int[],int[])>($r2, $r5, $r1);

        $i0 = $r1[1];

        $i0 = $i0 - 1;

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom> = $i0;

        $i0 = 2;

     label01:
        $i1 = $r1[0];

        if $i0 >= $i1 goto label12;

        $i1 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        $i1 = $i1 + 1;

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top> = $i1;

        $i1 = $r1[$i0];

        $i1 = $i1 - 1;

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom> = $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        $i2 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        virtualinvoke $r3.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void findActive(int,int)>($i1, $i2);

        $i1 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        $i2 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        virtualinvoke $r4.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void findActive(int,int)>($i1, $i2);

        $i1 = 1;

        $i2 = 1;

        $r2 = $r3.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i3 = $r2[0];

        if $i3 <= 1 goto label04;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: void check(org.apache.harmony.awt.gl.MultiRectAreaOp$Region,int,boolean)>($r3, 1, 0);

        $r2 = $r3.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i1 = $r2[1];

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx1> = $i1;

        $r2 = $r3.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i1 = $r2[3];

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2> = $i1;

        $i1 = 1 + 4;

        $z0 = 0;

        $z1 = 1;

     label02:
        if $z0 == 0 goto label07;

        $r2 = $r3.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i3 = $r2[0];

        if $i1 < $i3 goto label05;

        $r6 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $i1 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx1>;

        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        $i4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2>;

        $i5 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        virtualinvoke $r6.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i1, $i3, $i4, $i5);

     label03:
        $r2 = $r4.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i1 = $r2[0];

        if $i2 >= $i1 goto label10;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: void check(org.apache.harmony.awt.gl.MultiRectAreaOp$Region,int,boolean)>($r4, $i2, 1);

        $i2 = $i2 + 4;

        goto label03;

     label04:
        $r2 = $r4.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i2 = $r2[0];

        if $i2 <= 1 goto label11;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: void check(org.apache.harmony.awt.gl.MultiRectAreaOp$Region,int,boolean)>($r4, 1, 0);

        $r2 = $r4.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i2 = $r2[1];

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx1> = $i2;

        $r2 = $r4.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i2 = $r2[3];

        $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2> = $i2;

        $i2 = 1 + 4;

        $z0 = 1;

        $z1 = 0;

        goto label02;

     label05:
        $z0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: boolean next(org.apache.harmony.awt.gl.MultiRectAreaOp$Region,int)>($r3, $i1);

        $i1 = $i1 + 4;

        goto label02;

     label06:
        $z1 = virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: boolean next(org.apache.harmony.awt.gl.MultiRectAreaOp$Region,int)>($r4, $i2);

        $i2 = $i2 + 4;

     label07:
        if $z1 == 0 goto label09;

        $r2 = $r4.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i3 = $r2[0];

        if $i2 < $i3 goto label06;

        $r6 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: org.apache.harmony.awt.gl.MultiRectArea$RectCash dst>;

        $i2 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx1>;

        $i3 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int top>;

        $i4 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int rx2>;

        $i5 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        virtualinvoke $r6.<org.apache.harmony.awt.gl.MultiRectArea$RectCash: void addRectCashed(int,int,int,int)>($i2, $i3, $i4, $i5);

     label08:
        $r2 = $r3.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: int[] active>;

        $i2 = $r2[0];

        if $i1 >= $i2 goto label10;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: void check(org.apache.harmony.awt.gl.MultiRectAreaOp$Region,int,boolean)>($r3, $i1, 1);

        $i1 = $i1 + 4;

        goto label08;

     label09:
        $z0 = 1;

        $z1 = 1;

        goto label02;

     label10:
        $i1 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        virtualinvoke $r3.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void deleteActive(int)>($i1);

        $i1 = $r0.<org.apache.harmony.awt.gl.MultiRectAreaOp$Union: int bottom>;

        virtualinvoke $r4.<org.apache.harmony.awt.gl.MultiRectAreaOp$Region: void deleteActive(int)>($i1);

     label11:
        $i0 = $i0 + 1;

        goto label01;

     label12:
        return;
    }
}
