public class org.apache.harmony.xnet.provider.jsse.CertificateMessage extends org.apache.harmony.xnet.provider.jsse.Message
{
    java.security.cert.X509Certificate[] certs;
    byte[][] encoded_certs;

    public void <init>(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream, int) throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.CertificateMessage $r0;
        org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream $r1;
        int $i0, $i1, $i2, $i3;
        java.util.Vector $r2;
        java.security.cert.X509Certificate[] $r3;
        int[] $r4;
        java.lang.Class $r5;
        java.lang.Object $r6;
        byte[][] $r7;
        java.security.cert.CertificateFactory $r8;
        java.security.cert.Certificate $r9;
        java.security.cert.CertificateException $r10, $r11;
        java.security.cert.X509Certificate $r12;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.CertificateMessage;

        $r1 := @parameter0: org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream;

        $i0 := @parameter1: int;

        specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void <init>()>();

        $i1 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int readUint24()>();

        $i2 = $i1;

        if $i1 != 0 goto label02;

        if $i0 == 3 goto label01;

        virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect CertificateMessage");

     label01:
        $r3 = newarray (java.security.cert.X509Certificate)[0];

        $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs> = $r3;

        $r4 = newarray (int)[2];

        $r4[0] = 0;

        $r4[1] = 0;

        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r5, $r4);

        $r7 = (byte[][]) $r6;

        $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs> = $r7;

        $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length> = 3;

        return;

     label02:
        $r8 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X509");

     label03:
        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $i1 = 0;

     label04:
        if $i2 <= 0 goto label09;

        $i3 = virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int readUint24()>();

        $i2 = $i2 + -3;

     label05:
        $r9 = virtualinvoke $r8.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1);

        virtualinvoke $r2.<java.util.Vector: boolean add(java.lang.Object)>($r9);

     label06:
        $i2 = $i2 - $i3;

        $i1 = $i1 + $i3;

        goto label04;

     label07:
        $r10 := @caughtexception;

        virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void fatalAlert(byte,java.lang.String,java.lang.Throwable)>(80, "INTERNAL ERROR", $r10);

        return;

     label08:
        $r11 := @caughtexception;

        virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void fatalAlert(byte,java.lang.String,java.lang.Throwable)>(50, "DECODE ERROR", $r11);

        goto label06;

     label09:
        $i2 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $r3 = newarray (java.security.cert.X509Certificate)[$i2];

        $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs> = $r3;

        $i2 = 0;

     label10:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $i3 = lengthof $r3;

        if $i2 >= $i3 goto label11;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $r6 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i2);

        $r12 = (java.security.cert.X509Certificate) $r6;

        $r3[$i2] = $r12;

        $i2 = $i2 + 1;

        goto label10;

     label11:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $i2 = lengthof $r3;

        $i2 = $i2 * 3;

        $i2 = $i2 + 3;

        $i1 = $i2 + $i1;

        $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length> = $i1;

        $i1 = $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length>;

        if $i1 == $i0 goto label12;

        virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect CertificateMessage");

        return;

     label12:
        return;

        catch java.security.cert.CertificateException from label02 to label03 with label07;
        catch java.security.cert.CertificateException from label05 to label06 with label08;
    }

    public void <init>(java.security.cert.X509Certificate[])
    {
        org.apache.harmony.xnet.provider.jsse.CertificateMessage $r0;
        java.security.cert.X509Certificate[] $r1;
        int[] $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        byte[][] $r5;
        int $i0, $i1, $i2;
        java.security.cert.X509Certificate $r6;
        byte[] $r7;
        java.security.cert.CertificateEncodingException $r8;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.CertificateMessage;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        specialinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void <init>()>();

        if $r1 != null goto label1;

        $r1 = newarray (java.security.cert.X509Certificate)[0];

        $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs> = $r1;

        $r2 = newarray (int)[2];

        $r2[0] = 0;

        $r2[1] = 0;

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        $r5 = (byte[][]) $r4;

        $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs> = $r5;

        $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length> = 3;

        return;

     label1:
        $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs> = $r1;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        if $r5 != null goto label7;

        $i0 = lengthof $r1;

        $r5 = newarray (byte[])[$i0];

        $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs> = $r5;

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label7;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $r6 = $r1[$i0];

     label3:
        $r7 = virtualinvoke $r6.<java.security.cert.Certificate: byte[] getEncoded()>();

     label4:
        $r5[$i0] = $r7;

     label5:
        $i0 = $i0 + 1;

        goto label2;

     label6:
        $r8 := @caughtexception;

        virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void fatalAlert(byte,java.lang.String,java.lang.Throwable)>(80, "INTERNAL ERROR", $r8);

        goto label5;

     label7:
        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $i0 = lengthof $r5;

        $i0 = $i0 * 3;

        $i0 = $i0 + 3;

        $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length> = $i0;

        $i0 = 0;

     label8:
        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label9;

        $i1 = $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length>;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $r7 = $r5[$i0];

        $i2 = lengthof $r7;

        $i1 = $i1 + $i2;

        $r0.<org.apache.harmony.xnet.provider.jsse.Message: int length> = $i1;

        $i0 = $i0 + 1;

        goto label8;

     label9:
        return;

        catch java.security.cert.CertificateEncodingException from label3 to label4 with label6;
    }

    public int getType()
    {
        org.apache.harmony.xnet.provider.jsse.CertificateMessage $r0;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.CertificateMessage;

        return 11;
    }

    public void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)
    {
        org.apache.harmony.xnet.provider.jsse.CertificateMessage $r0;
        org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream $r1;
        byte[] $r2;
        byte[][] $r3;
        java.security.cert.X509Certificate[] $r4;
        int $i0, $i1, $i2;
        java.security.cert.X509Certificate $r5;
        java.security.cert.CertificateEncodingException $r6;
        long $l3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.CertificateMessage;

        $r1 := @parameter0: org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        if $r3 != null goto label06;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $i0 = lengthof $r4;

        $r3 = newarray (byte[])[$i0];

        $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs> = $r3;

        $i0 = 0;

     label01:
        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label06;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $r5 = $r4[$i0];

     label02:
        $r2 = virtualinvoke $r5.<java.security.cert.Certificate: byte[] getEncoded()>();

     label03:
        $r3[$i0] = $r2;

     label04:
        $i0 = $i0 + 1;

        goto label01;

     label05:
        $r6 := @caughtexception;

        virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.Message: void fatalAlert(byte,java.lang.String,java.lang.Throwable)>(80, "INTERNAL ERROR", $r6);

        goto label04;

     label06:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $i0 = lengthof $r3;

        $i0 = $i0 * 3;

        $i1 = 0;

     label07:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $i2 = lengthof $r3;

        if $i1 >= $i2 goto label08;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $r2 = $r3[$i1];

        $i2 = lengthof $r2;

        $i0 = $i0 + $i2;

        $i1 = $i1 + 1;

        goto label07;

     label08:
        $l3 = (long) $i0;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: void writeUint24(long)>($l3);

        $i0 = 0;

     label09:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label10;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $r2 = $r3[$i0];

        $i1 = lengthof $r2;

        $l3 = (long) $i1;

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: void writeUint24(long)>($l3);

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.CertificateMessage: byte[][] encoded_certs>;

        $r2 = $r3[$i0];

        virtualinvoke $r1.<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: void write(byte[])>($r2);

        $i0 = $i0 + 1;

        goto label09;

     label10:
        return;

        catch java.security.cert.CertificateEncodingException from label02 to label03 with label05;
    }
}
