public abstract class com.google.android.maps.Overlay extends java.lang.Object
{
    protected static final float SHADOW_X_SKEW;
    protected static final float SHADOW_Y_SCALE;

    public void <init>()
    {
        com.google.android.maps.Overlay $r0;

        $r0 := @this: com.google.android.maps.Overlay;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static void drawAt(android.graphics.Canvas, android.graphics.drawable.Drawable, int, int, boolean)
    {
        android.graphics.Canvas $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1;
        boolean $z0;
        android.graphics.PorterDuff$Mode $r2;
        float $f0, $f1;

        $r0 := @parameter0: android.graphics.Canvas;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 := @parameter4: boolean;

        if $i0 > 16000 goto label5;

        if $i1 > 16000 goto label6;

        if $i0 < -16000 goto label7;

        if $i1 >= -16000 goto label1;

        return;

     label1:
        if $z0 == 0 goto label2;

        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>(2130706432, $r2);

     label2:
        virtualinvoke $r0.<android.graphics.Canvas: int save()>();

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        virtualinvoke $r0.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<android.graphics.Canvas: void skew(float,float)>(-0.9F, 0.0F);

        virtualinvoke $r0.<android.graphics.Canvas: void scale(float,float)>(1.0F, 0.5F);

     label3:
        virtualinvoke $r1.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r0);

        if $z0 == 0 goto label4;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void clearColorFilter()>();

     label4:
        virtualinvoke $r0.<android.graphics.Canvas: void restore()>();

        return;

     label5:
        return;

     label6:
        return;

     label7:
        return;
    }

    public void draw(android.graphics.Canvas, com.google.android.maps.MapView, boolean)
    {
        com.google.android.maps.Overlay $r0;
        android.graphics.Canvas $r1;
        com.google.android.maps.MapView $r2;
        boolean $z0;

        $r0 := @this: com.google.android.maps.Overlay;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.google.android.maps.MapView;

        $z0 := @parameter2: boolean;

        return;
    }

    public boolean draw(android.graphics.Canvas, com.google.android.maps.MapView, boolean, long)
    {
        com.google.android.maps.Overlay $r0;
        android.graphics.Canvas $r1;
        com.google.android.maps.MapView $r2;
        boolean $z0;
        long $l0;

        $r0 := @this: com.google.android.maps.Overlay;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.google.android.maps.MapView;

        $z0 := @parameter2: boolean;

        $l0 := @parameter3: long;

        virtualinvoke $r0.<com.google.android.maps.Overlay: void draw(android.graphics.Canvas,com.google.android.maps.MapView,boolean)>($r1, $r2, $z0);

        return 0;
    }

    public boolean onKeyDown(int, android.view.KeyEvent, com.google.android.maps.MapView)
    {
        com.google.android.maps.Overlay $r0;
        int $i0;
        android.view.KeyEvent $r1;
        com.google.android.maps.MapView $r2;

        $r0 := @this: com.google.android.maps.Overlay;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 := @parameter2: com.google.android.maps.MapView;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent, com.google.android.maps.MapView)
    {
        com.google.android.maps.Overlay $r0;
        int $i0;
        android.view.KeyEvent $r1;
        com.google.android.maps.MapView $r2;

        $r0 := @this: com.google.android.maps.Overlay;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 := @parameter2: com.google.android.maps.MapView;

        return 0;
    }

    public boolean onTap(com.google.android.maps.GeoPoint, com.google.android.maps.MapView)
    {
        com.google.android.maps.Overlay $r0;
        com.google.android.maps.GeoPoint $r1;
        com.google.android.maps.MapView $r2;

        $r0 := @this: com.google.android.maps.Overlay;

        $r1 := @parameter0: com.google.android.maps.GeoPoint;

        $r2 := @parameter1: com.google.android.maps.MapView;

        return 0;
    }

    public boolean onTouchEvent(android.view.MotionEvent, com.google.android.maps.MapView)
    {
        com.google.android.maps.Overlay $r0;
        android.view.MotionEvent $r1;
        com.google.android.maps.MapView $r2;

        $r0 := @this: com.google.android.maps.Overlay;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 := @parameter1: com.google.android.maps.MapView;

        return 0;
    }

    public boolean onTrackballEvent(android.view.MotionEvent, com.google.android.maps.MapView)
    {
        com.google.android.maps.Overlay $r0;
        android.view.MotionEvent $r1;
        com.google.android.maps.MapView $r2;

        $r0 := @this: com.google.android.maps.Overlay;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 := @parameter1: com.google.android.maps.MapView;

        return 0;
    }

    public static void <clinit>()
    {
        <com.google.android.maps.Overlay: float SHADOW_Y_SCALE> = 0.5F;

        <com.google.android.maps.Overlay: float SHADOW_X_SKEW> = -0.9F;

        return;
    }
}
