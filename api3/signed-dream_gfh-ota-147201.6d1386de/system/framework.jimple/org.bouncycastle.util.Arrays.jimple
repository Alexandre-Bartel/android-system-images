public final class org.bouncycastle.util.Arrays extends java.lang.Object
{

    private void <init>()
    {
        org.bouncycastle.util.Arrays $r0;

        $r0 := @this: org.bouncycastle.util.Arrays;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean areEqual(byte[], byte[])
    {
        byte[] $r0, $r1;
        int $i0, $i1;
        byte $b2, $b3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $i0 = 0;

     label3:
        $i1 = lengthof $r0;

        if $i0 == $i1 goto label5;

        $b2 = $r0[$i0];

        $b3 = $r1[$i0];

        if $b2 == $b3 goto label4;

        return 0;

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        return 1;
    }

    public static void fill(byte[], byte)
    {
        byte[] $r0;
        byte $b0;
        int $i1, $i2;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        $i2 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i2 >= $i1 goto label2;

        $r0[$i2] = $b0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static void fill(long[], long)
    {
        long[] $r0;
        long $l0;
        int $i1, $i2;

        $r0 := @parameter0: long[];

        $l0 := @parameter1: long;

        $i2 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i2 >= $i1 goto label2;

        $r0[$i2] = $l0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static void fill(short[], short)
    {
        short[] $r0;
        short $s0;
        int $i1, $i2;

        $r0 := @parameter0: short[];

        $s0 := @parameter1: short;

        $i2 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i2 >= $i1 goto label2;

        $r0[$i2] = $s0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }
}
