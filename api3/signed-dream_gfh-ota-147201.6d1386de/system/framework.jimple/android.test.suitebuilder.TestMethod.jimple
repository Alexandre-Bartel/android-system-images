public class android.test.suitebuilder.TestMethod extends java.lang.Object
{
    private final java.lang.Class enclosingClass;
    private final java.lang.String enclosingClassname;
    private final java.lang.String testMethodName;

    public void <init>(java.lang.String, java.lang.Class)
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Class;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.test.suitebuilder.TestMethod: java.lang.Class enclosingClass> = $r2;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname> = $r3;

        $r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName> = $r1;

        return;
    }

    public void <init>(java.lang.reflect.Method, java.lang.Class)
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.reflect.Method $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        specialinvoke $r0.<android.test.suitebuilder.TestMethod: void <init>(java.lang.String,java.lang.Class)>($r3, $r2);

        return;
    }

    public void <init>(junit.framework.TestCase)
    {
        android.test.suitebuilder.TestMethod $r0;
        junit.framework.TestCase $r1;
        java.lang.String $r2;
        java.lang.Class $r3;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 := @parameter0: junit.framework.TestCase;

        $r2 = virtualinvoke $r1.<junit.framework.TestCase: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r0.<android.test.suitebuilder.TestMethod: void <init>(java.lang.String,java.lang.Class)>($r2, $r3);

        return;
    }

    private junit.framework.TestCase instantiateTest(java.lang.Class, java.lang.String) throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.reflect.Constructor $r2;
        int $i0, $i1;
        android.test.suitebuilder.TestMethod $r3;
        java.lang.reflect.Constructor[] $r4;
        junit.framework.TestCase $r5;
        java.lang.Class[] $r6;
        boolean $z0;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r10;

        $r3 := @this: android.test.suitebuilder.TestMethod;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r4 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        $i0 = lengthof $r4;

        if $i0 != 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r5 = specialinvoke $r3.<android.test.suitebuilder.TestMethod: junit.framework.TestCase instantiateTest(java.lang.Class,java.lang.String)>($r0, $r1);

        return $r5;

     label1:
        $i0 = lengthof $r4;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r2 = $r4[$i1];

        $r6 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $z0 = specialinvoke $r3.<android.test.suitebuilder.TestMethod: boolean noargsConstructor(java.lang.Class[])>($r6);

        if $z0 == 0 goto label3;

        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7);

        $r5 = (junit.framework.TestCase) $r8;

        virtualinvoke $r5.<junit.framework.TestCase: void setName(java.lang.String)>($r1);

        return $r5;

     label3:
        $z0 = specialinvoke $r3.<android.test.suitebuilder.TestMethod: boolean singleStringConstructor(java.lang.Class[])>($r6);

        if $z0 == 0 goto label4;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r1;

        $r8 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7);

        $r5 = (junit.framework.TestCase) $r8;

        return $r5;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate a constructor for ");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r9;
    }

    private boolean noargsConstructor(java.lang.Class[])
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.Class[] $r1;
        int $i0;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 := @parameter0: java.lang.Class[];

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean singleStringConstructor(java.lang.Class[])
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.Class[] $r1;
        boolean $z0;
        int $i0;
        java.lang.Class $r2;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 := @parameter0: java.lang.Class[];

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $r2 = $r1[0];

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/String");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public junit.framework.TestCase createTest() throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.String $r1;
        junit.framework.TestCase $r2;
        java.lang.Class $r3;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r3 = $r0.<android.test.suitebuilder.TestMethod: java.lang.Class enclosingClass>;

        $r1 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        $r2 = specialinvoke $r0.<android.test.suitebuilder.TestMethod: junit.framework.TestCase instantiateTest(java.lang.Class,java.lang.String)>($r3, $r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        android.test.suitebuilder.TestMethod $r0, $r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6;
        boolean $z0;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        $r4 = (android.test.suitebuilder.TestMethod) $r1;

        $r5 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        if $r5 == null goto label5;

        $r5 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        $r6 = $r4.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label6;

     label4:
        return 0;

     label5:
        $r5 = $r4.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        if $r5 != null goto label4;

     label6:
        $r5 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        if $r5 == null goto label8;

        $r5 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        $r6 = $r4.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label9;

     label7:
        return 0;

     label8:
        $r5 = $r4.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        if $r5 != null goto label7;

     label9:
        return 1;
    }

    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.Class $r1, $r2;
        java.lang.String $r3;
        java.lang.Class[] $r4;
        java.lang.reflect.Method $r5;
        java.lang.annotation.Annotation $r6;
        java.lang.NoSuchMethodException $r7;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 := @parameter0: java.lang.Class;

     label1:
        $r2 = virtualinvoke $r0.<android.test.suitebuilder.TestMethod: java.lang.Class getEnclosingClass()>();

        $r3 = virtualinvoke $r0.<android.test.suitebuilder.TestMethod: java.lang.String getName()>();

        $r4 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r3, $r4);

        $r6 = virtualinvoke $r5.<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>($r1);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public java.lang.Class getEnclosingClass()
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.Class r1;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        r1 = $r0.<android.test.suitebuilder.TestMethod: java.lang.Class enclosingClass>;

        return r1;
    }

    public java.lang.String getEnclosingClassname()
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.String r1;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        r1 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        return r1;
    }

    public java.lang.String getName()
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.String r1;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        r1 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        return r1;
    }

    public int hashCode()
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.String $r1;
        int $i0, $i1;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        if $r1 == null goto label3;

        $r1 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label1:
        $i0 = $i0 * 31;

        $r1 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        if $r1 == null goto label4;

        $r1 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label2:
        $i0 = $i0 + $i1;

        return $i0;

     label3:
        $i0 = 0;

        goto label1;

     label4:
        $i1 = 0;

        goto label2;
    }

    public java.lang.String toString()
    {
        android.test.suitebuilder.TestMethod $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: android.test.suitebuilder.TestMethod;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String enclosingClassname>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = $r0.<android.test.suitebuilder.TestMethod: java.lang.String testMethodName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
