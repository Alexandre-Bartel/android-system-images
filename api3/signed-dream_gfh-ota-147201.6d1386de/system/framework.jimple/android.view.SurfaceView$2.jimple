class android.view.SurfaceView$2 extends java.lang.Object implements android.view.SurfaceHolder
{
    private static final java.lang.String LOG_TAG;
    final android.view.SurfaceView this$0;

    void <init>(android.view.SurfaceView)
    {
        android.view.SurfaceView$2 $r0;
        android.view.SurfaceView $r1;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 := @parameter0: android.view.SurfaceView;

        $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final android.graphics.Canvas internalLockCanvas(android.graphics.Rect)
    {
        android.view.SurfaceView$2 $r0;
        android.graphics.Rect $r1;
        long $l0, $l2, $l3;
        android.view.SurfaceView $r2;
        int $i1;
        android.view.SurfaceHolder$BadSurfaceTypeException $r3;
        java.util.concurrent.locks.ReentrantLock $r4;
        android.graphics.Canvas $r5;
        boolean $z0;
        android.view.SurfaceView$MyWindow $r6;
        android.view.Surface $r7;
        java.lang.Exception $r8;
        byte $b4;
        java.lang.InterruptedException $r9;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $i1 = $r2.<android.view.SurfaceView: int mType>;

        if $i1 != 3 goto label01;

        $r3 = new android.view.SurfaceHolder$BadSurfaceTypeException;

        specialinvoke $r3.<android.view.SurfaceHolder$BadSurfaceTypeException: void <init>(java.lang.String)>("Surface type is SURFACE_TYPE_PUSH_BUFFERS");

        throw $r3;

     label01:
        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r4 = $r2.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $r5 = null;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $z0 = $r2.<android.view.SurfaceView: boolean mDrawingStopped>;

        if $z0 != 0 goto label03;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r6 = $r2.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        if $r6 == null goto label03;

        if $r1 == null goto label04;

     label02:
        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r7 = $r2.<android.view.SurfaceView: android.view.Surface mSurface>;

        $r5 = virtualinvoke $r7.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>($r1);

     label03:
        if $r5 == null goto label06;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2.<android.view.SurfaceView: long mLastLockTime> = $l2;

        return $r5;

     label04:
        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r1 = $r2.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        goto label02;

     label05:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SurfaceHolder", "Exception locking surface", $r8);

        goto label03;

     label06:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = $l2;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $l0 = $r2.<android.view.SurfaceView: long mLastLockTime>;

        $l0 = $l0 + 100L;

        $b4 = $l0 cmp $l2;

        if $b4 <= 0 goto label09;

        $l2 = $l0 - $l2;

     label07:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label08:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label09:
        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r2.<android.view.SurfaceView: long mLastLockTime> = $l3;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r4 = $r2.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return null;

     label10:
        $r9 := @caughtexception;

        goto label08;

        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.InterruptedException from label07 to label08 with label10;
    }

    public void addCallback(android.view.SurfaceHolder$Callback)
    {
        android.view.SurfaceView$2 $r0;
        android.view.SurfaceHolder$Callback $r1;
        boolean $z0;
        android.view.SurfaceView $r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 := @parameter0: android.view.SurfaceHolder$Callback;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r3 = $r2.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        entermonitor $r3;

     label1:
        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r4 = $r2.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r4 = $r2.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label2:
        exitmonitor $r3;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.view.Surface getSurface()
    {
        android.view.SurfaceView$2 $r0;
        android.view.SurfaceView $r1;
        android.view.Surface r2;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        r2 = $r1.<android.view.SurfaceView: android.view.Surface mSurface>;

        return r2;
    }

    public android.graphics.Rect getSurfaceFrame()
    {
        android.view.SurfaceView$2 $r0;
        android.view.SurfaceView $r1;
        android.graphics.Rect r2;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        r2 = $r1.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        return r2;
    }

    public boolean isCreating()
    {
        android.view.SurfaceView$2 $r0;
        android.view.SurfaceView $r1;
        boolean z0;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        z0 = $r1.<android.view.SurfaceView: boolean mIsCreating>;

        return z0;
    }

    public android.graphics.Canvas lockCanvas()
    {
        android.view.SurfaceView$2 $r0;
        android.graphics.Canvas $r1;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 = specialinvoke $r0.<android.view.SurfaceView$2: android.graphics.Canvas internalLockCanvas(android.graphics.Rect)>(null);

        return $r1;
    }

    public android.graphics.Canvas lockCanvas(android.graphics.Rect)
    {
        android.view.SurfaceView$2 $r0;
        android.graphics.Rect $r1;
        android.graphics.Canvas $r2;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = specialinvoke $r0.<android.view.SurfaceView$2: android.graphics.Canvas internalLockCanvas(android.graphics.Rect)>($r1);

        return $r2;
    }

    public void removeCallback(android.view.SurfaceHolder$Callback)
    {
        android.view.SurfaceView$2 $r0;
        android.view.SurfaceHolder$Callback $r1;
        android.view.SurfaceView $r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 := @parameter0: android.view.SurfaceHolder$Callback;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r3 = $r2.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        entermonitor $r3;

     label1:
        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r4 = $r2.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        exitmonitor $r3;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setFixedSize(int, int)
    {
        android.view.SurfaceView$2 $r0;
        int $i0, $i1, $i2;
        android.view.SurfaceView $r1;

        $r0 := @this: android.view.SurfaceView$2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $i2 = $r1.<android.view.SurfaceView: int mRequestedWidth>;

        if $i2 != $i0 goto label1;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $i2 = $r1.<android.view.SurfaceView: int mRequestedHeight>;

        if $i2 == $i1 goto label2;

     label1:
        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r1.<android.view.SurfaceView: int mRequestedWidth> = $i0;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r1.<android.view.SurfaceView: int mRequestedHeight> = $i1;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        virtualinvoke $r1.<android.view.View: void requestLayout()>();

        return;

     label2:
        return;
    }

    public void setFormat(int)
    {
        android.view.SurfaceView$2 $r0;
        int $i0;
        android.view.SurfaceView $r1;
        android.view.SurfaceView$MyWindow $r2;

        $r0 := @this: android.view.SurfaceView$2;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r1.<android.view.SurfaceView: int mRequestedFormat> = $i0;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r2 = $r1.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        if $r2 == null goto label1;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        staticinvoke <android.view.SurfaceView: void access$000(android.view.SurfaceView,boolean)>($r1, 0);

        return;

     label1:
        return;
    }

    public void setKeepScreenOn(boolean)
    {
        android.view.SurfaceView$2 $r0;
        boolean $z0;
        android.os.Message $r1;
        android.view.SurfaceView $r2;
        android.os.Handler $r3;
        byte $b0;

        $r0 := @this: android.view.SurfaceView$2;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r3 = $r2.<android.view.SurfaceView: android.os.Handler mHandler>;

        $r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        $r1.<android.os.Message: int arg1> = $b0;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r3 = $r2.<android.view.SurfaceView: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }

    public void setSizeFromLayout()
    {
        android.view.SurfaceView$2 $r0;
        android.view.SurfaceView $r1, $r2;
        int $i0;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $i0 = $r1.<android.view.SurfaceView: int mRequestedWidth>;

        if $i0 != -1 goto label1;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $i0 = $r1.<android.view.SurfaceView: int mRequestedHeight>;

        if $i0 == -1 goto label2;

     label1:
        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r1.<android.view.SurfaceView: int mRequestedHeight> = -1;

        $r2.<android.view.SurfaceView: int mRequestedWidth> = -1;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        virtualinvoke $r1.<android.view.View: void requestLayout()>();

        return;

     label2:
        return;
    }

    public void setType(int)
    {
        android.view.SurfaceView$2 $r0;
        int $i0;
        android.view.SurfaceView $r1;
        android.view.SurfaceView$MyWindow $r2;

        $r0 := @this: android.view.SurfaceView$2;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r1.<android.view.SurfaceView: int mRequestedType> = $i0;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r2 = $r1.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        if $r2 == null goto label3;

        $r1 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        staticinvoke <android.view.SurfaceView: void access$000(android.view.SurfaceView,boolean)>($r1, 0);

        return;

     label3:
        return;
    }

    public void unlockCanvasAndPost(android.graphics.Canvas)
    {
        android.view.SurfaceView$2 $r0;
        android.graphics.Canvas $r1;
        android.view.SurfaceView $r2;
        android.view.Surface $r3;
        java.util.concurrent.locks.ReentrantLock $r4;

        $r0 := @this: android.view.SurfaceView$2;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r3 = $r2.<android.view.SurfaceView: android.view.Surface mSurface>;

        virtualinvoke $r3.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>($r1);

        $r2 = $r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r4 = $r2.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;
    }

    public static void <clinit>()
    {
        <android.view.SurfaceView$2: java.lang.String LOG_TAG> = "SurfaceHolder";

        return;
    }
}
