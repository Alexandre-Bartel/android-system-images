public abstract class org.apache.harmony.xml.dom.LeafNodeImpl extends org.apache.harmony.xml.dom.NodeImpl
{
    int index;
    org.apache.harmony.xml.dom.InnerNodeImpl parent;

    void <init>(org.apache.harmony.xml.dom.DocumentImpl)
    {
        org.apache.harmony.xml.dom.LeafNodeImpl $r0;
        org.apache.harmony.xml.dom.DocumentImpl $r1;

        $r0 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        $r1 := @parameter0: org.apache.harmony.xml.dom.DocumentImpl;

        specialinvoke $r0.<org.apache.harmony.xml.dom.NodeImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl)>($r1);

        return;
    }

    public org.w3c.dom.Node getNextSibling()
    {
        org.apache.harmony.xml.dom.LeafNodeImpl $r0;
        org.apache.harmony.xml.dom.InnerNodeImpl $r1;
        int $i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        org.w3c.dom.Node $r4;

        $r0 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        $r1 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        if $r1 == null goto label1;

        $i0 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $i0 = $i0 + 1;

        $r1 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        $r2 = $r1.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r1 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        $r2 = $r1.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i0 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $i0 = $i0 + 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.w3c.dom.Node) $r3;

        return $r4;
    }

    public org.w3c.dom.Node getParentNode()
    {
        org.apache.harmony.xml.dom.LeafNodeImpl $r0;
        org.apache.harmony.xml.dom.InnerNodeImpl r1;

        $r0 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        r1 = $r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        return r1;
    }

    public org.w3c.dom.Node getPreviousSibling()
    {
        java.lang.Object $r0;
        org.apache.harmony.xml.dom.LeafNodeImpl $r1;
        org.apache.harmony.xml.dom.InnerNodeImpl $r2;
        int $i0;
        java.util.List $r3;
        org.w3c.dom.Node $r4;

        $r1 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        $r2 = $r1.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        if $r2 == null goto label1;

        $i0 = $r1.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = $r1.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        $r3 = $r2.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i0 = $r1.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $i0 = $i0 - 1;

        $r0 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (org.w3c.dom.Node) $r0;

        return $r4;
    }

    boolean isParentOf(org.w3c.dom.Node)
    {
        org.apache.harmony.xml.dom.LeafNodeImpl $r0;
        org.w3c.dom.Node $r1;

        $r0 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        $r1 := @parameter0: org.w3c.dom.Node;

        return 0;
    }
}
