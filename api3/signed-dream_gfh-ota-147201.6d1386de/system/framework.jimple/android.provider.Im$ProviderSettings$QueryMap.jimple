public class android.provider.Im$ProviderSettings$QueryMap extends android.content.ContentQueryMap
{
    private android.content.ContentResolver mContentResolver;
    private long mProviderId;

    public void <init>(android.content.ContentResolver, long, boolean, android.os.Handler)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        android.content.ContentResolver $r1;
        long $l0;
        boolean $z0;
        android.os.Handler $r2;
        java.lang.String[] $r3;
        android.net.Uri $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        android.database.Cursor $r7;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $r1 := @parameter0: android.content.ContentResolver;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: android.os.Handler;

        $r4 = <android.provider.Im$ProviderSettings: android.net.Uri CONTENT_URI>;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "name";

        $r3[1] = "value";

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("provider=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r4, $r3, $r6, null, null);

        specialinvoke $r0.<android.content.ContentQueryMap: void <init>(android.database.Cursor,java.lang.String,boolean,android.os.Handler)>($r7, "name", $z0, $r2);

        $r0.<android.provider.Im$ProviderSettings$QueryMap: android.content.ContentResolver mContentResolver> = $r1;

        $r0.<android.provider.Im$ProviderSettings$QueryMap: long mProviderId> = $l0;

        return;
    }

    private boolean getBoolean(java.lang.String, boolean)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        java.lang.String $r1;
        boolean $z0;
        android.content.ContentValues $r2;
        java.lang.Boolean $r3;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke $r0.<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>("value");

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        return $z0;
    }

    private int getInteger(java.lang.String, int)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        java.lang.String $r1;
        int $i0;
        android.content.ContentValues $r2;
        java.lang.Integer $r3;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r0.<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("value");

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return $i0;
    }

    private java.lang.String getString(java.lang.String, java.lang.String)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        java.lang.String $r1, $r2;
        android.content.ContentValues $r3;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>($r1);

        if $r3 == null goto label1;

        $r1 = virtualinvoke $r3.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("value");

        return $r1;

     label1:
        return $r2;
    }

    public boolean getAutomaticallyConnectToGTalkServer()
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 = specialinvoke $r0.<android.provider.Im$ProviderSettings$QueryMap: boolean getBoolean(java.lang.String,boolean)>("gtalk_auto_connect", 1);

        return $z0;
    }

    public boolean getEnableNotification()
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 = specialinvoke $r0.<android.provider.Im$ProviderSettings$QueryMap: boolean getBoolean(java.lang.String,boolean)>("enable_notification", 1);

        return $z0;
    }

    public boolean getHideOfflineContacts()
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 = specialinvoke $r0.<android.provider.Im$ProviderSettings$QueryMap: boolean getBoolean(java.lang.String,boolean)>("hide_offline_contacts", 0);

        return $z0;
    }

    public java.lang.String getRingtoneURI()
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        java.lang.String $r1;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $r1 = specialinvoke $r0.<android.provider.Im$ProviderSettings$QueryMap: java.lang.String getString(java.lang.String,java.lang.String)>("ringtone", "content://settings/system/notification_sound");

        return $r1;
    }

    public boolean getShowMobileIndicator()
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 = specialinvoke $r0.<android.provider.Im$ProviderSettings$QueryMap: boolean getBoolean(java.lang.String,boolean)>("mobile_indicator", 1);

        return $z0;
    }

    public boolean getVibrate()
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 = specialinvoke $r0.<android.provider.Im$ProviderSettings$QueryMap: boolean getBoolean(java.lang.String,boolean)>("vibrate", 0);

        return $z0;
    }

    public void setAutomaticallyConnectToGTalkServer(boolean)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;
        android.content.ContentResolver $r1;
        long $l0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.provider.Im$ProviderSettings$QueryMap: android.content.ContentResolver mContentResolver>;

        $l0 = $r0.<android.provider.Im$ProviderSettings$QueryMap: long mProviderId>;

        staticinvoke <android.provider.Im$ProviderSettings: void setAutomaticallyConnectGTalk(android.content.ContentResolver,long,boolean)>($r1, $l0, $z0);

        return;
    }

    public void setEnableNotification(boolean)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;
        android.content.ContentResolver $r1;
        long $l0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.provider.Im$ProviderSettings$QueryMap: android.content.ContentResolver mContentResolver>;

        $l0 = $r0.<android.provider.Im$ProviderSettings$QueryMap: long mProviderId>;

        staticinvoke <android.provider.Im$ProviderSettings: void setEnableNotification(android.content.ContentResolver,long,boolean)>($r1, $l0, $z0);

        return;
    }

    public void setHideOfflineContacts(boolean)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;
        android.content.ContentResolver $r1;
        long $l0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.provider.Im$ProviderSettings$QueryMap: android.content.ContentResolver mContentResolver>;

        $l0 = $r0.<android.provider.Im$ProviderSettings$QueryMap: long mProviderId>;

        staticinvoke <android.provider.Im$ProviderSettings: void setHideOfflineContacts(android.content.ContentResolver,long,boolean)>($r1, $l0, $z0);

        return;
    }

    public void setRingtoneURI(java.lang.String)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        java.lang.String $r1;
        android.content.ContentResolver $r2;
        long $l0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.provider.Im$ProviderSettings$QueryMap: android.content.ContentResolver mContentResolver>;

        $l0 = $r0.<android.provider.Im$ProviderSettings$QueryMap: long mProviderId>;

        staticinvoke <android.provider.Im$ProviderSettings: void setRingtoneURI(android.content.ContentResolver,long,java.lang.String)>($r2, $l0, $r1);

        return;
    }

    public void setShowMobileIndicator(boolean)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;
        android.content.ContentResolver $r1;
        long $l0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.provider.Im$ProviderSettings$QueryMap: android.content.ContentResolver mContentResolver>;

        $l0 = $r0.<android.provider.Im$ProviderSettings$QueryMap: long mProviderId>;

        staticinvoke <android.provider.Im$ProviderSettings: void setShowMobileIndicator(android.content.ContentResolver,long,boolean)>($r1, $l0, $z0);

        return;
    }

    public void setVibrate(boolean)
    {
        android.provider.Im$ProviderSettings$QueryMap $r0;
        boolean $z0;
        android.content.ContentResolver $r1;
        long $l0;

        $r0 := @this: android.provider.Im$ProviderSettings$QueryMap;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.provider.Im$ProviderSettings$QueryMap: android.content.ContentResolver mContentResolver>;

        $l0 = $r0.<android.provider.Im$ProviderSettings$QueryMap: long mProviderId>;

        staticinvoke <android.provider.Im$ProviderSettings: void setVibrate(android.content.ContentResolver,long,boolean)>($r1, $l0, $z0);

        return;
    }
}
