public abstract class android.database.AbstractWindowedCursor extends android.database.AbstractCursor
{
    protected android.database.CursorWindow mWindow;

    public void <init>()
    {
        android.database.AbstractWindowedCursor $r0;

        $r0 := @this: android.database.AbstractWindowedCursor;

        specialinvoke $r0.<android.database.AbstractCursor: void <init>()>();

        return;
    }

    protected void checkPosition()
    {
        android.database.AbstractWindowedCursor $r0;
        android.database.CursorWindow $r1;
        android.database.StaleDataException $r2;

        $r0 := @this: android.database.AbstractWindowedCursor;

        specialinvoke $r0.<android.database.AbstractCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        if $r1 != null goto label1;

        $r2 = new android.database.StaleDataException;

        specialinvoke $r2.<android.database.StaleDataException: void <init>(java.lang.String)>("Access closed cursor");

        throw $r2;

     label1:
        return;
    }

    public void copyStringToBuffer(int, android.database.CharArrayBuffer)
    {
        android.database.AbstractWindowedCursor $r0;
        int $i0, $i1;
        android.database.CharArrayBuffer $r1;
        boolean $z0;
        java.util.HashMap $r2;
        android.database.CursorWindow $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.database.CharArrayBuffer;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r2 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r2;

     label1:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label2;

        specialinvoke $r0.<android.database.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>($i0, $r1);

     label2:
        exitmonitor $r2;

     label3:
        $r3 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = $r0.<android.database.AbstractCursor: int mPos>;

        virtualinvoke $r3.<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>($i1, $i0, $r1);

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor $r2;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public byte[] getBlob(int)
    {
        int $i0, $i1;
        android.database.AbstractWindowedCursor $r0;
        java.util.HashMap $r1;
        boolean $z0;
        java.lang.Object $r2;
        byte[] $r3;
        android.database.CursorWindow $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r0.<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>($i0);

        $r3 = (byte[]) $r2;

        $r3 = (byte[]) $r3;

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        exitmonitor $r1;

     label4:
        $r4 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = $r0.<android.database.AbstractCursor: int mPos>;

        $r3 = virtualinvoke $r4.<android.database.CursorWindow: byte[] getBlob(int,int)>($i1, $i0);

        return $r3;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public double getDouble(int)
    {
        android.database.AbstractWindowedCursor $r0;
        int $i0, $i1;
        java.util.HashMap $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        double $d0;
        android.database.CursorWindow $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r0.<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>($i0);

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        exitmonitor $r1;

     label2:
        return $d0;

     label3:
        exitmonitor $r1;

     label4:
        $r4 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = $r0.<android.database.AbstractCursor: int mPos>;

        $d0 = virtualinvoke $r4.<android.database.CursorWindow: double getDouble(int,int)>($i1, $i0);

        return $d0;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public float getFloat(int)
    {
        android.database.AbstractWindowedCursor $r0;
        int $i0, $i1;
        java.util.HashMap $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0;
        android.database.CursorWindow $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r0.<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>($i0);

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        exitmonitor $r1;

     label2:
        return $f0;

     label3:
        exitmonitor $r1;

     label4:
        $r4 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = $r0.<android.database.AbstractCursor: int mPos>;

        $f0 = virtualinvoke $r4.<android.database.CursorWindow: float getFloat(int,int)>($i1, $i0);

        return $f0;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getInt(int)
    {
        android.database.AbstractWindowedCursor $r0;
        int $i0, $i1;
        java.util.HashMap $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        android.database.CursorWindow $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r0.<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>($i0);

        $r3 = (java.lang.Number) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        exitmonitor $r1;

     label4:
        $r4 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = $r0.<android.database.AbstractCursor: int mPos>;

        $i0 = virtualinvoke $r4.<android.database.CursorWindow: int getInt(int,int)>($i1, $i0);

        return $i0;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public long getLong(int)
    {
        android.database.AbstractWindowedCursor $r0;
        int $i0, $i2;
        java.util.HashMap $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        long $l1;
        android.database.CursorWindow $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r0.<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>($i0);

        $r3 = (java.lang.Number) $r2;

        $l1 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        exitmonitor $r1;

     label2:
        return $l1;

     label3:
        exitmonitor $r1;

     label4:
        $r4 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i2 = $r0.<android.database.AbstractCursor: int mPos>;

        $l1 = virtualinvoke $r4.<android.database.CursorWindow: long getLong(int,int)>($i2, $i0);

        return $l1;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public short getShort(int)
    {
        android.database.AbstractWindowedCursor $r0;
        int $i0, $i2;
        java.util.HashMap $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        short $s1;
        android.database.CursorWindow $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r0.<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>($i0);

        $r3 = (java.lang.Number) $r2;

        $s1 = virtualinvoke $r3.<java.lang.Number: short shortValue()>();

        exitmonitor $r1;

     label2:
        return $s1;

     label3:
        exitmonitor $r1;

     label4:
        $r4 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i2 = $r0.<android.database.AbstractCursor: int mPos>;

        $s1 = virtualinvoke $r4.<android.database.CursorWindow: short getShort(int,int)>($i2, $i0);

        return $s1;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.lang.String getString(int)
    {
        int $i0, $i1;
        android.database.AbstractWindowedCursor $r0;
        java.util.HashMap $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.String $r3;
        android.database.CursorWindow $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r0.<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>($i0);

        $r3 = (java.lang.String) $r2;

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        exitmonitor $r1;

     label4:
        $r4 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = $r0.<android.database.AbstractCursor: int mPos>;

        $r3 = virtualinvoke $r4.<android.database.CursorWindow: java.lang.String getString(int,int)>($i1, $i0);

        return $r3;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.database.CursorWindow getWindow()
    {
        android.database.AbstractWindowedCursor $r0;
        android.database.CursorWindow r1;

        $r0 := @this: android.database.AbstractWindowedCursor;

        r1 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        return r1;
    }

    public boolean hasWindow()
    {
        android.database.AbstractWindowedCursor $r0;
        android.database.CursorWindow $r1;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $r1 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isBlob(int)
    {
        android.database.AbstractWindowedCursor $r0;
        int $i0, $i1;
        java.util.HashMap $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.database.CursorWindow $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r1;

     label01:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label06;

        $r2 = virtualinvoke $r0.<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>($i0);

        if $r2 == null goto label02;

        $z0 = $r2 instanceof byte[];

        if $z0 == 0 goto label05;

     label02:
        $z0 = 1;

     label03:
        exitmonitor $r1;

     label04:
        return $z0;

     label05:
        $z0 = 0;

        goto label03;

     label06:
        exitmonitor $r1;

     label07:
        $r3 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = $r0.<android.database.AbstractCursor: int mPos>;

        $z0 = virtualinvoke $r3.<android.database.CursorWindow: boolean isBlob(int,int)>($i1, $i0);

        return $z0;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor $r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isNull(int)
    {
        android.database.AbstractWindowedCursor $r0;
        int $i0, $i1;
        java.util.HashMap $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.database.CursorWindow $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = $r0.<android.database.AbstractCursor: java.util.HashMap mUpdatedRows>;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke $r0.<android.database.AbstractCursor: boolean isFieldUpdated(int)>($i0);

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke $r0.<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>($i0);

        if $r2 != null goto label4;

        $z0 = 1;

     label2:
        exitmonitor $r1;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        exitmonitor $r1;

     label6:
        $r3 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = $r0.<android.database.AbstractCursor: int mPos>;

        $z0 = virtualinvoke $r3.<android.database.CursorWindow: boolean isNull(int,int)>($i1, $i0);

        return $z0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor $r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void setWindow(android.database.CursorWindow)
    {
        android.database.AbstractWindowedCursor $r0;
        android.database.CursorWindow $r1, $r2;

        $r0 := @this: android.database.AbstractWindowedCursor;

        $r1 := @parameter0: android.database.CursorWindow;

        $r2 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        virtualinvoke $r2.<android.database.CursorWindow: void close()>();

     label1:
        $r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow> = $r1;

        return;
    }
}
