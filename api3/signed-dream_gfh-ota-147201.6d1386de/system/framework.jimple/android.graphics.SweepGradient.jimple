public class android.graphics.SweepGradient extends android.graphics.Shader
{

    public void <init>(float, float, int, int)
    {
        android.graphics.SweepGradient $r0;
        float $f0, $f1;
        int $i0, $i1;

        $r0 := @this: android.graphics.SweepGradient;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke $r0.<android.graphics.Shader: void <init>()>();

        $i0 = staticinvoke <android.graphics.SweepGradient: int nativeCreate2(float,float,int,int)>($f0, $f1, $i0, $i1);

        $r0.<android.graphics.Shader: int native_instance> = $i0;

        return;
    }

    public void <init>(float, float, int[], float[])
    {
        android.graphics.SweepGradient $r0;
        float $f0, $f1;
        int[] $r1;
        float[] $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: android.graphics.SweepGradient;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 := @parameter2: int[];

        $r2 := @parameter3: float[];

        specialinvoke $r0.<android.graphics.Shader: void <init>()>();

        $i0 = lengthof $r1;

        if $i0 >= 2 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("needs >= 2 number of colors");

        throw $r3;

     label1:
        if $r2 == null goto label2;

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("color and position arrays must be of equal length");

        throw $r3;

     label2:
        $i0 = staticinvoke <android.graphics.SweepGradient: int nativeCreate1(float,float,int[],float[])>($f0, $f1, $r1, $r2);

        $r0.<android.graphics.Shader: int native_instance> = $i0;

        return;
    }

    private static native int nativeCreate1(float, float, int[], float[]);

    private static native int nativeCreate2(float, float, int, int);
}
