public class org.apache.harmony.awt.gl.image.ImageLoader extends java.lang.Thread
{

    void <init>()
    {
        org.apache.harmony.awt.gl.image.ImageLoader $r0;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageLoader;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        virtualinvoke $r0.<java.lang.Thread: void setDaemon(boolean)>(1);

        return;
    }

    public static void addImageSource(org.apache.harmony.awt.gl.image.DecodingImageSource)
    {
        org.apache.harmony.awt.gl.image.DecodingImageSource $r0;
        java.util.List $r1, $r3;
        org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage $r2;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @parameter0: org.apache.harmony.awt.gl.image.DecodingImageSource;

        $r2 = staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage getStorage()>();

        $r1 = $r2.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        entermonitor $r1;

     label1:
        $r3 = $r2.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

        $r3 = $r2.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r0);

     label2:
        $i0 = staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: int access$000(org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage)>($r2);

        if $i0 != 0 goto label3;

        staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader: void createLoader()>();

     label3:
        $r3 = $r2.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        virtualinvoke $r3.<java.lang.Object: void notify()>();

        exitmonitor $r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void beginAnimation()
    {
        org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage $r0;
        java.lang.Thread $r1;
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Throwable $r3;

        $r0 = staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage getStorage()>();

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        entermonitor $r0;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        $i0 = staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: int access$000(org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage)>($r0);

        $r2 = $r0.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader: void createLoader()>();

     label2:
        exitmonitor $r0;

     label3:
        virtualinvoke $r1.<java.lang.Thread: void setPriority(int)>(1);

        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor $r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private static void createLoader()
    {
        java.util.List $r0, $r2;
        org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage $r1;
        int $i0;
        org.apache.harmony.awt.gl.image.ImageLoader$1 $r3;
        java.lang.Throwable $r4;

        $r1 = staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage getStorage()>();

        $r0 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        entermonitor $r0;

     label1:
        $r2 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= 5 goto label2;

        $r3 = new org.apache.harmony.awt.gl.image.ImageLoader$1;

        specialinvoke $r3.<org.apache.harmony.awt.gl.image.ImageLoader$1: void <init>(org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage)>($r1);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);

     label2:
        exitmonitor $r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static void endAnimation()
    {
        org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage $r0;
        java.lang.Thread $r1;
        java.util.List $r2;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r3;

        $r0 = staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage getStorage()>();

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        entermonitor $r0;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= 5 goto label2;

        $r2 = $r0.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = $r0.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        exitmonitor $r0;

     label3:
        virtualinvoke $r1.<java.lang.Thread: void setPriority(int)>(5);

        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor $r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private static org.apache.harmony.awt.gl.image.DecodingImageSource getWaitingImageSource()
    {
        java.util.List $r0, $r3;
        org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage $r1;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r2;
        int $i0;
        java.lang.Object $r4;
        java.lang.InterruptedException $r5;
        java.lang.Throwable $r6, $r7;

        $r1 = staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage getStorage()>();

        $r0 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        entermonitor $r0;

        $r2 = null;

     label01:
        $r3 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label02:
        if $i0 != 0 goto label05;

     label03:
        staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: int access$008(org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage)>($r1);

        $r3 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        virtualinvoke $r3.<java.lang.Object: void wait(long)>(4000L);

     label04:
        staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: int access$010(org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage)>($r1);

     label05:
        $r3 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label06;

        $r3 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r2 = (org.apache.harmony.awt.gl.image.DecodingImageSource) $r4;

        $r3 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List queue>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

     label06:
        exitmonitor $r0;

     label07:
        return $r2;

     label08:
        $r5 := @caughtexception;

        staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: int access$010(org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage)>($r1);

        exitmonitor $r0;

     label09:
        return null;

     label10:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label11:
        throw $r6;

     label12:
        $r7 := @caughtexception;

     label13:
        staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: int access$010(org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage)>($r1);

        throw $r7;

     label14:
        nop;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.InterruptedException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public void run()
    {
        org.apache.harmony.awt.gl.image.ImageLoader $r0;
        org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage $r1;
        java.util.List $r2, $r6;
        boolean $z0;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r3;
        java.lang.Exception $r4, $r5;
        java.lang.Thread $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageLoader;

        $r1 = staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage getStorage()>();

     label01:
        $r2 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r0);

        if $z0 == 0 goto label13;

        staticinvoke <java.lang.Thread: boolean interrupted()>();

        $r3 = staticinvoke <org.apache.harmony.awt.gl.image.ImageLoader: org.apache.harmony.awt.gl.image.DecodingImageSource getWaitingImageSource()>();

     label02:
        if $r3 == null goto label13;

     label03:
        virtualinvoke $r3.<org.apache.harmony.awt.gl.image.DecodingImageSource: void load()>();

     label04:
        goto label01;

     label05:
        $r4 := @caughtexception;

     label06:
        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace()>();

     label07:
        goto label01;

     label08:
        $r5 := @caughtexception;

     label09:
        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

     label10:
        $r2 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        entermonitor $r2;

     label11:
        $r6 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>($r7);

        exitmonitor $r2;

     label12:
        return;

     label13:
        $r2 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        entermonitor $r2;

     label14:
        $r6 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>($r7);

        exitmonitor $r2;

     label15:
        return;

     label16:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label17:
        throw $r8;

     label18:
        $r9 := @caughtexception;

     label19:
        exitmonitor $r2;

     label20:
        throw $r9;

     label21:
        $r10 := @caughtexception;

        $r2 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        entermonitor $r2;

     label22:
        $r6 = $r1.<org.apache.harmony.awt.gl.image.ImageLoader$ImageLoadersStorage: java.util.List loaders>;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>($r7);

        exitmonitor $r2;

     label23:
        throw $r10;

     label24:
        $r11 := @caughtexception;

     label25:
        exitmonitor $r2;

     label26:
        throw $r11;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }
}
