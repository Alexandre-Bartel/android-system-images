public class com.android.internal.util.ArrayUtils extends java.lang.Object
{
    private static final int CACHE_SIZE;
    private static java.lang.Object[] EMPTY;
    private static java.lang.Object[] sCache;

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        <com.android.internal.util.ArrayUtils: int CACHE_SIZE> = 73;

        $r0 = newarray (java.lang.Object)[0];

        <com.android.internal.util.ArrayUtils: java.lang.Object[] EMPTY> = $r0;

        $r0 = newarray (java.lang.Object)[73];

        <com.android.internal.util.ArrayUtils: java.lang.Object[] sCache> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.internal.util.ArrayUtils $r0;

        $r0 := @this: com.android.internal.util.ArrayUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean contains(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object;

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r0[$i1];

        if $r2 != null goto label2;

        if $r1 != null goto label3;

        return 1;

     label2:
        if $r1 == null goto label3;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    public static java.lang.Object[] emptyArray(java.lang.Class)
    {
        int $i0;
        java.lang.Class $r0, $r3;
        java.lang.Object[] $r1;
        java.lang.Object $r2, $r4;

        $r0 := @parameter0: java.lang.Class;

        if $r0 != class "java/lang/Object" goto label1;

        $r1 = <com.android.internal.util.ArrayUtils: java.lang.Object[] EMPTY>;

        $r1 = (java.lang.Object[]) $r1;

        return $r1;

     label1:
        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $i0 = $i0 / 8;

        $i0 = $i0 & 2147483647;

        $i0 = $i0 % 73;

        $r1 = <com.android.internal.util.ArrayUtils: java.lang.Object[] sCache>;

        $r2 = $r1[$i0];

        if $r2 == null goto label2;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        if $r3 == $r0 goto label3;

     label2:
        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r0, 0);

        $r2 = $r4;

        $r1 = <com.android.internal.util.ArrayUtils: java.lang.Object[] sCache>;

        $r1[$i0] = $r4;

     label3:
        $r1 = (java.lang.Object[]) $r2;

        $r1 = (java.lang.Object[]) $r1;

        return $r1;
    }

    public static boolean equals(byte[], byte[], int)
    {
        byte[] $r0, $r1;
        int $i0, $i2;
        byte $b1, $b3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        if $r0 == null goto label2;

        if $r1 == null goto label2;

        $i2 = lengthof $r0;

        if $i2 < $i0 goto label2;

        $i2 = lengthof $r1;

        if $i2 >= $i0 goto label3;

     label2:
        return 0;

     label3:
        $i2 = 0;

     label4:
        if $i2 >= $i0 goto label6;

        $b3 = $r0[$i2];

        $b1 = $r1[$i2];

        if $b3 == $b1 goto label5;

        return 0;

     label5:
        $i2 = $i2 + 1;

        goto label4;

     label6:
        return 1;
    }

    public static int idealBooleanArraySize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int idealByteArraySize(int)>($i0);

        return $i0;
    }

    public static int idealByteArraySize(int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 = 4;

     label1:
        if $i1 >= 32 goto label3;

        $i2 = 1 << $i1;

        $i2 = $i2 - 12;

        if $i0 > $i2 goto label2;

        $i0 = 1 << $i1;

        $i0 = $i0 - 12;

        return $i0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i0;
    }

    public static int idealCharArraySize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 * 2;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int idealByteArraySize(int)>($i0);

        $i0 = $i0 / 2;

        return $i0;
    }

    public static int idealFloatArraySize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 * 4;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int idealByteArraySize(int)>($i0);

        $i0 = $i0 / 4;

        return $i0;
    }

    public static int idealIntArraySize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 * 4;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int idealByteArraySize(int)>($i0);

        $i0 = $i0 / 4;

        return $i0;
    }

    public static int idealLongArraySize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 * 8;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int idealByteArraySize(int)>($i0);

        $i0 = $i0 / 8;

        return $i0;
    }

    public static int idealObjectArraySize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 * 4;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int idealByteArraySize(int)>($i0);

        $i0 = $i0 / 4;

        return $i0;
    }

    public static int idealShortArraySize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 * 2;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int idealByteArraySize(int)>($i0);

        $i0 = $i0 / 2;

        return $i0;
    }
}
