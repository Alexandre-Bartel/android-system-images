public class com.android.internal.telephony.gsm.SimSmsInterfaceManager extends com.android.internal.telephony.gsm.ISms$Stub
{
    static final boolean DBG;
    private static final int EVENT_LOAD_DONE;
    private static final int EVENT_UPDATE_DONE;
    static final java.lang.String LOG_TAG;
    android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private com.android.internal.telephony.gsm.GSMPhone mPhone;
    private java.util.List mSms;
    private boolean mSuccess;

    public void <init>(com.android.internal.telephony.gsm.GSMPhone)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        com.android.internal.telephony.gsm.GSMPhone $r1;
        java.lang.Object $r2;
        com.android.internal.telephony.gsm.SimSmsInterfaceManager$1 $r3;

        $r0 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $r1 := @parameter0: com.android.internal.telephony.gsm.GSMPhone;

        specialinvoke $r0.<com.android.internal.telephony.gsm.ISms$Stub: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.Object mLock> = $r2;

        $r3 = new com.android.internal.telephony.gsm.SimSmsInterfaceManager$1;

        specialinvoke $r3.<com.android.internal.telephony.gsm.SimSmsInterfaceManager$1: void <init>(com.android.internal.telephony.gsm.SimSmsInterfaceManager)>($r0);

        $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: android.os.Handler mHandler> = $r3;

        $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone> = $r1;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("isms", $r0);

        return;
    }

    static java.lang.Object access$000(com.android.internal.telephony.gsm.SimSmsInterfaceManager)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        r1 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.Object mLock>;

        return r1;
    }

    static boolean access$102(com.android.internal.telephony.gsm.SimSmsInterfaceManager, boolean)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        boolean $z0;

        $r0 := @parameter0: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $z0 := @parameter1: boolean;

        $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean mSuccess> = $z0;

        return $z0;
    }

    static java.util.List access$200(com.android.internal.telephony.gsm.SimSmsInterfaceManager)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        java.util.List r1;

        $r0 := @parameter0: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        r1 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List mSms>;

        return r1;
    }

    static java.util.List access$202(com.android.internal.telephony.gsm.SimSmsInterfaceManager, java.util.List)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        java.util.List $r1;

        $r0 := @parameter0: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $r1 := @parameter1: java.util.List;

        $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List mSms> = $r1;

        return $r1;
    }

    static java.util.ArrayList access$300(com.android.internal.telephony.gsm.SimSmsInterfaceManager, java.util.ArrayList)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        java.util.ArrayList $r1;

        $r0 := @parameter0: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $r1 := @parameter1: java.util.ArrayList;

        $r1 = specialinvoke $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.ArrayList buildValidRawData(java.util.ArrayList)>($r1);

        return $r1;
    }

    private java.util.ArrayList buildValidRawData(java.util.ArrayList)
    {
        java.util.ArrayList $r0, $r1;
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        byte[] $r4;
        byte $b2;
        com.android.internal.telephony.gsm.SmsRawData $r5;

        $r2 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $r0 := @parameter0: java.util.ArrayList;

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r3 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (byte[]) $r3;

        $b2 = $r4[0];

        if $b2 != 0 goto label3;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r5 = new com.android.internal.telephony.gsm.SmsRawData;

        $r3 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (byte[]) $r3;

        specialinvoke $r5.<com.android.internal.telephony.gsm.SmsRawData: void <init>(byte[])>($r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label2;

     label4:
        return $r1;
    }

    private void enforceReceiveAndSend(java.lang.String)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        java.lang.String $r1;
        android.content.Context $r2;
        com.android.internal.telephony.gsm.GSMPhone $r3;

        $r0 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r2 = virtualinvoke $r3.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", $r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", $r1);

        return;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        $r0 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SmsInterfaceManager] ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GSM", $r1);

        return;
    }

    private byte[] makeSmsRecordData(int, byte[])
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        int $i0;
        byte[] $r1, $r2;
        byte $b1;

        $r0 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $r2 = newarray (byte)[176];

        $i0 = $i0 & 7;

        $b1 = (byte) $i0;

        $r2[0] = $b1;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 1, $i0);

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

     label1:
        if $i0 >= 176 goto label2;

        $r2[$i0] = -1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public boolean copyMessageToSimEf(int, byte[], byte[])
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        int $i0;
        byte[] $r1, $r2;
        java.lang.Object $r3, $r10;
        android.os.Handler $r4;
        android.os.Message $r5;
        com.android.internal.telephony.gsm.GSMPhone $r6;
        com.android.internal.telephony.gsm.CommandsInterface $r7;
        java.lang.String $r8, $r9;
        java.lang.InterruptedException $r11;
        java.lang.Throwable $r12;
        boolean z0;

        $r0 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        specialinvoke $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>("Copying message to SIM");

        $r3 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor $r3;

     label1:
        $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean mSuccess> = 0;

        $r4 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $r6 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r7 = $r6.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r8 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: java.lang.String bytesToHexString(byte[])>($r2);

        $r9 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: java.lang.String bytesToHexString(byte[])>($r1);

        interfaceinvoke $r7.<com.android.internal.telephony.gsm.CommandsInterface: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>($i0, $r8, $r9, $r5);

     label2:
        $r10 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.Object mLock>;

     label3:
        virtualinvoke $r10.<java.lang.Object: void wait()>();

     label4:
        exitmonitor $r3;

     label5:
        z0 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean mSuccess>;

        return z0;

     label6:
        $r11 := @caughtexception;

     label7:
        specialinvoke $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to update by index");

        goto label4;

     label8:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label9:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.InterruptedException from label3 to label4 with label6;
        catch java.lang.Throwable from label2 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label7 to label9 with label8;
    }

    public java.util.List getAllMessagesFromSimEf()
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        com.android.internal.telephony.gsm.GSMPhone $r1;
        android.content.Context $r2;
        java.lang.Object $r3, $r7;
        android.os.Handler $r4;
        android.os.Message $r5;
        com.android.internal.telephony.gsm.SIMFileHandler $r6;
        java.lang.InterruptedException $r8;
        java.lang.Throwable $r9;
        java.util.List r10;

        $r0 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $r1 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Reading messages from SIM");

        $r3 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        $r1 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r6 = $r1.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SIMFileHandler mSIMFileHandler>;

        virtualinvoke $r6.<com.android.internal.telephony.gsm.SIMFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>(28476, $r5);

     label2:
        $r7 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.Object mLock>;

     label3:
        virtualinvoke $r7.<java.lang.Object: void wait()>();

     label4:
        exitmonitor $r3;

     label5:
        r10 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List mSms>;

        return r10;

     label6:
        $r8 := @caughtexception;

     label7:
        specialinvoke $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to load from the SIM");

        goto label4;

     label8:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.InterruptedException from label3 to label4 with label6;
        catch java.lang.Throwable from label2 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label7 to label9 with label8;
    }

    public void sendMultipartText(java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        java.lang.String $r1, $r2;
        java.util.List $r3, $r4, $r5;
        android.content.Context $r6;
        com.android.internal.telephony.gsm.GSMPhone $r7;
        com.android.internal.telephony.gsm.SMSDispatcher $r8;
        java.util.ArrayList $r9, $r10, $r11;

        $r0 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.List;

        $r4 := @parameter3: java.util.List;

        $r5 := @parameter4: java.util.List;

        $r7 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r6 = virtualinvoke $r7.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r6.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $r7 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r8 = $r7.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SMSDispatcher mSMS>;

        $r9 = (java.util.ArrayList) $r3;

        $r10 = (java.util.ArrayList) $r4;

        $r11 = (java.util.ArrayList) $r5;

        virtualinvoke $r8.<com.android.internal.telephony.gsm.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>($r1, $r2, $r9, $r10, $r11);

        return;
    }

    public void sendRawPdu(byte[], byte[], android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        byte[] $r1, $r2;
        android.app.PendingIntent $r3, $r4;
        android.content.Context $r5;
        com.android.internal.telephony.gsm.GSMPhone $r6;
        com.android.internal.telephony.gsm.SMSDispatcher $r7;

        $r0 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: android.app.PendingIntent;

        $r4 := @parameter3: android.app.PendingIntent;

        $r6 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r5 = virtualinvoke $r6.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r5.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $r6 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r7 = $r6.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SMSDispatcher mSMS>;

        virtualinvoke $r7.<com.android.internal.telephony.gsm.SMSDispatcher: void sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent)>($r1, $r2, $r3, $r4);

        return;
    }

    public boolean updateMessageOnSimEf(int, int, byte[])
    {
        com.android.internal.telephony.gsm.SimSmsInterfaceManager $r0;
        int $i0, $i1;
        byte[] $r1;
        java.lang.Object $r2, $r7;
        android.os.Handler $r3;
        android.os.Message $r4;
        com.android.internal.telephony.gsm.GSMPhone $r5;
        com.android.internal.telephony.gsm.CommandsInterface $r6;
        com.android.internal.telephony.gsm.SIMFileHandler $r8;
        java.lang.Throwable $r9;
        java.lang.InterruptedException $r10;
        boolean z0;

        $r0 := @this: com.android.internal.telephony.gsm.SimSmsInterfaceManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: byte[];

        specialinvoke $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>("Updating message on SIM");

        $r2 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor $r2;

     label01:
        $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean mSuccess> = 0;

        $r3 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        if $i1 != 0 goto label06;

        $r5 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r6 = $r5.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        interfaceinvoke $r6.<com.android.internal.telephony.gsm.CommandsInterface: void deleteSmsOnSim(int,android.os.Message)>($i0, $r4);

     label02:
        $r7 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.Object mLock>;

     label03:
        virtualinvoke $r7.<java.lang.Object: void wait()>();

     label04:
        exitmonitor $r2;

     label05:
        z0 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean mSuccess>;

        return z0;

     label06:
        $r1 = specialinvoke $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: byte[] makeSmsRecordData(int,byte[])>($i1, $r1);

        $r5 = $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: com.android.internal.telephony.gsm.GSMPhone mPhone>;

        $r8 = $r5.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SIMFileHandler mSIMFileHandler>;

        virtualinvoke $r8.<com.android.internal.telephony.gsm.SIMFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>(28476, $i0, $r1, null, $r4);

        goto label02;

     label07:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label08:
        throw $r9;

     label09:
        $r10 := @caughtexception;

     label10:
        specialinvoke $r0.<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to update by index");

     label11:
        goto label04;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.InterruptedException from label03 to label04 with label09;
        catch java.lang.Throwable from label02 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.String LOG_TAG> = "GSM";

        <com.android.internal.telephony.gsm.SimSmsInterfaceManager: int EVENT_UPDATE_DONE> = 2;

        <com.android.internal.telephony.gsm.SimSmsInterfaceManager: int EVENT_LOAD_DONE> = 1;

        <com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean DBG> = 0;

        return;
    }
}
