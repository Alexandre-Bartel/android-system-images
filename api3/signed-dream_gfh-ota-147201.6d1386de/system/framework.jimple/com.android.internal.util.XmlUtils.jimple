public class com.android.internal.util.XmlUtils extends java.lang.Object
{

    public void <init>()
    {
        com.android.internal.util.XmlUtils $r0;

        $r0 := @this: com.android.internal.util.XmlUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void beginDocument(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, $r3;
        int $i0;
        org.xmlpull.v1.XmlPullParserException $r2;
        boolean $z0;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

     label1:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 2 goto label2;

        if $i0 != 1 goto label1;

     label2:
        if $i0 == 2 goto label3;

        $r2 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r2;

     label3:
        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label4;

        $r2 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag: found ");

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label4:
        return;
    }

    public static final boolean convertValueToBoolean(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence $r0;
        boolean $z0, $z1;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $z1 = 0;

        if $r0 != null goto label1;

        return $z0;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>("1");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>("true");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>("TRUE");

        if $z0 == 0 goto label3;

     label2:
        $z1 = 1;

     label3:
        return $z1;
    }

    public static final int convertValueToInt(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i2;
        java.lang.String $r1;
        byte $b1, $b3;
        char $c4;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        if $r0 != null goto label1;

        return $i0;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $b1 = 1;

        $i0 = 0;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $b3 = 10;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if 45 != $c4 goto label2;

        $b1 = -1;

        $i0 = 0 + 1;

     label2:
        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if 48 != $c4 goto label7;

        $i2 = $i2 - 1;

        if $i0 != $i2 goto label3;

        return 0;

     label3:
        $i2 = $i0 + 1;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        if 120 == $c4 goto label4;

        if 88 != $c4 goto label6;

     label4:
        $i0 = $i0 + 2;

        $b3 = 16;

     label5:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r1, $b3);

        $i0 = $i0 * $b1;

        return $i0;

     label6:
        $i0 = $i0 + 1;

        $b3 = 8;

        goto label5;

     label7:
        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if 35 != $c4 goto label5;

        $i0 = $i0 + 1;

        $b3 = 16;

        goto label5;
    }

    public static final int convertValueToList(java.lang.CharSequence, java.lang.String[], int)
    {
        java.lang.CharSequence $r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.String[];

        $i0 := @parameter2: int;

        if $r0 == null goto label3;

        $i1 = 0;

     label1:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label3;

        $r2 = $r1[$i1];

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i0;
    }

    public static final int convertValueToUnsignedInt(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $r0 != null goto label1;

        return $i0;

     label1:
        $i0 = staticinvoke <com.android.internal.util.XmlUtils: int parseUnsignedIntAttribute(java.lang.CharSequence)>($r0);

        return $i0;
    }

    public static final void nextElement(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        int $i0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 2 goto label2;

        if $i0 != 1 goto label1;

        return;

     label2:
        return;
    }

    public static final int parseUnsignedIntAttribute(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        java.lang.String $r1;
        int $i0, $i1;
        byte $b2;
        char $c3;
        long $l4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $i0 = 0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $b2 = 10;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if 48 != $c3 goto label5;

        $i0 = $i1 - 1;

        if 0 != $i0 goto label1;

        return 0;

     label1:
        $i0 = 0 + 1;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if 120 == $c3 goto label2;

        if 88 != $c3 goto label4;

     label2:
        $i0 = 0 + 2;

        $b2 = 16;

     label3:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r1, $b2);

        $i0 = (int) $l4;

        return $i0;

     label4:
        $i0 = 0 + 1;

        $b2 = 8;

        goto label3;

     label5:
        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if 35 != $c3 goto label3;

        $i0 = 0 + 1;

        $b2 = 16;

        goto label3;
    }

    public static final java.util.ArrayList readListXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String[] $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>($r1, $r2);

        $r4 = (java.util.ArrayList) $r3;

        return $r4;
    }

    public static final java.util.HashMap readMapXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String[] $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>($r1, $r2);

        $r4 = (java.util.HashMap) $r3;

        return $r4;
    }

    public static final int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, $r4;
        java.lang.String[] $r2;
        int[] $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r5;
        java.lang.StringBuilder $r6;
        java.lang.NullPointerException $r7, $r9;
        java.lang.NumberFormatException $r8, $r10;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

     label01:
        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label02:
        $r3 = newarray (int)[$i0];

        $i0 = 0;

        $i1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label03:
        if $i1 != 2 goto label12;

        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label11;

     label04:
        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label05:
        $r3[$i0] = $i1;

     label06:
        $i2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i1 = $i2;

        if $i2 != 1 goto label03;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label07:
        $r7 := @caughtexception;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in byte-array");

        throw $r5;

     label08:
        $r8 := @caughtexception;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in byte-array");

        throw $r5;

     label09:
        $r9 := @caughtexception;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        throw $r5;

     label10:
        $r10 := @caughtexception;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        throw $r5;

     label11:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label12:
        if $i1 != 3 goto label06;

        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label13;

        return $r3;

     label13:
        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label14;

        $i0 = $i0 + 1;

        goto label06;

     label14:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r5;

        catch java.lang.NullPointerException from label01 to label02 with label07;
        catch java.lang.NumberFormatException from label01 to label02 with label08;
        catch java.lang.NullPointerException from label04 to label06 with label09;
        catch java.lang.NumberFormatException from label04 to label05 with label10;
    }

    public static final java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, $r7;
        java.lang.String[] $r2;
        java.util.ArrayList $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        org.xmlpull.v1.XmlPullParserException $r5;
        java.lang.StringBuilder $r6;
        boolean $z0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if $i0 != 2 goto label3;

        $r4 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>($r0, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i0 = $i1;

        if $i1 != 1 goto label1;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label3:
        if $i0 != 3 goto label2;

        $r7 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        return $r3;

     label4:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r5;
    }

    public static final java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, $r5;
        java.lang.String[] $r2;
        java.util.HashMap $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        org.xmlpull.v1.XmlPullParserException $r6;
        java.lang.StringBuilder $r7;
        boolean $z0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if $i0 != 2 goto label4;

        $r4 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>($r0, $r2);

        $r5 = $r2[0];

        if $r5 == null goto label3;

        $r5 = $r2[0];

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

     label2:
        $i1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i0 = $i1;

        if $i1 != 1 goto label1;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label3:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Map value without name attribute: ");

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label4:
        if $i0 != 3 goto label2;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label5;

        return $r3;

     label5:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r1);

        throw $r6;
    }

    private static final java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3, $r5;
        boolean $z0;
        java.lang.Comparable $r4;
        int $i0;
        org.xmlpull.v1.XmlPullParserException $r6;
        java.lang.StringBuilder $r7;
        java.lang.Float $r10;
        java.lang.Double $r11;
        int[] $r13;
        java.util.HashMap $r14;
        java.util.ArrayList $r15;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String[];

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z0 == 0 goto label02;

        $r4 = null;

     label01:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 1 goto label20;

        if $i0 != 3 goto label18;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label17;

        $r1[0] = $r2;

        return $r4;

     label02:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z0 == 0 goto label08;

        $r3 = "";

     label03:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 1 goto label07;

        if $i0 != 3 goto label05;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z0 == 0 goto label04;

        $r1[0] = $r2;

        return $r3;

     label04:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag in <string>: ");

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label05:
        if $i0 != 4 goto label06;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label06:
        if $i0 != 2 goto label03;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag in <string>: ");

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label07:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Unexpected end of document in <string>");

        throw $r6;

     label08:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z0 == 0 goto label09;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        goto label01;

     label09:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z0 == 0 goto label10;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r5);

        goto label01;

     label10:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 == 0 goto label11;

        $r10 = new java.lang.Float;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        specialinvoke $r10.<java.lang.Float: void <init>(java.lang.String)>($r5);

        $r4 = $r10;

        goto label01;

     label11:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 == 0 goto label12;

        $r11 = new java.lang.Double;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        specialinvoke $r11.<java.lang.Double: void <init>(java.lang.String)>($r5);

        $r4 = $r11;

        goto label01;

     label12:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 == 0 goto label13;

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5);

        goto label01;

     label13:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("int-array");

        if $z0 == 0 goto label14;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r13 = staticinvoke <com.android.internal.util.XmlUtils: int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>($r0, "int-array", $r1);

        $r1[0] = $r2;

        return $r13;

     label14:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("map");

        if $z0 == 0 goto label15;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r14 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>($r0, "map", $r1);

        $r1[0] = $r2;

        return $r14;

     label15:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z0 == 0 goto label16;

        interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r15 = staticinvoke <com.android.internal.util.XmlUtils: java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>($r0, "list", $r1);

        $r1[0] = $r2;

        return $r15;

     label16:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label17:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag in <");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label18:
        if $i0 != 4 goto label19;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected text in <");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label19:
        if $i0 != 2 goto label01;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag in <");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label20:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end of document in <");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r2);

        throw $r6;
    }

    public static final java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        org.xmlpull.v1.XmlPullParserException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String[];

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if $i0 != 2 goto label2;

        $r2 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>($r0, $r1);

        return $r2;

     label2:
        if $i0 != 3 goto label3;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag at: ");

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label3:
        if $i0 != 4 goto label4;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected text: ");

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label4:
        $i1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i0 = $i1;

        if $i1 != 1 goto label1;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Unexpected end of document");

        throw $r3;
    }

    public static void skipCurrentTag(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        int $i0, $i1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label2;

        if $i1 != 3 goto label1;

        $i1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 > $i0 goto label1;

        return;

     label2:
        return;
    }

    public static final void writeByteArrayXml(byte[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        byte[] $r0;
        java.lang.String $r1;
        org.xmlpull.v1.XmlSerializer $r2;
        int $i0, $i2, $i4;
        byte $b1, $b3;
        java.lang.StringBuilder $r3;
        short $s5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if $r0 != null goto label1;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "byte-array");

        if $r1 == null goto label2;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r1);

     label2:
        $i0 = lengthof $r0;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r1);

        $r3 = new java.lang.StringBuilder;

        $i2 = lengthof $r0;

        $i2 = $i2 * 2;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i2);

        $i2 = 0;

     label3:
        if $i2 >= $i0 goto label8;

        $b1 = $r0[$i2];

        $b3 = $b1 >> 4;

        if $b3 < 10 goto label6;

        $i4 = $b3 + 97;

        $i4 = $i4 - 10;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $s5 = $b1 & 255;

        if $s5 < 10 goto label7;

        $i4 = $s5 + 97;

        $i4 = $i4 - 10;

     label5:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $i2 = $i2 + 1;

        goto label3;

     label6:
        $i4 = $b3 + 48;

        goto label4;

     label7:
        $i4 = $s5 + 48;

        goto label5;

     label8:
        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r1);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "byte-array");

        return;
    }

    public static final void writeIntArrayXml(int[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int[] $r0;
        java.lang.String $r1;
        org.xmlpull.v1.XmlSerializer $r2;
        int $i0, $i1, $i2;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if $r0 != null goto label1;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "int-array");

        if $r1 == null goto label2;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r1);

     label2:
        $i0 = lengthof $r0;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r1);

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $i2 = $r0[$i1];

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r1);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        $i1 = $i1 + 1;

        goto label3;

     label4:
        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "int-array");

        return;
    }

    public static final void writeListXml(java.util.List, java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.List $r0;
        java.io.OutputStream $r1;
        org.xmlpull.v1.XmlSerializer $r2;
        java.lang.Boolean $r3;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>($r1, "utf-8");

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r3);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r0, null, $r2);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public static final void writeListXml(java.util.List, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.List $r0;
        java.lang.String $r1;
        org.xmlpull.v1.XmlSerializer $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if $r0 != null goto label1;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "list");

        if $r1 == null goto label2;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r1);

     label2:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r3, null, $r2);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "list");

        return;
    }

    public static final void writeMapXml(java.util.Map, java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map $r0;
        java.io.OutputStream $r1;
        com.android.internal.util.FastXmlSerializer $r2;
        java.lang.Boolean $r3;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r2.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>($r1, "utf-8");

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r3);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r0, null, $r2);

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public static final void writeMapXml(java.util.Map, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String $r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r7;
        java.util.Map$Entry $r6;

        $r2 := @parameter0: java.util.Map;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if $r2 != null goto label1;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "map");

        if $r0 == null goto label2;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r0);

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r0 = (java.lang.String) $r7;

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r5, $r0, $r1);

        goto label2;

     label3:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "map");

        return;
    }

    public static final void writeValueXml(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String $r0, $r3;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.Object $r2;
        boolean $z0;
        byte[] $r4;
        int[] $r5;
        java.util.Map $r6;
        java.util.List $r7;
        java.lang.RuntimeException $r8;
        java.lang.StringBuilder $r9;

        $r2 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if $r2 != null goto label02;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        if $r0 == null goto label01;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r0);

     label01:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label02:
        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label04;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string");

        if $r0 == null goto label03;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r0);

     label03:
        $r0 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string");

        return;

     label04:
        $z0 = $r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label07;

        $r3 = "int";

     label05:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, $r3);

        if $r0 == null goto label06;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r0);

     label06:
        $r0 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, $r3);

        return;

     label07:
        $z0 = $r2 instanceof java.lang.Long;

        if $z0 == 0 goto label08;

        $r3 = "long";

        goto label05;

     label08:
        $z0 = $r2 instanceof java.lang.Float;

        if $z0 == 0 goto label09;

        $r3 = "float";

        goto label05;

     label09:
        $z0 = $r2 instanceof java.lang.Double;

        if $z0 == 0 goto label10;

        $r3 = "double";

        goto label05;

     label10:
        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label11;

        $r3 = "boolean";

        goto label05;

     label11:
        $z0 = $r2 instanceof byte[];

        if $z0 == 0 goto label12;

        $r4 = (byte[]) $r2;

        $r4 = (byte[]) $r4;

        staticinvoke <com.android.internal.util.XmlUtils: void writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r4, $r0, $r1);

        return;

     label12:
        $z0 = $r2 instanceof int[];

        if $z0 == 0 goto label13;

        $r5 = (int[]) $r2;

        $r5 = (int[]) $r5;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r5, $r0, $r1);

        return;

     label13:
        $z0 = $r2 instanceof java.util.Map;

        if $z0 == 0 goto label14;

        $r6 = (java.util.Map) $r2;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r6, $r0, $r1);

        return;

     label14:
        $z0 = $r2 instanceof java.util.List;

        if $z0 == 0 goto label15;

        $r7 = (java.util.List) $r2;

        staticinvoke <com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r7, $r0, $r1);

        return;

     label15:
        $z0 = $r2 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label17;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string");

        if $r0 == null goto label16;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r0);

     label16:
        $r0 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string");

        return;

     label17:
        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeValueXml: unable to write value ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r0);

        throw $r8;
    }
}
