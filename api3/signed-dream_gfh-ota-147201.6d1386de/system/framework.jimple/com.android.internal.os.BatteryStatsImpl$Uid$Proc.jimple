public final class com.android.internal.os.BatteryStatsImpl$Uid$Proc extends android.os.BatteryStats$Uid$Proc implements com.android.internal.os.BatteryStatsImpl$Unpluggable
{
    int mLastStarts;
    long mLastSystemTime;
    long mLastUserTime;
    int mLoadedStarts;
    long mLoadedSystemTime;
    long mLoadedUserTime;
    int mStarts;
    long mSystemTime;
    int mUnpluggedStarts;
    long mUnpluggedSystemTime;
    long mUnpluggedUserTime;
    long mUserTime;
    final com.android.internal.os.BatteryStatsImpl$Uid this$1;

    void <init>(com.android.internal.os.BatteryStatsImpl$Uid)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        java.util.ArrayList $r3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Uid;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1> = $r1;

        specialinvoke $r0.<android.os.BatteryStats$Uid$Proc: void <init>()>();

        $r2 = $r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r3 = $r2.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void addCpuTimeLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        int $i0, $i1;
        long $l2, $l3;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        $l3 = (long) $i0;

        $l2 = $l2 + $l3;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l2;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        $l3 = (long) $i1;

        $l2 = $l2 + $l3;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l2;

        return;
    }

    public com.android.internal.os.BatteryStatsImpl getBatteryStats()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        com.android.internal.os.BatteryStatsImpl r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $r1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        r2 = $r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        return r2;
    }

    public int getStarts(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        int $i0, $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLastStarts>;

        return $i0;

     label1:
        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        if $i0 != 2 goto label2;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts>;

        $i1 = $i1 - $i0;

        return $i1;

     label2:
        if $i0 != 3 goto label3;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mUnpluggedStarts>;

        $i1 = $i1 - $i0;

        return $i1;

     label3:
        return $i1;
    }

    public long getSystemTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        int $i0;
        long $l1, $l2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastSystemTime>;

        return $l1;

     label1:
        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        if $i0 != 2 goto label2;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime>;

        $l1 = $l1 - $l2;

        return $l1;

     label2:
        if $i0 != 3 goto label3;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedSystemTime>;

        $l1 = $l1 - $l2;

        return $l1;

     label3:
        return $l1;
    }

    public long getUserTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        int $i0;
        long $l1, $l2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastUserTime>;

        return $l1;

     label1:
        $l1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        if $i0 != 2 goto label2;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime>;

        $l1 = $l1 - $l2;

        return $l1;

     label2:
        if $i0 != 3 goto label3;

        $l2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedUserTime>;

        $l1 = $l1 - $l2;

        return $l1;

     label3:
        return $l1;
    }

    public void incStartsLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        int $i0;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $i0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        $i0 = $i0 + 1;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = $i0;

        return;
    }

    public void plug(long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        long $l0, $l1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        return;
    }

    void readFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        android.os.Parcel $r1;
        long $l0;
        int $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $r1 := @parameter0: android.os.Parcel;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l0;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l0;

        $i1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = $i1;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime> = $l0;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime> = $l0;

        $i1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts> = $i1;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastUserTime> = $l0;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastSystemTime> = $l0;

        $i1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLastStarts> = $i1;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedUserTime> = $l0;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedSystemTime> = $l0;

        $i1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mUnpluggedStarts> = $i1;

        return;
    }

    public void unplug(long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        long $l0, $l1;
        int $i2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedUserTime> = $l0;

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedSystemTime> = $l0;

        $i2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mUnpluggedStarts> = $i2;

        return;
    }

    void writeToParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r0;
        android.os.Parcel $r1;
        long $l0;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl $r3;
        int $i1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $r1 := @parameter0: android.os.Parcel;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l0 = $l0 * 1000L;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r3 = $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l0);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastUserTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastSystemTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLastStarts>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedUserTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l0 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedSystemTime>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);

        $i1 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mUnpluggedStarts>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        return;
    }
}
