abstract class android.opengl.GLSurfaceView$BaseConfigChooser extends java.lang.Object implements android.opengl.GLSurfaceView$EGLConfigChooser
{
    protected int[] mConfigSpec;

    public void <init>(int[])
    {
        android.opengl.GLSurfaceView$BaseConfigChooser $r0;
        int[] $r1;

        $r0 := @this: android.opengl.GLSurfaceView$BaseConfigChooser;

        $r1 := @parameter0: int[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.opengl.GLSurfaceView$BaseConfigChooser: int[] mConfigSpec> = $r1;

        return;
    }

    public javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay)
    {
        android.opengl.GLSurfaceView$BaseConfigChooser $r0;
        javax.microedition.khronos.egl.EGL10 $r1;
        javax.microedition.khronos.egl.EGLDisplay $r2;
        int[] $r3, $r5;
        javax.microedition.khronos.egl.EGLConfig $r4;
        int $i0;
        java.lang.IllegalArgumentException $r6;
        javax.microedition.khronos.egl.EGLConfig[] $r7;

        $r0 := @this: android.opengl.GLSurfaceView$BaseConfigChooser;

        $r1 := @parameter0: javax.microedition.khronos.egl.EGL10;

        $r2 := @parameter1: javax.microedition.khronos.egl.EGLDisplay;

        $r3 = newarray (int)[1];

        $r5 = $r0.<android.opengl.GLSurfaceView$BaseConfigChooser: int[] mConfigSpec>;

        interfaceinvoke $r1.<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>($r2, $r5, null, 0, $r3);

        $i0 = $r3[0];

        if $i0 > 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No configs match configSpec");

        throw $r6;

     label1:
        $r7 = newarray (javax.microedition.khronos.egl.EGLConfig)[$i0];

        $r5 = $r0.<android.opengl.GLSurfaceView$BaseConfigChooser: int[] mConfigSpec>;

        interfaceinvoke $r1.<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>($r2, $r5, $r7, $i0, $r3);

        $r4 = virtualinvoke $r0.<android.opengl.GLSurfaceView$BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>($r1, $r2, $r7);

        if $r4 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No config chosen");

        throw $r6;

     label2:
        return $r4;
    }

    abstract javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig[]);
}
