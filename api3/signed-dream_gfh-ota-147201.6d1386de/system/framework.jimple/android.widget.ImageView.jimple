public class android.widget.ImageView extends android.view.View
{
    private static final android.graphics.Matrix$ScaleToFit[] sS2FArray;
    private static final android.widget.ImageView$ScaleType[] sScaleTypeArray;
    private boolean mAdjustViewBounds;
    private int mAlpha;
    private boolean mBaselineAligned;
    private android.graphics.ColorFilter mColorFilter;
    private boolean mCropToPadding;
    private android.graphics.Matrix mDrawMatrix;
    private android.graphics.drawable.Drawable mDrawable;
    private int mDrawableHeight;
    private int mDrawableWidth;
    private boolean mHaveFrame;
    private int mLevel;
    private android.graphics.Matrix mMatrix;
    private int mMaxHeight;
    private int mMaxWidth;
    private boolean mMergeState;
    private int mResource;
    private android.widget.ImageView$ScaleType mScaleType;
    private int[] mState;
    private android.graphics.RectF mTempDst;
    private android.graphics.RectF mTempSrc;
    private android.net.Uri mUri;
    private int mViewAlphaScale;

    static void <clinit>()
    {
        android.widget.ImageView$ScaleType[] $r0;
        android.widget.ImageView$ScaleType $r1;
        android.graphics.Matrix$ScaleToFit[] $r2;
        android.graphics.Matrix$ScaleToFit $r3;

        $r0 = newarray (android.widget.ImageView$ScaleType)[8];

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        $r0[0] = $r1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;

        $r0[1] = $r1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_START>;

        $r0[2] = $r1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        $r0[3] = $r1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_END>;

        $r0[4] = $r1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

        $r0[5] = $r1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        $r0[6] = $r1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_INSIDE>;

        $r0[7] = $r1;

        <android.widget.ImageView: android.widget.ImageView$ScaleType[] sScaleTypeArray> = $r0;

        $r2 = newarray (android.graphics.Matrix$ScaleToFit)[4];

        $r3 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit FILL>;

        $r2[0] = $r3;

        $r3 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit START>;

        $r2[1] = $r3;

        $r3 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        $r2[2] = $r3;

        $r3 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit END>;

        $r2[3] = $r3;

        <android.widget.ImageView: android.graphics.Matrix$ScaleToFit[] sS2FArray> = $r2;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.ImageView $r0;
        android.content.Context $r1;
        android.graphics.RectF $r2;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context)>($r1);

        $r0.<android.widget.ImageView: int mResource> = 0;

        $r0.<android.widget.ImageView: boolean mHaveFrame> = 0;

        $r0.<android.widget.ImageView: boolean mAdjustViewBounds> = 0;

        $r0.<android.widget.ImageView: int mMaxWidth> = 2147483647;

        $r0.<android.widget.ImageView: int mMaxHeight> = 2147483647;

        $r0.<android.widget.ImageView: int mAlpha> = 255;

        $r0.<android.widget.ImageView: int mViewAlphaScale> = 256;

        $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = null;

        $r0.<android.widget.ImageView: int[] mState> = null;

        $r0.<android.widget.ImageView: boolean mMergeState> = 0;

        $r0.<android.widget.ImageView: int mLevel> = 0;

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        $r0.<android.widget.ImageView: android.graphics.RectF mTempSrc> = $r2;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        $r0.<android.widget.ImageView: android.graphics.RectF mTempDst> = $r2;

        $r0.<android.widget.ImageView: boolean mBaselineAligned> = 0;

        specialinvoke $r0.<android.widget.ImageView: void initImageView()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.ImageView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.ImageView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.RectF $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        android.graphics.drawable.Drawable $r6;
        boolean $z0;
        android.widget.ImageView$ScaleType[] $r7;
        android.widget.ImageView$ScaleType $r8;
        android.graphics.PorterDuff$Mode $r9;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r0.<android.widget.ImageView: int mResource> = 0;

        $r0.<android.widget.ImageView: boolean mHaveFrame> = 0;

        $r0.<android.widget.ImageView: boolean mAdjustViewBounds> = 0;

        $r0.<android.widget.ImageView: int mMaxWidth> = 2147483647;

        $r0.<android.widget.ImageView: int mMaxHeight> = 2147483647;

        $r0.<android.widget.ImageView: int mAlpha> = 255;

        $r0.<android.widget.ImageView: int mViewAlphaScale> = 256;

        $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = null;

        $r0.<android.widget.ImageView: int[] mState> = null;

        $r0.<android.widget.ImageView: boolean mMergeState> = 0;

        $r0.<android.widget.ImageView: int mLevel> = 0;

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        $r0.<android.widget.ImageView: android.graphics.RectF mTempSrc> = $r3;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        $r0.<android.widget.ImageView: android.graphics.RectF mTempDst> = $r3;

        $r0.<android.widget.ImageView: boolean mBaselineAligned> = 0;

        specialinvoke $r0.<android.widget.ImageView: void initImageView()>();

        $r4 = <com.android.internal.R$styleable: int[] ImageView>;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r4, $i0, 0);

        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if $r6 == null goto label1;

        virtualinvoke $r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r6);

     label1:
        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        $r0.<android.widget.ImageView: boolean mBaselineAligned> = $z0;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        virtualinvoke $r0.<android.widget.ImageView: void setAdjustViewBounds(boolean)>($z0);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, 2147483647);

        virtualinvoke $r0.<android.widget.ImageView: void setMaxWidth(int)>($i0);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, 2147483647);

        virtualinvoke $r0.<android.widget.ImageView: void setMaxHeight(int)>($i0);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        if $i0 < 0 goto label2;

        $r7 = <android.widget.ImageView: android.widget.ImageView$ScaleType[] sScaleTypeArray>;

        $r8 = $r7[$i0];

        virtualinvoke $r0.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r8);

     label2:
        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>(5, 0);

        if $i0 == 0 goto label3;

        $r9 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke $r0.<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r9);

     label3:
        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 0);

        $r0.<android.widget.ImageView: boolean mCropToPadding> = $z0;

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void applyColorMod()
    {
        android.widget.ImageView $r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;
        android.graphics.ColorFilter $r2;

        $r0 := @this: android.widget.ImageView;

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r2 = $r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r2);

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $i1 = $r0.<android.widget.ImageView: int mAlpha>;

        $i0 = $r0.<android.widget.ImageView: int mViewAlphaScale>;

        $i0 = $i1 * $i0;

        $i0 = $i0 >> 8;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        return;

     label1:
        return;
    }

    private void configureBounds()
    {
        android.widget.ImageView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        android.widget.ImageView$ScaleType $r2, $r3;
        android.graphics.Matrix $r4;
        float $f0, $f1, $f2, $f3;
        android.graphics.RectF $r5, $r6;
        android.graphics.Matrix$ScaleToFit $r7;

        $r0 := @this: android.widget.ImageView;

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label18;

        $z0 = $r0.<android.widget.ImageView: boolean mHaveFrame>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $i1 = $r0.<android.widget.ImageView: int mDrawableWidth>;

        $i0 = $r0.<android.widget.ImageView: int mDrawableHeight>;

        $i3 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i2 = $r0.<android.view.View: int mPaddingLeft>;

        $i3 = $i3 - $i2;

        $i2 = $r0.<android.view.View: int mPaddingRight>;

        $i3 = $i3 - $i2;

        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i4 = $r0.<android.view.View: int mPaddingTop>;

        $i2 = $i2 - $i4;

        $i4 = $r0.<android.view.View: int mPaddingBottom>;

        $i2 = $i2 - $i4;

        if $i1 < 0 goto label02;

        if $i3 != $i1 goto label06;

     label02:
        if $i0 < 0 goto label03;

        if $i2 != $i0 goto label06;

     label03:
        $z0 = 1;

     label04:
        if $i1 <= 0 goto label05;

        if $i0 <= 0 goto label05;

        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;

        $r3 = $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r2 != $r3 goto label07;

     label05:
        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i3, $i2);

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        return;

     label06:
        $z0 = 0;

        goto label04;

     label07:
        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, $i0);

        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        $r3 = $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r2 != $r3 goto label09;

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $z0 = virtualinvoke $r4.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 == 0 goto label08;

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        return;

     label08:
        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r4;

        return;

     label09:
        if $z0 == 0 goto label10;

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        return;

     label10:
        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

        $r3 = $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r2 != $r3 goto label11;

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r4;

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        $i1 = $i3 - $i1;

        $f0 = (float) $i1;

        $f0 = $f0 * 0.5F;

        $i0 = $i2 - $i0;

        $f1 = (float) $i0;

        $f1 = $f1 * 0.5F;

        virtualinvoke $r4.<android.graphics.Matrix: void setTranslate(float,float)>($f0, $f1);

        return;

     label11:
        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        $r3 = $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r2 != $r3 goto label14;

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r4;

        $f1 = 0.0F;

        $f2 = 0.0F;

        $i4 = $i1 * $i2;

        $i5 = $i3 * $i0;

        if $i4 <= $i5 goto label13;

        $f0 = (float) $i2;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $f1 = (float) $i3;

        $f3 = (float) $i1;

        $f3 = $f3 * $f0;

        $f1 = $f1 - $f3;

        $f1 = $f1 * 0.5F;

     label12:
        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: void setScale(float,float)>($f0, $f0);

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: boolean postTranslate(float,float)>($f1, $f2);

        return;

     label13:
        $f0 = (float) $i3;

        $f2 = (float) $i1;

        $f0 = $f0 / $f2;

        $f2 = (float) $i2;

        $f3 = (float) $i0;

        $f3 = $f3 * $f0;

        $f2 = $f2 - $f3;

        $f2 = $f2 * 0.5F;

        goto label12;

     label14:
        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_INSIDE>;

        $r3 = $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r2 != $r3 goto label17;

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r4;

        if $i1 > $i3 goto label16;

        if $i0 > $i2 goto label16;

        $f0 = 1.0F;

     label15:
        $f1 = (float) $i3;

        $f2 = (float) $i1;

        $f2 = $f2 * $f0;

        $f1 = $f1 - $f2;

        $f1 = $f1 * 0.5F;

        $f2 = (float) $i2;

        $f3 = (float) $i0;

        $f3 = $f3 * $f0;

        $f2 = $f2 - $f3;

        $f2 = $f2 * 0.5F;

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: void setScale(float,float)>($f0, $f0);

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: boolean postTranslate(float,float)>($f1, $f2);

        return;

     label16:
        $f0 = (float) $i3;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f1 = (float) $i2;

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label15;

     label17:
        $r5 = $r0.<android.widget.ImageView: android.graphics.RectF mTempSrc>;

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        virtualinvoke $r5.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        $r5 = $r0.<android.widget.ImageView: android.graphics.RectF mTempDst>;

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        virtualinvoke $r5.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r4;

        $r4 = $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        $r5 = $r0.<android.widget.ImageView: android.graphics.RectF mTempSrc>;

        $r6 = $r0.<android.widget.ImageView: android.graphics.RectF mTempDst>;

        $r2 = $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        $r7 = staticinvoke <android.widget.ImageView: android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType)>($r2);

        virtualinvoke $r4.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r5, $r6, $r7);

        return;

     label18:
        return;
    }

    private void initImageView()
    {
        android.widget.ImageView $r0;
        android.graphics.Matrix $r1;
        android.widget.ImageView$ScaleType $r2;

        $r0 := @this: android.widget.ImageView;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix> = $r1;

        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType> = $r2;

        return;
    }

    private void resizeFromDrawable()
    {
        android.widget.ImageView $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.widget.ImageView;

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label4;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = $i0;

        if $i0 >= 0 goto label1;

        $i1 = $r0.<android.widget.ImageView: int mDrawableWidth>;

     label1:
        $i2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i0 = $i2;

        if $i2 >= 0 goto label2;

        $i0 = $r0.<android.widget.ImageView: int mDrawableHeight>;

     label2:
        $i2 = $r0.<android.widget.ImageView: int mDrawableWidth>;

        if $i1 != $i2 goto label3;

        $i2 = $r0.<android.widget.ImageView: int mDrawableHeight>;

        if $i0 == $i2 goto label5;

     label3:
        $r0.<android.widget.ImageView: int mDrawableWidth> = $i1;

        $r0.<android.widget.ImageView: int mDrawableHeight> = $i0;

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        return;

     label4:
        return;

     label5:
        return;
    }

    private int resolveAdjustedSize(int, int, int)
    {
        android.widget.ImageView $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i2);

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i2);

        lookupswitch($i3)
        {
            case -2147483648: goto label3;
            case 0: goto label2;
            case 1073741824: goto label4;
            default: goto label1;
        };

     label1:
        return $i0;

     label2:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i0;

     label3:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i0;

     label4:
        return $i2;
    }

    private void resolveUri()
    {
        android.widget.ImageView $r0;
        android.graphics.drawable.Drawable $r1;
        android.content.res.Resources $r2;
        int $i0;
        java.lang.Exception $r3, $r12;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r7;
        android.net.Uri $r6;
        boolean $z0;
        android.content.Context $r8;
        android.content.ContentResolver $r9;
        java.io.InputStream $r10;
        java.io.PrintStream $r11;

        $r0 := @this: android.widget.ImageView;

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label01;

        return;

     label01:
        $r2 = virtualinvoke $r0.<android.view.View: android.content.res.Resources getResources()>();

        if $r2 == null goto label10;

        $r1 = null;

        $i0 = $r0.<android.widget.ImageView: int mResource>;

        if $i0 == 0 goto label05;

     label02:
        $i0 = $r0.<android.widget.ImageView: int mResource>;

        $r1 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label03:
        specialinvoke $r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>($r1);

        return;

     label04:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource: ");

        $i0 = $r0.<android.widget.ImageView: int mResource>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r5, $r3);

        $r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        goto label03;

     label05:
        $r6 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        if $r6 == null goto label11;

        $r5 = "content";

        $r6 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label09;

     label06:
        $r8 = $r0.<android.view.View: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r10 = virtualinvoke $r9.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r6);

        $r1 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>($r10, null);

     label07:
        if $r1 != null goto label03;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resolveUri failed on bad bitmap uri: ");

        $r6 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        goto label03;

     label08:
        $r12 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open content: ");

        $r6 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r5, $r12);

        goto label07;

     label09:
        $r6 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r5 = virtualinvoke $r6.<android.net.Uri: java.lang.String toString()>();

        $r1 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>($r5);

        goto label07;

     label10:
        return;

     label11:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label06 to label07 with label08;
    }

    private static android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType)
    {
        android.widget.ImageView$ScaleType $r0;
        android.graphics.Matrix$ScaleToFit[] $r1;
        int $i0;
        android.graphics.Matrix$ScaleToFit $r2;

        $r0 := @parameter0: android.widget.ImageView$ScaleType;

        $r1 = <android.widget.ImageView: android.graphics.Matrix$ScaleToFit[] sS2FArray>;

        $i0 = $r0.<android.widget.ImageView$ScaleType: int nativeInt>;

        $i0 = $i0 - 1;

        $r2 = $r1[$i0];

        return $r2;
    }

    private void updateDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;
        int[] $r3;
        int $i0;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r0.<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r2);

     label1:
        $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = $r1;

        if $r1 == null goto label3;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

     label2:
        $i0 = $r0.<android.widget.ImageView: int mLevel>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r0.<android.widget.ImageView: int mDrawableWidth> = $i0;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r0.<android.widget.ImageView: int mDrawableHeight> = $i0;

        specialinvoke $r0.<android.widget.ImageView: void applyColorMod()>();

        specialinvoke $r0.<android.widget.ImageView: void configureBounds()>();

        return;

     label3:
        return;
    }

    public final void clearColorFilter()
    {
        android.widget.ImageView $r0;

        $r0 := @this: android.widget.ImageView;

        virtualinvoke $r0.<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>(null);

        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.ImageView $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        int[] $r2;

        $r0 := @this: android.widget.ImageView;

        specialinvoke $r0.<android.view.View: void drawableStateChanged()>();

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        return;

     label1:
        return;

     label2:
        return;
    }

    public int getBaseline()
    {
        android.widget.ImageView $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: android.widget.ImageView;

        $z0 = $r0.<android.widget.ImageView: boolean mBaselineAligned>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<android.view.View: int getMeasuredHeight()>();

        return $i0;

     label1:
        return -1;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.widget.ImageView $r0;
        android.graphics.drawable.Drawable r1;

        $r0 := @this: android.widget.ImageView;

        r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        return r1;
    }

    public android.graphics.Matrix getImageMatrix()
    {
        android.widget.ImageView $r0;
        android.graphics.Matrix r1;

        $r0 := @this: android.widget.ImageView;

        r1 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        return r1;
    }

    public android.widget.ImageView$ScaleType getScaleType()
    {
        android.widget.ImageView $r0;
        android.widget.ImageView$ScaleType r1;

        $r0 := @this: android.widget.ImageView;

        r1 = $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        return r1;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView $r0;
        android.graphics.drawable.Drawable $r1, $r2;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 != $r2 goto label1;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        specialinvoke $r0.<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public int[] onCreateDrawableState(int)
    {
        android.widget.ImageView $r0;
        int $i0, $i1;
        int[] $r1, $r2;
        boolean $z0;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.widget.ImageView: int[] mState>;

        if $r1 != null goto label1;

        $r1 = specialinvoke $r0.<android.view.View: int[] onCreateDrawableState(int)>($i0);

        return $r1;

     label1:
        $z0 = $r0.<android.widget.ImageView: boolean mMergeState>;

        if $z0 != 0 goto label2;

        $r1 = $r0.<android.widget.ImageView: int[] mState>;

        return $r1;

     label2:
        $r1 = $r0.<android.widget.ImageView: int[] mState>;

        $i1 = lengthof $r1;

        $i0 = $i1 + $i0;

        $r2 = specialinvoke $r0.<android.view.View: int[] onCreateDrawableState(int)>($i0);

        $r1 = $r0.<android.widget.ImageView: int[] mState>;

        $r1 = staticinvoke <android.widget.ImageView: int[] mergeDrawableStates(int[],int[])>($r2, $r1);

        return $r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.ImageView $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r2;
        android.graphics.Matrix $r3;
        boolean $z0;
        float $f0, $f1;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 != null goto label1;

        return;

     label1:
        $i2 = $r0.<android.widget.ImageView: int mDrawableWidth>;

        if $i2 == 0 goto label5;

        $i2 = $r0.<android.widget.ImageView: int mDrawableHeight>;

        if $i2 == 0 goto label6;

        $r3 = $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if $r3 != null goto label2;

        $i2 = $r0.<android.view.View: int mPaddingTop>;

        if $i2 != 0 goto label2;

        $i2 = $r0.<android.view.View: int mPaddingLeft>;

        if $i2 != 0 goto label2;

        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;

     label2:
        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int getSaveCount()>();

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $z0 = $r0.<android.widget.ImageView: boolean mCropToPadding>;

        if $z0 == 0 goto label3;

        $i0 = $r0.<android.view.View: int mScrollX>;

        $i1 = $r0.<android.view.View: int mScrollY>;

        $i3 = $r0.<android.view.View: int mPaddingLeft>;

        $i3 = $i3 + $i0;

        $i4 = $r0.<android.view.View: int mPaddingTop>;

        $i4 = $i4 + $i1;

        $i5 = $r0.<android.view.View: int mRight>;

        $i0 = $i5 + $i0;

        $i5 = $r0.<android.view.View: int mLeft>;

        $i0 = $i0 - $i5;

        $i5 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 - $i5;

        $i5 = $r0.<android.view.View: int mBottom>;

        $i1 = $i5 + $i1;

        $i5 = $r0.<android.view.View: int mTop>;

        $i1 = $i1 - $i5;

        $i5 = $r0.<android.view.View: int mPaddingBottom>;

        $i1 = $i1 - $i5;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i3, $i4, $i0, $i1);

     label3:
        $i3 = $r0.<android.view.View: int mPaddingLeft>;

        $f0 = (float) $i3;

        $i3 = $r0.<android.view.View: int mPaddingTop>;

        $f1 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if $r3 == null goto label4;

        $r3 = $r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r1.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r3);

     label4:
        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

        return;

     label5:
        return;

     label6:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.ImageView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float $f0, $f1, $f2;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable $r1;
        byte $b9;
        double $d0;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.widget.ImageView: void resolveUri()>();

        $f1 = 0.0F;

        $z0 = 0;

        $z1 = 0;

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 != null goto label05;

        $r0.<android.widget.ImageView: int mDrawableWidth> = -1;

        $r0.<android.widget.ImageView: int mDrawableHeight> = -1;

        $i4 = 0;

        $i5 = 0;

     label01:
        $i6 = $r0.<android.view.View: int mPaddingLeft>;

        $i7 = $r0.<android.view.View: int mPaddingRight>;

        $i8 = $r0.<android.view.View: int mPaddingTop>;

        $i2 = $r0.<android.view.View: int mPaddingBottom>;

        if $z0 != 0 goto label02;

        if $z1 == 0 goto label12;

     label02:
        $i5 = $i5 + $i6;

        $i5 = $i5 + $i7;

        $i3 = $r0.<android.widget.ImageView: int mMaxWidth>;

        $i5 = specialinvoke $r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>($i5, $i3, $i0);

        $i0 = $i5;

        $i4 = $i4 + $i8;

        $i4 = $i4 + $i2;

        $i3 = $r0.<android.widget.ImageView: int mMaxHeight>;

        $i1 = specialinvoke $r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>($i4, $i3, $i1);

        $i4 = $i1;

        $b9 = $f1 cmpl 0.0F;

        if $b9 == 0 goto label04;

        $i3 = $i5 - $i6;

        $i3 = $i3 - $i7;

        $f0 = (float) $i3;

        $i3 = $i1 - $i8;

        $i3 = $i3 - $i2;

        $f2 = (float) $i3;

        $f0 = $f0 / $f2;

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $d0 = (double) $f0;

        $b9 = $d0 cmpl 1.0E-7;

        if $b9 <= 0 goto label04;

        $z2 = 0;

        if $z0 == 0 goto label03;

        $i3 = $i1 - $i8;

        $i3 = $i3 - $i2;

        $f0 = (float) $i3;

        $f0 = $f0 * $f1;

        $i3 = (int) $f0;

        $i3 = $i3 + $i6;

        $i3 = $i3 + $i7;

        if $i3 > $i5 goto label03;

        $i0 = $i3;

        $z2 = 1;

     label03:
        if $z2 != 0 goto label04;

        if $z1 == 0 goto label04;

        $i6 = $i0 - $i6;

        $i7 = $i6 - $i7;

        $f0 = (float) $i7;

        $f1 = $f0 / $f1;

        $i7 = (int) $f1;

        $i8 = $i7 + $i8;

        $i2 = $i8 + $i2;

        if $i2 > $i1 goto label04;

        $i4 = $i2;

     label04:
        virtualinvoke $r0.<android.view.View: void setMeasuredDimension(int,int)>($i0, $i4);

        return;

     label05:
        $i2 = $r0.<android.widget.ImageView: int mDrawableWidth>;

        $i5 = $i2;

        $i8 = $r0.<android.widget.ImageView: int mDrawableHeight>;

        $i4 = $i8;

        if $i2 > 0 goto label06;

        $i5 = 1;

     label06:
        if $i8 > 0 goto label07;

        $i4 = 1;

     label07:
        $z2 = $r0.<android.widget.ImageView: boolean mAdjustViewBounds>;

        if $z2 == 0 goto label01;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i2 == 1073741824 goto label10;

        $z0 = 1;

     label08:
        if $i8 == 1073741824 goto label11;

        $z1 = 1;

     label09:
        $f1 = (float) $i5;

        $f0 = (float) $i4;

        $f1 = $f1 / $f0;

        goto label01;

     label10:
        $z0 = 0;

        goto label08;

     label11:
        $z1 = 0;

        goto label09;

     label12:
        $i7 = $i6 + $i7;

        $i7 = $i5 + $i7;

        $i2 = $i8 + $i2;

        $i2 = $i4 + $i2;

        $i8 = virtualinvoke $r0.<android.view.View: int getSuggestedMinimumWidth()>();

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);

        $i7 = virtualinvoke $r0.<android.view.View: int getSuggestedMinimumHeight()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i7);

        $i0 = staticinvoke <android.widget.ImageView: int resolveSize(int,int)>($i8, $i0);

        $i4 = staticinvoke <android.widget.ImageView: int resolveSize(int,int)>($i2, $i1);

        goto label04;
    }

    protected boolean onSetAlpha(int)
    {
        android.widget.ImageView $r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if $r1 != null goto label2;

        $i1 = $i0 >> 7;

        $i0 = $i0 + $i1;

        $i1 = $r0.<android.widget.ImageView: int mViewAlphaScale>;

        if $i1 == $i0 goto label1;

        $r0.<android.widget.ImageView: int mViewAlphaScale> = $i0;

        specialinvoke $r0.<android.widget.ImageView: void applyColorMod()>();

     label1:
        return 1;

     label2:
        return 0;
    }

    public void setAdjustViewBounds(boolean)
    {
        android.widget.ImageView $r0;
        boolean $z0;
        android.widget.ImageView$ScaleType $r1;

        $r0 := @this: android.widget.ImageView;

        $z0 := @parameter0: boolean;

        $r0.<android.widget.ImageView: boolean mAdjustViewBounds> = $z0;

        if $z0 == 0 goto label1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        virtualinvoke $r0.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r1);

        return;

     label1:
        return;
    }

    public void setAlpha(int)
    {
        android.widget.ImageView $r0;
        int $i0, $i1;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $i1 = $i0 & 255;

        $i0 = $r0.<android.widget.ImageView: int mAlpha>;

        if $i0 == $i1 goto label1;

        $r0.<android.widget.ImageView: int mAlpha> = $i1;

        specialinvoke $r0.<android.widget.ImageView: void applyColorMod()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    public final void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        android.widget.ImageView $r0;
        int $i0;
        android.graphics.PorterDuff$Mode $r1;
        android.graphics.PorterDuffColorFilter $r2;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 = new android.graphics.PorterDuffColorFilter;

        specialinvoke $r2.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        virtualinvoke $r0.<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>($r2);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.widget.ImageView $r0;
        android.graphics.ColorFilter $r1, $r2;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter>;

        if $r2 == $r1 goto label1;

        $r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter> = $r1;

        specialinvoke $r0.<android.widget.ImageView: void applyColorMod()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.ImageView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 = specialinvoke $r0.<android.view.View: boolean setFrame(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r0.<android.widget.ImageView: boolean mHaveFrame> = 1;

        specialinvoke $r0.<android.widget.ImageView: void configureBounds()>();

        return $z0;
    }

    public void setImageBitmap(android.graphics.Bitmap)
    {
        android.widget.ImageView $r0;
        android.graphics.Bitmap $r1;
        android.graphics.drawable.BitmapDrawable $r2;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r1);

        virtualinvoke $r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setImageDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView $r0;
        android.graphics.drawable.Drawable $r1, $r2;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == $r1 goto label1;

        $r0.<android.widget.ImageView: int mResource> = 0;

        $r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        specialinvoke $r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>($r1);

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label1:
        return;
    }

    public void setImageLevel(int)
    {
        android.widget.ImageView $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $r0.<android.widget.ImageView: int mLevel> = $i0;

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        specialinvoke $r0.<android.widget.ImageView: void resizeFromDrawable()>();

        return;

     label1:
        return;
    }

    public void setImageMatrix(android.graphics.Matrix)
    {
        android.widget.ImageView $r0;
        android.graphics.Matrix $r1, $r2;
        boolean $z0;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.graphics.Matrix;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 == 0 goto label1;

        $r1 = null;

     label1:
        if $r1 != null goto label2;

        $r2 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $z0 = virtualinvoke $r2.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 == 0 goto label3;

     label2:
        if $r1 == null goto label4;

        $r2 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $z0 = virtualinvoke $r2.<android.graphics.Matrix: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label5;

     label3:
        $r2 = $r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r1);

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label4:
        return;

     label5:
        return;
    }

    public void setImageResource(int)
    {
        android.widget.ImageView $r0;
        int $i0, $i1;
        android.net.Uri $r1;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        if $r1 != null goto label1;

        $i1 = $r0.<android.widget.ImageView: int mResource>;

        if $i1 == $i0 goto label2;

     label1:
        specialinvoke $r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(null);

        $r0.<android.widget.ImageView: int mResource> = $i0;

        $r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        specialinvoke $r0.<android.widget.ImageView: void resolveUri()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label2:
        return;
    }

    public void setImageState(int[], boolean)
    {
        android.widget.ImageView $r0;
        int[] $r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: int[];

        $z0 := @parameter1: boolean;

        $r0.<android.widget.ImageView: int[] mState> = $r1;

        $r0.<android.widget.ImageView: boolean mMergeState> = $z0;

        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r0.<android.view.View: void refreshDrawableState()>();

        specialinvoke $r0.<android.widget.ImageView: void resizeFromDrawable()>();

        return;

     label1:
        return;
    }

    public void setImageURI(android.net.Uri)
    {
        android.widget.ImageView $r0;
        android.net.Uri $r1, $r2;
        boolean $z0;
        int $i0;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.net.Uri;

        $i0 = $r0.<android.widget.ImageView: int mResource>;

        if $i0 != 0 goto label1;

        $r2 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        if $r2 == $r1 goto label2;

        if $r1 == null goto label1;

        $r2 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.ImageView: android.net.Uri mUri>;

        $z0 = virtualinvoke $r1.<android.net.Uri: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

     label1:
        specialinvoke $r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(null);

        $r0.<android.widget.ImageView: int mResource> = 0;

        $r0.<android.widget.ImageView: android.net.Uri mUri> = $r1;

        specialinvoke $r0.<android.widget.ImageView: void resolveUri()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label2:
        return;

     label3:
        return;
    }

    public void setMaxHeight(int)
    {
        android.widget.ImageView $r0;
        int $i0;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $r0.<android.widget.ImageView: int mMaxHeight> = $i0;

        return;
    }

    public void setMaxWidth(int)
    {
        android.widget.ImageView $r0;
        int $i0;

        $r0 := @this: android.widget.ImageView;

        $i0 := @parameter0: int;

        $r0.<android.widget.ImageView: int mMaxWidth> = $i0;

        return;
    }

    public void setScaleType(android.widget.ImageView$ScaleType)
    {
        android.widget.ImageView $r0;
        android.widget.ImageView$ScaleType $r1, $r3;
        java.lang.NullPointerException $r2;
        boolean $z0;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.widget.ImageView$ScaleType;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $r3 = $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r3 == $r1 goto label4;

        $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType> = $r1;

        $r3 = $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

        if $r3 != $r1 goto label3;

        $z0 = 1;

     label2:
        virtualinvoke $r0.<android.view.View: void setWillNotCacheDrawing(boolean)>($z0);

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return;
    }

    public void setSelected(boolean)
    {
        android.widget.ImageView $r0;
        boolean $z0;

        $r0 := @this: android.widget.ImageView;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.View: void setSelected(boolean)>($z0);

        specialinvoke $r0.<android.widget.ImageView: void resizeFromDrawable()>();

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;

        $r0 := @this: android.widget.ImageView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == $r1 goto label1;

        $z0 = specialinvoke $r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
