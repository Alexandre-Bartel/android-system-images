public class com.google.googlenav.map.TrafficService extends java.lang.Object implements com.google.common.OutOfMemoryHandler, java.lang.Runnable
{
    private static final long CLEAN_CACHE_TIME;
    private static final long MAX_TILE_AGE;
    public static final int MAX_TRAFFIC_ZOOM;
    public static final int MIN_TRAFFIC_ZOOM;
    private final java.util.Hashtable cache;
    private volatile boolean exitWorkThread;
    private final java.lang.Object indefiniteThreadLockObject;
    private long nextRefreshTime;
    private final long refreshMillis;
    private volatile com.google.googlenav.map.TrafficService$TrafficTileRequest request;
    private final java.util.Hashtable requestedTiles;
    private final java.lang.Object timedThreadLockObject;

    public void <init>(int)
    {
        com.google.googlenav.map.TrafficService $r0;
        int $i0;
        java.lang.Object $r1;
        long $l1;
        java.util.Hashtable $r2;

        $r0 := @this: com.google.googlenav.map.TrafficService;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0.<com.google.googlenav.map.TrafficService: java.lang.Object indefiniteThreadLockObject> = $r1;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0.<com.google.googlenav.map.TrafficService: java.lang.Object timedThreadLockObject> = $r1;

        $r0.<com.google.googlenav.map.TrafficService: boolean exitWorkThread> = 1;

        $l1 = (long) $i0;

        $r0.<com.google.googlenav.map.TrafficService: long refreshMillis> = $l1;

        $r0.<com.google.googlenav.map.TrafficService: long nextRefreshTime> = 0L;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable cache> = $r2;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable requestedTiles> = $r2;

        staticinvoke <com.google.common.StaticUtil: void registerOutOfMemoryHandler(com.google.common.OutOfMemoryHandler)>($r0);

        virtualinvoke $r0.<com.google.googlenav.map.TrafficService: void start()>();

        return;
    }

    static java.util.Hashtable access$000(com.google.googlenav.map.TrafficService)
    {
        com.google.googlenav.map.TrafficService $r0;
        java.util.Hashtable r1;

        $r0 := @parameter0: com.google.googlenav.map.TrafficService;

        r1 = $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable requestedTiles>;

        return r1;
    }

    static java.util.Hashtable access$100(com.google.googlenav.map.TrafficService)
    {
        com.google.googlenav.map.TrafficService $r0;
        java.util.Hashtable r1;

        $r0 := @parameter0: com.google.googlenav.map.TrafficService;

        r1 = $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable cache>;

        return r1;
    }

    static java.lang.Object access$200(com.google.googlenav.map.TrafficService)
    {
        com.google.googlenav.map.TrafficService $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.google.googlenav.map.TrafficService;

        r1 = $r0.<com.google.googlenav.map.TrafficService: java.lang.Object indefiniteThreadLockObject>;

        return r1;
    }

    private void requestTile(com.google.googlenav.map.Tile, com.google.googlenav.map.TrafficTile)
    {
        com.google.googlenav.map.TrafficService $r0;
        com.google.googlenav.map.Tile $r1;
        com.google.googlenav.map.TrafficTile $r2;
        com.google.googlenav.map.TrafficService$TrafficTileRequest $r3;
        java.util.Hashtable $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.google.googlenav.map.TrafficService;

        $r1 := @parameter0: com.google.googlenav.map.Tile;

        $r2 := @parameter1: com.google.googlenav.map.TrafficTile;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.google.googlenav.map.TrafficService: com.google.googlenav.map.TrafficService$TrafficTileRequest request>;

        if $r3 != null goto label2;

        $r3 = new com.google.googlenav.map.TrafficService$TrafficTileRequest;

        specialinvoke $r3.<com.google.googlenav.map.TrafficService$TrafficTileRequest: void <init>(com.google.googlenav.map.TrafficService)>($r0);

        $r0.<com.google.googlenav.map.TrafficService: com.google.googlenav.map.TrafficService$TrafficTileRequest request> = $r3;

     label2:
        $r3 = $r0.<com.google.googlenav.map.TrafficService: com.google.googlenav.map.TrafficService$TrafficTileRequest request>;

        virtualinvoke $r3.<com.google.googlenav.map.TrafficService$TrafficTileRequest: void addTile(com.google.googlenav.map.TrafficTile)>($r2);

        $r4 = $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable requestedTiles>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    void cleanCache(long)
    {
        com.google.googlenav.map.TrafficService $r0;
        long $l0, $l1, $l2;
        java.util.Hashtable $r1;
        java.util.Enumeration $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.google.googlenav.map.Tile $r4;
        com.google.googlenav.map.TrafficTile $r5;
        byte $b3;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.google.googlenav.map.TrafficService;

        $l0 := @parameter0: long;

        entermonitor $r0;

     label1:
        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("TRAFFIC", "Cleaning cache!");

        $r1 = $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable cache>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (com.google.googlenav.map.Tile) $r3;

        $r1 = $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable cache>;

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        $r5 = (com.google.googlenav.map.TrafficTile) $r3;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = virtualinvoke $r5.<com.google.googlenav.map.TrafficTile: long getLastAccess()>();

        $l1 = $l1 - $l2;

        $b3 = $l1 cmp $l0;

        if $b3 <= 0 goto label2;

        $r1 = $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable cache>;

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.Log: void log(java.lang.String,java.lang.String)>("TRAFFIC", $r7);

     label3:
        goto label2;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r0;

        throw $r8;

     label5:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void close()
    {
        com.google.googlenav.map.TrafficService $r0;

        $r0 := @this: com.google.googlenav.map.TrafficService;

        staticinvoke <com.google.common.StaticUtil: void removeOutOfMemoryHandler(com.google.common.OutOfMemoryHandler)>($r0);

        virtualinvoke $r0.<com.google.googlenav.map.TrafficService: void stop()>();

        return;
    }

    public com.google.googlenav.map.TrafficTile getTile(com.google.googlenav.map.Tile, boolean)
    {
        com.google.googlenav.map.TrafficService $r0;
        com.google.googlenav.map.Tile $r1;
        boolean $z0;
        long $l0, $l2;
        com.google.map.Zoom $r2;
        int $i1;
        com.google.googlenav.map.TrafficTile $r3, $r6;
        java.util.Hashtable $r4;
        java.lang.Object $r5;
        byte $b3;
        com.google.googlenav.map.TrafficService$TrafficTileRequest $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.google.googlenav.map.TrafficService;

        $r1 := @parameter0: com.google.googlenav.map.Tile;

        $z0 := @parameter1: boolean;

        entermonitor $r0;

     label01:
        $r2 = virtualinvoke $r1.<com.google.googlenav.map.Tile: com.google.map.Zoom getZoom()>();

        $i1 = virtualinvoke $r2.<com.google.map.Zoom: int getZoomLevel()>();

     label02:
        if $i1 <= 19 goto label04;

        $r3 = null;

     label03:
        exitmonitor $r0;

        return $r3;

     label04:
        $r4 = $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable cache>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (com.google.googlenav.map.TrafficTile) $r5;

        $r4 = $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable requestedTiles>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.google.googlenav.map.TrafficTile) $r5;

        if $r3 == null goto label08;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = virtualinvoke $r3.<com.google.googlenav.map.TrafficTile: long getDataTime()>();

        $l0 = $l0 - $l2;

        if $z0 == 0 goto label03;

        if $r6 != null goto label03;

        $l2 = $r0.<com.google.googlenav.map.TrafficService: long refreshMillis>;

        $l2 = $l2 / 2L;

        $b3 = $l0 cmp $l2;

        if $b3 <= 0 goto label03;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $r0.<com.google.googlenav.map.TrafficService: long nextRefreshTime>;

        $b3 = $l2 cmp $l0;

        if $b3 > 0 goto label05;

        $r7 = $r0.<com.google.googlenav.map.TrafficService: com.google.googlenav.map.TrafficService$TrafficTileRequest request>;

        if $r7 == null goto label03;

     label05:
        specialinvoke $r0.<com.google.googlenav.map.TrafficService: void requestTile(com.google.googlenav.map.Tile,com.google.googlenav.map.TrafficTile)>($r1, $r3);

     label06:
        goto label03;

     label07:
        $r8 := @caughtexception;

        exitmonitor $r0;

        throw $r8;

     label08:
        if $r6 == null goto label09;

        $r3 = $r6;

        goto label03;

     label09:
        $r3 = new com.google.googlenav.map.TrafficTile;

        specialinvoke $r3.<com.google.googlenav.map.TrafficTile: void <init>(com.google.googlenav.map.Tile)>($r1);

        if $z0 == 0 goto label03;

        specialinvoke $r0.<com.google.googlenav.map.TrafficService: void requestTile(com.google.googlenav.map.Tile,com.google.googlenav.map.TrafficTile)>($r1, $r3);

     label10:
        goto label03;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
    }

    public void handleOutOfMemory()
    {
        com.google.googlenav.map.TrafficService $r0;
        java.util.Hashtable $r1;

        $r0 := @this: com.google.googlenav.map.TrafficService;

        $r1 = $r0.<com.google.googlenav.map.TrafficService: java.util.Hashtable cache>;

        virtualinvoke $r1.<java.util.Hashtable: void clear()>();

        return;
    }

    public void requestTiles()
    {
        com.google.googlenav.map.TrafficService $r0;
        com.google.googlenav.map.TrafficService$TrafficTileRequest $r1;
        long $l0, $l1;
        com.google.common.DataRequestDispatcher $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.google.googlenav.map.TrafficService;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.googlenav.map.TrafficService: com.google.googlenav.map.TrafficService$TrafficTileRequest request>;

        if $r1 == null goto label2;

        $r2 = staticinvoke <com.google.common.DataRequestDispatcher: com.google.common.DataRequestDispatcher getInstance()>();

        $r1 = $r0.<com.google.googlenav.map.TrafficService: com.google.googlenav.map.TrafficService$TrafficTileRequest request>;

        virtualinvoke $r2.<com.google.common.DataRequestDispatcher: void addDataRequest(com.google.common.DataRequest)>($r1);

        $r0.<com.google.googlenav.map.TrafficService: com.google.googlenav.map.TrafficService$TrafficTileRequest request> = null;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $r0.<com.google.googlenav.map.TrafficService: long refreshMillis>;

        $l0 = $l1 + $l0;

        $r0.<com.google.googlenav.map.TrafficService: long nextRefreshTime> = $l0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void run()
    {
        com.google.googlenav.map.TrafficService $r0;
        boolean $z0;
        java.lang.Object $r1, $r2;
        java.lang.Exception $r3;
        java.lang.Throwable $r4, $r6;
        java.lang.OutOfMemoryError $r5;
        java.lang.InterruptedException $r7, $r8;

        $r0 := @this: com.google.googlenav.map.TrafficService;

     label01:
        $z0 = $r0.<com.google.googlenav.map.TrafficService: boolean exitWorkThread>;

        if $z0 != 0 goto label23;

     label02:
        $r1 = $r0.<com.google.googlenav.map.TrafficService: java.lang.Object indefiniteThreadLockObject>;

        entermonitor $r1;

     label03:
        $r2 = $r0.<com.google.googlenav.map.TrafficService: java.lang.Object indefiniteThreadLockObject>;

     label04:
        virtualinvoke $r2.<java.lang.Object: void wait()>();

     label05:
        exitmonitor $r1;

     label06:
        $r1 = $r0.<com.google.googlenav.map.TrafficService: java.lang.Object timedThreadLockObject>;

        entermonitor $r1;

     label07:
        $r2 = $r0.<com.google.googlenav.map.TrafficService: java.lang.Object timedThreadLockObject>;

     label08:
        virtualinvoke $r2.<java.lang.Object: void wait(long)>(20113L);

     label09:
        exitmonitor $r1;

     label10:
        $z0 = $r0.<com.google.googlenav.map.TrafficService: boolean exitWorkThread>;

     label11:
        if $z0 != 0 goto label01;

        virtualinvoke $r0.<com.google.googlenav.map.TrafficService: void cleanCache(long)>(60000L);

     label12:
        goto label01;

     label13:
        $r3 := @caughtexception;

        staticinvoke <com.google.common.Log: void logThrowable(java.lang.String,java.lang.Throwable)>("TrafficService BG", $r3);

        goto label01;

     label14:
        $r4 := @caughtexception;

     label15:
        exitmonitor $r1;

     label16:
        throw $r4;

     label17:
        $r5 := @caughtexception;

        staticinvoke <com.google.common.StaticUtil: void handleOutOfMemory()>();

        goto label01;

     label18:
        $r6 := @caughtexception;

     label19:
        exitmonitor $r1;

     label20:
        throw $r6;

     label21:
        $r7 := @caughtexception;

        goto label09;

     label22:
        $r8 := @caughtexception;

        goto label05;

     label23:
        return;

        catch java.lang.Exception from label02 to label03 with label13;
        catch java.lang.InterruptedException from label04 to label05 with label22;
        catch java.lang.Throwable from label03 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.InterruptedException from label08 to label09 with label21;
        catch java.lang.Throwable from label07 to label09 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Exception from label10 to label12 with label13;
        catch java.lang.OutOfMemoryError from label11 to label12 with label17;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Exception from label16 to label17 with label13;
        catch java.lang.OutOfMemoryError from label16 to label17 with label17;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Exception from label20 to label21 with label13;
        catch java.lang.OutOfMemoryError from label20 to label21 with label17;
    }

    public void start()
    {
        com.google.googlenav.map.TrafficService $r0;
        boolean $z0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.googlenav.map.TrafficService;

        entermonitor $r0;

     label1:
        $z0 = $r0.<com.google.googlenav.map.TrafficService: boolean exitWorkThread>;

        if $z0 == 0 goto label2;

        $r0.<com.google.googlenav.map.TrafficService: boolean exitWorkThread> = 0;

        $r1 = new java.lang.Thread;

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r0);

        virtualinvoke $r1.<java.lang.Thread: void setPriority(int)>(1);

        virtualinvoke $r1.<java.lang.Thread: void start()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stop()
    {
        com.google.googlenav.map.TrafficService $r0;
        java.lang.Object $r1, $r2;
        java.lang.Throwable $r3, $r4, $r5;

        $r0 := @this: com.google.googlenav.map.TrafficService;

        entermonitor $r0;

     label01:
        $r0.<com.google.googlenav.map.TrafficService: boolean exitWorkThread> = 1;

        $r1 = $r0.<com.google.googlenav.map.TrafficService: java.lang.Object timedThreadLockObject>;

        entermonitor $r1;

     label02:
        $r2 = $r0.<com.google.googlenav.map.TrafficService: java.lang.Object timedThreadLockObject>;

        virtualinvoke $r2.<java.lang.Object: void notify()>();

        exitmonitor $r1;

     label03:
        $r1 = $r0.<com.google.googlenav.map.TrafficService: java.lang.Object indefiniteThreadLockObject>;

        entermonitor $r1;

     label04:
        $r2 = $r0.<com.google.googlenav.map.TrafficService: java.lang.Object indefiniteThreadLockObject>;

        virtualinvoke $r2.<java.lang.Object: void notify()>();

        exitmonitor $r1;

     label05:
        exitmonitor $r0;

        return;

     label06:
        $r3 := @caughtexception;

     label07:
        exitmonitor $r1;

     label08:
        throw $r3;

     label09:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor $r1;

     label12:
        throw $r5;

     label13:
        nop;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public static void <clinit>()
    {
        <com.google.googlenav.map.TrafficService: int MIN_TRAFFIC_ZOOM> = 9;

        <com.google.googlenav.map.TrafficService: int MAX_TRAFFIC_ZOOM> = 19;

        <com.google.googlenav.map.TrafficService: long MAX_TILE_AGE> = 60000L;

        <com.google.googlenav.map.TrafficService: long CLEAN_CACHE_TIME> = 20113L;

        return;
    }
}
