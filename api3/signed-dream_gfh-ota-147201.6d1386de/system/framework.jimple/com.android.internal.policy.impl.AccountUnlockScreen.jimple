public class com.android.internal.policy.impl.AccountUnlockScreen extends android.widget.RelativeLayout implements android.content.ServiceConnection, android.text.TextWatcher, android.view.View$OnClickListener, com.android.internal.policy.impl.KeyguardScreen
{
    private static final int AWAKE_POKE_MILLIS;
    private static final java.lang.String LOCK_PATTERN_CLASS;
    private static final java.lang.String LOCK_PATTERN_PACKAGE;
    private android.accounts.IAccountsService mAccountsService;
    private final com.android.internal.policy.impl.KeyguardScreenCallback mCallback;
    private android.widget.Button mEmergencyCall;
    private android.widget.TextView mInstructions;
    private final com.android.internal.widget.LockPatternUtils mLockPatternUtils;
    private android.widget.EditText mLogin;
    private android.widget.Button mOk;
    private android.widget.EditText mPassword;
    private android.widget.TextView mTopHeader;

    public void <init>(android.content.Context, com.android.internal.policy.impl.KeyguardScreenCallback, com.android.internal.widget.LockPatternUtils)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        android.content.Context $r1;
        com.android.internal.policy.impl.KeyguardScreenCallback $r2;
        com.android.internal.widget.LockPatternUtils $r3;
        android.text.LoginFilter$UsernameFilterGeneric $r4;
        android.view.LayoutInflater $r5;
        android.view.View $r6;
        android.widget.TextView $r7;
        android.widget.EditText $r8;
        android.text.InputFilter[] $r9;
        android.widget.Button $r10;
        android.content.Intent $r11;
        boolean $z0;
        java.lang.IllegalStateException $r12;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.android.internal.policy.impl.KeyguardScreenCallback;

        $r3 := @parameter2: com.android.internal.widget.LockPatternUtils;

        specialinvoke $r0.<android.widget.RelativeLayout: void <init>(android.content.Context)>($r1);

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback> = $r2;

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.widget.LockPatternUtils mLockPatternUtils> = $r3;

        $r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(17367088, $r0, 1);

        $r6 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908669);

        $r7 = (android.widget.TextView) $r6;

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.TextView mTopHeader> = $r7;

        $r6 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908671);

        $r7 = (android.widget.TextView) $r6;

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.TextView mInstructions> = $r7;

        $r6 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908672);

        $r8 = (android.widget.EditText) $r6;

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mLogin> = $r8;

        $r8 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mLogin>;

        $r9 = newarray (android.text.InputFilter)[1];

        $r4 = new android.text.LoginFilter$UsernameFilterGeneric;

        specialinvoke $r4.<android.text.LoginFilter$UsernameFilterGeneric: void <init>()>();

        $r9[0] = $r4;

        virtualinvoke $r8.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r9);

        $r8 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mLogin>;

        virtualinvoke $r8.<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>($r0);

        $r6 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908673);

        $r8 = (android.widget.EditText) $r6;

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mPassword> = $r8;

        $r8 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mPassword>;

        virtualinvoke $r8.<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>($r0);

        $r6 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908674);

        $r10 = (android.widget.Button) $r6;

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.Button mOk> = $r10;

        $r10 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.Button mOk>;

        virtualinvoke $r10.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r0);

        $r6 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908668);

        $r10 = (android.widget.Button) $r6;

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.Button mEmergencyCall> = $r10;

        $r10 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.Button mEmergencyCall>;

        virtualinvoke $r10.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r0);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountUnlockScreen", "debug: Connecting to accounts service");

        $r1 = $r0.<android.view.View: android.content.Context mContext>;

        $r11 = <android.accounts.AccountsServiceConstants: android.content.Intent SERVICE_INTENT>;

        $z0 = virtualinvoke $r1.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r11, $r0, 1);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountUnlockScreen", "debug: Couldn\'t connect to accounts service");

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("couldn\'t bind to accounts service");

        throw $r12;

     label1:
        return;
    }

    private boolean checkPassword()
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        android.widget.EditText $r1;
        android.text.Editable $r2;
        java.lang.String $r3, $r4;
        android.accounts.IAccountsService $r5;
        boolean $z0;
        android.os.RemoteException $r6;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mLogin>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r1 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mPassword>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label1:
        $r3 = specialinvoke $r0.<com.android.internal.policy.impl.AccountUnlockScreen: java.lang.String findIntendedAccount(java.lang.String)>($r3);

     label2:
        if $r3 != null goto label3;

        return 0;

     label3:
        $r5 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.accounts.IAccountsService mAccountsService>;

        $z0 = interfaceinvoke $r5.<android.accounts.IAccountsService: boolean shouldUnlock(java.lang.String,java.lang.String)>($r3, $r4);

     label4:
        return $z0;

     label5:
        $r6 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private java.lang.String findIntendedAccount(java.lang.String)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        java.lang.String $r1, $r2, $r6, $r7;
        int $i0, $i2, $i4;
        android.accounts.IAccountsService $r3;
        java.lang.String[] $r4;
        android.os.RemoteException $r5;
        byte $b1, $b3;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.accounts.IAccountsService mAccountsService>;

     label01:
        $r4 = interfaceinvoke $r3.<android.accounts.IAccountsService: java.lang.String[] getAccounts()>();

     label02:
        if $r4 != null goto label04;

        return null;

     label03:
        $r5 := @caughtexception;

        return null;

     label04:
        $r6 = null;

        $b1 = 0;

        $i0 = lengthof $r4;

        $i2 = 0;

     label05:
        if $i2 >= $i0 goto label12;

        $r2 = $r4[$i2];

        $b3 = 0;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label08;

        $b3 = 4;

     label06:
        if $b3 <= $b1 goto label11;

        $r6 = $r2;

        $b1 = $b3;

     label07:
        $i2 = $i2 + 1;

        goto label05;

     label08:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label09;

        $b3 = 3;

        goto label06;

     label09:
        $i4 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        if $i4 >= 0 goto label06;

        $i4 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i4 < 0 goto label06;

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label10;

        $b3 = 2;

        goto label06;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z0 == 0 goto label06;

        $b3 = 1;

        goto label06;

     label11:
        if $b3 != $b1 goto label07;

        $r6 = null;

        goto label07;

     label12:
        return $r6;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    public void afterTextChanged(android.text.Editable)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        android.text.Editable $r1;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 := @parameter0: android.text.Editable;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }

    public void cleanUp()
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        android.content.Context $r1;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 = $r0.<android.view.View: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r0);

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        android.view.KeyEvent $r1;
        int $i0;
        com.android.internal.policy.impl.KeyguardScreenCallback $r2;
        boolean $z0;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 4 goto label1;

        $r2 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        interfaceinvoke $r2.<com.android.internal.policy.impl.KeyguardScreenCallback: void goToLockScreen()>();

        return 1;

     label1:
        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;
    }

    public boolean needsInput()
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        return 1;
    }

    public void onClick(android.view.View)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        android.view.View $r1;
        android.content.Intent $r2;
        boolean $z0;
        com.android.internal.policy.impl.KeyguardScreenCallback $r3;
        android.widget.Button $r4;
        com.android.internal.widget.LockPatternUtils $r5;
        android.content.Context $r6;
        android.widget.TextView $r7;
        android.widget.EditText $r8;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 := @parameter0: android.view.View;

        $r3 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        interfaceinvoke $r3.<com.android.internal.policy.impl.KeyguardScreenCallback: void pokeWakelock()>();

        $r4 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.Button mOk>;

        if $r1 != $r4 goto label1;

        $z0 = specialinvoke $r0.<com.android.internal.policy.impl.AccountUnlockScreen: boolean checkPassword()>();

        if $z0 == 0 goto label2;

        $r5 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        virtualinvoke $r5.<com.android.internal.widget.LockPatternUtils: void setPermanentlyLocked(boolean)>(0);

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.settings", "com.android.settings.ChooseLockPattern");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r6 = $r0.<android.view.View: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void startActivity(android.content.Intent)>($r2);

        $r3 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        interfaceinvoke $r3.<com.android.internal.policy.impl.KeyguardScreenCallback: void keyguardDone(boolean)>(1);

     label1:
        $r4 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.Button mEmergencyCall>;

        if $r1 != $r4 goto label3;

        $r3 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        interfaceinvoke $r3.<com.android.internal.policy.impl.KeyguardScreenCallback: void takeEmergencyCallAction()>();

        return;

     label2:
        $r7 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.TextView mInstructions>;

        virtualinvoke $r7.<android.widget.TextView: void setText(int)>(17039734);

        $r8 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mPassword>;

        virtualinvoke $r8.<android.widget.TextView: void setText(java.lang.CharSequence)>("");

        goto label1;

     label3:
        return;
    }

    public void onPause()
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        int $i0;
        android.graphics.Rect $r1;
        boolean $z0;
        android.widget.EditText $r2;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mLogin>;

        $z0 = virtualinvoke $r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);

        return $z0;
    }

    public void onResume()
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        android.widget.EditText $r1;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mLogin>;

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>("");

        $r1 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mPassword>;

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>("");

        $r1 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText mLogin>;

        virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        android.accounts.IAccountsService $r3;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountUnlockScreen", "debug: About to grab as interface");

        $r3 = staticinvoke <android.accounts.IAccountsService$Stub: android.accounts.IAccountsService asInterface(android.os.IBinder)>($r2);

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.accounts.IAccountsService mAccountsService> = $r3;

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        android.content.ComponentName $r1;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 := @parameter0: android.content.ComponentName;

        $r0.<com.android.internal.policy.impl.AccountUnlockScreen: android.accounts.IAccountsService mAccountsService> = null;

        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        com.android.internal.policy.impl.AccountUnlockScreen $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;
        com.android.internal.policy.impl.KeyguardScreenCallback $r2;

        $r0 := @this: com.android.internal.policy.impl.AccountUnlockScreen;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = $r0.<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback mCallback>;

        interfaceinvoke $r2.<com.android.internal.policy.impl.KeyguardScreenCallback: void pokeWakelock(int)>(30000);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.policy.impl.AccountUnlockScreen: java.lang.String LOCK_PATTERN_PACKAGE> = "com.android.settings";

        <com.android.internal.policy.impl.AccountUnlockScreen: java.lang.String LOCK_PATTERN_CLASS> = "com.android.settings.ChooseLockPattern";

        <com.android.internal.policy.impl.AccountUnlockScreen: int AWAKE_POKE_MILLIS> = 30000;

        return;
    }
}
