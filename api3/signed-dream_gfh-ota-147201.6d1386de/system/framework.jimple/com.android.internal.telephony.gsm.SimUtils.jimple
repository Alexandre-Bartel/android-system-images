public class com.android.internal.telephony.gsm.SimUtils extends java.lang.Object
{
    static final java.lang.String LOG_TAG;

    public void <init>()
    {
        com.android.internal.telephony.gsm.SimUtils $r0;

        $r0 := @this: com.android.internal.telephony.gsm.SimUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String adnStringFieldToString(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i3, $i4, $i8;
        byte $b2;
        java.lang.String $r1;
        char $c5, $c7;
        java.io.UnsupportedEncodingException $r2;
        boolean $z0;
        short $s6;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 < 1 goto label06;

        $b2 = $r0[$i0];

        if $b2 != -128 goto label06;

        $i3 = $i1 - 1;

        $i4 = $i3 / 2;

        $r1 = new java.lang.String;

        $i3 = $i0 + 1;

        $i4 = $i4 * 2;

     label01:
        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r0, $i3, $i4, "utf-16be");

     label02:
        if $r1 == null goto label06;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label03:
        if $i0 <= 0 goto label05;

        $i1 = $i0 - 1;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        if $c5 != 65535 goto label05;

        $i0 = $i0 + -1;

        goto label03;

     label04:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GSM", "implausible UnsupportedEncodingException", $r2);

        $r1 = null;

        goto label02;

     label05:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;

     label06:
        $z0 = 0;

        $c5 = 0;

        $i3 = 0;

        if $i1 < 3 goto label12;

        $b2 = $r0[$i0];

        if $b2 != -127 goto label12;

        $i3 = $i0 + 1;

        $b2 = $r0[$i3];

        $s6 = $b2 & 255;

        $i3 = $i1 - 3;

        if $s6 <= $i3 goto label19;

        $i3 = $i1 - 3;

     label07:
        $i4 = $i0 + 2;

        $b2 = $r0[$i4];

        $s6 = $b2 & 255;

        $i4 = $s6 << 7;

        $c5 = (char) $i4;

        $i0 = $i0 + 3;

        $z0 = 1;

     label08:
        if $z0 == 0 goto label16;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i1 = $i3;

     label09:
        if $i1 <= 0 goto label15;

        $b2 = $r0[$i0];

        if $b2 >= 0 goto label17;

        $b2 = $r0[$i0];

        $b2 = $b2 & 127;

        $i3 = $b2 + $c5;

        $c7 = (char) $i3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $i0 = $i0 + 1;

        $i1 = $i1 + -1;

     label10:
        $i3 = 0;

     label11:
        if $i3 >= $i1 goto label14;

        $i4 = $i0 + $i3;

        $b2 = $r0[$i4];

        if $b2 < 0 goto label14;

        $i3 = $i3 + 1;

        goto label11;

     label12:
        if $i1 < 4 goto label08;

        $b2 = $r0[$i0];

        if $b2 != -126 goto label08;

        $i3 = $i0 + 1;

        $b2 = $r0[$i3];

        $s6 = $b2 & 255;

        $i3 = $i1 - 4;

        if $s6 <= $i3 goto label18;

        $i3 = $i1 - 4;

     label13:
        $i4 = $i0 + 2;

        $b2 = $r0[$i4];

        $s6 = $b2 & 255;

        $i4 = $s6 << 8;

        $i8 = $i0 + 3;

        $b2 = $r0[$i8];

        $s6 = $b2 & 255;

        $i4 = $i4 | $s6;

        $c5 = (char) $i4;

        $i0 = $i0 + 4;

        $z0 = 1;

        goto label08;

     label14:
        $r1 = staticinvoke <com.android.internal.telephony.gsm.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int)>($r0, $i0, $i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $i0 = $i0 + $i3;

        $i1 = $i1 - $i3;

        goto label09;

     label15:
        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label16:
        $r1 = staticinvoke <com.android.internal.telephony.gsm.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int)>($r0, $i0, $i1);

        return $r1;

     label17:
        goto label10;

     label18:
        $i3 = $s6;

        goto label13;

     label19:
        $i3 = $s6;

        goto label07;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label04;
    }

    public static int bcdByteToInt(byte)
    {
        byte $b0, $b3;
        int $i1, $i4;
        short $s2;

        $b0 := @parameter0: byte;

        $i1 = 0;

        $s2 = $b0 & 240;

        if $s2 > 144 goto label1;

        $b3 = $b0 >> 4;

        $i1 = $b3 & 15;

     label1:
        $b3 = $b0 & 15;

        if $b3 > 9 goto label2;

        $b0 = $b0 & 15;

        $i4 = $b0 * 10;

        $i1 = $i1 + $i4;

        return $i1;

     label2:
        return $i1;
    }

    public static java.lang.String bcdToString(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        byte $b4;
        char $c5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = new java.lang.StringBuilder;

        $i2 = $i1 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i2);

        $i2 = $i0;

     label1:
        $i3 = $i0 + $i1;

        if $i2 >= $i3 goto label2;

        $b4 = $r0[$i2];

        $b4 = $b4 & 15;

        if $b4 <= 9 goto label3;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $i3 = $b4 + 48;

        $c5 = (char) $i3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $b4 = $r0[$i2];

        $b4 = $b4 >> 4;

        $b4 = $b4 & 15;

        if $b4 > 9 goto label2;

        $i3 = $b4 + 48;

        $c5 = (char) $i3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i2 = $i2 + 1;

        goto label1;
    }

    private static int bitToRGB(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        return -1;

     label1:
        return -16777216;
    }

    public static java.lang.String bytesToHexString(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0, $i1;
        byte $b2;
        char $c3;

        $r0 := @parameter0: byte[];

        $r2 = "0123456789abcdef";

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuilder;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        $b2 = $b2 >> 4;

        $b2 = $b2 & 15;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($b2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $b2 = $r0[$i0];

        $b2 = $b2 & 15;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($b2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static int[] getCLUT(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i7;
        int[] $r1;
        byte $b5;
        short $s6;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = newarray (int)[$i1];

        $i1 = $i1 * 3;

        $i1 = $i0 + $i1;

        $i2 = $i0;

        $i3 = 0;

     label2:
        $i4 = $i2 + 1;

        $b5 = $r0[$i2];

        $s6 = $b5 & 255;

        $i2 = $s6 << 16;

        $i7 = $i2 | -16777216;

        $i2 = $i4 + 1;

        $b5 = $r0[$i4];

        $s6 = $b5 & 255;

        $i4 = $s6 << 8;

        $i7 = $i7 | $i4;

        $i4 = $i2 + 1;

        $b5 = $r0[$i2];

        $s6 = $b5 & 255;

        $i2 = $i7 | $s6;

        $r1[$i3] = $i2;

        if $i4 < $i1 goto label3;

        return $r1;

     label3:
        $i3 = $i3 + 1;

        $i2 = $i4;

        goto label2;
    }

    static int hexCharToInt(char)
    {
        char $c0;
        int $i1;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $c0 := @parameter0: char;

        if $c0 < 48 goto label1;

        if $c0 > 57 goto label1;

        $i1 = $c0 - 48;

        return $i1;

     label1:
        if $c0 < 65 goto label2;

        if $c0 > 70 goto label2;

        $i1 = $c0 - 65;

        $i1 = $i1 + 10;

        return $i1;

     label2:
        if $c0 < 97 goto label3;

        if $c0 > 102 goto label3;

        $i1 = $c0 - 97;

        $i1 = $i1 + 10;

        return $i1;

     label3:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid hex char \'");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r0;
    }

    public static byte[] hexStringToBytes(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i4, $i5;
        char $c3;
        byte $b6;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        $r1 = newarray (byte)[$i1];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $i2 = $i1 / 2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i4 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: int hexCharToInt(char)>($c3);

        $i4 = $i4 << 4;

        $i5 = $i1 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i5);

        $i5 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: int hexCharToInt(char)>($c3);

        $i4 = $i4 | $i5;

        $b6 = (byte) $i4;

        $r1[$i2] = $b6;

        $i1 = $i1 + 2;

        goto label2;

     label3:
        return $r1;
    }

    private static int[] mapTo2OrderBitColor(byte[], int, int, int[], int)
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i8, $i9;
        int[] $r1, $r2;
        byte $b4, $b10;
        short $s6, $s11;

        $r0 := @parameter0: byte[];

        $i5 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 := @parameter3: int[];

        $i1 := @parameter4: int;

        $i3 = 8 % $i1;

        if $i3 == 0 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", "not event number of color");

        $r1 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: int[] mapToNon2OrderBitColor(byte[],int,int,int[],int)>($r0, $i5, $i0, $r1, $i1);

        return $r1;

     label01:
        $s6 = 1;

        lookupswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label02;
            case 4: goto label07;
            case 5: goto label02;
            case 6: goto label02;
            case 7: goto label02;
            case 8: goto label08;
            default: goto label02;
        };

     label02:
        $r2 = newarray (int)[$i0];

        $i7 = 0;

        $i3 = 8 / $i1;

        $i8 = $i5;

     label03:
        if $i7 >= $i0 goto label10;

        $i5 = $i8 + 1;

        $b4 = $r0[$i8];

        $i8 = 0;

     label04:
        if $i8 >= $i3 goto label09;

        $i9 = $i3 - $i8;

        $i2 = $i9 - 1;

        $i2 = $i2 * $i1;

        $b10 = $b4 >> $i2;

        $s11 = $b10 & $s6;

        $i2 = $r1[$s11];

        $r2[$i7] = $i2;

        $i8 = $i8 + 1;

        $i7 = $i7 + 1;

        goto label04;

     label05:
        $s6 = 1;

        goto label02;

     label06:
        $s6 = 3;

        goto label02;

     label07:
        $s6 = 15;

        goto label02;

     label08:
        $s6 = 255;

        goto label02;

     label09:
        $i8 = $i5;

        goto label03;

     label10:
        return $r2;
    }

    private static int[] mapToNon2OrderBitColor(byte[], int, int, int[], int)
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: int[];

        $i2 := @parameter4: int;

        $i3 = 8 % $i2;

        if $i3 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", "not odd number of color");

        $r1 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: int[] mapTo2OrderBitColor(byte[],int,int,int[],int)>($r0, $i0, $i1, $r1, $i2);

        return $r1;

     label1:
        $r1 = newarray (int)[$i1];

        return $r1;
    }

    public static java.lang.String networkNameToString(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i4;
        byte $b2;
        java.lang.String $r1;
        short $s3;
        java.io.UnsupportedEncodingException $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $b2 = $r0[$i0];

        $s3 = $b2 & 128;

        if $s3 != 128 goto label01;

        if $i1 >= 1 goto label02;

     label01:
        return "";

     label02:
        $b2 = $r0[$i0];

        $b2 = $b2 >>> 4;

        $b2 = $b2 & 7;

        lookupswitch($b2)
        {
            case 0: goto label06;
            case 1: goto label07;
            default: goto label03;
        };

     label03:
        $r1 = "";

     label04:
        $b2 = $r0[$i0];

        $b2 = $b2 & 64;

        if $b2 == 0 goto label05;

     label05:
        return $r1;

     label06:
        $b2 = $r0[$i0];

        $b2 = $b2 & 7;

        $i1 = $i1 - 1;

        $i1 = $i1 * 8;

        $i1 = $i1 - $b2;

        $i1 = $i1 / 7;

        $i4 = $i0 + 1;

        $r1 = staticinvoke <com.android.internal.telephony.gsm.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)>($r0, $i4, $i1);

        goto label04;

     label07:
        $r1 = new java.lang.String;

        $i4 = $i0 + 1;

        $i1 = $i1 - 1;

     label08:
        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r0, $i4, $i1, "utf-16");

     label09:
        goto label04;

     label10:
        $r2 := @caughtexception;

        $r1 = "";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GSM", "implausible UnsupportedEncodingException", $r2);

        goto label04;

        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
    }

    public static android.graphics.Bitmap parseToBnW(byte[], int)
    {
        byte[] $r0;
        int $i0, $i1, $i5, $i6, $i7;
        short $s2, $s3;
        int[] $r1;
        byte $b4, $b9;
        android.graphics.Bitmap$Config $r2;
        android.graphics.Bitmap $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i0 = 0 + 1;

        $b4 = $r0[0];

        $s3 = $b4 & 255;

        $i5 = $i0 + 1;

        $b4 = $r0[$i0];

        $s2 = $b4 & 255;

        $i0 = $s3 * $s2;

        $r1 = newarray (int)[$i0];

        $i6 = 7;

        $b4 = 0;

        $i7 = 0;

        $i1 = $i5;

     label1:
        if $i7 >= $i0 goto label3;

        $i5 = $i7 % 8;

        if $i5 != 0 goto label5;

        $i5 = $i1 + 1;

        $b4 = $r0[$i1];

        $i6 = 7;

     label2:
        $i1 = $i6 - 1;

        $b9 = $b4 >> $i6;

        $b9 = $b9 & 1;

        $i6 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: int bitToRGB(int)>($b9);

        $r1[$i7] = $i6;

        $i6 = $i1;

        $i7 = $i7 + 1;

        $i1 = $i5;

        goto label1;

     label3:
        if $i7 == $i0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", "parse end and size error");

     label4:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>($r1, $s3, $s2, $r2);

        return $r3;

     label5:
        $i5 = $i1;

        goto label2;
    }

    public static android.graphics.Bitmap parseToRGB(byte[], int, boolean)
    {
        byte[] $r0;
        boolean $z0;
        short $s0, $s2, $s3, $s4, $s7;
        int $i1, $i5, $i8;
        byte $b6;
        int[] $r1;
        android.graphics.Bitmap$Config $r2;
        android.graphics.Bitmap $r3;

        $r0 := @parameter0: byte[];

        $i5 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $i1 = 0 + 1;

        $b6 = $r0[0];

        $s4 = $b6 & 255;

        $i5 = $i1 + 1;

        $b6 = $r0[$i1];

        $s3 = $b6 & 255;

        $i1 = $i5 + 1;

        $b6 = $r0[$i5];

        $s0 = $b6 & 255;

        $i5 = $i1 + 1;

        $b6 = $r0[$i1];

        $s2 = $b6 & 255;

        $i1 = $i5 + 1;

        $b6 = $r0[$i5];

        $s7 = $b6 & 255;

        $i8 = $s7 << 8;

        $i5 = $i1 + 1;

        $b6 = $r0[$i1];

        $i1 = $i8 | $b6;

        $r1 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: int[] getCLUT(byte[],int,int)>($r0, $i1, $s2);

        if 1 != $z0 goto label1;

        $i1 = $s2 - 1;

        $r1[$i1] = 0;

     label1:
        $i1 = 8 % $s0;

        if $i1 != 0 goto label3;

        $i1 = $s4 * $s3;

        $r1 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: int[] mapTo2OrderBitColor(byte[],int,int,int[],int)>($r0, $i5, $i1, $r1, $s0);

     label2:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>($r1, $s4, $s3, $r2);

        return $r3;

     label3:
        $i1 = $s4 * $s3;

        $r1 = staticinvoke <com.android.internal.telephony.gsm.SimUtils: int[] mapToNon2OrderBitColor(byte[],int,int,int[],int)>($r0, $i5, $i1, $r1, $s0);

        goto label2;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.SimUtils: java.lang.String LOG_TAG> = "GSM";

        return;
    }
}
