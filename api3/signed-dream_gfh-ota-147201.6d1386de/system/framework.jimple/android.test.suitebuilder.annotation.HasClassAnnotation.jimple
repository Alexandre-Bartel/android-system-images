class android.test.suitebuilder.annotation.HasClassAnnotation extends java.lang.Object implements com.android.internal.util.Predicate
{
    private java.lang.Class annotationClass;

    public void <init>(java.lang.Class)
    {
        android.test.suitebuilder.annotation.HasClassAnnotation $r0;
        java.lang.Class $r1;

        $r0 := @this: android.test.suitebuilder.annotation.HasClassAnnotation;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.test.suitebuilder.annotation.HasClassAnnotation: java.lang.Class annotationClass> = $r1;

        return;
    }

    public boolean apply(android.test.suitebuilder.TestMethod)
    {
        android.test.suitebuilder.annotation.HasClassAnnotation $r0;
        android.test.suitebuilder.TestMethod $r1;
        java.lang.Class $r2, $r3;
        java.lang.annotation.Annotation $r4;

        $r0 := @this: android.test.suitebuilder.annotation.HasClassAnnotation;

        $r1 := @parameter0: android.test.suitebuilder.TestMethod;

        $r3 = virtualinvoke $r1.<android.test.suitebuilder.TestMethod: java.lang.Class getEnclosingClass()>();

        $r2 = $r0.<android.test.suitebuilder.annotation.HasClassAnnotation: java.lang.Class annotationClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>($r2);

        if $r4 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile boolean apply(java.lang.Object)
    {
        android.test.suitebuilder.annotation.HasClassAnnotation $r0;
        boolean $z0;
        java.lang.Object $r1;
        android.test.suitebuilder.TestMethod $r2;

        $r0 := @this: android.test.suitebuilder.annotation.HasClassAnnotation;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.test.suitebuilder.TestMethod) $r1;

        $z0 = virtualinvoke $r0.<android.test.suitebuilder.annotation.HasClassAnnotation: boolean apply(android.test.suitebuilder.TestMethod)>($r2);

        return $z0;
    }
}
