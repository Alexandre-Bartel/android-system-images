final class android.database.BulkCursorProxy extends java.lang.Object implements android.database.IBulkCursor
{
    private android.os.Bundle mExtras;
    private android.os.IBinder mRemote;

    public void <init>(android.os.IBinder)
    {
        android.database.BulkCursorProxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote> = $r1;

        $r0.<android.database.BulkCursorProxy: android.os.Bundle mExtras> = null;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.database.BulkCursorProxy $r0;
        android.os.IBinder r1;

        $r0 := @this: android.database.BulkCursorProxy;

        r1 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        return r1;
    }

    public void close() throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        $r3 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, $r1, $r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r2);

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;
    }

    public int count() throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        $r3 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r1, $r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r2);

        if $z0 != 0 goto label2;

        $i0 = -1;

     label1:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $i0;

     label2:
        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        goto label1;
    }

    public void deactivate() throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        $r3 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r1, $r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r2);

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;
    }

    public boolean deleteRow(int) throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        boolean $z0;

        $r0 := @this: android.database.BulkCursorProxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r1, $r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r2);

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        if $i0 != 1 goto label2;

        $z0 = 1;

     label1:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $z0;

     label2:
        $z0 = 0;

        goto label1;
    }

    public java.lang.String[] getColumnNames() throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        int $i0, $i1;
        java.lang.String[] $r4;
        java.lang.String $r5;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        $r3 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r1, $r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r2);

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        $r4 = newarray (java.lang.String)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r5 = virtualinvoke $r2.<android.os.Parcel: java.lang.String readString()>();

        $r4[$i1] = $r5;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r4;
    }

    public android.os.Bundle getExtras() throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        android.os.Bundle $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 = $r0.<android.database.BulkCursorProxy: android.os.Bundle mExtras>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        $r4 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, $r2, $r3, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r3);

        $r1 = virtualinvoke $r3.<android.os.Parcel: android.os.Bundle readBundle()>();

        $r0.<android.database.BulkCursorProxy: android.os.Bundle mExtras> = $r1;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

     label1:
        $r1 = $r0.<android.database.BulkCursorProxy: android.os.Bundle mExtras>;

        return $r1;
    }

    public boolean getWantsAllOnMoveCalls() throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        int $i0;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        $r3 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, $r1, $r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r2);

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.database.CursorWindow getWindow(int) throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        android.database.CursorWindow $r4;

        $r0 := @this: android.database.BulkCursorProxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r1, $r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r2);

        $r4 = null;

        $i0 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

        if $i0 != 1 goto label1;

        $r4 = staticinvoke <android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>($r2);

     label1:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r4;
    }

    public void onMove(int) throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;

        $r0 := @this: android.database.BulkCursorProxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r1, $r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r2);

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;
    }

    public int requery(android.database.IContentObserver, android.database.CursorWindow) throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        android.database.IContentObserver $r1;
        android.database.CursorWindow $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        boolean $z0;
        int $i0;
        android.os.Bundle $r6;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 := @parameter0: android.database.IContentObserver;

        $r2 := @parameter1: android.database.CursorWindow;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        virtualinvoke $r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>($r1);

        virtualinvoke $r2.<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>($r3, 0);

        $r5 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r3, $r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r4);

        if $z0 != 0 goto label2;

        $i0 = -1;

     label1:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        return $i0;

     label2:
        $i0 = virtualinvoke $r4.<android.os.Parcel: int readInt()>();

        $r6 = virtualinvoke $r4.<android.os.Parcel: android.os.Bundle readBundle()>();

        $r0.<android.database.BulkCursorProxy: android.os.Bundle mExtras> = $r6;

        goto label1;
    }

    public android.os.Bundle respond(android.os.Bundle) throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        android.os.Bundle $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        virtualinvoke $r2.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r1);

        $r4 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, $r2, $r3, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r3);

        $r1 = virtualinvoke $r3.<android.os.Parcel: android.os.Bundle readBundle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return $r1;
    }

    public boolean updateRows(java.util.Map) throws android.os.RemoteException
    {
        android.database.BulkCursorProxy $r0;
        java.util.Map $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        int $i0;
        boolean $z0;

        $r0 := @this: android.database.BulkCursorProxy;

        $r1 := @parameter0: java.util.Map;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IBulkCursor");

        virtualinvoke $r2.<android.os.Parcel: void writeMap(java.util.Map)>($r1);

        $r4 = $r0.<android.database.BulkCursorProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r2, $r3, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>($r3);

        $i0 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        if $i0 != 1 goto label2;

        $z0 = 1;

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return $z0;

     label2:
        $z0 = 0;

        goto label1;
    }
}
