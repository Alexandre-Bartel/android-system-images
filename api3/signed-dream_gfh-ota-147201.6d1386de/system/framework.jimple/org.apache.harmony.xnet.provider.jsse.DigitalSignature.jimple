public class org.apache.harmony.xnet.provider.jsse.DigitalSignature extends java.lang.Object
{
    private javax.crypto.Cipher cipher;
    private java.security.MessageDigest md5;
    private byte[] md5_hash;
    private java.security.MessageDigest sha;
    private byte[] sha_hash;
    private java.security.Signature signature;

    public void <init>(int)
    {
        org.apache.harmony.xnet.provider.jsse.DigitalSignature $r0;
        int $i0, $i1;
        javax.net.ssl.SSLException $r1;
        java.security.MessageDigest $r2;
        javax.crypto.Cipher $r3;
        java.security.Signature $r4;
        java.lang.Exception $r5;
        org.apache.harmony.xnet.provider.jsse.AlertException $r6;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DigitalSignature;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest md5> = null;

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest sha> = null;

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature> = null;

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher> = null;

        $i1 = <org.apache.harmony.xnet.provider.jsse.CipherSuite: int KeyExchange_RSA_EXPORT>;

        if $i0 == $i1 goto label01;

        $i1 = <org.apache.harmony.xnet.provider.jsse.CipherSuite: int KeyExchange_RSA>;

        if $i0 == $i1 goto label01;

        $i1 = <org.apache.harmony.xnet.provider.jsse.CipherSuite: int KeyExchange_DHE_RSA>;

        if $i0 == $i1 goto label01;

        $i1 = <org.apache.harmony.xnet.provider.jsse.CipherSuite: int KeyExchange_DHE_RSA_EXPORT>;

        if $i0 != $i1 goto label03;

     label01:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest md5> = $r2;

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest sha> = $r2;

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/ECB/PKCS1Padding");

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher> = $r3;

     label02:
        return;

     label03:
        $i1 = <org.apache.harmony.xnet.provider.jsse.CipherSuite: int KeyExchange_DHE_DSS>;

     label04:
        if $i0 == $i1 goto label07;

     label05:
        $i1 = <org.apache.harmony.xnet.provider.jsse.CipherSuite: int KeyExchange_DHE_DSS_EXPORT>;

     label06:
        if $i0 != $i1 goto label10;

     label07:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest sha> = $r2;

        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>("NONEwithDSA");

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature> = $r4;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

        $r6 = new org.apache.harmony.xnet.provider.jsse.AlertException;

        $r1 = new javax.net.ssl.SSLException;

        specialinvoke $r1.<javax.net.ssl.SSLException: void <init>(java.lang.String,java.lang.Throwable)>("INTERNAL ERROR: Unexpected exception on digital signature", $r5);

        specialinvoke $r6.<org.apache.harmony.xnet.provider.jsse.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r1);

        throw $r6;

     label10:
        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label06 to label08 with label09;
    }

    public void init(java.security.PrivateKey)
    {
        org.apache.harmony.xnet.provider.jsse.DigitalSignature $r0;
        java.security.PrivateKey $r1;
        java.security.Signature $r2;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r4;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DigitalSignature;

        $r1 := @parameter0: java.security.PrivateKey;

     label1:
        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        if $r2 == null goto label3;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        virtualinvoke $r2.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1);

     label2:
        return;

     label3:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r3 == null goto label6;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r1);

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace()>();

        return;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void init(java.security.cert.Certificate)
    {
        org.apache.harmony.xnet.provider.jsse.DigitalSignature $r0;
        java.security.cert.Certificate $r1;
        java.security.Signature $r2;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r4;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DigitalSignature;

        $r1 := @parameter0: java.security.cert.Certificate;

     label1:
        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        if $r2 == null goto label3;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.cert.Certificate)>($r1);

     label2:
        return;

     label3:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r3 == null goto label6;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.cert.Certificate)>(2, $r1);

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace()>();

        return;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void setMD5(byte[])
    {
        org.apache.harmony.xnet.provider.jsse.DigitalSignature $r0;
        byte[] $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DigitalSignature;

        $r1 := @parameter0: byte[];

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash> = $r1;

        return;
    }

    public void setSHA(byte[])
    {
        org.apache.harmony.xnet.provider.jsse.DigitalSignature $r0;
        byte[] $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DigitalSignature;

        $r1 := @parameter0: byte[];

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash> = $r1;

        return;
    }

    public byte[] sign()
    {
        org.apache.harmony.xnet.provider.jsse.DigitalSignature $r0;
        java.security.MessageDigest $r1;
        byte[] $r2, $r3;
        int $i0;
        java.security.Signature $r4;
        javax.crypto.Cipher $r5;
        java.lang.Exception $r6;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DigitalSignature;

     label01:
        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest md5>;

        if $r1 == null goto label02;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        if $r2 != null goto label02;

        $r2 = newarray (byte)[16];

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash> = $r2;

        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest md5>;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        $i0 = lengthof $r3;

        virtualinvoke $r1.<java.security.MessageDigest: int digest(byte[],int,int)>($r2, 0, $i0);

     label02:
        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        if $r2 == null goto label03;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        if $r4 == null goto label07;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        virtualinvoke $r4.<java.security.Signature: void update(byte[])>($r2);

     label03:
        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest sha>;

        if $r1 == null goto label04;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        if $r2 != null goto label04;

        $r2 = newarray (byte)[20];

        $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash> = $r2;

        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest sha>;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        $i0 = lengthof $r3;

        virtualinvoke $r1.<java.security.MessageDigest: int digest(byte[],int,int)>($r2, 0, $i0);

     label04:
        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        if $r2 == null goto label05;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        if $r4 == null goto label10;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        virtualinvoke $r4.<java.security.Signature: void update(byte[])>($r2);

     label05:
        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        if $r4 == null goto label11;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        $r2 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>();

     label06:
        return $r2;

     label07:
        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r5 == null goto label03;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[])>($r2);

     label08:
        goto label03;

     label09:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void printStackTrace()>();

        $r2 = newarray (byte)[0];

        return $r2;

     label10:
        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r5 == null goto label05;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[])>($r2);

        goto label05;

     label11:
        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r5 == null goto label13;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal()>();

     label12:
        return $r2;

     label13:
        $r2 = newarray (byte)[0];

     label14:
        return $r2;

        catch java.lang.Exception from label01 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label12 with label09;
        catch java.lang.Exception from label13 to label14 with label09;
    }

    public void update(byte[])
    {
        org.apache.harmony.xnet.provider.jsse.DigitalSignature $r0;
        byte[] $r1;
        java.security.MessageDigest $r2;
        java.lang.Exception $r3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DigitalSignature;

        $r1 := @parameter0: byte[];

     label1:
        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest sha>;

        if $r2 == null goto label2;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest sha>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r1);

     label2:
        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest md5>;

        if $r2 == null goto label5;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.MessageDigest md5>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r1);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace()>();

        return;

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public boolean verifySignature(byte[])
    {
        org.apache.harmony.xnet.provider.jsse.DigitalSignature $r0;
        byte[] $r1, $r4, $r5, $r6;
        java.security.Signature $r2;
        boolean $z0;
        javax.crypto.Cipher $r3;
        int $i0, $i1;
        java.lang.Exception $r7;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.DigitalSignature;

        $r1 := @parameter0: byte[];

     label01:
        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        if $r2 == null goto label03;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: java.security.Signature signature>;

        $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r1);

     label02:
        return $z0;

     label03:
        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r3 == null goto label09;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: javax.crypto.Cipher cipher>;

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        if $r4 == null goto label06;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        if $r4 == null goto label06;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        $i0 = lengthof $r4;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        $i1 = lengthof $r4;

        $i0 = $i0 + $i1;

        $r4 = newarray (byte)[$i0];

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        $r6 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        $i0 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i0);

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        $r6 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        $i0 = lengthof $r6;

        $r6 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        $i1 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, $i0, $i1);

     label04:
        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r1, $r4);

     label05:
        if $z0 == 0 goto label08;

        return 1;

     label06:
        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        if $r4 == null goto label07;

        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] md5_hash>;

        goto label04;

     label07:
        $r4 = $r0.<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sha_hash>;

        goto label04;

     label08:
        return 0;

     label09:
        if $r1 == null goto label11;

        $i0 = lengthof $r1;

     label10:
        if $i0 != 0 goto label12;

     label11:
        return 1;

     label12:
        return 0;

     label13:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Throwable: void printStackTrace()>();

        return 0;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label05 with label13;
        catch java.lang.Exception from label06 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
    }
}
