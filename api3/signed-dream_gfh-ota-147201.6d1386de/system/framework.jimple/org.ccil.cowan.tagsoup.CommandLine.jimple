public class org.ccil.cowan.tagsoup.CommandLine extends java.lang.Object
{
    static java.util.Hashtable options;
    private static java.lang.String theOutputEncoding;
    private static org.ccil.cowan.tagsoup.Parser theParser;
    private static org.ccil.cowan.tagsoup.HTMLSchema theSchema;

    static void <clinit>()
    {
        java.util.Hashtable $r0;
        java.lang.Boolean $r1;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options> = $r0;

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nocdata", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--files", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--reuse", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nons", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nobogons", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--any", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--emptybogons", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--norootbogons", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--pyxin", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--lexical", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--pyx", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--html", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--method=", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--doctype-public=", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--doctype-system=", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--output-encoding=", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--omit-xml-declaration", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--encoding=", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--help", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--version", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nodefaults", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nocolons", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--norestart", $r1);

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--ignorable", $r1);

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser> = null;

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema> = null;

        <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding> = null;

        return;
    }

    public void <init>()
    {
        org.ccil.cowan.tagsoup.CommandLine $r0;

        $r0 := @this: org.ccil.cowan.tagsoup.CommandLine;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.xml.sax.ContentHandler chooseContentHandler(java.io.Writer)
    {
        org.ccil.cowan.tagsoup.XMLWriter $r0;
        java.io.Writer $r1;
        java.util.Hashtable $r2;
        boolean $z0;
        org.ccil.cowan.tagsoup.PYXWriter $r3;
        java.lang.Object $r4;
        java.lang.String $r5;
        org.ccil.cowan.tagsoup.HTMLSchema $r6;

        $r1 := @parameter0: java.io.Writer;

        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r2, "--pyx");

        if $z0 == 0 goto label1;

        $r3 = new org.ccil.cowan.tagsoup.PYXWriter;

        specialinvoke $r3.<org.ccil.cowan.tagsoup.PYXWriter: void <init>(java.io.Writer)>($r1);

        return $r3;

     label1:
        $r0 = new org.ccil.cowan.tagsoup.XMLWriter;

        specialinvoke $r0.<org.ccil.cowan.tagsoup.XMLWriter: void <init>(java.io.Writer)>($r1);

        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r2, "--html");

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("method", "html");

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

     label2:
        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r2, "--method=");

        if $z0 == 0 goto label3;

        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--method=");

        $r5 = (java.lang.String) $r4;

        if $r5 == null goto label3;

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("method", $r5);

     label3:
        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r2, "--doctype-public=");

        if $z0 == 0 goto label4;

        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--doctype-public=");

        $r5 = (java.lang.String) $r4;

        if $r5 == null goto label4;

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-public", $r5);

     label4:
        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r2, "--doctype-system=");

        if $z0 == 0 goto label5;

        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--doctype-system=");

        $r5 = (java.lang.String) $r4;

        if $r5 == null goto label5;

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-system", $r5);

     label5:
        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r2, "--output-encoding=");

        if $z0 == 0 goto label6;

        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--output-encoding=");

        $r5 = (java.lang.String) $r4;

        <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding> = $r5;

        $r5 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        if $r5 == null goto label6;

        $r5 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", $r5);

     label6:
        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r2, "--omit-xml-declaration");

        if $z0 == 0 goto label7;

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

     label7:
        $r6 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema>;

        $r5 = virtualinvoke $r6.<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>();

        virtualinvoke $r0.<org.ccil.cowan.tagsoup.XMLWriter: void setPrefix(java.lang.String,java.lang.String)>($r5, "");

        return $r0;
    }

    private static void doHelp()
    {
        java.io.PrintStream $r0;
        boolean $z0, $z1;
        java.util.Hashtable $r1;
        java.util.Enumeration $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>("usage: java -jar tagsoup-*.jar ");

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(" [ ");

        $z0 = 1;

        $r1 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label4;

        if $z0 != 0 goto label2;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>("| ");

     label2:
        $z0 = 0;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (java.lang.String) $r3;

        $r4 = (java.lang.String) $r4;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>($r4);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("=");

        if $z1 == 0 goto label3;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>("?");

     label3:
        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(" ");

        goto label1;

     label4:
        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("]*");

        return;
    }

    private static int getopts(java.util.Hashtable, java.lang.String[])
    {
        java.util.Hashtable $r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i3, $i4;
        java.lang.String $r2, $r3;
        char $c2;
        boolean $z0;
        java.lang.Boolean $r4;
        java.io.PrintStream $r5;

        $r0 := @parameter0: java.util.Hashtable;

        $r1 := @parameter1: java.lang.String[];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label7;

        $r2 = $r1[$i0];

        $r3 = null;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        if $c2 == 45 goto label2;

        return $i0;

     label2:
        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(61);

        if $i1 == -1 goto label3;

        $i3 = $i1 + 1;

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $i1 = $i1 + 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label3:
        $z0 = virtualinvoke $r0.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label6;

        if $r3 != null goto label5;

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        goto label4;

     label6:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>("Unknown option ");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r2);

        staticinvoke <java.lang.System: void exit(int)>(1);

        goto label4;

     label7:
        return $i0;
    }

    private static boolean hasOption(java.util.Hashtable, java.lang.String)
    {
        java.util.Hashtable $r0;
        java.lang.String $r1;
        java.lang.Boolean $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.Hashtable;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r3 == $r2 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.lang.String[] $r0;
        java.io.FileOutputStream $r1;
        java.lang.String $r2, $r6, $r7;
        java.util.Hashtable $r3;
        int $i0, $i1;
        boolean $z0;
        java.io.PrintStream $r4;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String[];

        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $i0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: int getopts(java.util.Hashtable,java.lang.String[])>($r3, $r0);

        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--help");

        if $z0 == 0 goto label01;

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void doHelp()>();

        return;

     label01:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--version");

        if $z0 == 0 goto label02;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("TagSoup version 1.2");

        return;

     label02:
        $i1 = lengthof $r0;

        if $i1 != $i0 goto label03;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void process(java.lang.String,java.io.OutputStream)>("", $r4);

        return;

     label03:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--files");

        if $z0 == 0 goto label08;

     label04:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label09;

        $r2 = $r0[$i0];

        $i1 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(46);

        if $i1 != -1 goto label06;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xhtml");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String)>($r6);

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void process(java.lang.String,java.io.OutputStream)>($r2, $r1);

        $i0 = $i0 + 1;

        goto label04;

     label06:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".xhtml");

        if $z0 == 0 goto label07;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;

     label07:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xhtml");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;

     label08:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label10;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src: ");

        $r2 = $r0[$i0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r2);

        $r2 = $r0[$i0];

        $r4 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void process(java.lang.String,java.io.OutputStream)>($r2, $r4);

        $i0 = $i0 + 1;

        goto label08;

     label09:
        return;

     label10:
        return;
    }

    private static void process(java.lang.String, java.io.OutputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.lang.String $r0, $r7;
        java.io.OutputStream $r1;
        org.xml.sax.InputSource $r2;
        java.util.Hashtable $r3;
        boolean $z0;
        org.ccil.cowan.tagsoup.Parser $r4;
        org.ccil.cowan.tagsoup.HTMLSchema $r5;
        org.ccil.cowan.tagsoup.PYXScanner $r6;
        java.io.OutputStreamWriter $r8;
        org.xml.sax.ContentHandler $r9;
        java.lang.Object $r10;
        java.io.InputStream $r11;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.OutputStream;

        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--reuse");

        if $z0 == 0 goto label18;

        $r4 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser>;

        if $r4 != null goto label01;

        $r4 = new org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r4.<org.ccil.cowan.tagsoup.Parser: void <init>()>();

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser> = $r4;

     label01:
        $r4 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser>;

     label02:
        $r5 = new org.ccil.cowan.tagsoup.HTMLSchema;

        specialinvoke $r5.<org.ccil.cowan.tagsoup.HTMLSchema: void <init>()>();

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema> = $r5;

        $r5 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema>;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/schema", $r5);

        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--nocdata");

        if $z0 == 0 goto label03;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/cdata-elements", 0);

     label03:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--nons");

        if $z0 != 0 goto label04;

        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--html");

        if $z0 == 0 goto label05;

     label04:
        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 0);

     label05:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--nobogons");

        if $z0 == 0 goto label06;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons", 1);

     label06:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--any");

        if $z0 == 0 goto label19;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty", 0);

     label07:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--norootbogons");

        if $z0 == 0 goto label08;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/root-bogons", 0);

     label08:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--nodefaults");

        if $z0 == 0 goto label09;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/default-attributes", 0);

     label09:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--nocolons");

        if $z0 == 0 goto label10;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/translate-colons", 1);

     label10:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--norestart");

        if $z0 == 0 goto label11;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/restart-elements", 0);

     label11:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--ignorable");

        if $z0 == 0 goto label12;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/ignorable-whitespace", 1);

     label12:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--pyxin");

        if $z0 == 0 goto label13;

        $r6 = new org.ccil.cowan.tagsoup.PYXScanner;

        specialinvoke $r6.<org.ccil.cowan.tagsoup.PYXScanner: void <init>()>();

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/scanner", $r6);

     label13:
        $r7 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        if $r7 != null goto label20;

        $r8 = new java.io.OutputStreamWriter;

        specialinvoke $r8.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r1);

     label14:
        $r9 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: org.xml.sax.ContentHandler chooseContentHandler(java.io.Writer)>($r8);

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r9);

        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--lexical");

        if $z0 == 0 goto label15;

        $z0 = $r9 instanceof org.xml.sax.ext.LexicalHandler;

        if $z0 == 0 goto label15;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", $r9);

     label15:
        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>()>();

        if $r0 == "" goto label21;

        virtualinvoke $r2.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r0);

     label16:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--encoding=");

        if $z0 == 0 goto label17;

        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r10 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--encoding=");

        $r0 = (java.lang.String) $r10;

        if $r0 == null goto label17;

        virtualinvoke $r2.<org.xml.sax.InputSource: void setEncoding(java.lang.String)>($r0);

     label17:
        interfaceinvoke $r4.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r2);

        return;

     label18:
        $r4 = new org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r4.<org.ccil.cowan.tagsoup.Parser: void <init>()>();

        goto label02;

     label19:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--emptybogons");

        if $z0 == 0 goto label07;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty", 1);

        goto label07;

     label20:
        $r8 = new java.io.OutputStreamWriter;

        $r7 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        specialinvoke $r8.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, $r7);

        goto label14;

     label21:
        $r11 = <java.lang.System: java.io.InputStream in>;

        virtualinvoke $r2.<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)>($r11);

        goto label16;
    }
}
