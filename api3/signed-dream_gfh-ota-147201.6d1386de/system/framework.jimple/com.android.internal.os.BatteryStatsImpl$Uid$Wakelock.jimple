public final class com.android.internal.os.BatteryStatsImpl$Uid$Wakelock extends android.os.BatteryStats$Uid$Wakelock
{
    com.android.internal.os.BatteryStatsImpl$Timer mTimerFull;
    com.android.internal.os.BatteryStatsImpl$Timer mTimerPartial;
    com.android.internal.os.BatteryStatsImpl$Timer mTimerWindow;
    final com.android.internal.os.BatteryStatsImpl$Uid this$1;

    public void <init>(com.android.internal.os.BatteryStatsImpl$Uid)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Wakelock;

        $r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Uid;

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Uid this$1> = $r1;

        specialinvoke $r0.<android.os.BatteryStats$Uid$Wakelock: void <init>()>();

        return;
    }

    private com.android.internal.os.BatteryStatsImpl$Timer readTimerFromParcel(int, java.util.ArrayList, java.util.ArrayList, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r0;
        int $i0, $i1;
        java.util.ArrayList $r1, $r2;
        android.os.Parcel $r3;
        com.android.internal.os.BatteryStatsImpl$Timer $r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Wakelock;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: java.util.ArrayList;

        $r3 := @parameter3: android.os.Parcel;

        $i1 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

        if $i1 != 0 goto label1;

        return null;

     label1:
        $r4 = new com.android.internal.os.BatteryStatsImpl$Timer;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>($i0, $r1, $r2, $r3);

        return $r4;
    }

    public volatile android.os.BatteryStats$Timer getWakeTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Wakelock;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer getWakeTime(int)>($i0);

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getWakeTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.android.internal.os.BatteryStatsImpl$Timer r4;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Wakelock;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        r4 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerFull>;

        return r4;

     label3:
        r4 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerPartial>;

        return r4;

     label4:
        r4 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerWindow>;

        return r4;
    }

    void readFromParcelLocked(java.util.ArrayList, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r0;
        java.util.ArrayList $r1, $r5;
        android.os.Parcel $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        com.android.internal.os.BatteryStatsImpl $r4;
        com.android.internal.os.BatteryStatsImpl$Timer $r6;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Wakelock;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: android.os.Parcel;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r4 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r5 = $r4.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r6 = specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer readTimerFromParcel(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(0, $r5, $r1, $r2);

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerPartial> = $r6;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r4 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r5 = $r4.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers>;

        $r6 = specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer readTimerFromParcel(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(1, $r5, $r1, $r2);

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerFull> = $r6;

        $r3 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r4 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r5 = $r4.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers>;

        $r6 = specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer readTimerFromParcel(int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(2, $r5, $r1, $r2);

        $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerWindow> = $r6;

        return;
    }

    void writeToParcelLocked(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock $r0;
        android.os.Parcel $r1;
        long $l0;
        com.android.internal.os.BatteryStatsImpl$Timer $r2;

        $r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Wakelock;

        $r1 := @parameter0: android.os.Parcel;

        $l0 := @parameter1: long;

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerPartial>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Timer: void writeTimerToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Timer,long)>($r1, $r2, $l0);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerFull>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Timer: void writeTimerToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Timer,long)>($r1, $r2, $l0);

        $r2 = $r0.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer mTimerWindow>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Timer: void writeTimerToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Timer,long)>($r1, $r2, $l0);

        return;
    }
}
