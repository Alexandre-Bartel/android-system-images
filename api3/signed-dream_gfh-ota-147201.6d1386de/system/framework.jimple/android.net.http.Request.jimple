class android.net.http.Request extends java.lang.Object
{
    private static final java.lang.String ACCEPT_ENCODING_HEADER;
    private static final java.lang.String CONTENT_LENGTH_HEADER;
    private static final java.lang.String HOST_HEADER;
    private static org.apache.http.protocol.RequestContent requestContentProcessor;
    private int mBodyLength;
    private java.io.InputStream mBodyProvider;
    volatile boolean mCancelled;
    private final java.lang.Object mClientResource;
    private android.net.http.Connection mConnection;
    android.net.http.EventHandler mEventHandler;
    int mFailCount;
    boolean mHighPriority;
    org.apache.http.HttpHost mHost;
    org.apache.http.message.BasicHttpRequest mHttpRequest;
    java.lang.String mPath;
    org.apache.http.HttpHost mProxyHost;

    static void <clinit>()
    {
        org.apache.http.protocol.RequestContent $r0;

        <android.net.http.Request: java.lang.String HOST_HEADER> = "Host";

        <android.net.http.Request: java.lang.String CONTENT_LENGTH_HEADER> = "content-length";

        <android.net.http.Request: java.lang.String ACCEPT_ENCODING_HEADER> = "Accept-Encoding";

        $r0 = new org.apache.http.protocol.RequestContent;

        specialinvoke $r0.<org.apache.http.protocol.RequestContent: void <init>()>();

        <android.net.http.Request: org.apache.http.protocol.RequestContent requestContentProcessor> = $r0;

        return;
    }

    void <init>(java.lang.String, org.apache.http.HttpHost, org.apache.http.HttpHost, java.lang.String, java.io.InputStream, int, android.net.http.EventHandler, java.util.Map, boolean)
    {
        android.net.http.Request $r0;
        java.lang.String $r1, $r4;
        org.apache.http.HttpHost $r2, $r3;
        java.io.InputStream $r5;
        int $i0;
        android.net.http.EventHandler $r6;
        java.util.Map $r7;
        boolean $z0;
        java.lang.Object $r8;
        org.apache.http.message.BasicHttpRequest $r9;
        org.apache.http.message.BasicHttpEntityEnclosingRequest $r10;

        $r0 := @this: android.net.http.Request;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.http.HttpHost;

        $r3 := @parameter2: org.apache.http.HttpHost;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.io.InputStream;

        $i0 := @parameter5: int;

        $r6 := @parameter6: android.net.http.EventHandler;

        $r7 := @parameter7: java.util.Map;

        $z0 := @parameter8: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.net.http.Request: boolean mCancelled> = 0;

        $r0.<android.net.http.Request: int mFailCount> = 0;

        $r8 = new java.lang.Object;

        specialinvoke $r8.<java.lang.Object: void <init>()>();

        $r0.<android.net.http.Request: java.lang.Object mClientResource> = $r8;

        $r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler> = $r6;

        $r0.<android.net.http.Request: org.apache.http.HttpHost mHost> = $r2;

        $r0.<android.net.http.Request: org.apache.http.HttpHost mProxyHost> = $r3;

        $r0.<android.net.http.Request: java.lang.String mPath> = $r4;

        $r0.<android.net.http.Request: boolean mHighPriority> = $z0;

        $r0.<android.net.http.Request: java.io.InputStream mBodyProvider> = $r5;

        $r0.<android.net.http.Request: int mBodyLength> = $i0;

        if $r5 != null goto label2;

        $r9 = new org.apache.http.message.BasicHttpRequest;

        $r4 = virtualinvoke $r0.<android.net.http.Request: java.lang.String getUri()>();

        specialinvoke $r9.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>($r1, $r4);

        $r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest> = $r9;

     label1:
        $r1 = virtualinvoke $r0.<android.net.http.Request: java.lang.String getHostPort()>();

        virtualinvoke $r0.<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>("Host", $r1);

        virtualinvoke $r0.<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

        virtualinvoke $r0.<android.net.http.Request: void addHeaders(java.util.Map)>($r7);

        return;

     label2:
        $r10 = new org.apache.http.message.BasicHttpEntityEnclosingRequest;

        $r4 = virtualinvoke $r0.<android.net.http.Request: java.lang.String getUri()>();

        specialinvoke $r10.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String)>($r1, $r4);

        $r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest> = $r10;

        specialinvoke $r0.<android.net.http.Request: void setBodyProvider(java.io.InputStream,int)>($r5, $i0);

        goto label1;
    }

    private static boolean canResponseHaveBody(org.apache.http.HttpRequest, int)
    {
        org.apache.http.HttpRequest $r0;
        int $i0;
        java.lang.String $r1, $r3;
        org.apache.http.RequestLine $r2;
        boolean $z0;

        $r0 := @parameter0: org.apache.http.HttpRequest;

        $i0 := @parameter1: int;

        $r1 = "HEAD";

        $r2 = interfaceinvoke $r0.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r3 = interfaceinvoke $r2.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        if $i0 < 200 goto label2;

        if $i0 == 204 goto label2;

        if $i0 == 304 goto label2;

        if $i0 == 205 goto label2;

        return 1;

     label2:
        return 0;
    }

    private void setBodyProvider(java.io.InputStream, int)
    {
        java.io.InputStream $r0;
        int $i0;
        boolean $z0;
        android.net.http.Request $r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.http.message.BasicHttpRequest $r3;
        org.apache.http.message.BasicHttpEntityEnclosingRequest $r4;
        org.apache.http.entity.InputStreamEntity $r5;
        long $l1;

        $r1 := @this: android.net.http.Request;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bodyProvider must support mark()");

        throw $r2;

     label1:
        virtualinvoke $r0.<java.io.InputStream: void mark(int)>(2147483647);

        $r3 = $r1.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r4 = (org.apache.http.message.BasicHttpEntityEnclosingRequest) $r3;

        $r5 = new org.apache.http.entity.InputStreamEntity;

        $l1 = (long) $i0;

        specialinvoke $r5.<org.apache.http.entity.InputStreamEntity: void <init>(java.io.InputStream,long)>($r0, $l1);

        virtualinvoke $r4.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>($r5);

        return;
    }

    void addHeader(java.lang.String, java.lang.String)
    {
        android.net.http.Request $r0;
        java.lang.String $r1, $r2;
        java.lang.NullPointerException $r3;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r5;
        org.apache.http.message.BasicHttpRequest $r6;

        $r0 := @this: android.net.http.Request;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        staticinvoke <android.net.http.HttpLog: void e(java.lang.String)>("Null http header name");

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null http header name");

        throw $r3;

     label1:
        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null or empty value for header \"");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.http.HttpLog: void e(java.lang.String)>($r1);

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label3:
        $r6 = $r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        virtualinvoke $r6.<org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    void addHeaders(java.util.Map)
    {
        android.net.http.Request $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.String $r6, $r7;

        $r0 := @this: android.net.http.Request;

        $r1 := @parameter0: java.util.Map;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r4;

        virtualinvoke $r0.<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>($r6, $r7);

        goto label2;

     label3:
        return;
    }

    void cancel()
    {
        android.net.http.Request $r0;
        android.net.http.Connection $r1;

        $r0 := @this: android.net.http.Request;

        $r0.<android.net.http.Request: boolean mCancelled> = 1;

        $r1 = $r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        virtualinvoke $r1.<android.net.http.Connection: void cancel()>();

        return;

     label1:
        return;
    }

    void complete()
    {
        android.net.http.Request $r0;
        java.lang.Object $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.net.http.Request;

        $r1 = $r0.<android.net.http.Request: java.lang.Object mClientResource>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.net.http.Request: java.lang.Object mClientResource>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void error(int, int)
    {
        android.net.http.Request $r0;
        int $i0, $i1;
        android.net.http.EventHandler $r1;
        android.net.http.Connection $r2;
        android.content.Context $r3;
        java.lang.CharSequence $r4;
        java.lang.String $r5;

        $r0 := @this: android.net.http.Request;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        $r2 = $r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r3 = $r2.<android.net.http.Connection: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.CharSequence getText(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r1.<android.net.http.EventHandler: void error(int,java.lang.String)>($i0, $r5);

        return;
    }

    android.net.http.EventHandler getEventHandler()
    {
        android.net.http.Request $r0;
        android.net.http.EventHandler r1;

        $r0 := @this: android.net.http.Request;

        r1 = $r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        return r1;
    }

    java.lang.String getHostPort()
    {
        android.net.http.Request $r0;
        org.apache.http.HttpHost $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: android.net.http.Request;

        $r1 = $r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r2 = virtualinvoke $r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $r1 = $r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $i0 = virtualinvoke $r1.<org.apache.http.HttpHost: int getPort()>();

        if $i0 == 80 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 != 0 goto label2;

     label1:
        if $i0 == 443 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 == 0 goto label3;

     label2:
        $r1 = $r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r2 = virtualinvoke $r1.<org.apache.http.HttpHost: java.lang.String toHostString()>();

        return $r2;

     label3:
        $r1 = $r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r2 = virtualinvoke $r1.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        return $r2;
    }

    java.lang.String getUri()
    {
        android.net.http.Request $r0;
        org.apache.http.HttpHost $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @this: android.net.http.Request;

        $r1 = $r0.<android.net.http.Request: org.apache.http.HttpHost mProxyHost>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r2 = virtualinvoke $r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 == 0 goto label2;

     label1:
        $r2 = $r0.<android.net.http.Request: java.lang.String mPath>;

        return $r2;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = $r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r2 = virtualinvoke $r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r2 = virtualinvoke $r0.<android.net.http.Request: java.lang.String getHostPort()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = $r0.<android.net.http.Request: java.lang.String mPath>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void handleSslErrorResponse(boolean)
    {
        boolean $z0;
        android.net.http.Request $r0;
        android.net.http.Connection $r1;
        android.net.http.HttpsConnection $r2;

        $r0 := @this: android.net.http.Request;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r2 = (android.net.http.HttpsConnection) $r1;

        $r2 = (android.net.http.HttpsConnection) $r2;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.net.http.HttpsConnection: void restartConnection(boolean)>($z0);

        return;

     label1:
        return;
    }

    void readResponse(android.net.http.AndroidHttpClientConnection) throws java.io.IOException, org.apache.http.ParseException
    {
        android.net.http.Request $r0;
        android.net.http.AndroidHttpClientConnection $r1;
        android.net.http.Headers $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.zip.GZIPInputStream $r3;
        boolean $z0;
        org.apache.http.StatusLine $r4;
        org.apache.http.ProtocolVersion $r5;
        android.net.http.EventHandler $r6;
        java.lang.String $r7;
        org.apache.http.HttpEntity $r8;
        org.apache.http.message.BasicHttpRequest $r9;
        java.io.InputStream $r10, $r12;
        org.apache.http.Header $r11;
        android.net.http.Connection $r13;
        byte[] $r14;
        java.io.EOFException $r15;
        java.io.IOException $r16;
        java.lang.Throwable $r17;

        $r0 := @this: android.net.http.Request;

        $r1 := @parameter0: android.net.http.AndroidHttpClientConnection;

        $z0 = $r0.<android.net.http.Request: boolean mCancelled>;

        if $z0 == 0 goto label01;

        return;

     label01:
        virtualinvoke $r1.<android.net.http.AndroidHttpClientConnection: void flush()>();

        $r2 = new android.net.http.Headers;

        specialinvoke $r2.<android.net.http.Headers: void <init>()>();

     label02:
        $r4 = virtualinvoke $r1.<android.net.http.AndroidHttpClientConnection: org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers)>($r2);

        $i1 = interfaceinvoke $r4.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i1 < 200 goto label02;

        $r5 = interfaceinvoke $r4.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r6 = $r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        $i2 = virtualinvoke $r5.<org.apache.http.ProtocolVersion: int getMajor()>();

        $i0 = virtualinvoke $r5.<org.apache.http.ProtocolVersion: int getMinor()>();

        $r7 = interfaceinvoke $r4.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        interfaceinvoke $r6.<android.net.http.EventHandler: void status(int,int,int,java.lang.String)>($i2, $i0, $i1, $r7);

        $r6 = $r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r6.<android.net.http.EventHandler: void headers(android.net.http.Headers)>($r2);

        $r8 = null;

        $r9 = $r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $z0 = staticinvoke <android.net.http.Request: boolean canResponseHaveBody(org.apache.http.HttpRequest,int)>($r9, $i1);

        if $z0 == 0 goto label03;

        $r8 = virtualinvoke $r1.<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)>($r2);

     label03:
        if $r8 == null goto label20;

        $r10 = interfaceinvoke $r8.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r11 = interfaceinvoke $r8.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        $r12 = null;

        if $r11 == null goto label18;

     label04:
        $r7 = interfaceinvoke $r11.<org.apache.http.Header: java.lang.String getValue()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("gzip");

     label05:
        if $z0 == 0 goto label18;

     label06:
        $r3 = new java.util.zip.GZIPInputStream;

        specialinvoke $r3.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r10);

     label07:
        $r12 = $r3;

     label08:
        $r13 = $r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r14 = virtualinvoke $r13.<android.net.http.Connection: byte[] getBuf()>();

     label09:
        $i3 = 0;

     label10:
        $i2 = 0;

        $i0 = lengthof $r14;

     label11:
        $i0 = $i0 / 2;

     label12:
        if $i3 == -1 goto label19;

        $i3 = lengthof $r14;

     label13:
        $i3 = $i3 - $i2;

        $i4 = virtualinvoke $r12.<java.io.InputStream: int read(byte[],int,int)>($r14, $i2, $i3);

     label14:
        $i3 = $i4;

        if $i4 == -1 goto label15;

        $i2 = $i2 + $i4;

     label15:
        if $i4 == -1 goto label16;

        if $i2 < $i0 goto label12;

     label16:
        $r6 = $r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r6.<android.net.http.EventHandler: void data(byte[],int)>($r14, $i2);

     label17:
        $i2 = 0;

        goto label12;

     label18:
        $r12 = $r10;

        goto label08;

     label19:
        if $r12 == null goto label20;

        virtualinvoke $r12.<java.io.InputStream: void close()>();

     label20:
        $r13 = $r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r5 = interfaceinvoke $r4.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $i1 = virtualinvoke $r2.<android.net.http.Headers: int getConnectionType()>();

        virtualinvoke $r13.<android.net.http.Connection: void setCanPersist(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int)>($r8, $r5, $i1);

        $r6 = $r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r6.<android.net.http.EventHandler: void endData()>();

        virtualinvoke $r0.<android.net.http.Request: void complete()>();

        return;

     label21:
        $r15 := @caughtexception;

        if $r12 == null goto label20;

        virtualinvoke $r12.<java.io.InputStream: void close()>();

        goto label20;

     label22:
        $r16 := @caughtexception;

        if $i1 != 200 goto label26;

     label23:
        throw $r16;

     label24:
        $r17 := @caughtexception;

        if $r12 == null goto label25;

        virtualinvoke $r12.<java.io.InputStream: void close()>();

     label25:
        throw $r17;

     label26:
        if $r12 == null goto label20;

        virtualinvoke $r12.<java.io.InputStream: void close()>();

        goto label20;

        catch java.io.EOFException from label04 to label05 with label21;
        catch java.io.EOFException from label06 to label07 with label21;
        catch java.io.EOFException from label08 to label09 with label21;
        catch java.io.EOFException from label13 to label14 with label21;
        catch java.io.EOFException from label16 to label17 with label21;
        catch java.io.IOException from label04 to label05 with label22;
        catch java.io.IOException from label06 to label07 with label22;
        catch java.io.IOException from label08 to label09 with label22;
        catch java.io.IOException from label13 to label14 with label22;
        catch java.io.IOException from label16 to label17 with label22;
        catch java.lang.Throwable from label04 to label09 with label24;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label12 to label14 with label24;
        catch java.lang.Throwable from label15 to label17 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
    }

    void reset()
    {
        android.net.http.Request $r0;
        org.apache.http.message.BasicHttpRequest $r1;
        java.io.InputStream $r2;
        int $i0;
        java.io.IOException $r3;

        $r0 := @this: android.net.http.Request;

        $r1 = $r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        virtualinvoke $r1.<org.apache.http.message.AbstractHttpMessage: void removeHeaders(java.lang.String)>("content-length");

        $r2 = $r0.<android.net.http.Request: java.io.InputStream mBodyProvider>;

        if $r2 == null goto label4;

        $r2 = $r0.<android.net.http.Request: java.io.InputStream mBodyProvider>;

     label1:
        virtualinvoke $r2.<java.io.InputStream: void reset()>();

     label2:
        $r2 = $r0.<android.net.http.Request: java.io.InputStream mBodyProvider>;

        $i0 = $r0.<android.net.http.Request: int mBodyLength>;

        specialinvoke $r0.<android.net.http.Request: void setBodyProvider(java.io.InputStream,int)>($r2, $i0);

        return;

     label3:
        $r3 := @caughtexception;

        goto label2;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void sendRequest(android.net.http.AndroidHttpClientConnection) throws org.apache.http.HttpException, java.io.IOException
    {
        android.net.http.AndroidHttpClientConnection $r0;
        org.apache.http.message.BasicHttpRequest $r1;
        org.apache.http.protocol.HttpContext $r2;
        android.net.http.Request $r3;
        boolean $z0;
        org.apache.http.protocol.RequestContent $r4;
        android.net.http.Connection $r5;
        org.apache.http.HttpEntityEnclosingRequest $r6;

        $r3 := @this: android.net.http.Request;

        $r0 := @parameter0: android.net.http.AndroidHttpClientConnection;

        $z0 = $r3.<android.net.http.Request: boolean mCancelled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = <android.net.http.Request: org.apache.http.protocol.RequestContent requestContentProcessor>;

        $r1 = $r3.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r5 = $r3.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r2 = virtualinvoke $r5.<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()>();

        virtualinvoke $r4.<org.apache.http.protocol.RequestContent: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>($r1, $r2);

        $r1 = $r3.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        virtualinvoke $r0.<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>($r1);

        $r1 = $r3.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $z0 = $r1 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z0 == 0 goto label2;

        $r1 = $r3.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r6 = (org.apache.http.HttpEntityEnclosingRequest) $r1;

        virtualinvoke $r0.<android.net.http.AndroidHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>($r6);

        return;

     label2:
        return;
    }

    void setConnection(android.net.http.Connection)
    {
        android.net.http.Request $r0;
        android.net.http.Connection $r1;

        $r0 := @this: android.net.http.Request;

        $r1 := @parameter0: android.net.http.Connection;

        $r0.<android.net.http.Request: android.net.http.Connection mConnection> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        android.net.http.Request $r0;
        java.lang.StringBuilder $r1;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @this: android.net.http.Request;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $z0 = $r0.<android.net.http.Request: boolean mHighPriority>;

        if $z0 == 0 goto label2;

        $r2 = "P*";

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = $r0.<android.net.http.Request: java.lang.String mPath>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r2 = "";

        goto label1;
    }

    void waitUntilComplete()
    {
        android.net.http.Request $r0;
        java.lang.Object $r1, $r2;
        java.lang.Throwable $r3;
        java.lang.InterruptedException $r4;

        $r0 := @this: android.net.http.Request;

        $r1 = $r0.<android.net.http.Request: java.lang.Object mClientResource>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<android.net.http.Request: java.lang.Object mClientResource>;

     label2:
        virtualinvoke $r2.<java.lang.Object: void wait()>();

     label3:
        exitmonitor $r1;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r3;

     label7:
        $r4 := @caughtexception;

        goto label3;

        catch java.lang.InterruptedException from label2 to label3 with label7;
        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
