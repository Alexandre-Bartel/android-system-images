public class org.apache.harmony.x.imageio.plugins.png.PNGImageReader extends javax.imageio.ImageReader
{
    javax.imageio.stream.ImageInputStream iis;

    public void <init>(javax.imageio.spi.ImageReaderSpi)
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        javax.imageio.spi.ImageReaderSpi $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $r1 := @parameter0: javax.imageio.spi.ImageReaderSpi;

        specialinvoke $r0.<javax.imageio.ImageReader: void <init>(javax.imageio.spi.ImageReaderSpi)>($r1);

        return;
    }

    public javax.imageio.ImageReadParam getDefaultReadParam()
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        javax.imageio.ImageReadParam $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $r1 = new javax.imageio.ImageReadParam;

        specialinvoke $r1.<javax.imageio.ImageReadParam: void <init>()>();

        return $r1;
    }

    public int getHeight(int) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented yet");

        throw $r1;
    }

    public javax.imageio.metadata.IIOMetadata getImageMetadata(int) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented yet");

        throw $r1;
    }

    public java.util.Iterator getImageTypes(int) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented yet");

        throw $r1;
    }

    public int getNumImages(boolean) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $z0 := @parameter0: boolean;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented yet");

        throw $r1;
    }

    public javax.imageio.metadata.IIOMetadata getStreamMetadata() throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented yet");

        throw $r1;
    }

    public int getWidth(int) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented yet");

        throw $r1;
    }

    public java.awt.image.BufferedImage read(int) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        int $i0;
        java.awt.image.BufferedImage $r1;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>($i0, null);

        return $r1;
    }

    public java.awt.image.BufferedImage read(int, javax.imageio.ImageReadParam) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        int $i0;
        javax.imageio.ImageReadParam $r1;
        org.apache.harmony.awt.gl.image.OffscreenImage $r2;
        org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource $r3;
        java.awt.image.BufferedImage $r4;
        javax.imageio.stream.ImageInputStream $r5;
        java.lang.IllegalArgumentException $r6;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $i0 := @parameter0: int;

        $r1 := @parameter1: javax.imageio.ImageReadParam;

        $r5 = $r0.<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: javax.imageio.stream.ImageInputStream iis>;

        if $r5 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("input stream == null");

        throw $r6;

     label1:
        $r3 = new org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource;

        $r5 = $r0.<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: javax.imageio.stream.ImageInputStream iis>;

        specialinvoke $r3.<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource: void <init>(javax.imageio.stream.ImageInputStream)>($r5);

        $r2 = new org.apache.harmony.awt.gl.image.OffscreenImage;

        specialinvoke $r2.<org.apache.harmony.awt.gl.image.OffscreenImage: void <init>(java.awt.image.ImageProducer)>($r3);

        virtualinvoke $r3.<org.apache.harmony.awt.gl.image.DecodingImageSource: void addConsumer(java.awt.image.ImageConsumer)>($r2);

        virtualinvoke $r3.<org.apache.harmony.awt.gl.image.DecodingImageSource: void load()>();

        staticinvoke <java.lang.Thread: boolean interrupted()>();

        $r4 = virtualinvoke $r2.<org.apache.harmony.awt.gl.image.OffscreenImage: java.awt.image.BufferedImage getBufferedImage()>();

        return $r4;
    }

    public void setInput(java.lang.Object, boolean, boolean)
    {
        org.apache.harmony.x.imageio.plugins.png.PNGImageReader $r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        javax.imageio.stream.ImageInputStream $r2;

        $r0 := @this: org.apache.harmony.x.imageio.plugins.png.PNGImageReader;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        specialinvoke $r0.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>($r1, $z0, $z1);

        $r2 = (javax.imageio.stream.ImageInputStream) $r1;

        $r0.<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: javax.imageio.stream.ImageInputStream iis> = $r2;

        return;
    }
}
