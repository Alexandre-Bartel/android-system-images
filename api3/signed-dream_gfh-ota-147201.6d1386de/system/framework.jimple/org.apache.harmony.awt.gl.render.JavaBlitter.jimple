public class org.apache.harmony.awt.gl.render.JavaBlitter extends java.lang.Object implements org.apache.harmony.awt.gl.render.Blitter
{
    static final int AlphaCompositeMode;
    static final int XORMode;
    static byte[][] divLUT;
    static final org.apache.harmony.awt.gl.render.JavaBlitter inst;
    static byte[][] mulLUT;

    static void <clinit>()
    {
        int[] $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        byte[][] $r3;
        int $i0, $i1, $i2;
        byte[] $r4;
        float $f0, $f1;
        byte $b3;
        org.apache.harmony.awt.gl.render.JavaBlitter $r5;

        <org.apache.harmony.awt.gl.render.JavaBlitter: int XORMode> = 2;

        <org.apache.harmony.awt.gl.render.JavaBlitter: int AlphaCompositeMode> = 1;

        $r0 = newarray (int)[2];

        $r0[0] = 256;

        $r0[1] = 256;

        $r1 = <java.lang.Byte: java.lang.Class TYPE>;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r1, $r0);

        $r3 = (byte[][]) $r2;

        <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT> = $r3;

        $i0 = 0;

     label01:
        if $i0 >= 256 goto label04;

        $i1 = 0;

     label02:
        if $i1 >= 256 goto label03;

        $r3 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r4 = $r3[$i0];

        $i2 = $i0 * $i1;

        $f0 = (float) $i2;

        $f0 = $f0 / 255.0F;

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

        $b3 = (byte) $i2;

        $r4[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label02;

     label03:
        $i0 = $i0 + 1;

        goto label01;

     label04:
        $r0 = newarray (int)[2];

        $r0[0] = 256;

        $r0[1] = 256;

        $r1 = <java.lang.Byte: java.lang.Class TYPE>;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r1, $r0);

        $r3 = (byte[][]) $r2;

        <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] divLUT> = $r3;

        $i0 = 1;

     label05:
        if $i0 >= 256 goto label10;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label07;

        $r3 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] divLUT>;

        $r4 = $r3[$i0];

        $f0 = (float) $i1;

        $f0 = $f0 / 255.0F;

        $f1 = (float) $i0;

        $f1 = $f1 / 255.0F;

        $f0 = $f0 / $f1;

        $f0 = $f0 * 255.0F;

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

        $b3 = (byte) $i2;

        $r4[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label06;

     label07:
        $i1 = $i0;

     label08:
        if $i1 >= 256 goto label09;

        $r3 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] divLUT>;

        $r4 = $r3[$i0];

        $r4[$i1] = -1;

        $i1 = $i1 + 1;

        goto label08;

     label09:
        $i0 = $i0 + 1;

        goto label05;

     label10:
        $r5 = new org.apache.harmony.awt.gl.render.JavaBlitter;

        specialinvoke $r5.<org.apache.harmony.awt.gl.render.JavaBlitter: void <init>()>();

        <org.apache.harmony.awt.gl.render.JavaBlitter: org.apache.harmony.awt.gl.render.JavaBlitter inst> = $r5;

        return;
    }

    public void <init>()
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private int compose(int, boolean, int, boolean, boolean, int, int)
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2;
        byte[][] $r1;
        byte[] $r2;
        byte $b7;
        short $s8, $s9, $s10, $s11, $s12;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i3 := @parameter2: int;

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $i1 := @parameter5: int;

        $i2 := @parameter6: int;

        $i4 = $i0 >> 24;

        $i4 = $i4 & 255;

        $i5 = $i0 >> 16;

        $i5 = $i5 & 255;

        $i6 = $i0 >> 8;

        $i6 = $i6 & 255;

        $i0 = $i0 & 255;

        if $z0 == 0 goto label06;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i2];

        $b7 = $r2[$i4];

        $s8 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i2];

        $b7 = $r2[$i5];

        $s9 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i2];

        $b7 = $r2[$i6];

        $s10 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i2];

        $b7 = $r2[$i0];

        $s11 = $b7 & 255;

     label01:
        $i0 = $i3 >> 24;

        $i0 = $i0 & 255;

        $i2 = $i3 >> 16;

        $i5 = $i2 & 255;

        $i2 = $i3 >> 8;

        $i6 = $i2 & 255;

        $i3 = $i3 & 255;

        if $z2 != 0 goto label02;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i0];

        $b7 = $r2[$i5];

        $i5 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i0];

        $b7 = $r2[$i6];

        $i6 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i0];

        $b7 = $r2[$i3];

        $i3 = $b7 & 255;

     label02:
        $i2 = 0;

        $i4 = 0;

        lookupswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label12;
            case 3: goto label16;
            case 4: goto label11;
            case 5: goto label14;
            case 6: goto label09;
            case 7: goto label15;
            case 8: goto label10;
            case 9: goto label07;
            case 10: goto label13;
            case 11: goto label08;
            case 12: goto label17;
            default: goto label03;
        };

     label03:
        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$s9];

        $b7 = $r2[$i2];

        $s9 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i5];

        $b7 = $r2[$i4];

        $s12 = $b7 & 255;

        $i5 = $s9 + $s12;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$s10];

        $b7 = $r2[$i2];

        $s10 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i6];

        $b7 = $r2[$i4];

        $s9 = $b7 & 255;

        $i1 = $s10 + $s9;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$s11];

        $b7 = $r2[$i2];

        $s11 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i3];

        $b7 = $r2[$i4];

        $s10 = $b7 & 255;

        $i3 = $s11 + $s10;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$s8];

        $b7 = $r2[$i2];

        $s8 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i0];

        $b7 = $r2[$i4];

        $s11 = $b7 & 255;

        $i0 = $s8 + $s11;

        if $z2 != 0 goto label04;

        if $i0 == 255 goto label04;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] divLUT>;

        $r2 = $r1[$i0];

        $b7 = $r2[$i5];

        $i5 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] divLUT>;

        $r2 = $r1[$i0];

        $b7 = $r2[$i1];

        $i1 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] divLUT>;

        $r2 = $r1[$i0];

        $b7 = $r2[$i3];

        $i3 = $b7 & 255;

     label04:
        if $z1 != 0 goto label05;

        $i0 = 255;

     label05:
        $i0 = $i0 << 24;

        $i2 = $i5 << 16;

        $i0 = $i0 | $i2;

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        $i0 = $i0 | $i3;

        return $i0;

     label06:
        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$i2];

        $b7 = $r2[$i4];

        $s8 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$s8];

        $b7 = $r2[$i5];

        $s9 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$s8];

        $b7 = $r2[$i6];

        $s10 = $b7 & 255;

        $r1 = <org.apache.harmony.awt.gl.render.JavaBlitter: byte[][] mulLUT>;

        $r2 = $r1[$s8];

        $b7 = $r2[$i0];

        $s11 = $b7 & 255;

        goto label01;

     label07:
        $i4 = 255;

        goto label03;

     label08:
        $i2 = 255 - $i0;

        $i4 = $s8;

        goto label03;

     label09:
        $i4 = $s8;

        goto label03;

     label10:
        $i4 = 255 - $s8;

        goto label03;

     label11:
        $i2 = 255 - $i0;

        $i4 = 255;

        goto label03;

     label12:
        $i2 = 255;

        goto label03;

     label13:
        $i2 = $i0;

        $i4 = 255 - $s8;

        goto label03;

     label14:
        $i2 = $i0;

        goto label03;

     label15:
        $i2 = 255 - $i0;

        goto label03;

     label16:
        $i2 = 255;

        $i4 = 255 - $s8;

        goto label03;

     label17:
        $i2 = 255 - $i0;

        $i4 = 255 - $s8;

        goto label03;
    }

    private java.awt.geom.Rectangle2D getBounds2D(java.awt.geom.AffineTransform, java.awt.Rectangle)
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;
        java.awt.geom.AffineTransform $r1;
        java.awt.Rectangle $r2;
        float[] $r3;
        java.awt.geom.Rectangle2D$Float $r4;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1;
        double $d0, $d1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        $r1 := @parameter0: java.awt.geom.AffineTransform;

        $r2 := @parameter1: java.awt.Rectangle;

        $i2 = $r2.<java.awt.Rectangle: int x>;

        $i3 = $r2.<java.awt.Rectangle: int y>;

        $i1 = $r2.<java.awt.Rectangle: int width>;

        $i0 = $r2.<java.awt.Rectangle: int height>;

        $r3 = newarray (float)[8];

        $f0 = (float) $i2;

        $r3[0] = $f0;

        $f0 = (float) $i3;

        $r3[1] = $f0;

        $i4 = $i2 + $i1;

        $f0 = (float) $i4;

        $r3[2] = $f0;

        $f0 = (float) $i3;

        $r3[3] = $f0;

        $i1 = $i2 + $i1;

        $f0 = (float) $i1;

        $r3[4] = $f0;

        $i1 = $i3 + $i0;

        $f0 = (float) $i1;

        $r3[5] = $f0;

        $f0 = (float) $i2;

        $r3[6] = $f0;

        $i0 = $i3 + $i0;

        $f0 = (float) $i0;

        $r3[7] = $f0;

        virtualinvoke $r1.<java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)>($r3, 0, $r3, 0, 4);

        $r4 = new java.awt.geom.Rectangle2D$Float;

        $f0 = $r3[0];

        $f1 = $r3[1];

        specialinvoke $r4.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f0, $f1, 0.0F, 0.0F);

        $f0 = $r3[2];

        $d0 = (double) $f0;

        $f0 = $r3[3];

        $d1 = (double) $f0;

        virtualinvoke $r4.<java.awt.geom.Rectangle2D: void add(double,double)>($d0, $d1);

        $f0 = $r3[4];

        $d0 = (double) $f0;

        $f0 = $r3[5];

        $d1 = (double) $f0;

        virtualinvoke $r4.<java.awt.geom.Rectangle2D: void add(double,double)>($d0, $d1);

        $f0 = $r3[6];

        $d0 = (double) $f0;

        $f0 = $r3[7];

        $d1 = (double) $f0;

        virtualinvoke $r4.<java.awt.geom.Rectangle2D: void add(double,double)>($d0, $d1);

        return $r4;
    }

    public static org.apache.harmony.awt.gl.render.JavaBlitter getInstance()
    {
        org.apache.harmony.awt.gl.render.JavaBlitter r0;

        r0 = <org.apache.harmony.awt.gl.render.JavaBlitter: org.apache.harmony.awt.gl.render.JavaBlitter inst>;

        return r0;
    }

    private void transformedBlit(java.awt.image.ColorModel, java.awt.image.Raster, int, int, java.awt.image.ColorModel, java.awt.image.WritableRaster, int, int, int, int, java.awt.geom.AffineTransform, java.awt.Composite, java.awt.Color, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;
        java.awt.image.ColorModel $r1, $r3;
        java.awt.image.Raster $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.awt.image.WritableRaster $r4;
        java.awt.geom.AffineTransform $r5;
        java.awt.Composite $r6;
        java.awt.Color $r7, $r22;
        org.apache.harmony.awt.gl.MultiRectArea $r8;
        java.awt.Rectangle $r9, $r11, $r12;
        java.awt.geom.NoninvertibleTransformException $r10;
        java.awt.geom.Rectangle2D $r13;
        double[] $r14;
        int[] $r15, $r20;
        byte $b12;
        boolean $z0, $z1, $z2;
        java.awt.AlphaComposite $r16;
        float $f0;
        double $d0, $d1, $d2;
        java.lang.IllegalArgumentException $r17;
        java.lang.Class $r18;
        java.lang.String $r19;
        org.apache.harmony.awt.gl.XORComposite $r21;
        java.lang.Object $r23;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        $r1 := @parameter0: java.awt.image.ColorModel;

        $r2 := @parameter1: java.awt.image.Raster;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: java.awt.image.ColorModel;

        $r4 := @parameter5: java.awt.image.WritableRaster;

        $i2 := @parameter6: int;

        $i3 := @parameter7: int;

        $i4 := @parameter8: int;

        $i5 := @parameter9: int;

        $r5 := @parameter10: java.awt.geom.AffineTransform;

        $r6 := @parameter11: java.awt.Composite;

        $r7 := @parameter12: java.awt.Color;

        $r8 := @parameter13: org.apache.harmony.awt.gl.MultiRectArea;

        $r11 = new java.awt.Rectangle;

        specialinvoke $r11.<java.awt.Rectangle: void <init>(int,int)>($i4, $i5);

        $r12 = new java.awt.Rectangle;

        $i0 = virtualinvoke $r2.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke $r2.<java.awt.image.Raster: int getHeight()>();

        specialinvoke $r12.<java.awt.Rectangle: void <init>(int,int,int,int)>($i2, $i3, $i0, $i1);

        $r13 = specialinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: java.awt.geom.Rectangle2D getBounds2D(java.awt.geom.AffineTransform,java.awt.Rectangle)>($r5, $r11);

        $r9 = virtualinvoke $r13.<java.awt.geom.RectangularShape: java.awt.Rectangle getBounds()>();

        $r13 = specialinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: java.awt.geom.Rectangle2D getBounds2D(java.awt.geom.AffineTransform,java.awt.Rectangle)>($r5, $r12);

        $r12 = virtualinvoke $r13.<java.awt.geom.RectangularShape: java.awt.Rectangle getBounds()>();

        $i0 = $r12.<java.awt.Rectangle: int x>;

        $i1 = $r9.<java.awt.Rectangle: int x>;

        $i0 = $i0 - $i1;

        $i1 = $r12.<java.awt.Rectangle: int y>;

        $i2 = $r9.<java.awt.Rectangle: int y>;

        $i1 = $i1 - $i2;

     label01:
        $r5 = virtualinvoke $r5.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

     label02:
        $r14 = newarray (double)[6];

        virtualinvoke $r5.<java.awt.geom.AffineTransform: void getMatrix(double[])>($r14);

        if $r8 == null goto label11;

        $r15 = $r8.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

     label03:
        $b12 = 0;

        $i2 = 0;

        $i3 = 0;

        if $r7 != null goto label12;

        $i4 = 0;

     label04:
        $z0 = $r6 instanceof java.awt.AlphaComposite;

        if $z0 == 0 goto label13;

        $b12 = 1;

        $r16 = (java.awt.AlphaComposite) $r6;

        $i3 = virtualinvoke $r16.<java.awt.AlphaComposite: int getRule()>();

        $f0 = virtualinvoke $r16.<java.awt.AlphaComposite: float getAlpha()>();

        $f0 = $f0 * 255.0F;

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

     label05:
        $i5 = 1;

     label06:
        $i13 = $r15[0];

        if $i5 >= $i13 goto label21;

        $r9 = new java.awt.Rectangle;

        $i13 = $r15[$i5];

        $i14 = $i5 + 1;

        $i14 = $r15[$i14];

        specialinvoke $r9.<java.awt.Rectangle: void <init>(int,int,int,int)>($i13, $i14, 0, 0);

        $i13 = $i5 + 2;

        $i13 = $r15[$i13];

        $i13 = $i13 + 1;

        $i14 = $i5 + 1;

        $i14 = $r15[$i14];

        virtualinvoke $r9.<java.awt.Rectangle: void add(int,int)>($i13, $i14);

        $i13 = $i5 + 2;

        $i13 = $r15[$i13];

        $i13 = $i13 + 1;

        $i14 = $i5 + 3;

        $i14 = $r15[$i14];

        $i14 = $i14 + 1;

        virtualinvoke $r9.<java.awt.Rectangle: void add(int,int)>($i13, $i14);

        $i13 = $r15[$i5];

        $i14 = $i5 + 3;

        $i14 = $r15[$i14];

        $i14 = $i14 + 1;

        virtualinvoke $r9.<java.awt.Rectangle: void add(int,int)>($i13, $i14);

        $r9 = virtualinvoke $r9.<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>($r12);

        $i13 = $r11.<java.awt.Rectangle: int x>;

        $i14 = $r11.<java.awt.Rectangle: int y>;

        $i6 = $r11.<java.awt.Rectangle: int width>;

        $i6 = $i13 + $i6;

        $i7 = $r11.<java.awt.Rectangle: int height>;

        $i7 = $i14 + $i7;

        $i15 = $r9.<java.awt.Rectangle: int x>;

        $i16 = $r9.<java.awt.Rectangle: int y>;

        $i8 = $r9.<java.awt.Rectangle: int width>;

        $i8 = $i15 + $i8;

        $i9 = $r9.<java.awt.Rectangle: int height>;

        $i9 = $i16 + $i9;

        $d0 = $r14[0];

        $d0 = $d0 * 256.0;

        $d0 = $d0 + 0.5;

        $i17 = (int) $d0;

        $d0 = $r14[1];

        $d0 = $d0 * 256.0;

        $d0 = $d0 + 0.5;

        $i18 = (int) $d0;

        $d0 = $r14[2];

        $d0 = $d0 * 256.0;

        $d0 = $d0 + 0.5;

        $i19 = (int) $d0;

        $d0 = $r14[3];

        $d0 = $d0 * 256.0;

        $d0 = $d0 + 0.5;

        $i20 = (int) $d0;

        $d0 = $r14[4];

        $d1 = $r14[0];

        $i21 = $r9.<java.awt.Rectangle: int x>;

        $i21 = $i21 - $i0;

        $d2 = (double) $i21;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $d1 = $r14[2];

        $i21 = $r9.<java.awt.Rectangle: int y>;

        $i21 = $i21 - $i1;

        $d2 = (double) $i21;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $d0 = $d0 * 256.0;

        $d0 = $d0 + 0.5;

        $i21 = (int) $d0;

        $d0 = $r14[5];

        $d1 = $r14[1];

        $i22 = $r9.<java.awt.Rectangle: int x>;

        $i22 = $i22 - $i0;

        $d2 = (double) $i22;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $d1 = $r14[3];

        $i22 = $r9.<java.awt.Rectangle: int y>;

        $i22 = $i22 - $i1;

        $d2 = (double) $i22;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $d0 = $d0 * 256.0;

        $d0 = $d0 + 0.5;

        $i22 = (int) $d0;

        $i23 = $r9.<java.awt.Rectangle: int width>;

        $i23 = $i23 * $i17;

        $i19 = $i19 - $i23;

        $i23 = $r9.<java.awt.Rectangle: int width>;

        $i23 = $i23 * $i18;

        $i20 = $i20 - $i23;

     label07:
        if $i16 >= $i9 goto label20;

        $i23 = $i15;

     label08:
        if $i23 >= $i8 goto label19;

        $i10 = $i21 >> 8;

        $i11 = $i22 >> 8;

        if $i10 < $i13 goto label16;

        if $i11 < $i14 goto label16;

        if $i10 >= $i6 goto label16;

        if $i11 >= $i7 goto label16;

        lookupswitch($b12)
        {
            case 1: goto label14;
            case 2: goto label18;
            default: goto label09;
        };

     label09:
        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("awt.37", $r18);

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r17;

     label10:
        $r10 := @caughtexception;

        return;

     label11:
        $r20 = newarray (int)[5];

        $r15 = $r20;

        $r20[0] = 5;

        $r20[1] = 0;

        $r20[2] = 0;

        $i2 = virtualinvoke $r4.<java.awt.image.Raster: int getWidth()>();

        $r20[3] = $i2;

        $i2 = virtualinvoke $r4.<java.awt.image.Raster: int getHeight()>();

        $r20[4] = $i2;

        goto label03;

     label12:
        $i4 = virtualinvoke $r7.<java.awt.Color: int getRGB()>();

        goto label04;

     label13:
        $z0 = $r6 instanceof org.apache.harmony.awt.gl.XORComposite;

        if $z0 == 0 goto label05;

        $b12 = 2;

        $r21 = (org.apache.harmony.awt.gl.XORComposite) $r6;

        $r22 = virtualinvoke $r21.<org.apache.harmony.awt.gl.XORComposite: java.awt.Color getXORColor()>();

        $i4 = virtualinvoke $r22.<java.awt.Color: int getRGB()>();

        goto label05;

     label14:
        $r23 = virtualinvoke $r2.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i10, $i11, null);

        $i10 = virtualinvoke $r1.<java.awt.image.ColorModel: int getRGB(java.lang.Object)>($r23);

        if $r7 == null goto label17;

        $i11 = $i4;

     label15:
        $z0 = virtualinvoke $r1.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        $z1 = virtualinvoke $r3.<java.awt.image.ColorModel: boolean hasAlpha()>();

        $z2 = virtualinvoke $r3.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        $i10 = specialinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: int compose(int,boolean,int,boolean,boolean,int,int)>($i10, $z0, $i11, $z1, $z2, $i3, $i2);

        $r23 = virtualinvoke $r3.<java.awt.image.ColorModel: java.lang.Object getDataElements(int,java.lang.Object)>($i10, null);

        virtualinvoke $r4.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>($i23, $i16, $r23);

     label16:
        $i21 = $i21 + $i17;

        $i22 = $i22 + $i18;

        $i23 = $i23 + 1;

        goto label08;

     label17:
        $r23 = virtualinvoke $r4.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i23, $i16, null);

        $i11 = virtualinvoke $r3.<java.awt.image.ColorModel: int getRGB(java.lang.Object)>($r23);

        goto label15;

     label18:
        $r23 = virtualinvoke $r2.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i10, $i11, null);

        $i10 = virtualinvoke $r1.<java.awt.image.ColorModel: int getRGB(java.lang.Object)>($r23);

        $r23 = virtualinvoke $r4.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i23, $i16, null);

        virtualinvoke $r3.<java.awt.image.ColorModel: int getRGB(java.lang.Object)>($r23);

        $i10 = $i10 ^ $i4;

        $i10 = $i10 | -16777216;

        $r23 = virtualinvoke $r3.<java.awt.image.ColorModel: java.lang.Object getDataElements(int,java.lang.Object)>($i10, null);

        virtualinvoke $r4.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>($i23, $i16, $r23);

        goto label16;

     label19:
        $i21 = $i21 + $i19;

        $i22 = $i22 + $i20;

        $i16 = $i16 + 1;

        goto label07;

     label20:
        $i5 = $i5 + 4;

        goto label06;

     label21:
        return;

        catch java.awt.geom.NoninvertibleTransformException from label01 to label02 with label10;
    }

    void alphaCompose(int, int, java.awt.image.ColorModel, java.awt.image.Raster, int, int, java.awt.image.ColorModel, java.awt.image.WritableRaster, int, int, int, float, java.awt.Color)
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.awt.image.ColorModel $r1, $r3;
        java.awt.image.Raster $r2;
        java.awt.image.WritableRaster $r4;
        float $f0;
        java.awt.Color $r5;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.awt.image.ColorModel;

        $r2 := @parameter3: java.awt.image.Raster;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $r3 := @parameter6: java.awt.image.ColorModel;

        $r4 := @parameter7: java.awt.image.WritableRaster;

        $i4 := @parameter8: int;

        $i5 := @parameter9: int;

        $i6 := @parameter10: int;

        $f0 := @parameter11: float;

        $r5 := @parameter12: java.awt.Color;

        $f0 = 255.0F * $f0;

        $f0 = $f0 + 0.5F;

        $i7 = (int) $f0;

        $i8 = 0;

        if $r5 == null goto label1;

        $i8 = virtualinvoke $r5.<java.awt.Color: int getRGB()>();

     label1:
        $i9 = $i1;

        $i5 = $i1 + $i5;

     label2:
        if $i9 >= $i5 goto label6;

        $i10 = $i0;

        $i11 = $i2;

        $i1 = $i0 + $i4;

     label3:
        if $i10 >= $i1 goto label5;

        $r6 = virtualinvoke $r2.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i10, $i9, null);

        $i12 = virtualinvoke $r1.<java.awt.image.ColorModel: int getRGB(java.lang.Object)>($r6);

        if $r5 != null goto label4;

        $r6 = virtualinvoke $r4.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i11, $i3, null);

        $i8 = virtualinvoke $r3.<java.awt.image.ColorModel: int getRGB(java.lang.Object)>($r6);

     label4:
        $z0 = virtualinvoke $r1.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        $z1 = virtualinvoke $r3.<java.awt.image.ColorModel: boolean hasAlpha()>();

        $z2 = virtualinvoke $r3.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        $i12 = specialinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: int compose(int,boolean,int,boolean,boolean,int,int)>($i12, $z0, $i8, $z1, $z2, $i6, $i7);

        $i8 = $i12;

        $r6 = virtualinvoke $r3.<java.awt.image.ColorModel: java.lang.Object getDataElements(int,java.lang.Object)>($i12, null);

        virtualinvoke $r4.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>($i11, $i3, $r6);

        $i10 = $i10 + 1;

        $i11 = $i11 + 1;

        goto label3;

     label5:
        $i9 = $i9 + 1;

        $i3 = $i3 + 1;

        goto label2;

     label6:
        return;
    }

    public void blit(int, int, org.apache.harmony.awt.gl.Surface, int, int, org.apache.harmony.awt.gl.Surface, int, int, java.awt.Composite, java.awt.Color, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.harmony.awt.gl.Surface $r1, $r2;
        java.awt.Composite $r3;
        java.awt.Color $r4;
        org.apache.harmony.awt.gl.MultiRectArea $r5;
        java.awt.image.ColorModel $r6, $r8;
        java.awt.image.WritableRaster $r7, $r9;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: org.apache.harmony.awt.gl.Surface;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 := @parameter5: org.apache.harmony.awt.gl.Surface;

        $i4 := @parameter6: int;

        $i5 := @parameter7: int;

        $r3 := @parameter8: java.awt.Composite;

        $r4 := @parameter9: java.awt.Color;

        $r5 := @parameter10: org.apache.harmony.awt.gl.MultiRectArea;

        $i6 = virtualinvoke $r1.<org.apache.harmony.awt.gl.Surface: int getWidth()>();

        $i7 = virtualinvoke $r1.<org.apache.harmony.awt.gl.Surface: int getHeight()>();

        $r6 = virtualinvoke $r1.<org.apache.harmony.awt.gl.Surface: java.awt.image.ColorModel getColorModel()>();

        $r7 = virtualinvoke $r1.<org.apache.harmony.awt.gl.Surface: java.awt.image.WritableRaster getRaster()>();

        $i8 = virtualinvoke $r2.<org.apache.harmony.awt.gl.Surface: int getWidth()>();

        $i9 = virtualinvoke $r2.<org.apache.harmony.awt.gl.Surface: int getHeight()>();

        $r8 = virtualinvoke $r2.<org.apache.harmony.awt.gl.Surface: java.awt.image.ColorModel getColorModel()>();

        $r9 = virtualinvoke $r2.<org.apache.harmony.awt.gl.Surface: java.awt.image.WritableRaster getRaster()>();

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: void javaBlt(int,int,int,int,java.awt.image.ColorModel,java.awt.image.Raster,int,int,int,int,java.awt.image.ColorModel,java.awt.image.WritableRaster,int,int,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i1, $i6, $i7, $r6, $r7, $i2, $i3, $i8, $i9, $r8, $r9, $i4, $i5, $r3, $r4, $r5);

        return;
    }

    public void blit(int, int, org.apache.harmony.awt.gl.Surface, int, int, org.apache.harmony.awt.gl.Surface, int, int, java.awt.geom.AffineTransform, java.awt.Composite, java.awt.Color, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.harmony.awt.gl.Surface $r1, $r2;
        java.awt.Composite $r3;
        java.awt.Color $r4;
        org.apache.harmony.awt.gl.MultiRectArea $r5;
        java.awt.geom.AffineTransform $r6;
        java.awt.image.ColorModel $r7, $r10;
        java.awt.image.WritableRaster $r8;
        java.awt.image.Raster $r9;
        double $d0, $d1;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: org.apache.harmony.awt.gl.Surface;

        $i4 := @parameter3: int;

        $i5 := @parameter4: int;

        $r2 := @parameter5: org.apache.harmony.awt.gl.Surface;

        $i2 := @parameter6: int;

        $i3 := @parameter7: int;

        $r6 := @parameter8: java.awt.geom.AffineTransform;

        $r3 := @parameter9: java.awt.Composite;

        $r4 := @parameter10: java.awt.Color;

        $r5 := @parameter11: org.apache.harmony.awt.gl.MultiRectArea;

        if $r6 != null goto label1;

        $r6 = new java.awt.geom.AffineTransform;

        specialinvoke $r6.<java.awt.geom.AffineTransform: void <init>()>();

     label1:
        $i6 = virtualinvoke $r6.<java.awt.geom.AffineTransform: int getType()>();

        lookupswitch($i6)
        {
            case 0: goto label6;
            case 1: goto label5;
            default: goto label2;
        };

     label2:
        $i7 = virtualinvoke $r1.<org.apache.harmony.awt.gl.Surface: int getWidth()>();

        $i6 = virtualinvoke $r1.<org.apache.harmony.awt.gl.Surface: int getHeight()>();

        $i8 = $i0 + $i2;

        if $i8 >= $i7 goto label7;

     label3:
        $i7 = $i1 + $i3;

        if $i7 >= $i6 goto label8;

     label4:
        $r7 = virtualinvoke $r1.<org.apache.harmony.awt.gl.Surface: java.awt.image.ColorModel getColorModel()>();

        $r8 = virtualinvoke $r1.<org.apache.harmony.awt.gl.Surface: java.awt.image.WritableRaster getRaster()>();

        $r9 = virtualinvoke $r8.<java.awt.image.Raster: java.awt.image.Raster createChild(int,int,int,int,int,int,int[])>($i0, $i1, $i2, $i3, 0, 0, null);

        $r10 = virtualinvoke $r2.<org.apache.harmony.awt.gl.Surface: java.awt.image.ColorModel getColorModel()>();

        $r8 = virtualinvoke $r2.<org.apache.harmony.awt.gl.Surface: java.awt.image.WritableRaster getRaster()>();

        specialinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: void transformedBlit(java.awt.image.ColorModel,java.awt.image.Raster,int,int,java.awt.image.ColorModel,java.awt.image.WritableRaster,int,int,int,int,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>($r7, $r9, 0, 0, $r10, $r8, $i4, $i5, $i2, $i3, $r6, $r3, $r4, $r5);

        return;

     label5:
        $d0 = (double) $i4;

        $d1 = virtualinvoke $r6.<java.awt.geom.AffineTransform: double getTranslateX()>();

        $d0 = $d0 + $d1;

        $i4 = (int) $d0;

        $d0 = (double) $i5;

        $d1 = virtualinvoke $r6.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $d0 = $d0 + $d1;

        $i5 = (int) $d0;

     label6:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i1, $r1, $i4, $i5, $r2, $i2, $i3, $r3, $r4, $r5);

        return;

     label7:
        $i2 = $i7 - $i0;

        goto label3;

     label8:
        $i3 = $i6 - $i1;

        goto label4;
    }

    public void blit(int, int, org.apache.harmony.awt.gl.Surface, int, int, org.apache.harmony.awt.gl.Surface, int, int, java.awt.geom.AffineTransform, java.awt.geom.AffineTransform, java.awt.Composite, java.awt.Color, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.harmony.awt.gl.Surface $r1, $r2;
        java.awt.geom.AffineTransform $r3, $r4, $r8;
        java.awt.Composite $r5;
        java.awt.Color $r6;
        org.apache.harmony.awt.gl.MultiRectArea $r7;
        double $d0, $d1, $d2;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: org.apache.harmony.awt.gl.Surface;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 := @parameter5: org.apache.harmony.awt.gl.Surface;

        $i4 := @parameter6: int;

        $i5 := @parameter7: int;

        $r3 := @parameter8: java.awt.geom.AffineTransform;

        $r4 := @parameter9: java.awt.geom.AffineTransform;

        $r5 := @parameter10: java.awt.Composite;

        $r6 := @parameter11: java.awt.Color;

        $r7 := @parameter12: org.apache.harmony.awt.gl.MultiRectArea;

        if $r4 != null goto label1;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i1, $r1, $i2, $i3, $r2, $i4, $i5, $r3, $r5, $r6, $r7);

        return;

     label1:
        $d0 = virtualinvoke $r4.<java.awt.geom.AffineTransform: double getScaleX()>();

        $d1 = virtualinvoke $r4.<java.awt.geom.AffineTransform: double getScaleY()>();

        $d2 = (double) $i2;

        $d0 = $d2 / $d0;

        $d2 = (double) $i3;

        $d1 = $d2 / $d1;

        $r8 = new java.awt.geom.AffineTransform;

        specialinvoke $r8.<java.awt.geom.AffineTransform: void <init>()>();

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void setToTranslation(double,double)>($d0, $d1);

        virtualinvoke $r4.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r8);

        virtualinvoke $r3.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r4);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i1, $r1, 0, 0, $r2, $i4, $i5, $r3, $r5, $r6, $r7);

        return;
    }

    public void javaBlt(int, int, int, int, java.awt.image.ColorModel, java.awt.image.Raster, int, int, int, int, java.awt.image.ColorModel, java.awt.image.WritableRaster, int, int, java.awt.Composite, java.awt.Color, org.apache.harmony.awt.gl.MultiRectArea)
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.awt.image.ColorModel $r1, $r3;
        java.awt.image.Raster $r2, $r14;
        java.awt.image.WritableRaster $r4, $r15;
        java.awt.Composite $r5;
        java.awt.Color $r6, $r9;
        org.apache.harmony.awt.gl.MultiRectArea $r7;
        int[] $r8, $r12;
        boolean $z0, $z1, $z2;
        float $f0;
        java.awt.CompositeContext $r10;
        java.awt.AlphaComposite $r11;
        org.apache.harmony.awt.gl.XORComposite $r13;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        $i11 := @parameter0: int;

        $i12 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 := @parameter4: java.awt.image.ColorModel;

        $r2 := @parameter5: java.awt.image.Raster;

        $i13 := @parameter6: int;

        $i14 := @parameter7: int;

        $i2 := @parameter8: int;

        $i3 := @parameter9: int;

        $r3 := @parameter10: java.awt.image.ColorModel;

        $r4 := @parameter11: java.awt.image.WritableRaster;

        $i15 := @parameter12: int;

        $i16 := @parameter13: int;

        $r5 := @parameter14: java.awt.Composite;

        $r6 := @parameter15: java.awt.Color;

        $r7 := @parameter16: org.apache.harmony.awt.gl.MultiRectArea;

        $i0 = $i0 - 1;

        $i10 = $i1 - 1;

        $i1 = $i2 - 1;

        $i8 = $i3 - 1;

        if $i11 >= 0 goto label01;

        $i15 = $i15 + $i11;

        $i11 = 0;

     label01:
        if $i12 >= 0 goto label02;

        $i16 = $i16 + $i12;

        $i12 = 0;

     label02:
        if $i13 >= 0 goto label03;

        $i15 = $i15 + $i13;

        $i11 = $i11 - $i13;

        $i13 = 0;

     label03:
        if $i14 >= 0 goto label04;

        $i16 = $i16 + $i14;

        $i12 = $i12 - $i14;

        $i14 = 0;

     label04:
        if $i11 > $i0 goto label24;

        if $i12 <= $i10 goto label05;

        return;

     label05:
        if $i13 > $i1 goto label25;

        if $i14 > $i8 goto label26;

        $i17 = $i11 + $i15;

        if $i17 <= $i0 goto label06;

        $i15 = $i0 - $i11;

        $i15 = $i15 + 1;

     label06:
        $i17 = $i12 + $i16;

        if $i17 <= $i10 goto label07;

        $i16 = $i10 - $i12;

        $i16 = $i16 + 1;

     label07:
        $i17 = $i13 + $i15;

        if $i17 <= $i1 goto label08;

        $i15 = $i1 - $i13;

        $i15 = $i15 + 1;

     label08:
        $i17 = $i14 + $i16;

        if $i17 <= $i8 goto label09;

        $i16 = $i8 - $i14;

        $i16 = $i16 + 1;

     label09:
        if $i15 <= 0 goto label27;

        if $i16 <= 0 goto label28;

        if $r7 == null goto label14;

        $r8 = $r7.<org.apache.harmony.awt.gl.MultiRectArea: int[] rect>;

     label10:
        $z0 = 0;

        $i2 = 0;

        $f0 = 0.0F;

        $z1 = 0;

        $r9 = null;

        $r10 = null;

        $z2 = $r5 instanceof java.awt.AlphaComposite;

        if $z2 == 0 goto label15;

        $z0 = 1;

        $r11 = (java.awt.AlphaComposite) $r5;

        $i2 = virtualinvoke $r11.<java.awt.AlphaComposite: int getRule()>();

        $f0 = virtualinvoke $r11.<java.awt.AlphaComposite: float getAlpha()>();

     label11:
        $i3 = 1;

     label12:
        $i17 = $r8[0];

        if $i3 >= $i17 goto label29;

        $i9 = $i11;

        $i17 = $i12;

        $i18 = $i13;

        $i19 = $i14;

        $i20 = $i15;

        $i21 = $i16;

        $i4 = $r8[$i3];

        $i7 = $i3 + 1;

        $i6 = $r8[$i7];

        $i7 = $i3 + 2;

        $i5 = $r8[$i7];

        $i7 = $i3 + 3;

        $i7 = $r8[$i7];

        if $i13 > $i5 goto label13;

        if $i14 > $i7 goto label13;

        if $i1 < $i4 goto label13;

        if $i8 >= $i6 goto label17;

     label13:
        $i3 = $i3 + 4;

        goto label12;

     label14:
        $r12 = newarray (int)[5];

        $r8 = $r12;

        $r12[0] = 5;

        $r12[1] = 0;

        $r12[2] = 0;

        $i2 = $i2 - 1;

        $r12[3] = $i2;

        $i2 = $i3 - 1;

        $r12[4] = $i2;

        goto label10;

     label15:
        $z2 = $r5 instanceof org.apache.harmony.awt.gl.XORComposite;

        if $z2 == 0 goto label16;

        $z1 = 1;

        $r13 = (org.apache.harmony.awt.gl.XORComposite) $r5;

        $r9 = virtualinvoke $r13.<org.apache.harmony.awt.gl.XORComposite: java.awt.Color getXORColor()>();

        goto label11;

     label16:
        $r10 = interfaceinvoke $r5.<java.awt.Composite: java.awt.CompositeContext createContext(java.awt.image.ColorModel,java.awt.image.ColorModel,java.awt.RenderingHints)>($r1, $r3, null);

        goto label11;

     label17:
        if $i4 <= $i13 goto label18;

        $i9 = $i4 - $i13;

        $i20 = $i15 - $i9;

        $i18 = $i4;

        $i9 = $i11 + $i9;

     label18:
        if $i6 <= $i19 goto label19;

        $i4 = $i6 - $i19;

        $i21 = $i21 - $i4;

        $i19 = $i6;

        $i17 = $i17 + $i4;

     label19:
        $i4 = $i18 + $i20;

        $i6 = $i5 + 1;

        if $i4 <= $i6 goto label20;

        $i20 = $i5 - $i18;

        $i20 = $i20 + 1;

     label20:
        $i5 = $i19 + $i21;

        $i4 = $i7 + 1;

        if $i5 <= $i4 goto label21;

        $i21 = $i7 - $i19;

        $i21 = $i21 + 1;

     label21:
        if $i9 > $i0 goto label13;

        if $i17 > $i10 goto label13;

        if $z0 == 0 goto label22;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: void alphaCompose(int,int,java.awt.image.ColorModel,java.awt.image.Raster,int,int,java.awt.image.ColorModel,java.awt.image.WritableRaster,int,int,int,float,java.awt.Color)>($i9, $i17, $r1, $r2, $i18, $i19, $r3, $r4, $i20, $i21, $i2, $f0, $r6);

        goto label13;

     label22:
        if $z1 == 0 goto label23;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaBlitter: void xorCompose(int,int,java.awt.image.ColorModel,java.awt.image.Raster,int,int,java.awt.image.ColorModel,java.awt.image.WritableRaster,int,int,java.awt.Color)>($i9, $i17, $r1, $r2, $i18, $i19, $r3, $r4, $i20, $i21, $r9);

        goto label13;

     label23:
        $r14 = virtualinvoke $r2.<java.awt.image.Raster: java.awt.image.Raster createChild(int,int,int,int,int,int,int[])>($i9, $i17, $i20, $i21, 0, 0, null);

        $r15 = virtualinvoke $r4.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>($i18, $i19, $i20, $i21, 0, 0, null);

        interfaceinvoke $r10.<java.awt.CompositeContext: void compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)>($r14, $r15, $r15);

        goto label13;

     label24:
        return;

     label25:
        return;

     label26:
        return;

     label27:
        return;

     label28:
        return;

     label29:
        return;
    }

    void xorCompose(int, int, java.awt.image.ColorModel, java.awt.image.Raster, int, int, java.awt.image.ColorModel, java.awt.image.WritableRaster, int, int, java.awt.Color)
    {
        org.apache.harmony.awt.gl.render.JavaBlitter $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.awt.image.ColorModel $r1, $r3;
        java.awt.image.Raster $r2;
        java.awt.image.WritableRaster $r4;
        java.awt.Color $r5;
        java.lang.Object $r6, $r7;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaBlitter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.awt.image.ColorModel;

        $r2 := @parameter3: java.awt.image.Raster;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $r3 := @parameter6: java.awt.image.ColorModel;

        $r4 := @parameter7: java.awt.image.WritableRaster;

        $i4 := @parameter8: int;

        $i5 := @parameter9: int;

        $r5 := @parameter10: java.awt.Color;

        $i6 = virtualinvoke $r5.<java.awt.Color: int getRGB()>();

        $i7 = $i1;

        $i5 = $i1 + $i5;

     label1:
        if $i7 >= $i5 goto label4;

        $i8 = $i0;

        $i9 = $i2;

        $i1 = $i0 + $i4;

     label2:
        if $i8 >= $i1 goto label3;

        $r6 = virtualinvoke $r2.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i8, $i7, null);

        $r7 = virtualinvoke $r4.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i9, $i3, null);

        $i10 = virtualinvoke $r1.<java.awt.image.ColorModel: int getRGB(java.lang.Object)>($r6);

        $i11 = virtualinvoke $r3.<java.awt.image.ColorModel: int getRGB(java.lang.Object)>($r7);

        $i10 = $i10 ^ $i6;

        $i11 = $i11 ^ $i10;

        $i11 = $i11 | -16777216;

        $r6 = virtualinvoke $r3.<java.awt.image.ColorModel: java.lang.Object getDataElements(int,java.lang.Object)>($i11, $r7);

        virtualinvoke $r4.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>($i9, $i3, $r6);

        $i8 = $i8 + 1;

        $i9 = $i9 + 1;

        goto label2;

     label3:
        $i7 = $i7 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label4:
        return;
    }
}
