class com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy extends java.lang.Object implements com.android.internal.telephony.ITelephonyRegistry
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $r1 := @parameter0: android.os.IBinder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote> = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        android.os.IBinder r1;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        r1 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        return r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        return "com.android.internal.telephony.ITelephonyRegistry";
    }

    public void listen(java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        java.lang.String $r1;
        com.android.internal.telephony.IPhoneStateListener $r2;
        int $i0;
        boolean $z0;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r5;
        byte $b1;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.android.internal.telephony.IPhoneStateListener;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        if $r2 == null goto label7;

        $r5 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneStateListener: android.os.IBinder asBinder()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($i0);

     label3:
        if $z0 == 0 goto label8;

     label4:
        $b1 = 1;

     label5:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($b1);

        $r5 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r3, $r4, 0);

        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r5 = null;

        goto label2;

     label8:
        $b1 = 0;

        goto label5;

     label9:
        $r6 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label9;
        catch java.lang.Throwable from label4 to label6 with label9;
    }

    public void notifyCallForwardingChanged(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        boolean $z0;
        android.os.Parcel $r1, $r2;
        byte $b0;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r3 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void notifyCallState(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        int $i0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void notifyCellLocation(android.os.Bundle) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        android.os.Bundle $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

        if $r1 == null goto label4;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label2:
        $r4 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void notifyDataActivity(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void notifyDataConnection(int, boolean, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        int $i0;
        boolean $z0;
        java.lang.String $r1, $r2, $r3;
        android.os.Parcel $r4, $r5;
        byte $b1;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: java.lang.String;

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($i0);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b1 = 1;

     label4:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b1);

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r6 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r4, $r5, 0);

        virtualinvoke $r5.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b1 = 0;

        goto label4;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void notifyDataConnectionFailed(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        $r4 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void notifyMessageWaitingChanged(boolean) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        boolean $z0;
        android.os.Parcel $r1, $r2;
        byte $b0;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

     label2:
        if $z0 == 0 goto label6;

     label3:
        $b0 = 1;

     label4:
        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r3 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $b0 = 0;

        goto label4;

     label7:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void notifyServiceState(android.telephony.ServiceState) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        android.telephony.ServiceState $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $r1 := @parameter0: android.telephony.ServiceState;

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

        if $r1 == null goto label4;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r1.<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label2:
        $r4 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r2, $r3, 0);

        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r3.<android.os.Parcel: void recycle()>();

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void notifySignalStrength(int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy $r0;
        int $i0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephonyRegistry");

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r3 = $r0.<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r1, $r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        virtualinvoke $r1.<android.os.Parcel: void recycle()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
