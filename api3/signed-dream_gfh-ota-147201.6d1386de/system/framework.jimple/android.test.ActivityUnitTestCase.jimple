public abstract class android.test.ActivityUnitTestCase extends android.test.ActivityTestCase
{
    private java.lang.Class mActivityClass;
    private android.content.Context mActivityContext;
    private android.app.Application mApplication;
    private boolean mAttached;
    private boolean mCreated;
    private android.test.ActivityUnitTestCase$MockParent mMockParent;

    public void <init>(java.lang.Class)
    {
        android.test.ActivityUnitTestCase $r0;
        java.lang.Class $r1;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke $r0.<android.test.ActivityTestCase: void <init>()>();

        $r0.<android.test.ActivityUnitTestCase: boolean mAttached> = 0;

        $r0.<android.test.ActivityUnitTestCase: boolean mCreated> = 0;

        $r0.<android.test.ActivityUnitTestCase: java.lang.Class mActivityClass> = $r1;

        return;
    }

    public android.app.Activity getActivity()
    {
        android.test.ActivityUnitTestCase $r0;
        android.app.Activity $r1;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 = specialinvoke $r0.<android.test.ActivityTestCase: android.app.Activity getActivity()>();

        return $r1;
    }

    public int getFinishedActivityRequest()
    {
        android.test.ActivityUnitTestCase $r0;
        android.test.ActivityUnitTestCase$MockParent $r1;
        int i0;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        i0 = $r1.<android.test.ActivityUnitTestCase$MockParent: int mFinishedActivityRequest>;

        return i0;

     label1:
        return 0;
    }

    public int getRequestedOrientation()
    {
        android.test.ActivityUnitTestCase $r0;
        android.test.ActivityUnitTestCase$MockParent $r1;
        int i0;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        i0 = $r1.<android.test.ActivityUnitTestCase$MockParent: int mRequestedOrientation>;

        return i0;

     label1:
        return 0;
    }

    public android.content.Intent getStartedActivityIntent()
    {
        android.test.ActivityUnitTestCase $r0;
        android.test.ActivityUnitTestCase$MockParent $r1;
        android.content.Intent r2;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        r2 = $r1.<android.test.ActivityUnitTestCase$MockParent: android.content.Intent mStartedActivityIntent>;

        return r2;

     label1:
        return null;
    }

    public int getStartedActivityRequest()
    {
        android.test.ActivityUnitTestCase $r0;
        android.test.ActivityUnitTestCase$MockParent $r1;
        int i0;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        i0 = $r1.<android.test.ActivityUnitTestCase$MockParent: int mStartedActivityRequest>;

        return i0;

     label1:
        return 0;
    }

    public boolean isFinishCalled()
    {
        android.test.ActivityUnitTestCase $r0;
        android.test.ActivityUnitTestCase$MockParent $r1;
        boolean z0;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        z0 = $r1.<android.test.ActivityUnitTestCase$MockParent: boolean mFinished>;

        return z0;

     label1:
        return 0;
    }

    public void setActivityContext(android.content.Context)
    {
        android.test.ActivityUnitTestCase $r0;
        android.content.Context $r1;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 := @parameter0: android.content.Context;

        $r0.<android.test.ActivityUnitTestCase: android.content.Context mActivityContext> = $r1;

        return;
    }

    public void setApplication(android.app.Application)
    {
        android.test.ActivityUnitTestCase $r0;
        android.app.Application $r1;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 := @parameter0: android.app.Application;

        $r0.<android.test.ActivityUnitTestCase: android.app.Application mApplication> = $r1;

        return;
    }

    protected void setUp() throws java.lang.Exception
    {
        android.test.ActivityUnitTestCase $r0;
        android.app.Instrumentation $r1;
        android.content.Context $r2;

        $r0 := @this: android.test.ActivityUnitTestCase;

        specialinvoke $r0.<junit.framework.TestCase: void setUp()>();

        $r1 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $r2 = virtualinvoke $r1.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r0.<android.test.ActivityUnitTestCase: android.content.Context mActivityContext> = $r2;

        return;
    }

    protected android.app.Activity startActivity(android.content.Intent, android.os.Bundle, java.lang.Object)
    {
        android.test.ActivityUnitTestCase $r0;
        android.content.Intent $r1;
        android.os.Bundle $r2;
        java.lang.Object $r3;
        android.content.pm.ActivityInfo $r4;
        android.content.ComponentName $r5;
        boolean $z0;
        java.lang.Class $r6;
        android.app.Activity $r7, $r16;
        android.app.Application $r8;
        android.test.mock.MockApplication $r9;
        java.lang.Package $r10;
        java.lang.String $r11, $r12;
        android.test.ActivityUnitTestCase$MockParent $r13;
        android.app.Instrumentation $r14;
        android.content.Context $r15;
        java.lang.Exception $r17;

        $r0 := @this: android.test.ActivityUnitTestCase;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: android.os.Bundle;

        $r3 := @parameter2: java.lang.Object;

        $z0 = $r0.<android.test.ActivityUnitTestCase: boolean mCreated>;

        staticinvoke <android.test.ActivityUnitTestCase: void assertFalse(java.lang.String,boolean)>("Activity already created", $z0);

        $z0 = $r0.<android.test.ActivityUnitTestCase: boolean mAttached>;

        if $z0 != 0 goto label6;

        $r6 = $r0.<android.test.ActivityUnitTestCase: java.lang.Class mActivityClass>;

        staticinvoke <android.test.ActivityUnitTestCase: void assertNotNull(java.lang.Object)>($r6);

        virtualinvoke $r0.<android.test.ActivityTestCase: void setActivity(android.app.Activity)>(null);

        $r7 = null;

     label1:
        $r8 = $r0.<android.test.ActivityUnitTestCase: android.app.Application mApplication>;

     label2:
        if $r8 != null goto label4;

     label3:
        $r9 = new android.test.mock.MockApplication;

        specialinvoke $r9.<android.test.mock.MockApplication: void <init>()>();

        virtualinvoke $r0.<android.test.ActivityUnitTestCase: void setApplication(android.app.Application)>($r9);

     label4:
        $r5 = new android.content.ComponentName;

        $r6 = $r0.<android.test.ActivityUnitTestCase: java.lang.Class mActivityClass>;

        $r10 = virtualinvoke $r6.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getName()>();

        $r6 = $r0.<android.test.ActivityUnitTestCase: java.lang.Class mActivityClass>;

        $r12 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r5.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r12);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r5);

        $r4 = new android.content.pm.ActivityInfo;

        specialinvoke $r4.<android.content.pm.ActivityInfo: void <init>()>();

        $r6 = $r0.<android.test.ActivityUnitTestCase: java.lang.Class mActivityClass>;

        $r11 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r13 = new android.test.ActivityUnitTestCase$MockParent;

        specialinvoke $r13.<android.test.ActivityUnitTestCase$MockParent: void <init>(android.test.ActivityUnitTestCase$1)>(null);

        $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent> = $r13;

        $r14 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $r6 = $r0.<android.test.ActivityUnitTestCase: java.lang.Class mActivityClass>;

        $r15 = $r0.<android.test.ActivityUnitTestCase: android.content.Context mActivityContext>;

        $r8 = $r0.<android.test.ActivityUnitTestCase: android.app.Application mApplication>;

        $r13 = $r0.<android.test.ActivityUnitTestCase: android.test.ActivityUnitTestCase$MockParent mMockParent>;

        $r7 = virtualinvoke $r14.<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>($r6, $r15, null, $r8, $r1, $r4, $r11, $r13, null, $r3);

     label5:
        staticinvoke <android.test.ActivityUnitTestCase: void assertNotNull(java.lang.Object)>($r7);

        virtualinvoke $r0.<android.test.ActivityTestCase: void setActivity(android.app.Activity)>($r7);

        $r0.<android.test.ActivityUnitTestCase: boolean mAttached> = 1;

     label6:
        $r7 = virtualinvoke $r0.<android.test.ActivityUnitTestCase: android.app.Activity getActivity()>();

        if $r7 == null goto label8;

        $r14 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $r16 = virtualinvoke $r0.<android.test.ActivityUnitTestCase: android.app.Activity getActivity()>();

        virtualinvoke $r14.<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>($r16, $r2);

        $r0.<android.test.ActivityUnitTestCase: boolean mCreated> = 1;

        return $r7;

     label7:
        $r17 := @caughtexception;

        staticinvoke <android.test.ActivityUnitTestCase: void assertNotNull(java.lang.Object)>(null);

        goto label5;

     label8:
        return $r7;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label5 with label7;
    }

    protected void tearDown() throws java.lang.Exception
    {
        android.test.ActivityUnitTestCase $r0;

        $r0 := @this: android.test.ActivityUnitTestCase;

        virtualinvoke $r0.<android.test.ActivityTestCase: void setActivity(android.app.Activity)>(null);

        virtualinvoke $r0.<android.test.ActivityTestCase: void scrubClass(java.lang.Class)>(class "android/test/ActivityInstrumentationTestCase");

        specialinvoke $r0.<android.test.InstrumentationTestCase: void tearDown()>();

        return;
    }
}
