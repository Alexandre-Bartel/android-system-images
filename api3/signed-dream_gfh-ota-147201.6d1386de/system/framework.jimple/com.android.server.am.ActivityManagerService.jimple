public final class com.android.server.am.ActivityManagerService extends android.app.ActivityManagerNative implements com.android.server.Watchdog$Monitor
{
    static final long ACTIVITY_INACTIVE_RESET_TIME;
    static final long BATTERY_STATS_TIME;
    static final int BROADCAST_INTENT_MSG;
    static final int BROADCAST_TIMEOUT;
    static final int BROADCAST_TIMEOUT_MSG;
    static int CONTENT_PROVIDER_ADJ;
    static final int CORE_SERVER_ADJ;
    static final boolean DEBUG;
    static final boolean DEBUG_BROADCAST;
    static final boolean DEBUG_OOM_ADJ;
    static final boolean DEBUG_PAUSE;
    static final boolean DEBUG_PROCESSES;
    static final boolean DEBUG_RESULTS;
    static final boolean DEBUG_SERVICE;
    static final boolean DEBUG_SWITCH;
    static final boolean DEBUG_TASKS;
    static final boolean DEBUG_TRANSITION;
    static final boolean DEBUG_USER_LEAVING;
    static final boolean DEBUG_VISBILITY;
    static final int DESTROY_TIMEOUT;
    static final int DESTROY_TIMEOUT_MSG;
    static int EMPTY_APP_ADJ;
    static final java.lang.String[] EMPTY_STRING_ARRAY;
    static final boolean ENFORCE_PROCESS_LIMIT;
    private static final int FINISH_AFTER_PAUSE;
    private static final int FINISH_AFTER_VISIBLE;
    private static final int FINISH_IMMEDIATELY;
    static final int GC_BACKGROUND_PROCESSES_MSG;
    static final int GC_TIMEOUT;
    static int HIDDEN_APP_MIN_ADJ;
    static final int IDLE_NOW_MSG;
    static final int IDLE_TIMEOUT;
    static final int IDLE_TIMEOUT_MSG;
    static final int IM_FEELING_LUCKY_MSG;
    static final int INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT;
    static final int KEY_DISPATCHING_TIMEOUT;
    static final int LAUNCH_TIMEOUT;
    static final int LAUNCH_TIMEOUT_MSG;
    static final int LOG_ACTIVITY_LAUNCH_TIME;
    static final int LOG_AM_BROADCAST_DISCARD_APP;
    static final int LOG_AM_BROADCAST_DISCARD_FILTER;
    static final int LOG_AM_CREATE_ACTIVITY;
    static final int LOG_AM_CREATE_SERVICE;
    static final int LOG_AM_CREATE_TASK;
    static final int LOG_AM_DESTROY_ACTIVITY;
    static final int LOG_AM_DESTROY_SERVICE;
    static final int LOG_AM_DROP_PROCESS;
    static final int LOG_AM_FAILED_TO_PAUSE_ACTIVITY;
    static final int LOG_AM_FINISH_ACTIVITY;
    static final int LOG_AM_KILL_FOR_MEMORY;
    static final int LOG_AM_LOW_MEMORY;
    static final int LOG_AM_NEW_INTENT;
    static final int LOG_AM_PAUSE_ACTIVITY;
    static final int LOG_AM_PROCESS_BAD;
    static final int LOG_AM_PROCESS_BOUND;
    static final int LOG_AM_PROCESS_CRASHED_TOO_MUCH;
    static final int LOG_AM_PROCESS_DIED;
    static final int LOG_AM_PROCESS_GOOD;
    static final int LOG_AM_PROCESS_START;
    static final int LOG_AM_PROVIDER_LOST_PROCESS;
    static final int LOG_AM_RELAUNCH_ACTIVITY;
    static final int LOG_AM_RELAUNCH_RESUME_ACTIVITY;
    static final int LOG_AM_RESTART_ACTIVITY;
    static final int LOG_AM_RESUME_ACTIVITY;
    static final int LOG_AM_SCHEDULE_SERVICE_RESTART;
    static final int LOG_AM_SERVICE_CRASHED_TOO_MUCH;
    static final int LOG_ANR;
    static final int LOG_BOOT_PROGRESS_AMS_READY;
    static final int LOG_BOOT_PROGRESS_ENABLE_SCREEN;
    static final int LOG_CONFIGURATION_CHANGED;
    static final int LOG_CPU;
    static final int LOG_TASK_TO_FRONT;
    static final int MAX_ACTIVITIES;
    static final int MAX_PROCESSES;
    static final int MAX_RECENT_TASKS;
    static final int MAX_SERVICE_INACTIVITY;
    static final int MIN_CRASH_INTERVAL;
    static final long MONITOR_CPU_MAX_TIME;
    static final long MONITOR_CPU_MIN_TIME;
    static final boolean MONITOR_CPU_USAGE;
    static final boolean MONITOR_THREAD_CPU_USAGE;
    static final int PAGE_SIZE;
    static final int PAUSE_TIMEOUT;
    static final int PAUSE_TIMEOUT_MSG;
    static final int PROC_START_TIMEOUT;
    static final int PROC_START_TIMEOUT_MSG;
    static final int RESUME_TOP_ACTIVITY_MSG;
    static final int SERVICE_ERROR_MSG;
    static final int SERVICE_RESTART_DURATION;
    static final int SERVICE_TIMEOUT;
    static final int SERVICE_TIMEOUT_MSG;
    static final boolean SHOW_ACTIVITY_START_TIME;
    static final boolean SHOW_APP_STARTING_ICON;
    static final int SHOW_ERROR_MSG;
    static final int SHOW_FACTORY_ERROR_MSG;
    static final int SHOW_NOT_RESPONDING_MSG;
    static final int SHOW_UID_ERROR_MSG;
    static final int SYSTEM_ADJ;
    private static final java.lang.String SYSTEM_SECURE;
    static final java.lang.String TAG;
    static final int UPDATE_CONFIGURATION_MSG;
    static final int UPDATE_TIME_ZONE;
    static final boolean VALIDATE_TOKENS;
    static final int WAIT_FOR_DEBUGGER_MSG;
    static final boolean localLOGV;
    static com.android.server.am.ActivityManagerService mSelf;
    static android.app.ActivityThread mSystemThread;
    private static java.lang.ThreadLocal sCallerIdentity;
    final int EMPTY_APP_MEM;
    final int FOREGROUND_APP_ADJ;
    final int FOREGROUND_APP_MEM;
    final int HIDDEN_APP_MAX_ADJ;
    final int HIDDEN_APP_MEM;
    final int HOME_APP_ADJ;
    final int HOME_APP_MEM;
    final int MY_PID;
    final int SECONDARY_SERVER_ADJ;
    final int SECONDARY_SERVER_MEM;
    final int VISIBLE_APP_ADJ;
    final int VISIBLE_APP_MEM;
    int mAdjSeq;
    boolean mAlwaysFinishActivities;
    java.util.HashMap mAppBindArgs;
    final com.android.server.ProcessMap mBadProcesses;
    final com.android.server.am.BatteryStatsService mBatteryStatsService;
    boolean mBooted;
    boolean mBooting;
    boolean mBroadcastsScheduled;
    final java.util.ArrayList mCancelledThumbnails;
    android.content.res.Configuration mConfiguration;
    android.content.Context mContext;
    int mCurTask;
    java.lang.String mDebugApp;
    boolean mDebugTransient;
    int mFactoryTest;
    final java.util.ArrayList mFinishingActivities;
    com.android.server.am.HistoryRecord mFocusedActivity;
    final android.util.SparseArray mForegroundProcesses;
    android.os.PowerManager$WakeLock mGoingToSleep;
    private final android.util.SparseArray mGrantedUriPermissions;
    final android.os.Handler mHandler;
    final java.util.ArrayList mHistory;
    private com.android.server.am.ProcessRecord mHomeProcess;
    final java.util.HashMap mIntentSenderRecords;
    private final java.util.ArrayList mLRUActivities;
    final java.util.ArrayList mLRUProcesses;
    long mLastCpuTime;
    com.android.server.am.HistoryRecord mLastPausedActivity;
    long mLastWriteTime;
    android.os.PowerManager$WakeLock mLaunchingActivity;
    final java.util.ArrayList mLaunchingProviders;
    final java.util.ArrayList mOrderedBroadcasts;
    java.lang.String mOrigDebugApp;
    boolean mOrigWaitForDebugger;
    final java.util.ArrayList mParallelBroadcasts;
    com.android.server.am.HistoryRecord mPausingActivity;
    com.android.server.am.BroadcastRecord mPendingBroadcast;
    final java.util.HashSet mPendingResultRecords;
    final java.util.ArrayList mPendingServices;
    final java.util.ArrayList mPendingThumbnails;
    final java.util.ArrayList mPersistentStartingProcesses;
    final android.util.SparseArray mPidsSelfLocked;
    int[] mProcDeaths;
    final com.android.server.ProcessMap mProcessCrashTimes;
    int mProcessLimit;
    final com.android.server.ProcessMap mProcessNames;
    final com.android.server.ProcessStats mProcessStats;
    final java.lang.Thread mProcessStatsThread;
    final java.util.ArrayList mProcessesOnHold;
    final java.util.ArrayList mProcessesToGc;
    final java.util.HashMap mProvidersByClass;
    final java.util.HashMap mProvidersByName;
    final com.android.server.IntentResolver mReceiverResolver;
    final java.util.ArrayList mRecentTasks;
    final java.util.HashMap mRegisteredReceivers;
    final java.util.ArrayList mRemovedProcesses;
    java.lang.Runnable mRequestPssCallback;
    final java.util.ArrayList mRequestPssList;
    final java.util.ArrayList mRestartingServices;
    com.android.server.am.HistoryRecord mResumedActivity;
    final java.util.HashMap mServiceConnections;
    final java.util.HashMap mServices;
    final java.util.HashMap mServicesByIntent;
    boolean mSimpleProcessManagement;
    boolean mSleeping;
    boolean mStartRunning;
    final java.util.ArrayList mStartingProcesses;
    final java.util.HashMap mStickyBroadcasts;
    final java.util.ArrayList mStoppingActivities;
    final java.util.ArrayList mStoppingServices;
    boolean mSystemReady;
    java.lang.String mTopAction;
    android.content.ComponentName mTopComponent;
    java.lang.String mTopData;
    android.app.AlertDialog mUidAlert;
    final com.android.server.am.UsageStatsService mUsageStatsService;
    boolean mUserLeaving;
    boolean mWaitForDebugger;
    final java.util.ArrayList mWaitingVisibleActivities;
    android.app.IActivityWatcher mWatcher;
    com.android.server.WindowManagerService mWindowManager;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.ThreadLocal $r1;

        <com.android.server.am.ActivityManagerService: int WAIT_FOR_DEBUGGER_MSG> = 6;

        <com.android.server.am.ActivityManagerService: boolean VALIDATE_TOKENS> = 0;

        <com.android.server.am.ActivityManagerService: int UPDATE_TIME_ZONE> = 13;

        <com.android.server.am.ActivityManagerService: int UPDATE_CONFIGURATION_MSG> = 4;

        <com.android.server.am.ActivityManagerService: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String SYSTEM_SECURE> = "ro.secure";

        <com.android.server.am.ActivityManagerService: int SYSTEM_ADJ> = -16;

        <com.android.server.am.ActivityManagerService: int SHOW_UID_ERROR_MSG> = 14;

        <com.android.server.am.ActivityManagerService: int SHOW_NOT_RESPONDING_MSG> = 2;

        <com.android.server.am.ActivityManagerService: int SHOW_FACTORY_ERROR_MSG> = 3;

        <com.android.server.am.ActivityManagerService: int SHOW_ERROR_MSG> = 1;

        <com.android.server.am.ActivityManagerService: boolean SHOW_APP_STARTING_ICON> = 1;

        <com.android.server.am.ActivityManagerService: boolean SHOW_ACTIVITY_START_TIME> = 1;

        <com.android.server.am.ActivityManagerService: int SERVICE_TIMEOUT_MSG> = 12;

        <com.android.server.am.ActivityManagerService: int SERVICE_TIMEOUT> = 20000;

        <com.android.server.am.ActivityManagerService: int SERVICE_RESTART_DURATION> = 5000;

        <com.android.server.am.ActivityManagerService: int SERVICE_ERROR_MSG> = 18;

        <com.android.server.am.ActivityManagerService: int RESUME_TOP_ACTIVITY_MSG> = 19;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT_MSG> = 20;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: int PAUSE_TIMEOUT_MSG> = 9;

        <com.android.server.am.ActivityManagerService: int PAUSE_TIMEOUT> = 500;

        <com.android.server.am.ActivityManagerService: int PAGE_SIZE> = 4096;

        <com.android.server.am.ActivityManagerService: boolean MONITOR_THREAD_CPU_USAGE> = 0;

        <com.android.server.am.ActivityManagerService: boolean MONITOR_CPU_USAGE> = 1;

        <com.android.server.am.ActivityManagerService: long MONITOR_CPU_MIN_TIME> = 5000L;

        <com.android.server.am.ActivityManagerService: long MONITOR_CPU_MAX_TIME> = 268435455L;

        <com.android.server.am.ActivityManagerService: int MIN_CRASH_INTERVAL> = 60000;

        <com.android.server.am.ActivityManagerService: int MAX_SERVICE_INACTIVITY> = 600000;

        <com.android.server.am.ActivityManagerService: int MAX_RECENT_TASKS> = 20;

        <com.android.server.am.ActivityManagerService: int MAX_PROCESSES> = 2;

        <com.android.server.am.ActivityManagerService: int MAX_ACTIVITIES> = 20;

        <com.android.server.am.ActivityManagerService: int LOG_TASK_TO_FRONT> = 30002;

        <com.android.server.am.ActivityManagerService: int LOG_CPU> = 2721;

        <com.android.server.am.ActivityManagerService: int LOG_CONFIGURATION_CHANGED> = 2719;

        <com.android.server.am.ActivityManagerService: int LOG_BOOT_PROGRESS_ENABLE_SCREEN> = 3050;

        <com.android.server.am.ActivityManagerService: int LOG_BOOT_PROGRESS_AMS_READY> = 3040;

        <com.android.server.am.ActivityManagerService: int LOG_ANR> = 30008;

        <com.android.server.am.ActivityManagerService: int LOG_AM_SERVICE_CRASHED_TOO_MUCH> = 30034;

        <com.android.server.am.ActivityManagerService: int LOG_AM_SCHEDULE_SERVICE_RESTART> = 30035;

        <com.android.server.am.ActivityManagerService: int LOG_AM_RESUME_ACTIVITY> = 30007;

        <com.android.server.am.ActivityManagerService: int LOG_AM_RESTART_ACTIVITY> = 30006;

        <com.android.server.am.ActivityManagerService: int LOG_AM_RELAUNCH_RESUME_ACTIVITY> = 30019;

        <com.android.server.am.ActivityManagerService: int LOG_AM_RELAUNCH_ACTIVITY> = 30020;

        <com.android.server.am.ActivityManagerService: int LOG_AM_PROVIDER_LOST_PROCESS> = 30036;

        <com.android.server.am.ActivityManagerService: int LOG_AM_PROCESS_START> = 30014;

        <com.android.server.am.ActivityManagerService: int LOG_AM_PROCESS_GOOD> = 30016;

        <com.android.server.am.ActivityManagerService: int LOG_AM_PROCESS_DIED> = 30011;

        <com.android.server.am.ActivityManagerService: int LOG_AM_PROCESS_CRASHED_TOO_MUCH> = 30032;

        <com.android.server.am.ActivityManagerService: int LOG_AM_PROCESS_BOUND> = 30010;

        <com.android.server.am.ActivityManagerService: int LOG_AM_PROCESS_BAD> = 30015;

        <com.android.server.am.ActivityManagerService: int LOG_AM_PAUSE_ACTIVITY> = 30013;

        <com.android.server.am.ActivityManagerService: int LOG_AM_NEW_INTENT> = 30003;

        <com.android.server.am.ActivityManagerService: int LOG_AM_LOW_MEMORY> = 30017;

        <com.android.server.am.ActivityManagerService: int LOG_AM_KILL_FOR_MEMORY> = 30023;

        <com.android.server.am.ActivityManagerService: int LOG_AM_FINISH_ACTIVITY> = 30001;

        <com.android.server.am.ActivityManagerService: int LOG_AM_FAILED_TO_PAUSE_ACTIVITY> = 30012;

        <com.android.server.am.ActivityManagerService: int LOG_AM_DROP_PROCESS> = 30033;

        <com.android.server.am.ActivityManagerService: int LOG_AM_DESTROY_SERVICE> = 30031;

        <com.android.server.am.ActivityManagerService: int LOG_AM_DESTROY_ACTIVITY> = 30018;

        <com.android.server.am.ActivityManagerService: int LOG_AM_CREATE_TASK> = 30004;

        <com.android.server.am.ActivityManagerService: int LOG_AM_CREATE_SERVICE> = 30030;

        <com.android.server.am.ActivityManagerService: int LOG_AM_CREATE_ACTIVITY> = 30005;

        <com.android.server.am.ActivityManagerService: int LOG_AM_BROADCAST_DISCARD_FILTER> = 30024;

        <com.android.server.am.ActivityManagerService: int LOG_AM_BROADCAST_DISCARD_APP> = 30025;

        <com.android.server.am.ActivityManagerService: int LOG_ACTIVITY_LAUNCH_TIME> = 30009;

        <com.android.server.am.ActivityManagerService: int LAUNCH_TIMEOUT_MSG> = 16;

        <com.android.server.am.ActivityManagerService: int LAUNCH_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: int KEY_DISPATCHING_TIMEOUT> = 5000;

        <com.android.server.am.ActivityManagerService: int INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT> = 60000;

        <com.android.server.am.ActivityManagerService: int IM_FEELING_LUCKY_MSG> = 15;

        <com.android.server.am.ActivityManagerService: int IDLE_TIMEOUT_MSG> = 10;

        <com.android.server.am.ActivityManagerService: int IDLE_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: int IDLE_NOW_MSG> = 11;

        <com.android.server.am.ActivityManagerService: int GC_TIMEOUT> = 5000;

        <com.android.server.am.ActivityManagerService: int GC_BACKGROUND_PROCESSES_MSG> = 5;

        <com.android.server.am.ActivityManagerService: int FINISH_IMMEDIATELY> = 0;

        <com.android.server.am.ActivityManagerService: int FINISH_AFTER_VISIBLE> = 2;

        <com.android.server.am.ActivityManagerService: int FINISH_AFTER_PAUSE> = 1;

        <com.android.server.am.ActivityManagerService: boolean ENFORCE_PROCESS_LIMIT> = 0;

        <com.android.server.am.ActivityManagerService: int DESTROY_TIMEOUT_MSG> = 17;

        <com.android.server.am.ActivityManagerService: int DESTROY_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_VISBILITY> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_USER_LEAVING> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_TRANSITION> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_TASKS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_SWITCH> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_SERVICE> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_RESULTS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PROCESSES> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PAUSE> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_OOM_ADJ> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_BROADCAST> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG> = 0;

        <com.android.server.am.ActivityManagerService: int CORE_SERVER_ADJ> = -12;

        <com.android.server.am.ActivityManagerService: int BROADCAST_TIMEOUT_MSG> = 8;

        <com.android.server.am.ActivityManagerService: int BROADCAST_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: int BROADCAST_INTENT_MSG> = 7;

        <com.android.server.am.ActivityManagerService: long BATTERY_STATS_TIME> = 1800000L;

        <com.android.server.am.ActivityManagerService: long ACTIVITY_INACTIVE_RESET_TIME> = 1800000L;

        $r0 = newarray (java.lang.String)[0];

        <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY> = $r0;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity> = $r1;

        return;
    }

    private void <init>()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.io.File $r1, $r14;
        java.util.ArrayList $r2;
        com.android.server.ProcessMap $r3;
        android.util.SparseArray $r4;
        java.util.HashSet $r5;
        java.util.HashMap $r6;
        com.android.server.am.ActivityManagerService$1 $r7;
        android.content.res.Configuration $r8;
        int[] $r9;
        com.android.server.ProcessStats $r10;
        com.android.server.am.ActivityManagerService$2 $r11;
        java.lang.String $r12;
        java.lang.Integer $r13;
        int $i0;
        com.android.server.am.BatteryStatsService $r15;
        com.android.internal.os.BatteryStatsImpl $r16;
        com.android.server.am.UsageStatsService $r17;
        com.android.server.Watchdog $r18;
        com.android.server.am.ActivityManagerService$3 $r19;
        java.lang.Thread $r20;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        specialinvoke $r0.<android.app.ActivityManagerNative: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts> = $r2;

        $r0.<com.android.server.am.ActivityManagerService: boolean mBroadcastsScheduled> = 0;

        $r0.<com.android.server.am.ActivityManagerService: boolean mUserLeaving> = 0;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity> = null;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity> = null;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mFocusedActivity> = null;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mLastPausedActivity> = null;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mFinishingActivities> = $r2;

        $r3 = new com.android.server.ProcessMap;

        specialinvoke $r3.<com.android.server.ProcessMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames> = $r3;

        $r3 = new com.android.server.ProcessMap;

        specialinvoke $r3.<com.android.server.ProcessMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessCrashTimes> = $r3;

        $r3 = new com.android.server.ProcessMap;

        specialinvoke $r3.<com.android.server.ProcessMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mBadProcesses> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked> = $r4;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses> = $r4;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStartingProcesses> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities> = $r2;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mPendingResultRecords> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords> = $r6;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast> = null;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers> = $r6;

        $r7 = new com.android.server.am.ActivityManagerService$1;

        specialinvoke $r7.<com.android.server.am.ActivityManagerService$1: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver> = $r7;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mStickyBroadcasts> = $r6;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices> = $r6;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServicesByIntent> = $r6;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServiceConnections> = $r6;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mCancelledThumbnails> = $r2;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName> = $r6;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass> = $r6;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders> = $r2;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions> = $r4;

        $r8 = new android.content.res.Configuration;

        specialinvoke $r8.<android.content.res.Configuration: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration> = $r8;

        $r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning> = 0;

        $r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady> = 0;

        $r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

        $r0.<com.android.server.am.ActivityManagerService: boolean mSleeping> = 0;

        $r0.<com.android.server.am.ActivityManagerService: int mCurTask> = 1;

        $r0.<com.android.server.am.ActivityManagerService: int mAdjSeq> = 0;

        $r0.<com.android.server.am.ActivityManagerService: boolean mSimpleProcessManagement> = 0;

        $r9 = newarray (int)[20];

        $r0.<com.android.server.am.ActivityManagerService: int[] mProcDeaths> = $r9;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = null;

        $r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = 0;

        $r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient> = 0;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = null;

        $r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = 0;

        $r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = 0;

        $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher> = null;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRequestPssList> = $r2;

        $r10 = new com.android.server.ProcessStats;

        specialinvoke $r10.<com.android.server.ProcessStats: void <init>(boolean)>(0);

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats> = $r10;

        $r0.<com.android.server.am.ActivityManagerService: long mLastCpuTime> = 0L;

        $r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime> = 0L;

        $r0.<com.android.server.am.ActivityManagerService: boolean mBooted> = 0;

        $r0.<com.android.server.am.ActivityManagerService: int mProcessLimit> = 0;

        $r11 = new com.android.server.am.ActivityManagerService$2;

        specialinvoke $r11.<com.android.server.am.ActivityManagerService$2: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler> = $r11;

        $r12 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ANDROID_SIMPLE_PROCESS_MANAGEMENT");

        if $r12 == null goto label1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        if $i0 == 0 goto label1;

        $r0.<com.android.server.am.ActivityManagerService: boolean mSimpleProcessManagement> = 1;

     label1:
        $r12 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ANDROID_DEBUG_APP");

        if $r12 == null goto label2;

        $r0.<com.android.server.am.ActivityManagerService: boolean mSimpleProcessManagement> = 1;

     label2:
        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $r0.<com.android.server.am.ActivityManagerService: int MY_PID> = $i0;

        $r14 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, "system");

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        $r15 = new com.android.server.am.BatteryStatsService;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "batterystats.bin");

        $r12 = virtualinvoke $r14.<java.io.File: java.lang.String toString()>();

        specialinvoke $r15.<com.android.server.am.BatteryStatsService: void <init>(java.lang.String)>($r12);

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService> = $r15;

        $r15 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r16 = virtualinvoke $r15.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl: void readLocked()>();

        $r15 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r16 = virtualinvoke $r15.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl: void writeLocked()>();

        $r17 = new com.android.server.am.UsageStatsService;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "usagestats.bin");

        $r12 = virtualinvoke $r14.<java.io.File: java.lang.String toString()>();

        specialinvoke $r17.<com.android.server.am.UsageStatsService: void <init>(java.lang.String)>($r12);

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService> = $r17;

        $r8 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r8.<android.content.res.Configuration: void makeDefault()>();

        $r10 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        virtualinvoke $r10.<com.android.server.ProcessStats: void init()>();

        $r18 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r18.<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>($r0);

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.FOREGROUND_APP_ADJ");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.VISIBLE_APP_ADJ");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.SECONDARY_SERVER_ADJ");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r0.<com.android.server.am.ActivityManagerService: int SECONDARY_SERVER_ADJ> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.HOME_APP_ADJ");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r0.<com.android.server.am.ActivityManagerService: int HOME_APP_ADJ> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.HIDDEN_APP_MIN_ADJ");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.CONTENT_PROVIDER_ADJ");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        <com.android.server.am.ActivityManagerService: int CONTENT_PROVIDER_ADJ> = $i0;

        $i0 = <com.android.server.am.ActivityManagerService: int CONTENT_PROVIDER_ADJ>;

        $i0 = $i0 - 1;

        $r0.<com.android.server.am.ActivityManagerService: int HIDDEN_APP_MAX_ADJ> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.EMPTY_APP_ADJ");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        <com.android.server.am.ActivityManagerService: int EMPTY_APP_ADJ> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.FOREGROUND_APP_MEM");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * 4096;

        $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_MEM> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.VISIBLE_APP_MEM");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * 4096;

        $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_MEM> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.SECONDARY_SERVER_MEM");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * 4096;

        $r0.<com.android.server.am.ActivityManagerService: int SECONDARY_SERVER_MEM> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.HOME_APP_MEM");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * 4096;

        $r0.<com.android.server.am.ActivityManagerService: int HOME_APP_MEM> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.HIDDEN_APP_MEM");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * 4096;

        $r0.<com.android.server.am.ActivityManagerService: int HIDDEN_APP_MEM> = $i0;

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.EMPTY_APP_MEM");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r12);

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * 4096;

        $r0.<com.android.server.am.ActivityManagerService: int EMPTY_APP_MEM> = $i0;

        $r19 = new com.android.server.am.ActivityManagerService$3;

        specialinvoke $r19.<com.android.server.am.ActivityManagerService$3: void <init>(com.android.server.am.ActivityManagerService,java.lang.String)>($r0, "ProcessStats");

        $r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessStatsThread> = $r19;

        $r20 = $r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessStatsThread>;

        virtualinvoke $r20.<java.lang.Thread: void start()>();

        return;
    }

    void <init>(com.android.server.am.ActivityManagerService$1)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ActivityManagerService$1 $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ActivityManagerService$1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void <init>()>();

        return;
    }

    static void access$000(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord, int, android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        int $i0;
        android.app.IApplicationThread $r2;

        $r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $r1 := @parameter1: com.android.server.am.ProcessRecord;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.app.IApplicationThread;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>($r1, $i0, $r2);

        return;
    }

    static int access$100(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord, java.lang.String, android.content.Intent, java.lang.String, android.app.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, boolean, boolean, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        java.lang.String $r2, $r4, $r6, $r8;
        android.content.Intent $r3;
        android.app.IIntentReceiver $r5;
        int $i0, $i1, $i2;
        android.os.Bundle $r7;
        boolean $z0, $z1;

        $r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $r1 := @parameter1: com.android.server.am.ProcessRecord;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.content.Intent;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: android.app.IIntentReceiver;

        $i0 := @parameter6: int;

        $r6 := @parameter7: java.lang.String;

        $r7 := @parameter8: android.os.Bundle;

        $r8 := @parameter9: java.lang.String;

        $z0 := @parameter10: boolean;

        $z1 := @parameter11: boolean;

        $i1 := @parameter12: int;

        $i2 := @parameter13: int;

        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>($r1, $r2, $r3, $r4, $r5, $i0, $r6, $r7, $r8, $z0, $z1, $i1, $i2);

        return $i0;
    }

    static void access$200(com.android.server.am.ActivityManagerService, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0;

        $r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void processNextBroadcast(boolean)>($z0);

        return;
    }

    static void access$300(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService $r0;

        $r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void broadcastTimeout()>();

        return;
    }

    static boolean access$400(com.android.server.am.ActivityManagerService, com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        boolean $z0;

        $r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $r1 := @parameter1: com.android.server.am.HistoryRecord;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>($r1);

        return $z0;
    }

    static void access$500(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;

        $r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $r1 := @parameter1: com.android.server.am.ProcessRecord;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>($r1);

        return;
    }

    static void access$700(java.io.FileDescriptor, java.io.PrintWriter, java.util.List, java.lang.String, java.lang.String[])
    {
        java.io.FileDescriptor $r0;
        java.io.PrintWriter $r1;
        java.util.List $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;

        $r0 := @parameter0: java.io.FileDescriptor;

        $r1 := @parameter1: java.io.PrintWriter;

        $r2 := @parameter2: java.util.List;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String[];

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsage(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String[])>($r0, $r1, $r2, $r3, $r4);

        return;
    }

    private final void addRecentTask(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.TaskRecord $r1, $r4;
        java.util.ArrayList $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r5, $r6;
        boolean $z0;
        android.content.Intent $r7, $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.TaskRecord;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.android.server.am.TaskRecord) $r3;

        $r5 = $r1.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        if $r5 == null goto label2;

        $r5 = $r1.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $r6 = $r4.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label3;

     label2:
        $r7 = $r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r7 == null goto label4;

        $r7 = $r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $r8 = $r4.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $z0 = virtualinvoke $r7.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r8);

        if $z0 == 0 goto label4;

     label3:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        $i1 = $i1 + -1;

        $i0 = $i0 + -1;

        $r7 = $r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r7 != null goto label4;

        $r1 = $r4;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        if $i0 < 20 goto label6;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i0 = $i0 - 1;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

     label6:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r2.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r1);

        return;
    }

    private final void appDiedLocked(com.android.server.am.ProcessRecord, int, android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        int $i0, $i1, $i2, $i3;
        android.app.IApplicationThread $r2, $r4;
        int[] $r3;
        android.os.IBinder $r5, $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.Object[] $r9;
        java.lang.Integer $r10;
        android.content.ComponentName $r11;
        boolean $z0;
        java.util.ArrayList $r12;
        java.lang.Object $r13;
        long $l4;
        android.os.RemoteException $r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.app.IApplicationThread;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: int[] mProcDeaths>;

        $i1 = $r3[0];

        $i1 = $i1 + 1;

        $r3[0] = $i1;

        $r4 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r4 == null goto label09;

        $r4 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r5 = interfaceinvoke $r4.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r6 = interfaceinvoke $r2.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r5 != $r6 goto label09;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r8 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has died.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $r9 = newarray (java.lang.Object)[2];

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9[0] = $r10;

        $r8 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r9[1] = $r8;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30011, $r9);

        $r11 = $r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r11 != null goto label07;

        $z0 = 1;

     label01:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean)>($r1, 0);

        if $z0 == 0 goto label11;

        $z0 = 0;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i0 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label03;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r1 = (com.android.server.am.ProcessRecord) $r13;

        $r2 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r2 == null goto label08;

        $i2 = $r1.<com.android.server.am.ProcessRecord: int setAdj>;

        $i3 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

        if $i2 < $i3 goto label08;

        $z0 = 1;

     label03:
        if $z0 != 0 goto label12;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", "Low Memory: No more background processes.");

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30017, $i1);

        $i1 = 0;

     label04:
        if $i1 >= $i0 goto label13;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r1 = (com.android.server.am.ProcessRecord) $r13;

        $r2 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r2 == null goto label06;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l4;

        $r2 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label05:
        interfaceinvoke $r2.<android.app.IApplicationThread: void scheduleLowMemory()>();

     label06:
        $i1 = $i1 + 1;

        goto label04;

     label07:
        $z0 = 0;

        goto label01;

     label08:
        $i1 = $i1 + 1;

        goto label02;

     label09:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received spurious death notification for thread ");

        $r5 = interfaceinvoke $r2.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        return;

     label10:
        $r14 := @caughtexception;

        goto label06;

     label11:
        return;

     label12:
        return;

     label13:
        return;

        catch android.os.RemoteException from label05 to label06 with label10;
    }

    private final boolean attachApplicationLocked(android.app.IApplicationThread, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1, $r11;
        int $i0, $i1, $i4;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ProcessRecord $r5, $r26;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r16;
        java.lang.Throwable $r8;
        java.util.ArrayList $r9;
        java.lang.Exception $r10, $r31, $r32, $r34, $r36;
        android.os.IBinder $r12;
        com.android.server.am.ActivityManagerService$AppDeathRecipient $r13;
        java.lang.Object[] $r14;
        java.lang.Integer $r15;
        android.os.Handler $r17;
        java.util.List $r18;
        byte $b2;
        boolean $z0, $z1, $z2;
        android.content.pm.ApplicationInfo $r19;
        android.content.ComponentName $r20;
        android.os.Bundle $r21;
        android.app.IInstrumentationWatcher $r22;
        android.content.res.Configuration $r23;
        java.util.HashMap $r24;
        long $l3;
        com.android.server.am.HistoryRecord $r25;
        android.content.pm.ActivityInfo $r27;
        com.android.server.am.ServiceRecord $r28, $r29;
        android.os.RemoteException $r30;
        android.content.Intent $r33;
        com.android.server.am.BroadcastRecord $r35;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $i0 := @parameter1: int;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i0 == $i1 goto label07;

        if $i0 < 0 goto label07;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r2;

     label01:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.ProcessRecord) $r4;

        exitmonitor $r2;

     label02:
        if $r5 != null goto label12;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No pending application record for pid ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (IApplicationThread ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); dropping process");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30033, $i0);

        if $i0 <= 0 goto label09;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i0 == $i1 goto label09;

        staticinvoke <android.os.Process: void killProcess(int)>($i0);

     label03:
        return 0;

     label04:
        $r8 := @caughtexception;

     label05:
        exitmonitor $r2;

     label06:
        throw $r8;

     label07:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStartingProcesses>;

        $i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label08;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStartingProcesses>;

        $r4 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r5 = (com.android.server.am.ProcessRecord) $r4;

        $r5.<com.android.server.am.ProcessRecord: int pid> = $i0;

        goto label02;

     label08:
        $r5 = null;

        goto label02;

     label09:
        interfaceinvoke $r1.<android.app.IApplicationThread: void scheduleExit()>();

     label10:
        goto label03;

     label11:
        $r10 := @caughtexception;

        goto label03;

     label12:
        $r11 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r11 == null goto label13;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean)>($r5, 1);

     label13:
        $r7 = $r5.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label14:
        $r12 = interfaceinvoke $r1.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r13 = new com.android.server.am.ActivityManagerService$AppDeathRecipient;

        specialinvoke $r13.<com.android.server.am.ActivityManagerService$AppDeathRecipient: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>($r0, $r5, $i0, $r1);

        interfaceinvoke $r12.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r13, 0);

     label15:
        $r14 = newarray (java.lang.Object)[2];

        $i0 = $r5.<com.android.server.am.ProcessRecord: int pid>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r14[0] = $r15;

        $r16 = $r5.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r14[1] = $r16;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30010, $r14);

        $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread> = $r1;

        $r5.<com.android.server.am.ProcessRecord: int setAdj> = -100;

        $r5.<com.android.server.am.ProcessRecord: int curAdj> = -100;

        $r5.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        $r5.<com.android.server.am.ProcessRecord: boolean foregroundServices> = 0;

        $r5.<com.android.server.am.ProcessRecord: boolean debugging> = 0;

        $r17 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r17.<android.os.Handler: void removeMessages(int,java.lang.Object)>(20, $r5);

        $r18 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)>($r5);

        $b2 = 0;

     label16:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        if $r16 == null goto label20;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label20;

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger>;

     label17:
        if $z0 == 0 goto label29;

     label18:
        $b2 = 2;

     label19:
        $r5.<com.android.server.am.ProcessRecord: boolean debugging> = 1;

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        if $z0 == 0 goto label20;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = $r16;

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        $r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = $z0;

     label20:
        $r19 = $r5.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r20 = $r5.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r16 = $r5.<com.android.server.am.ProcessRecord: java.lang.String instrumentationProfileFile>;

        $r21 = $r5.<com.android.server.am.ProcessRecord: android.os.Bundle instrumentationArguments>;

        $r22 = $r5.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher>;

        $r23 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r24 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap getCommonServicesLocked()>();

        interfaceinvoke $r1.<android.app.IApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.Bundle,android.app.IInstrumentationWatcher,int,android.content.res.Configuration,java.util.Map)>($r7, $r19, $r18, $r20, $r16, $r21, $r22, $b2, $r23, $r24);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void updateLRUListLocked(com.android.server.am.ProcessRecord,boolean)>($r5, 0);

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l3;

     label21:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>($r5);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>($r5);

        $z0 = 0;

        $z1 = 0;

        $r25 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>(null);

        if $r25 == null goto label24;

        $r26 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r26 != null goto label32;

        $r19 = $r5.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        $r27 = $r25.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r19 = $r27.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        if $i0 != $i1 goto label32;

        $r16 = $r25.<com.android.server.am.HistoryRecord: java.lang.String processName>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z2 == 0 goto label32;

     label22:
        $z2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean realStartActivityLocked(com.android.server.am.HistoryRecord,com.android.server.am.ProcessRecord,boolean,boolean)>($r25, $r5, 1, 1);

     label23:
        if $z2 == 0 goto label24;

        $z1 = 1;

     label24:
        if $z0 != 0 goto label36;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label36;

        $r28 = null;

        $i0 = 0;

     label25:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label36;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $r4 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r29 = (com.android.server.am.ServiceRecord) $r4;

        $r28 = $r29;

        $r19 = $r5.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        $r19 = $r29.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 != $i4 goto label27;

        $r16 = $r29.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r16);

     label26:
        if $z2 != 0 goto label33;

     label27:
        $i0 = $i0 + 1;

        goto label25;

     label28:
        $r30 := @caughtexception;

        virtualinvoke $r5.<com.android.server.am.ProcessRecord: void resetPackageList()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>($r5, "link fail", $r7);

        return 0;

     label29:
        $b2 = 1;

        goto label19;

     label30:
        $r31 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown during bind!", $r31);

        virtualinvoke $r5.<com.android.server.am.ProcessRecord: void resetPackageList()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>($r5, "bind fail", $r7);

        return 0;

     label31:
        $r32 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in new application when starting activity ");

        $r33 = $r25.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r20 = virtualinvoke $r33.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r16 = virtualinvoke $r20.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r16, $r32);

        $z0 = 1;

        goto label24;

     label32:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void ensureActivitiesVisibleLocked(com.android.server.am.HistoryRecord,com.android.server.am.HistoryRecord,java.lang.String,int)>($r25, null, $r7, 0);

        goto label24;

     label33:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $i0 = $i0 + -1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord)>($r29, $r5);

     label34:
        $z1 = 1;

        goto label27;

     label35:
        $r34 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in new application when starting service ");

        $r7 = $r28.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r7, $r34);

        $z0 = 1;

     label36:
        $r35 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if $z0 != 0 goto label39;

        if $r35 == null goto label39;

        $r26 = $r35.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        if $r26 != $r5 goto label39;

     label37:
        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast> = null;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void processCurBroadcastLocked(com.android.server.am.BroadcastRecord,com.android.server.am.ProcessRecord)>($r35, $r5);

     label38:
        $z1 = 1;

     label39:
        if $z0 == 0 goto label41;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean)>($r5, 0);

        return 0;

     label40:
        $r36 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in new application when starting receiver ");

        $r20 = $r35.<com.android.server.am.BroadcastRecord: android.content.ComponentName curComponent>;

        $r7 = virtualinvoke $r20.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r7, $r36);

        $z0 = 1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logBroadcastReceiverDiscard(com.android.server.am.BroadcastRecord)>($r35);

        $r12 = $r35.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver>;

        $i0 = $r35.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r7 = $r35.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r21 = $r35.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z2 = $r35.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,boolean)>($r12, $i0, $r7, $r21, $z2, 1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

        goto label39;

     label41:
        if $z1 != 0 goto label42;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

     label42:
        return 1;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Exception from label09 to label10 with label11;
        catch android.os.RemoteException from label14 to label15 with label28;
        catch java.lang.Exception from label16 to label17 with label30;
        catch java.lang.Exception from label18 to label21 with label30;
        catch java.lang.Exception from label22 to label23 with label31;
        catch java.lang.Exception from label25 to label26 with label35;
        catch java.lang.Exception from label33 to label34 with label35;
        catch java.lang.Exception from label37 to label38 with label40;
    }

    private final void bringDownServiceLocked(com.android.server.am.ServiceRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        boolean $z0, $z1;
        java.util.HashMap $r2;
        int $i0, $i1;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        com.android.server.am.ConnectionRecord $r6;
        android.app.IServiceConnection $r7;
        android.content.ComponentName $r8;
        java.lang.Exception $r9, $r19, $r26;
        java.lang.StringBuilder $r10;
        android.os.IBinder $r11;
        com.android.server.am.AppBindRecord $r12;
        com.android.server.am.ProcessRecord $r13;
        java.lang.String $r14;
        android.app.IApplicationThread $r15;
        com.android.server.am.IntentBindRecord $r16;
        android.content.Intent$FilterComparison $r17;
        android.content.Intent $r18;
        java.lang.Object[] $r20;
        java.lang.Integer $r21;
        java.util.ArrayList $r22;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r23;
        com.android.internal.os.BatteryStatsImpl $r24;
        java.util.HashSet $r25;
        java.lang.Throwable $r27;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $z0 := @parameter1: boolean;

        if $z0 != 0 goto label01;

        $z1 = $r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z1 == 0 goto label01;

        return;

     label01:
        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label08;

        if $z0 != 0 goto label03;

        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.am.ConnectionRecord) $r5;

        $i0 = $r6.<com.android.server.am.ConnectionRecord: int flags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label02;

        return;

     label03:
        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.am.ConnectionRecord) $r5;

     label05:
        $r7 = $r6.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r8 = $r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        interfaceinvoke $r7.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>($r8, null);

     label06:
        goto label04;

     label07:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure disconnecting service ");

        $r8 = $r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r7 = $r6.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r11 = interfaceinvoke $r7.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r12 = $r6.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r13 = $r12.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r14 = $r13.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r14, $r9);

        goto label04;

     label08:
        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.HashMap bindings>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label13;

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r13 == null goto label13;

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r15 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r15 == null goto label13;

        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.HashMap bindings>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (com.android.server.am.IntentBindRecord) $r5;

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r13 == null goto label09;

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r15 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r15 == null goto label09;

        $z0 = $r16.<com.android.server.am.IntentBindRecord: boolean hasBound>;

        if $z0 == 0 goto label09;

     label10:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord)>($r1);

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r13);

        $r16.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r15 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r17 = $r16.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r18 = virtualinvoke $r17.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        interfaceinvoke $r15.<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>($r1, $r18);

     label11:
        goto label09;

     label12:
        $r19 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when unbinding service ");

        $r14 = $r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r14, $r19);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean)>($r1, 1);

        goto label09;

     label13:
        $r20 = newarray (java.lang.Object)[3];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r20[0] = $r21;

        $r14 = $r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r20[1] = $r14;

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r13 == null goto label17;

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i0 = $r13.<com.android.server.am.ProcessRecord: int pid>;

     label14:
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r20[2] = $r21;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30031, $r20);

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r8 = $r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r8);

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServicesByIntent>;

        $r17 = $r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r17);

        $r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = 0;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord)>($r1);

        $r22 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $i0 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label15:
        if $i1 >= $i0 goto label18;

        $r22 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $r5 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        if $r5 != $r1 goto label16;

        $r22 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        virtualinvoke $r22.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        $i1 = $i1 + -1;

        $i0 = $i0 + -1;

     label16:
        $i1 = $i1 + 1;

        goto label15;

     label17:
        $i0 = -1;

        goto label14;

     label18:
        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r13 == null goto label27;

        $r23 = $r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r24 = virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor $r24;

     label19:
        $r23 = $r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopLaunchedLocked()>();

        exitmonitor $r24;

     label20:
        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r25 = $r13.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        virtualinvoke $r25.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r15 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r15 == null goto label28;

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r13, 0);

        $r10 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping service: ");

        $r14 = $r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord)>($r1);

        $r22 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r13);

        $r13 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r15 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r15.<android.app.IApplicationThread: void scheduleStopService(android.os.IBinder)>($r1);

     label22:
        return;

     label23:
        $r26 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when stopping service ");

        $r14 = $r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r14, $r26);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean)>($r1, 1);

        return;

     label24:
        $r27 := @caughtexception;

     label25:
        exitmonitor $r24;

     label26:
        throw $r27;

     label27:
        return;

     label28:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    private final boolean bringUpServiceLocked(com.android.server.am.ServiceRecord, int, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        int $i0, $i3;
        boolean $z0;
        android.content.ComponentName $r2;
        android.os.RemoteException $r3;
        com.android.server.am.ProcessRecord $r4;
        long $l1;
        byte $b2;
        java.lang.String $r5, $r9;
        android.content.pm.ApplicationInfo $r6;
        android.app.IApplicationThread $r7;
        java.lang.StringBuilder $r8;
        java.util.ArrayList $r10;
        android.content.Intent$FilterComparison $r11;
        android.content.Intent $r12;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r4 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean)>($r1, 0);

        return 1;

     label1:
        if $z0 != 0 goto label2;

        $l1 = $r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label2;

        return 1;

     label2:
        $r5 = $r1.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r6 = $r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i3 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        $r4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)>($r5, $i3);

        if $r4 == null goto label6;

        $r7 = $r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label6;

     label3:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord)>($r1, $r4);

     label4:
        return 1;

     label5:
        $r3 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when starting service ");

        $r9 = $r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r9, $r3);

     label6:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $z0 = virtualinvoke $r10.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label8;

        $r6 = $r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r2 = $r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName)>($r5, $r6, 1, $i0, "service", $r2);

        if $r4 != null goto label7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r6 = $r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r5 = $r6.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = $r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i0 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for service ");

        $r11 = $r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r12 = virtualinvoke $r11.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": process is bad");

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r5);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>($r1, 1);

        return 0;

     label7:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label8:
        return 1;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private final int broadcastIntentLocked(com.android.server.am.ProcessRecord, java.lang.String, android.content.Intent, java.lang.String, android.app.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, boolean, boolean, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        java.lang.String $r2, $r3, $r5, $r7, $r13, $r14;
        android.app.IIntentReceiver $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.os.Bundle $r6, $r15;
        boolean $z0, $z1, $z2, $z3;
        android.content.Intent $r8, $r11, r36;
        java.util.ArrayList $r9, r39;
        android.content.pm.ResolveInfo $r10, r40;
        java.lang.StringBuilder $r12, r37;
        com.android.server.am.BatteryStatsService $r16;
        com.android.internal.os.BatteryStatsImpl $r17;
        android.os.Handler $r18;
        java.lang.Throwable $r20;
        android.net.Uri $r21;
        android.content.ComponentName $r22;
        java.util.HashMap $r23;
        java.lang.Object $r24;
        android.content.Context $r25;
        android.content.ContentResolver $r26;
        java.util.List $r27, $r28;
        android.content.pm.IPackageManager $r29;
        android.content.pm.ActivityInfo $r30;
        com.android.server.IntentResolver $r32;
        com.android.server.am.BroadcastFilter $r33;
        android.os.RemoteException $r34, $r35;
        java.lang.SecurityException r38;
        com.android.server.am.BroadcastRecord r41;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 := @parameter1: java.lang.String;

        $r11 := @parameter2: android.content.Intent;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: android.app.IIntentReceiver;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.String;

        $r6 := @parameter7: android.os.Bundle;

        $r7 := @parameter8: java.lang.String;

        $z0 := @parameter9: boolean;

        $z1 := @parameter10: boolean;

        $i1 := @parameter11: int;

        $i2 := @parameter12: int;

        r36 = new android.content.Intent;

        $r8 = r36;

        specialinvoke r36.<android.content.Intent: void <init>(android.content.Intent)>($r11);

        if $r4 == null goto label01;

        if $z0 != 0 goto label01;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcast ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not ordered but result callback requested!");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label01:
        $r13 = "android.intent.action.UID_REMOVED";

        $r14 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        $r13 = "android.intent.action.PACKAGE_REMOVED";

        $r14 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 != 0 goto label02;

        $r13 = "android.intent.action.PACKAGE_CHANGED";

        $r14 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 != 0 goto label02;

        if $z2 == 0 goto label05;

     label02:
        $i3 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>("android.permission.BROADCAST_PACKAGE_REMOVED", $i1, $i2, -1);

        if $i3 != 0 goto label12;

        if $z2 == 0 goto label11;

        $r15 = virtualinvoke $r8.<android.content.Intent: android.os.Bundle getExtras()>();

        if $r15 == null goto label07;

        $i3 = virtualinvoke $r15.<android.os.Bundle: int getInt(java.lang.String)>("android.intent.extra.UID");

     label03:
        if $i3 < 0 goto label05;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r17 = virtualinvoke $r16.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor $r17;

     label04:
        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl: void removeUidStatsLocked(int)>($i3);

        exitmonitor $r17;

     label05:
        $r13 = "android.intent.action.TIMEZONE_CHANGED";

        $r14 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label06;

        $r18 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r18.<android.os.Handler: boolean sendEmptyMessage(int)>(13);

     label06:
        if $z1 == 0 goto label19;

        $i3 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.BROADCAST_STICKY", $i1, $i2);

        if $i3 == 0 goto label13;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: broadcastIntent() requesting a sticky broadcast from pid=");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_STICKY");

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        r38 = new java.lang.SecurityException;

        specialinvoke r38.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw r38;

     label07:
        $i3 = -1;

        goto label03;

     label08:
        $r20 := @caughtexception;

     label09:
        exitmonitor $r17;

     label10:
        throw $r20;

     label11:
        $r21 = virtualinvoke $r8.<android.content.Intent: android.net.Uri getData()>();

        if $r21 == null goto label05;

        $r13 = virtualinvoke $r21.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if $r13 == null goto label05;

        $z2 = virtualinvoke $r8.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.DONT_KILL_APP", 0);

        if $z2 != 0 goto label05;

        $i3 = virtualinvoke $r8.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void uninstallPackageLocked(java.lang.String,int,boolean)>($r13, $i3, 0);

        goto label05;

     label12:
        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        $r3 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" broadcast from ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_PACKAGE_REMOVED");

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        r38 = new java.lang.SecurityException;

        specialinvoke r38.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw r38;

     label13:
        if $r7 == null goto label14;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t broadcast sticky intent ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and enforce permission ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        return -1;

     label14:
        $r22 = virtualinvoke $r8.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r22 == null goto label15;

        r38 = new java.lang.SecurityException;

        specialinvoke r38.<java.lang.SecurityException: void <init>(java.lang.String)>("Sticky broadcasts can\'t target a specific component");

        throw r38;

     label15:
        $r23 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mStickyBroadcasts>;

        $r13 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $r24 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        $r9 = (java.util.ArrayList) $r24;

        if $r9 != null goto label16;

        r39 = new java.util.ArrayList;

        $r9 = r39;

        specialinvoke r39.<java.util.ArrayList: void <init>()>();

        $r23 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mStickyBroadcasts>;

        $r13 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r9);

     label16:
        $i3 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $i4 = 0;

     label17:
        if $i4 >= $i3 goto label18;

        $r24 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r11 = (android.content.Intent) $r24;

        $z1 = virtualinvoke $r8.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r11);

        if $z1 == 0 goto label33;

        r36 = new android.content.Intent;

        specialinvoke r36.<android.content.Intent: void <init>(android.content.Intent)>($r8);

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i4, r36);

     label18:
        if $i4 < $i3 goto label19;

        r36 = new android.content.Intent;

        specialinvoke r36.<android.content.Intent: void <init>(android.content.Intent)>($r8);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r36);

     label19:
        $r25 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r26 = virtualinvoke $r25.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r27 = null;

        $r28 = null;

     label20:
        $r22 = virtualinvoke $r8.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r22 == null goto label34;

        $r29 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r22 = virtualinvoke $r8.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r30 = interfaceinvoke $r29.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>($r22, 0);

     label21:
        if $r30 == null goto label26;

        r39 = new java.util.ArrayList;

     label22:
        $r9 = r39;

        specialinvoke r39.<java.util.ArrayList: void <init>()>();

     label23:
        r40 = new android.content.pm.ResolveInfo;

        $r10 = r40;

     label24:
        specialinvoke r40.<android.content.pm.ResolveInfo: void <init>()>();

        $r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r30;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

     label25:
        $r27 = $r9;

     label26:
        if $r28 == null goto label39;

        $i3 = interfaceinvoke $r28.<java.util.List: int size()>();

     label27:
        if $z0 != 0 goto label28;

        if $i3 <= 0 goto label28;

        r41 = new com.android.server.am.BroadcastRecord;

        specialinvoke r41.<com.android.server.am.BroadcastRecord: void <init>(android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.util.List,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean)>($r8, $r1, $r2, $i1, $i2, $r7, $r28, $r4, $i0, $r5, $r6, $z0);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r41);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

        $r28 = null;

        $i3 = 0;

     label28:
        $i4 = 0;

        if $r27 == null goto label50;

        $z1 = 0;

        $r3 = "android.intent.action.PACKAGE_ADDED";

        $r13 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label40;

        $z1 = 1;

     label29:
        if $z1 == 0 goto label42;

        $r21 = virtualinvoke $r8.<android.content.Intent: android.net.Uri getData()>();

        if $r21 == null goto label42;

        $r21 = virtualinvoke $r8.<android.content.Intent: android.net.Uri getData()>();

        $r3 = virtualinvoke $r21.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

     label30:
        if $r3 == null goto label43;

        if $r27 == null goto label43;

        $i5 = interfaceinvoke $r27.<java.util.List: int size()>();

        $i6 = 0;

     label31:
        if $i6 >= $i5 goto label43;

        $r24 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>($i6);

        $r10 = (android.content.pm.ResolveInfo) $r24;

        $r30 = $r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = $r30.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label32;

        interfaceinvoke $r27.<java.util.List: java.lang.Object remove(int)>($i6);

        $i6 = $i6 + -1;

        $i5 = $i5 + -1;

     label32:
        $i6 = $i6 + 1;

        goto label31;

     label33:
        $i4 = $i4 + 1;

        goto label17;

     label34:
        $i3 = virtualinvoke $r8.<android.content.Intent: int getFlags()>();

     label35:
        $i3 = $i3 & 1073741824;

     label36:
        if $i3 != 0 goto label37;

        $r29 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r27 = interfaceinvoke $r29.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int)>($r8, $r3, 1024);

     label37:
        $r32 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        $r28 = virtualinvoke $r32.<com.android.server.IntentResolver: java.util.List queryIntent(android.content.ContentResolver,android.content.Intent,java.lang.String,boolean)>($r26, $r8, $r3, 0);

     label38:
        goto label26;

     label39:
        $i3 = 0;

        goto label27;

     label40:
        $r3 = "android.intent.action.PACKAGE_RESTARTED";

        $r13 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label41;

        $z1 = 1;

        goto label29;

     label41:
        $r3 = "android.intent.action.PACKAGE_DATA_CLEARED";

        $r13 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label29;

        $z1 = 1;

        goto label29;

     label42:
        $r3 = null;

        goto label30;

     label43:
        if $r27 == null goto label48;

        $i5 = interfaceinvoke $r27.<java.util.List: int size()>();

     label44:
        $i6 = 0;

        $r10 = null;

        $r33 = null;

     label45:
        if $i6 >= $i5 goto label50;

        if $i4 >= $i3 goto label50;

        if $r10 != null goto label46;

        $r24 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>($i6);

        $r10 = (android.content.pm.ResolveInfo) $r24;

     label46:
        if $r33 != null goto label47;

        $r24 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>($i4);

        $r33 = (com.android.server.am.BroadcastFilter) $r24;

     label47:
        $i7 = virtualinvoke $r33.<android.content.IntentFilter: int getPriority()>();

        $i8 = $r10.<android.content.pm.ResolveInfo: int priority>;

        if $i7 < $i8 goto label49;

        interfaceinvoke $r27.<java.util.List: void add(int,java.lang.Object)>($i6, $r33);

        $i4 = $i4 + 1;

        $r33 = null;

        $i6 = $i6 + 1;

        $i5 = $i5 + 1;

        goto label45;

     label48:
        $i5 = 0;

        goto label44;

     label49:
        $i6 = $i6 + 1;

        $r10 = null;

        goto label45;

     label50:
        if $i4 >= $i3 goto label52;

        if $r27 != null goto label51;

        $r9 = new java.util.ArrayList;

        $r27 = $r9;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

     label51:
        $r24 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>($i4);

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r24);

        $i4 = $i4 + 1;

        goto label50;

     label52:
        if $r27 == null goto label53;

        $i3 = interfaceinvoke $r27.<java.util.List: int size()>();

        if $i3 > 0 goto label54;

     label53:
        if $r4 == null goto label55;

     label54:
        r41 = new com.android.server.am.BroadcastRecord;

        specialinvoke r41.<com.android.server.am.BroadcastRecord: void <init>(android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.util.List,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean)>($r8, $r1, $r2, $i1, $i2, $r7, $r27, $r4, $i0, $r5, $r6, $z0);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r41);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

     label55:
        return 0;

     label56:
        $r34 := @caughtexception;

        goto label26;

     label57:
        $r35 := @caughtexception;

        $r27 = $r9;

        goto label26;

        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label20 to label21 with label56;
        catch android.os.RemoteException from label22 to label23 with label56;
        catch android.os.RemoteException from label24 to label25 with label57;
        catch android.os.RemoteException from label34 to label35 with label56;
        catch android.os.RemoteException from label36 to label37 with label56;
        catch android.os.RemoteException from label37 to label38 with label56;
    }

    private final void broadcastTimeout()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.util.ArrayList $r1;
        int $i0, $i4;
        long $l1, $l2;
        java.lang.Object $r2;
        com.android.server.am.BroadcastRecord $r3, $r17;
        byte $b3;
        android.os.Handler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6, $r19;
        java.lang.StringBuilder $r7;
        android.os.IBinder $r8;
        java.lang.String $r9;
        com.android.server.am.ProcessRecord $r10;
        java.util.List $r11;
        boolean $z0;
        com.android.server.am.BroadcastFilter $r12;
        com.android.server.am.ReceiverList $r13;
        android.util.SparseArray $r14, $r15;
        android.content.Intent $r16;
        android.os.Bundle $r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor $r0;

     label01:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label03;

        exitmonitor $r0;

     label02:
        return;

     label03:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (com.android.server.am.BroadcastRecord) $r2;

        $l2 = $r3.<com.android.server.am.BroadcastRecord: long startTime>;

        $l2 = $l2 + 10000L;

        $b3 = $l2 cmp $l1;

        if $b3 <= 0 goto label07;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(8);

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $l1 = $r3.<com.android.server.am.BroadcastRecord: long startTime>;

        $l1 = $l1 + 10000L;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r5, $l1);

        exitmonitor $r0;

     label04:
        return;

     label05:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label06:
        throw $r6;

     label07:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout of broadcast ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - receiver=");

        $r8 = $r3.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        $r3.<com.android.server.am.BroadcastRecord: long startTime> = $l1;

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int anrCount>;

        $i0 = $i0 + 1;

        $r3.<com.android.server.am.BroadcastRecord: int anrCount> = $i0;

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        if $i0 > 0 goto label09;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "Timeout on receiver with nextReceiver <= 0");

        exitmonitor $r0;

     label08:
        return;

     label09:
        $r10 = null;

        $r11 = $r3.<com.android.server.am.BroadcastRecord: java.util.List receivers>;

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        $i0 = $i0 - 1;

        $r2 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i0);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver during timeout: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logBroadcastReceiverDiscard(com.android.server.am.BroadcastRecord)>($r3);

        $z0 = $r2 instanceof com.android.server.am.BroadcastFilter;

        if $z0 == 0 goto label19;

        $r12 = (com.android.server.am.BroadcastFilter) $r2;

        $r13 = $r12.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $i0 = $r13.<com.android.server.am.ReceiverList: int pid>;

        if $i0 == 0 goto label11;

        $r13 = $r12.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $i0 = $r13.<com.android.server.am.ReceiverList: int pid>;

        $i4 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i0 == $i4 goto label11;

        $r14 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r14;

     label10:
        $r15 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r13 = $r12.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $i0 = $r13.<com.android.server.am.ReceiverList: int pid>;

        $r2 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r10 = (com.android.server.am.ProcessRecord) $r2;

        exitmonitor $r14;

     label11:
        if $r10 == null goto label13;

     label12:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcast of ");

        $r16 = $r3.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r9 = virtualinvoke $r16.<android.content.Intent: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void appNotRespondingLocked(com.android.server.am.ProcessRecord,com.android.server.am.HistoryRecord,java.lang.String)>($r10, null, $r9);

     label13:
        $r17 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if $r17 != $r3 goto label14;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast> = null;

     label14:
        $r8 = $r3.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver>;

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r9 = $r3.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r18 = $r3.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z0 = $r3.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,boolean)>($r8, $i0, $r9, $r18, $z0, 1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

        exitmonitor $r0;

     label15:
        return;

     label16:
        $r19 := @caughtexception;

     label17:
        exitmonitor $r14;

     label18:
        throw $r19;

     label19:
        $r10 = $r3.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

     label20:
        goto label11;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label15 with label05;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label18 to label20 with label05;
    }

    private final void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        long $l0, $l2;
        int $i1;
        com.android.server.am.ProcessRecord $r2;
        java.util.HashSet $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i1 = $r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i1 != 0 goto label2;

        $r2 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label2;

        $r2 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r3 = $r2.<com.android.server.am.ProcessRecord: java.util.HashSet executingServices>;

        $i1 = virtualinvoke $r3.<java.util.HashSet: int size()>();

        if $i1 != 0 goto label1;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(12);

        $r2 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r5.<android.os.Message: java.lang.Object obj> = $r2;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $l2 = 20000L + $l0;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r5, $l2);

     label1:
        $r2 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r3 = $r2.<com.android.server.am.ProcessRecord: java.util.HashSet executingServices>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

     label2:
        $i1 = $r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        $i1 = $i1 + 1;

        $r1.<com.android.server.am.ServiceRecord: int executeNesting> = $i1;

        $r1.<com.android.server.am.ServiceRecord: long executingStart> = $l0;

        return;
    }

    private final boolean canGcNow()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.util.ArrayList $r1;
        int $i0;
        boolean $z0;
        com.android.server.am.HistoryRecord $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        $z0 = $r2.<com.android.server.am.HistoryRecord: boolean idle>;

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private final java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo, com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.pm.ProviderInfo $r1;
        com.android.server.am.ProcessRecord $r2;
        int $i0, $i1, $i2, $i3;
        android.content.pm.ApplicationInfo $r3;
        java.lang.String $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.Object $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.pm.ProviderInfo;

        $r2 := @parameter1: com.android.server.am.ProcessRecord;

        $i0 := @parameter2: int;

        if $r2 == null goto label06;

        $i1 = $r2.<com.android.server.am.ProcessRecord: int pid>;

     label01:
        if $r2 == null goto label07;

        $r3 = $r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r3.<android.content.pm.ApplicationInfo: int uid>;

     label02:
        $r4 = $r1.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $z0 = $r1.<android.content.pm.ComponentInfo: boolean exported>;

        if $z0 == 0 goto label08;

        $i3 = -1;

     label03:
        $i3 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>($r4, $i1, $i2, $i3);

        if $i3 != 0 goto label04;

        if $i0 == 268435456 goto label05;

     label04:
        if $i0 != -1 goto label09;

     label05:
        return null;

     label06:
        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        goto label01;

     label07:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        goto label02;

     label08:
        $r3 = $r1.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        goto label03;

     label09:
        $r4 = $r1.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $z0 = $r1.<android.content.pm.ComponentInfo: boolean exported>;

        if $z0 == 0 goto label11;

        $i0 = -1;

     label10:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>($r4, $i1, $i2, $i0);

        if $i0 != 0 goto label12;

        return null;

     label11:
        $r3 = $r1.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        goto label10;

     label12:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: opening provider ");

        $r4 = $r1.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        if $r2 == null goto label14;

        $r6 = $r2;

     label13:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") requires ");

        $r4 = $r1.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r4 = $r1.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        return $r4;

     label14:
        $r6 = "(null)";

        goto label13;
    }

    private final boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager, android.content.pm.ProviderInfo, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.pm.IPackageManager $r1;
        android.content.pm.ProviderInfo $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        android.os.RemoteException $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.pm.IPackageManager;

        $r2 := @parameter1: android.content.pm.ProviderInfo;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label3;

        $r3 = $r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r3 == null goto label3;

        $r3 = $r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

     label1:
        $i2 = interfaceinvoke $r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>($r3, $i0);

     label2:
        if $i2 == 0 goto label3;

        return 0;

     label3:
        $i1 = $i1 & 2;

        if $i1 == 0 goto label6;

        $r3 = $r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r3 == null goto label6;

     label4:
        $r3 = $r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $i0 = interfaceinvoke $r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>($r3, $i0);

     label5:
        if $i0 == 0 goto label6;

        return 0;

     label6:
        return 1;

     label7:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
    }

    private final boolean checkUriPermissionLocked(android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.net.Uri $r1;
        int $i0, $i1;
        boolean $z0;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4;
        com.android.server.am.UriPermission $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.net.Uri;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 == 0 goto label1;

        $z0 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r4 = (java.util.HashMap) $r3;

        if $r4 != null goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.android.server.am.UriPermission) $r3;

        if $r5 != null goto label4;

        return 0;

     label4:
        $i0 = $r5.<com.android.server.am.UriPermission: int modeFlags>;

        $i0 = $i0 & $i1;

        if $i0 != $i1 goto label5;

        return 1;

     label5:
        return 0;
    }

    private final void cleanUpActivityLocked(com.android.server.am.HistoryRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r2;
        boolean $z0, $z1;
        java.util.ArrayList $r3;
        java.util.HashSet $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.lang.ref.WeakReference $r7;
        com.android.server.am.PendingIntentRecord $r8;
        int $i0;
        android.os.Handler $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r2 != $r1 goto label1;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity> = null;

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mFocusedActivity>;

        if $r2 != $r1 goto label2;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mFocusedActivity> = null;

     label2:
        $r1.<com.android.server.am.HistoryRecord: boolean configDestroy> = 0;

        $r1.<com.android.server.am.HistoryRecord: boolean frozenBeforeDestroy> = 0;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mFinishingActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $z1 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 == 0 goto label5;

        $r4 = $r1.<com.android.server.am.HistoryRecord: java.util.HashSet pendingResults>;

        if $r4 == null goto label5;

        $r4 = $r1.<com.android.server.am.HistoryRecord: java.util.HashSet pendingResults>;

        $r5 = virtualinvoke $r4.<java.util.HashSet: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.ref.WeakReference) $r6;

        $r6 = virtualinvoke $r7.<java.lang.ref.Reference: java.lang.Object get()>();

        $r8 = (com.android.server.am.PendingIntentRecord) $r6;

        if $r8 == null goto label3;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord,boolean)>($r8, 0);

        goto label3;

     label4:
        $r1.<com.android.server.am.HistoryRecord: java.util.HashSet pendingResults> = null;

     label5:
        if $z0 == 0 goto label6;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void cleanUpActivityServicesLocked(com.android.server.am.HistoryRecord)>($r1);

     label6:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label7;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mCancelledThumbnails>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label7:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: void removeMessages(int,java.lang.Object)>(9, $r1);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: void removeMessages(int,java.lang.Object)>(10, $r1);

        return;
    }

    private final void cleanUpActivityServicesLocked(com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.server.am.ConnectionRecord $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 = $r1.<com.android.server.am.HistoryRecord: java.util.HashSet connections>;

        if $r2 == null goto label3;

        $r2 = $r1.<com.android.server.am.HistoryRecord: java.util.HashSet connections>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.am.ConnectionRecord) $r4;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.HistoryRecord)>($r5, null, $r1);

        goto label1;

     label2:
        $r1.<com.android.server.am.HistoryRecord: java.util.HashSet connections> = null;

        return;

     label3:
        return;
    }

    private final void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord, boolean, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r9;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        java.util.ArrayList $r2;
        android.app.Dialog $r3;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        com.android.server.am.ContentProviderRecord $r8;
        java.util.HashSet $r10;
        com.android.server.am.ReceiverList $r11;
        com.android.server.ProcessMap $r12;
        java.lang.String $r13;
        android.content.pm.ApplicationInfo $r14;
        android.util.SparseArray $r15, $r16;
        android.os.Handler $r17;
        java.lang.Throwable $r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        if $i0 < 0 goto label01;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

     label01:
        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog>;

        if $r3 == null goto label02;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog>;

        virtualinvoke $r3.<android.app.Dialog: void dismiss()>();

        $r1.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog> = null;

     label02:
        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        if $r3 == null goto label03;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        virtualinvoke $r3.<android.app.Dialog: void dismiss()>();

        $r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog> = null;

     label03:
        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        if $r3 == null goto label04;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        virtualinvoke $r3.<android.app.Dialog: void dismiss()>();

        $r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog> = null;

     label04:
        $r1.<com.android.server.am.ProcessRecord: boolean crashing> = 0;

        $r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 0;

        virtualinvoke $r1.<com.android.server.am.ProcessRecord: void resetPackageList()>();

        $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread> = null;

        $r1.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        $r1.<com.android.server.am.ProcessRecord: boolean foregroundServices> = 0;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void killServicesLocked(com.android.server.am.ProcessRecord,boolean)>($r1, 1);

        $z1 = 0;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r4 = $r1.<com.android.server.am.ProcessRecord: java.util.HashMap pubProviders>;

        $z2 = virtualinvoke $r4.<java.util.HashMap: boolean isEmpty()>();

        if $z2 != 0 goto label11;

        $r4 = $r1.<com.android.server.am.ProcessRecord: java.util.HashMap pubProviders>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.am.ContentProviderRecord) $r7;

        $r8.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider> = null;

        $r8.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord app> = null;

        $i1 = 0;

        $z2 = $r1.<com.android.server.am.ProcessRecord: boolean bad>;

        if $z2 != 0 goto label09;

     label06:
        if $i1 >= $i0 goto label07;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r7 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        if $r7 != $r8 goto label08;

        $z1 = 1;

     label07:
        if $i1 < $i0 goto label05;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord)>($r1, $r8);

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        goto label05;

     label08:
        $i1 = $i1 + 1;

        goto label06;

     label09:
        $i1 = $i0;

        goto label07;

     label10:
        $r4 = $r1.<com.android.server.am.ProcessRecord: java.util.HashMap pubProviders>;

        virtualinvoke $r4.<java.util.HashMap: void clear()>();

     label11:
        $i1 = 0;

     label12:
        if $i1 >= $i0 goto label15;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r7 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r8 = (com.android.server.am.ContentProviderRecord) $r7;

        $r9 = $r8.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp>;

        if $r9 != $r1 goto label13;

        $z2 = $r1.<com.android.server.am.ProcessRecord: boolean bad>;

        if $z2 != 0 goto label14;

        $z1 = 1;

     label13:
        $i1 = $i1 + 1;

        goto label12;

     label14:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord)>($r1, $r8);

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        goto label13;

     label15:
        $r10 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet conProviders>;

        $z2 = virtualinvoke $r10.<java.util.HashSet: boolean isEmpty()>();

        if $z2 != 0 goto label18;

        $r10 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet conProviders>;

        $r6 = virtualinvoke $r10.<java.util.HashSet: java.util.Iterator iterator()>();

     label16:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label17;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.am.ContentProviderRecord) $r7;

        $r10 = $r8.<com.android.server.am.ContentProviderRecord: java.util.HashSet clients>;

        virtualinvoke $r10.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        goto label16;

     label17:
        $r10 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet conProviders>;

        virtualinvoke $r10.<java.util.HashSet: void clear()>();

     label18:
        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>($r1);

        $r10 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet receivers>;

        $i0 = virtualinvoke $r10.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label21;

        $r10 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet receivers>;

        $r6 = virtualinvoke $r10.<java.util.HashSet: java.util.Iterator iterator()>();

     label19:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.android.server.am.ReceiverList) $r7;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>($r11);

        goto label19;

     label20:
        $r10 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet receivers>;

        virtualinvoke $r10.<java.util.HashSet: void clear()>();

     label21:
        if $z0 == 0 goto label22;

        return;

     label22:
        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label25;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r13 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r14 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r12.<com.android.server.ProcessMap: void remove(java.lang.String,int)>($r13, $i0);

     label23:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if $r1 != $r9 goto label24;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess> = null;

     label24:
        if $z1 == 0 goto label26;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r13 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r14 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r12.<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r13, $i0, $r1);

        $r13 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>($r1, "restart", $r13);

        return;

     label25:
        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z0 != 0 goto label23;

        $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread> = null;

        $r1.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        $r1.<com.android.server.am.ProcessRecord: boolean foregroundServices> = 0;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>($r1);

        if $i0 >= 0 goto label23;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $z1 = 1;

        goto label23;

     label26:
        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 <= 0 goto label32;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i0 == $i1 goto label33;

        $r15 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r15;

     label27:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r16.<android.util.SparseArray: void remove(int)>($i0);

        $r17 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r17.<android.os.Handler: void removeMessages(int,java.lang.Object)>(20, $r1);

        exitmonitor $r15;

     label28:
        $r1.<com.android.server.am.ProcessRecord: int pid> = 0;

        return;

     label29:
        $r18 := @caughtexception;

     label30:
        exitmonitor $r15;

     label31:
        throw $r18;

     label32:
        return;

     label33:
        return;

        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
    }

    private final void completePauseLocked()
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        boolean $z0;
        com.android.server.am.ProcessRecord $r2;
        java.util.ArrayList $r3;
        int $i0;
        android.os.Message $r4;
        android.os.Handler $r5;
        android.os.PowerManager$WakeLock $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r1 == null goto label2;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 == 0 goto label4;

        $r1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord finishCurrentActivityLocked(com.android.server.am.HistoryRecord,int)>($r1, 2);

     label1:
        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity> = null;

     label2:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z0 != 0 goto label8;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>($r1);

     label3:
        if $r1 == null goto label9;

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void resumeKeyDispatchingLocked()>();

        return;

     label4:
        $r2 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label7;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean waitingVisible>;

        if $z0 == 0 goto label5;

        $r1.<com.android.server.am.HistoryRecord: boolean waitingVisible> = 0;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

     label5:
        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean configDestroy>;

        if $z0 == 0 goto label6;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean destroyActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r1, 1);

        goto label1;

     label6:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 3 goto label1;

        $r4 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r4.<android.os.Message: int what> = 11;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        goto label1;

     label7:
        $r1 = null;

        goto label1;

     label8:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mGoingToSleep>;

        $z0 = virtualinvoke $r6.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label3;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mGoingToSleep>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void release()>();

        goto label3;

     label9:
        return;
    }

    private final void completeResumeLocked(com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        android.os.Message $r2;
        android.os.Handler $r3;
        com.android.server.WindowManagerService $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r1.<com.android.server.am.HistoryRecord: boolean idle> = 0;

        $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList results> = null;

        $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents> = null;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(10);

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r2, 10000L);

        $r1.<com.android.server.am.HistoryRecord: android.graphics.Bitmap thumbnail> = null;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.HistoryRecord)>($r1);

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void resumeKeyDispatchingLocked()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void ensureActivitiesVisibleLocked(com.android.server.am.HistoryRecord,int)>(null, 0);

        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r4.<com.android.server.WindowManagerService: void executeAppTransition()>();

        return;
    }

    private final int computeOomAdjLocked(com.android.server.am.ProcessRecord, int, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r2, $r14;
        int $i0, $i1, $i2, $i6;
        android.app.IApplicationThread $r3;
        android.content.ComponentName $r4;
        java.util.HashSet $r5;
        long $l3, $l4;
        java.util.Iterator $r6, $r11;
        boolean $z0;
        java.lang.Object $r7;
        com.android.server.am.ServiceRecord $r8;
        byte $b5;
        java.util.HashMap $r9;
        java.util.Collection $r10;
        com.android.server.am.ConnectionRecord $r12;
        com.android.server.am.AppBindRecord $r13;
        com.android.server.am.HistoryRecord $r15;
        com.android.server.am.ActivityManagerService$ActivityState $r16, $r17;
        com.android.server.am.BroadcastRecord $r18;
        android.os.IBinder $r19;
        java.util.ArrayList $r20;
        com.android.server.am.ContentProviderRecord $r21;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.android.server.am.ProcessRecord;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $i2 = $r1.<com.android.server.am.ProcessRecord: int adjSeq>;

        if $i1 != $i2 goto label01;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int curAdj>;

        return $i0;

     label01:
        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 != null goto label02;

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $r1.<com.android.server.am.ProcessRecord: int adjSeq> = $i0;

        $i0 = <com.android.server.am.ActivityManagerService: int EMPTY_APP_ADJ>;

        $r1.<com.android.server.am.ProcessRecord: int curAdj> = $i0;

        return $i0;

     label02:
        $r1.<com.android.server.am.ProcessRecord: boolean isForeground> = 0;

        if $r1 == $r2 goto label03;

        $r4 = $r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r4 != null goto label03;

        $i1 = $r1.<com.android.server.am.ProcessRecord: int persistentActivities>;

        if $i1 <= 0 goto label13;

     label03:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        $r1.<com.android.server.am.ProcessRecord: boolean isForeground> = 1;

     label04:
        $i2 = $r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $r1.<com.android.server.am.ProcessRecord: int adjSeq> = $i2;

        $r1.<com.android.server.am.ProcessRecord: int curRawAdj> = $i1;

        $i2 = $r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        if $i1 > $i2 goto label23;

        $i2 = $i1;

     label05:
        $r1.<com.android.server.am.ProcessRecord: int curAdj> = $i2;

        $r5 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $i2 = virtualinvoke $r5.<java.util.HashSet: int size()>();

        if $i2 == 0 goto label27;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label27;

        if $i1 <= $i0 goto label06;

        $i1 = $i0;

     label06:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $r6 = virtualinvoke $r5.<java.util.HashSet: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label27;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label27;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.am.ServiceRecord) $r7;

        $z0 = $r8.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z0 == 0 goto label08;

        $l4 = $r8.<com.android.server.am.ServiceRecord: long lastActivity>;

        $l4 = $l4 + 600000L;

        $b5 = $l3 cmp $l4;

        if $b5 >= 0 goto label24;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int SECONDARY_SERVER_ADJ>;

        if $i1 <= $i2 goto label08;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int SECONDARY_SERVER_ADJ>;

     label08:
        $r9 = $r8.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        $i2 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        if $i2 <= 0 goto label07;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label07;

        $r9 = $r8.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        $r11 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label07;

        $r7 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (com.android.server.am.ConnectionRecord) $r7;

        $r13 = $r12.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r14 = $r13.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r14 == $r1 goto label09;

        $i2 = $r12.<com.android.server.am.ConnectionRecord: int flags>;

        $i2 = $i2 & 1;

        if $i2 == 0 goto label11;

        $r13 = $r12.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r14 = $r13.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $i2 = $i0;

        $i6 = $r14.<com.android.server.am.ProcessRecord: int hiddenAdj>;

        if $i0 <= $i6 goto label10;

        $i2 = $r14.<com.android.server.am.ProcessRecord: int hiddenAdj>;

        $i6 = $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ>;

        if $i2 <= $i6 goto label25;

        $i2 = $r14.<com.android.server.am.ProcessRecord: int hiddenAdj>;

     label10:
        $i2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord)>($r14, $i2, $r2);

        if $i1 <= $i2 goto label11;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ>;

        if $i2 <= $i1 goto label26;

        $i1 = $i2;

     label11:
        $r15 = $r12.<com.android.server.am.ConnectionRecord: com.android.server.am.HistoryRecord activity>;

        if $r15 == null goto label09;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label09;

        $r16 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r17 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState RESUMED>;

        if $r16 == $r17 goto label12;

        $r16 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r17 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState PAUSING>;

        if $r16 != $r17 goto label09;

     label12:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        goto label09;

     label13:
        $r18 = $r1.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if $r18 != null goto label14;

        $r18 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if $r18 == null goto label15;

        $r18 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        $r14 = $r18.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        if $r14 != $r1 goto label15;

     label14:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        goto label04;

     label15:
        $r5 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet executingServices>;

        $i1 = virtualinvoke $r5.<java.util.HashSet: int size()>();

        if $i1 <= 0 goto label16;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        goto label04;

     label16:
        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean foregroundServices>;

        if $z0 != 0 goto label17;

        $r19 = $r1.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground>;

        if $r19 == null goto label18;

     label17:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ>;

        goto label04;

     label18:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if $r1 != $r14 goto label19;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int HOME_APP_ADJ>;

        goto label04;

     label19:
        $r20 = $r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i2 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        if $i2 == 0 goto label22;

        $i1 = $i0;

        $i6 = 0;

     label20:
        if $i6 >= $i2 goto label04;

        $r20 = $r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r7 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        $r15 = (com.android.server.am.HistoryRecord) $r7;

        $z0 = $r15.<com.android.server.am.HistoryRecord: boolean visible>;

        if $z0 == 0 goto label21;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ>;

        goto label04;

     label21:
        $i6 = $i6 + 1;

        goto label20;

     label22:
        $i1 = <com.android.server.am.ActivityManagerService: int EMPTY_APP_ADJ>;

        goto label04;

     label23:
        $i2 = $r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        goto label05;

     label24:
        if $i1 <= $i0 goto label08;

        $i1 = $i0;

        goto label08;

     label25:
        $i2 = $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ>;

        goto label10;

     label26:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ>;

        goto label11;

     label27:
        $r9 = $r1.<com.android.server.am.ProcessRecord: java.util.HashMap pubProviders>;

        $i2 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        if $i2 == 0 goto label36;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label36;

        $i2 = <com.android.server.am.ActivityManagerService: int CONTENT_PROVIDER_ADJ>;

        if $i1 <= $i2 goto label28;

        $i1 = <com.android.server.am.ActivityManagerService: int CONTENT_PROVIDER_ADJ>;

     label28:
        $r9 = $r1.<com.android.server.am.ProcessRecord: java.util.HashMap pubProviders>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label29:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label36;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label36;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (com.android.server.am.ContentProviderRecord) $r7;

        $r5 = $r21.<com.android.server.am.ContentProviderRecord: java.util.HashSet clients>;

        $i2 = virtualinvoke $r5.<java.util.HashSet: int size()>();

        if $i2 == 0 goto label35;

        $r5 = $r21.<com.android.server.am.ContentProviderRecord: java.util.HashSet clients>;

        $r11 = virtualinvoke $r5.<java.util.HashSet: java.util.Iterator iterator()>();

     label30:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label35;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label35;

        $r7 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.android.server.am.ProcessRecord) $r7;

        if $r14 == $r1 goto label30;

        $i2 = $i0;

        $i6 = $r14.<com.android.server.am.ProcessRecord: int hiddenAdj>;

        if $i0 <= $i6 goto label31;

        $i2 = $r14.<com.android.server.am.ProcessRecord: int hiddenAdj>;

        $i6 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i2 <= $i6 goto label33;

        $i2 = $r14.<com.android.server.am.ProcessRecord: int hiddenAdj>;

     label31:
        $i2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord)>($r14, $i2, $r2);

        if $i1 <= $i2 goto label30;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i2 <= $i1 goto label34;

        $i1 = $i2;

     label32:
        goto label30;

     label33:
        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        goto label31;

     label34:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        goto label32;

     label35:
        $i2 = $r21.<com.android.server.am.ContentProviderRecord: int externals>;

        if $i2 == 0 goto label29;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label29;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        goto label29;

     label36:
        $r1.<com.android.server.am.ProcessRecord: int curRawAdj> = $i1;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        if $i1 <= $i0 goto label37;

        $i1 = $r1.<com.android.server.am.ProcessRecord: int maxAdj>;

     label37:
        $r1.<com.android.server.am.ProcessRecord: int curAdj> = $i1;

        return $i1;
    }

    private final void decPersistentCountLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int persistentActivities>;

        $i0 = $i0 - 1;

        $r1.<com.android.server.am.ProcessRecord: int persistentActivities> = $i0;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int persistentActivities>;

        if $i0 <= 0 goto label1;

        return;

     label1:
        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label2;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        return;

     label2:
        return;
    }

    private final void deliverNewIntentLocked(com.android.server.am.HistoryRecord, android.content.Intent)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        android.content.Intent $r2, r13;
        java.util.ArrayList $r3, r12;
        boolean $z0;
        com.android.server.am.ActivityManagerService$ActivityState $r4, $r5;
        com.android.server.am.ProcessRecord $r6;
        android.app.IApplicationThread $r7;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r10, r14;
        java.lang.String $r11;
        android.os.IBinder r15;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 := @parameter1: android.content.Intent;

        $z0 = 0;

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r5 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState RESUMED>;

        if $r4 != $r5 goto label5;

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label5;

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r7 = $r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label5;

        r12 = new java.util.ArrayList;

        $r3 = r12;

     label1:
        specialinvoke r12.<java.util.ArrayList: void <init>()>();

     label2:
        r13 = new android.content.Intent;

     label3:
        specialinvoke r13.<android.content.Intent: void <init>(android.content.Intent)>($r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r7 = $r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r15 = (android.os.IBinder) $r1;

        interfaceinvoke $r7.<android.app.IApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>($r3, r15);

     label4:
        $z0 = 1;

     label5:
        if $z0 != 0 goto label7;

        r13 = new android.content.Intent;

        specialinvoke r13.<android.content.Intent: void <init>(android.content.Intent)>($r2);

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void addNewIntentLocked(android.content.Intent)>(r13);

        return;

     label6:
        $r9 := @caughtexception;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown sending new intent to ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r11, $r9);

        goto label5;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    private final void deliverToRegisteredReceiver(com.android.server.am.BroadcastRecord, com.android.server.am.BroadcastFilter, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.BroadcastRecord $r1;
        com.android.server.am.BroadcastFilter $r2;
        boolean $z0, $z1;
        java.lang.String $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        android.content.Intent $r5, $r10;
        com.android.server.am.ReceiverList $r6;
        com.android.server.am.ProcessRecord $r7;
        android.app.IIntentReceiver $r8;
        android.os.IBinder $r9;
        android.os.Bundle $r11;
        android.os.RemoteException $r12;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.BroadcastRecord;

        $r2 := @parameter1: com.android.server.am.BroadcastFilter;

        $z0 := @parameter2: boolean;

        $z1 = 0;

        $r3 = $r2.<com.android.server.am.BroadcastFilter: java.lang.String requiredPermission>;

        if $r3 == null goto label01;

        $r3 = $r2.<com.android.server.am.BroadcastFilter: java.lang.String requiredPermission>;

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int callingPid>;

        $i1 = $r1.<com.android.server.am.BroadcastRecord: int callingUid>;

        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>($r3, $i0, $i1, -1);

        if $i0 == 0 goto label01;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: broadcasting ");

        $r5 = $r1.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r3 = virtualinvoke $r5.<android.content.Intent: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r3 = $r1.<com.android.server.am.BroadcastRecord: java.lang.String callerPackage>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int callingPid>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int callingUid>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r3 = $r2.<com.android.server.am.BroadcastFilter: java.lang.String requiredPermission>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to registered receiver ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r3);

        $z1 = 1;

     label01:
        $r3 = $r1.<com.android.server.am.BroadcastRecord: java.lang.String requiredPermission>;

        if $r3 == null goto label02;

        $r3 = $r1.<com.android.server.am.BroadcastRecord: java.lang.String requiredPermission>;

        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $i0 = $r6.<com.android.server.am.ReceiverList: int pid>;

        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $i1 = $r6.<com.android.server.am.ReceiverList: int uid>;

        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>($r3, $i0, $i1, -1);

        if $i0 == 0 goto label02;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: receiving ");

        $r5 = $r1.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r3 = virtualinvoke $r5.<android.content.Intent: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $r7 = $r6.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $i0 = $r6.<com.android.server.am.ReceiverList: int pid>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $i0 = $r6.<com.android.server.am.ReceiverList: int uid>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r3 = $r1.<com.android.server.am.BroadcastRecord: java.lang.String requiredPermission>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to sender ");

        $r3 = $r1.<com.android.server.am.BroadcastRecord: java.lang.String callerPackage>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid ");

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int callingUid>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r3);

        $z1 = 1;

     label02:
        if $z1 != 0 goto label09;

        if $z0 == 0 goto label03;

        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $r8 = $r6.<com.android.server.am.ReceiverList: android.app.IIntentReceiver receiver>;

        $r9 = interfaceinvoke $r8.<android.app.IIntentReceiver: android.os.IBinder asBinder()>();

        $r1.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver> = $r9;

        $r1.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastFilter curFilter> = $r2;

        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $r6.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast> = $r1;

        $r1.<com.android.server.am.BroadcastRecord: int state> = 2;

     label03:
        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $r7 = $r6.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $r8 = $r6.<com.android.server.am.ReceiverList: android.app.IIntentReceiver receiver>;

        $r5 = new android.content.Intent;

        $r10 = $r1.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

     label04:
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Intent)>($r10);

     label05:
        $i0 = $r1.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r3 = $r1.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r11 = $r1.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

     label06:
        $z1 = $r1.<com.android.server.am.BroadcastRecord: boolean ordered>;

        staticinvoke <com.android.server.am.ActivityManagerService: void performReceive(com.android.server.am.ProcessRecord,android.app.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean)>($r7, $r8, $r5, $i0, $r3, $r11, $z1);

     label07:
        if $z0 == 0 goto label10;

        $r1.<com.android.server.am.BroadcastRecord: int state> = 3;

        return;

     label08:
        $r12 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending broadcast ");

        $r5 = $r1.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r3, $r12);

        if $z0 == 0 goto label11;

        $r1.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver> = null;

        $r1.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastFilter curFilter> = null;

        $r6 = $r2.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $r6.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast> = null;

        return;

     label09:
        return;

     label10:
        return;

     label11:
        return;

        catch android.os.RemoteException from label04 to label05 with label08;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    private final boolean destroyActivityLocked(com.android.server.am.HistoryRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r2;
        int $i0;
        java.lang.Integer $r3;
        com.android.server.am.TaskRecord $r4;
        java.lang.String $r5;
        com.android.server.am.ProcessRecord $r6;
        java.util.ArrayList $r7;
        android.app.IApplicationThread $r8;
        com.android.server.am.ActivityManagerService$ActivityState $r9;
        android.os.Handler $r10;
        android.os.Message $r11;
        java.lang.StringBuilder $r12, r14;
        java.lang.Exception $r13;
        android.os.IBinder r15;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $z0 := @parameter1: boolean;

        $r2 = newarray (java.lang.Object)[3];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r4.<com.android.server.am.TaskRecord: int taskId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r3;

        $r5 = $r1.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

        $r2[2] = $r5;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30018, $r2);

        $z1 = 0;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void cleanUpActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r1, 0);

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label08;

        if $z0 == 0 goto label02;

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r7 = $r6.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int indexOf(java.lang.Object)>($r1);

        if $i0 < 0 goto label01;

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r7 = $r6.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

     label01:
        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean persistent>;

        if $z0 == 0 goto label02;

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void decPersistentCountLocked(com.android.server.am.ProcessRecord)>($r6);

     label02:
        $z0 = 0;

     label03:
        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $z2 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        $i0 = $r1.<com.android.server.am.HistoryRecord: int configChangeFlags>;

        r15 = (android.os.IBinder) $r1;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>(r15, $z2, $i0);

     label04:
        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app> = null;

        $r1.<com.android.server.am.HistoryRecord: boolean nowVisible> = 0;

        $z2 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z2 == 0 goto label07;

        if $z0 != 0 goto label07;

        $r9 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState DESTROYING>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r9;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r11 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int)>(17);

        $r11.<android.os.Message: java.lang.Object obj> = $r1;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r10.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r11, 10000L);

     label05:
        $r1.<com.android.server.am.HistoryRecord: int configChangeFlags> = 0;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        if $z0 != 0 goto label10;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" being finished, but not in LRU list");

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r5);

        return $z1;

     label06:
        $r13 := @caughtexception;

        $z2 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z2 == 0 goto label04;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeActivityFromHistoryLocked(com.android.server.am.HistoryRecord)>($r1);

        $z1 = 1;

        $z0 = 1;

        goto label04;

     label07:
        $r9 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState DESTROYED>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r9;

        goto label05;

     label08:
        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 == 0 goto label09;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeActivityFromHistoryLocked(com.android.server.am.HistoryRecord)>($r1);

        $z1 = 1;

        goto label05;

     label09:
        $r9 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState DESTROYED>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r9;

        goto label05;

     label10:
        return $z1;

        catch java.lang.Exception from label03 to label04 with label06;
    }

    private static final void dumpApplicationMemoryUsage(java.io.FileDescriptor, java.io.PrintWriter, java.util.List, java.lang.String, java.lang.String[])
    {
        java.io.FileDescriptor $r0;
        java.io.PrintWriter $r1;
        java.util.List $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        boolean $z0;
        long $l0, $l1;
        java.lang.StringBuilder $r5;
        int $i2, $i3;
        java.lang.Object $r6;
        com.android.server.am.ProcessRecord $r7;
        android.app.IApplicationThread $r8;
        android.os.IBinder $r9;
        android.os.RemoteException $r10;

        $r0 := @parameter0: java.io.FileDescriptor;

        $r1 := @parameter1: java.io.PrintWriter;

        $r2 := @parameter2: java.util.List;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String[];

        $z0 = staticinvoke <com.android.server.am.ActivityManagerService: boolean scanArgs(java.lang.String[],java.lang.String)>($r4, "-c");

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        if $z0 == 0 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

     label1:
        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i2 - 1;

     label2:
        if $i2 < 0 goto label8;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (com.android.server.am.ProcessRecord) $r6;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label5;

        if $z0 != 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** MEMINFO in pid ");

        $i3 = $r7.<com.android.server.am.ProcessRecord: int pid>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r3 = $r7.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

     label3:
        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label4:
        $r9 = interfaceinvoke $r8.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        interfaceinvoke $r9.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>($r0, $r4);

     label5:
        $i2 = $i2 + -1;

        goto label2;

     label6:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Applications Memory Usage (kB):");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Realtime: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        goto label1;

     label7:
        $r10 := @caughtexception;

        if $z0 != 0 goto label5;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Got RemoteException!");

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        goto label5;

     label8:
        return;

        catch android.os.RemoteException from label4 to label5 with label7;
    }

    private static final void dumpHistoryList(java.io.PrintWriter, java.util.List, java.lang.String, java.lang.String)
    {
        java.io.PrintWriter $r0;
        java.util.List $r1;
        java.lang.String $r2, $r3, $r9;
        com.android.server.am.TaskRecord $r4, $r7;
        int $i0;
        java.lang.Object $r5;
        com.android.server.am.HistoryRecord $r6;
        java.lang.StringBuilder $r8;

        $r0 := @parameter0: java.io.PrintWriter;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 = null;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label3;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (com.android.server.am.HistoryRecord) $r5;

        $r7 = $r6.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r4 == $r7 goto label2;

        $r4 = $r6.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>($r0, $r9);

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.android.server.am.HistoryRecord: void dump(java.io.PrintWriter,java.lang.String)>($r0, $r9);

        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    private static final int dumpProcessList(java.io.PrintWriter, java.util.List, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.io.PrintWriter $r0;
        java.util.List $r1;
        java.lang.String $r2, $r3, $r4, $r8;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        java.lang.Object $r5;
        com.android.server.am.ProcessRecord $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r9;

        $r0 := @parameter0: java.io.PrintWriter;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $z0 := @parameter5: boolean;

        $i0 = 0;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label9;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = (com.android.server.am.ProcessRecord) $r5;

        if $z0 == 0 goto label6;

        $r7 = newarray (java.lang.Object)[5];

        $r7[0] = $r2;

        $z1 = $r6.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label5;

        $r8 = $r4;

     label2:
        $r7[1] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[2] = $r9;

        $i2 = $r6.<com.android.server.am.ProcessRecord: int setAdj>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7[3] = $r9;

        $r8 = virtualinvoke $r6.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        $r7[4] = $r8;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s #%2d: oom_adj=%3d %s", $r7);

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label3:
        $z1 = $r6.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label4;

        $i0 = $i0 + 1;

     label4:
        $i1 = $i1 + -1;

        goto label1;

     label5:
        $r8 = $r3;

        goto label2;

     label6:
        $r7 = newarray (java.lang.Object)[4];

        $r7[0] = $r2;

        $z1 = $r6.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label8;

        $r8 = $r4;

     label7:
        $r7[1] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[2] = $r9;

        $r8 = virtualinvoke $r6.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        $r7[3] = $r8;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s #%2d: %s", $r7);

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        goto label3;

     label8:
        $r8 = $r3;

        goto label7;

     label9:
        return $i0;
    }

    private void dumpService(java.io.FileDescriptor, java.io.PrintWriter, com.android.server.am.ServiceRecord, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService $r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2;
        com.android.server.am.ServiceRecord $r3;
        java.lang.String[] $r4;
        java.lang.StringBuilder $r5;
        android.content.ComponentName $r6;
        java.lang.String $r7;
        com.android.server.am.ProcessRecord $r8;
        android.app.IApplicationThread $r9;
        android.os.RemoteException $r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.io.PrintWriter;

        $r3 := @parameter2: com.android.server.am.ServiceRecord;

        $r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Service ");

        $r6 = $r3.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r7 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = $r3.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r8 == null goto label6;

        $r8 = $r3.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r9 == null goto label7;

     label1:
        virtualinvoke $r2.<java.io.PrintWriter: void flush()>();

     label2:
        $r8 = $r3.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

     label3:
        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r9.<android.app.IApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>($r1, $r3, $r4);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("\n");

     label4:
        return;

     label5:
        $r10 := @caughtexception;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("got a RemoteException while dumping the service");

        return;

     label6:
        return;

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private final void ensureActivitiesVisibleLocked(com.android.server.am.HistoryRecord, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r2;
        int $i0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $i0 := @parameter1: int;

        $r2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>(null);

        if $r2 == null goto label1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void ensureActivitiesVisibleLocked(com.android.server.am.HistoryRecord,com.android.server.am.HistoryRecord,java.lang.String,int)>($r2, $r1, null, $i0);

        return;

     label1:
        return;
    }

    private final void ensureActivitiesVisibleLocked(com.android.server.am.HistoryRecord, com.android.server.am.HistoryRecord, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r2;
        java.lang.String $r3, $r6;
        int $i0, $i1, $i2;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        boolean $z0, $z1;
        com.android.server.am.ProcessRecord $r7;
        android.app.IApplicationThread $r8;
        com.android.server.WindowManagerService $r9;
        com.android.server.am.ActivityManagerService$ActivityState $r10, $r11;
        java.lang.Exception $r12, $r16;
        java.lang.StringBuilder $r13, r17;
        android.content.Intent $r14;
        android.content.ComponentName $r15;
        android.os.IBinder r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 := @parameter1: com.android.server.am.HistoryRecord;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

     label01:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        if $r5 == $r1 goto label02;

        $i1 = $i1 + -1;

        goto label01;

     label02:
        $z0 = 0;

     label03:
        if $i1 < 0 goto label14;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r1 = (com.android.server.am.HistoryRecord) $r5;

        $z1 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 == 0 goto label05;

     label04:
        $i1 = $i1 + -1;

        goto label03;

     label05:
        if $r3 == null goto label06;

        $r6 = $r1.<com.android.server.am.HistoryRecord: java.lang.String processName>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label22;

     label06:
        $z1 = 1;

     label07:
        if $r1 == $r2 goto label08;

        if $z1 == 0 goto label08;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean ensureActivityConfigurationLocked(com.android.server.am.HistoryRecord,int)>($r1, 0);

     label08:
        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label09;

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 != null goto label23;

     label09:
        if $r3 == null goto label10;

        $r6 = $r1.<com.android.server.am.HistoryRecord: java.lang.String processName>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label13;

     label10:
        if $r1 == $r2 goto label11;

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>($r7, $i0);

     label11:
        $z1 = $r1.<com.android.server.am.HistoryRecord: boolean visible>;

        if $z1 != 0 goto label12;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r18 = (android.os.IBinder) $r1;

        virtualinvoke $r9.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r18, 1);

     label12:
        if $r1 == $r2 goto label13;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startSpecificActivityLocked(com.android.server.am.HistoryRecord,boolean,boolean)>($r1, 0, 0);

     label13:
        $i2 = $r1.<com.android.server.am.HistoryRecord: int configChangeFlags>;

        $i0 = $i0 | $i2;

        $z1 = $r1.<com.android.server.am.HistoryRecord: boolean fullscreen>;

        if $z1 == 0 goto label04;

        $z0 = 1;

        $i1 = $i1 + -1;

     label14:
        if $i1 < 0 goto label30;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r1 = (com.android.server.am.HistoryRecord) $r5;

        $z1 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 != 0 goto label21;

        if $z0 == 0 goto label29;

        $z1 = $r1.<com.android.server.am.HistoryRecord: boolean visible>;

        if $z1 == 0 goto label21;

        $r1.<com.android.server.am.HistoryRecord: boolean visible> = 0;

     label15:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r18 = (android.os.IBinder) $r1;

        virtualinvoke $r9.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r18, 0);

        $r10 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

     label16:
        $r11 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState STOPPING>;

     label17:
        if $r10 == $r11 goto label20;

        $r10 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

     label18:
        $r11 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState STOPPED>;

     label19:
        if $r10 != $r11 goto label21;

     label20:
        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label21;

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label21;

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r18 = (android.os.IBinder) $r1;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleWindowVisibility(android.os.IBinder,boolean)>(r18, 0);

     label21:
        $i1 = $i1 + -1;

        goto label14;

     label22:
        $z1 = 0;

        goto label07;

     label23:
        $z1 = $r1.<com.android.server.am.HistoryRecord: boolean visible>;

        if $z1 == 0 goto label24;

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void stopFreezingScreenLocked(boolean)>(0);

        goto label13;

     label24:
        if $r3 != null goto label13;

        $r1.<com.android.server.am.HistoryRecord: boolean visible> = 1;

        $r10 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r11 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState RESUMED>;

        if $r10 == $r11 goto label13;

        if $r1 == $r2 goto label13;

     label25:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r18 = (android.os.IBinder) $r1;

        virtualinvoke $r9.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r18, 1);

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r18 = (android.os.IBinder) $r1;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleWindowVisibility(android.os.IBinder,boolean)>(r18, 1);

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void stopFreezingScreenLocked(boolean)>(0);

     label26:
        goto label13;

     label27:
        $r12 := @caughtexception;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown making visibile: ");

        $r14 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r15 = virtualinvoke $r14.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r6, $r12);

        goto label13;

     label28:
        $r16 := @caughtexception;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown making hidden: ");

        $r14 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r15 = virtualinvoke $r14.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r3, $r16);

        goto label21;

     label29:
        $z1 = $r1.<com.android.server.am.HistoryRecord: boolean fullscreen>;

        if $z1 == 0 goto label21;

        $z0 = 1;

        goto label21;

     label30:
        return;

        catch java.lang.Exception from label15 to label16 with label28;
        catch java.lang.Exception from label17 to label18 with label28;
        catch java.lang.Exception from label19 to label21 with label28;
        catch java.lang.Exception from label25 to label26 with label27;
    }

    private final boolean ensureActivityConfigurationLocked(com.android.server.am.HistoryRecord, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        int $i0, $i1, $i2;
        android.content.res.Configuration $r2, $r3;
        boolean $z0;
        com.android.server.am.ProcessRecord $r4;
        android.app.IApplicationThread $r5;
        android.content.pm.ActivityInfo $r6;
        com.android.server.am.ActivityManagerService$ActivityState $r7, $r8;
        android.os.RemoteException $r9;
        android.os.IBinder r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r3 = $r1.<com.android.server.am.HistoryRecord: android.content.res.Configuration configuration>;

        if $r3 != $r2 goto label01;

        return 1;

     label01:
        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 == 0 goto label02;

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void stopFreezingScreenLocked(boolean)>(0);

        return 1;

     label02:
        $r3 = $r1.<com.android.server.am.HistoryRecord: android.content.res.Configuration configuration>;

        $r1.<com.android.server.am.HistoryRecord: android.content.res.Configuration configuration> = $r2;

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label03;

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r5 = $r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 != null goto label04;

     label03:
        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void stopFreezingScreenLocked(boolean)>(0);

        return 1;

     label04:
        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean persistent>;

        if $z0 != 0 goto label10;

        $i1 = virtualinvoke $r3.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r2);

        $r6 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i2 = $r6.<android.content.pm.ActivityInfo: int configChanges>;

        $i2 = $i2 ^ -1;

        $i2 = $i2 & $i1;

        if $i2 == 0 goto label10;

        $i2 = $r1.<com.android.server.am.HistoryRecord: int configChangeFlags>;

        $i1 = $i2 | $i1;

        $r1.<com.android.server.am.HistoryRecord: int configChangeFlags> = $i1;

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>($r4, $i0);

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label05;

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r5 = $r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 != null goto label07;

     label05:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean destroyActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r1, 1);

     label06:
        return 0;

     label07:
        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r8 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState PAUSING>;

        if $r7 != $r8 goto label08;

        $r1.<com.android.server.am.HistoryRecord: boolean configDestroy> = 1;

        return 1;

     label08:
        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r8 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState RESUMED>;

        if $r7 != $r8 goto label09;

        $i0 = $r1.<com.android.server.am.HistoryRecord: int configChangeFlags>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean relaunchActivityLocked(com.android.server.am.HistoryRecord,int,boolean)>($r1, $i0, 1);

        $r1.<com.android.server.am.HistoryRecord: int configChangeFlags> = 0;

        goto label06;

     label09:
        $i0 = $r1.<com.android.server.am.HistoryRecord: int configChangeFlags>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean relaunchActivityLocked(com.android.server.am.HistoryRecord,int,boolean)>($r1, $i0, 0);

        $r1.<com.android.server.am.HistoryRecord: int configChangeFlags> = 0;

        goto label06;

     label10:
        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label12;

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r5 = $r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label12;

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r5 = $r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r10 = (android.os.IBinder) $r1;

     label11:
        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleActivityConfigurationChanged(android.os.IBinder)>(r10);

     label12:
        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void stopFreezingScreenLocked(boolean)>(0);

        return 1;

     label13:
        $r9 := @caughtexception;

        goto label12;

        catch android.os.RemoteException from label11 to label12 with label13;
    }

    private final int findActivityInHistoryLocked(com.android.server.am.HistoryRecord, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r5;
        int $i0, $i1, $i2;
        android.content.ComponentName $r2, $r7;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.android.server.am.TaskRecord $r6;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $i0 := @parameter1: int;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label1:
        if $i1 <= 0 goto label2;

        $i1 = $i1 + -1;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $r6 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i2 = $r6.<com.android.server.am.TaskRecord: int taskId>;

        if $i2 == $i0 goto label3;

     label2:
        return -1;

     label3:
        $r7 = $r5.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $r2 = $r1.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $z0 = virtualinvoke $r7.<android.content.ComponentName: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return $i1;
    }

    private com.android.server.am.HistoryRecord findActivityLocked(android.content.Intent, android.content.pm.ActivityInfo)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.Intent $r1;
        android.content.pm.ActivityInfo $r2;
        java.lang.String $r3, $r5;
        android.content.ComponentName $r4, $r9;
        java.util.ArrayList $r6;
        int $i0;
        java.lang.Object $r7;
        com.android.server.am.HistoryRecord $r8;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: android.content.pm.ActivityInfo;

        $r4 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r3 = $r2.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        if $r3 == null goto label1;

        $r4 = new android.content.ComponentName;

        $r5 = $r2.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r3 = $r2.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        specialinvoke $r4.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r5, $r3);

     label1:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label2:
        if $i0 < 0 goto label4;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (com.android.server.am.HistoryRecord) $r7;

        $z0 = $r8.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label3;

        $r1 = $r8.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r9 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke $r9.<android.content.ComponentName: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return $r8;

     label3:
        $i0 = $i0 + -1;

        goto label2;

     label4:
        return null;
    }

    private final int findAffinityTaskTopLocked(int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0, $r8;
        com.android.server.am.TaskRecord $r1, $r6, $r7;
        com.android.server.am.ActivityManagerService $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.android.server.am.HistoryRecord $r5;
        boolean $z0;

        $r2 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $r1 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r6 = $r1;

        $i1 = $i0 - 1;

     label1:
        if $i1 < 0 goto label3;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $r7 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r7 == $r6 goto label2;

        $r6 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r8 = $r6.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        $r3 = $r2.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i0 = $i0 + 1;

     label4:
        if $i0 >= $i1 goto label7;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $r6 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r6 == $r1 goto label6;

        $r8 = $r1.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label5;

        return $i0;

     label5:
        $r1 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

     label6:
        $i0 = $i0 + 1;

        goto label4;

     label7:
        $r3 = $r2.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = $i1 - 1;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $r1 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r8 = $r1.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label8;

        $i0 = $i1 - 1;

        return $i0;

     label8:
        return -1;
    }

    private com.android.server.am.ActivityManagerService$ServiceLookupResult findServiceLocked(android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.Intent $r1;
        java.lang.String $r2, $r13;
        android.content.Intent$FilterComparison $r3;
        android.content.ComponentName $r4;
        com.android.server.am.ServiceRecord $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        android.content.pm.IPackageManager $r8;
        android.content.pm.ResolveInfo $r9;
        android.content.pm.ServiceInfo $r10;
        com.android.server.am.ActivityManagerService$ServiceLookupResult $r11;
        android.content.pm.ApplicationInfo $r12;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r14;
        android.os.RemoteException $r15;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: java.lang.String;

        $r5 = null;

        $r4 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r4 == null goto label01;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r4 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r5 = (com.android.server.am.ServiceRecord) $r7;

     label01:
        if $r5 != null goto label02;

        $r3 = new android.content.Intent$FilterComparison;

        specialinvoke $r3.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r1);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServicesByIntent>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (com.android.server.am.ServiceRecord) $r7;

     label02:
        if $r5 != null goto label10;

     label03:
        $r8 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r9 = interfaceinvoke $r8.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int)>($r1, $r2, 0);

     label04:
        if $r9 == null goto label06;

        $r10 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

     label05:
        if $r10 != null goto label07;

        return null;

     label06:
        $r10 = null;

        goto label05;

     label07:
        $r4 = new android.content.ComponentName;

        $r12 = $r10.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r2 = $r12.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

     label08:
        $r13 = $r10.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r4.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r2, $r13);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

     label09:
        $r5 = (com.android.server.am.ServiceRecord) $r7;

     label10:
        if $r5 == null goto label14;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = $r5.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        $z0 = $r5.<com.android.server.am.ServiceRecord: boolean exported>;

        if $z0 == 0 goto label12;

        $i2 = -1;

     label11:
        $i2 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>($r2, $i0, $i1, $i2);

        if $i2 == 0 goto label13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r4 = $r5.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r2 = $r5.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        $r11 = new com.android.server.am.ActivityManagerService$ServiceLookupResult;

        $r2 = $r5.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        specialinvoke $r11.<com.android.server.am.ActivityManagerService$ServiceLookupResult: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ServiceRecord,java.lang.String)>($r0, null, $r2);

        return $r11;

     label12:
        $r12 = $r5.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i2 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        goto label11;

     label13:
        $r11 = new com.android.server.am.ActivityManagerService$ServiceLookupResult;

        specialinvoke $r11.<com.android.server.am.ActivityManagerService$ServiceLookupResult: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ServiceRecord,java.lang.String)>($r0, $r5, null);

        return $r11;

     label14:
        return null;

     label15:
        $r15 := @caughtexception;

        goto label10;

        catch android.os.RemoteException from label03 to label04 with label15;
        catch android.os.RemoteException from label08 to label09 with label15;
    }

    private final com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4;
        com.android.server.am.ServiceRecord $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r3 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.android.server.am.ServiceRecord) $r3;

        if $r5 != $r2 goto label1;

        return $r5;

     label1:
        return null;
    }

    private com.android.server.am.HistoryRecord findTaskLocked(android.content.Intent, android.content.pm.ActivityInfo)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.Intent $r1;
        android.content.pm.ActivityInfo $r2;
        android.content.ComponentName $r3, $r11;
        java.lang.String $r4, $r5;
        com.android.server.am.TaskRecord $r6, $r10;
        java.util.ArrayList $r7;
        int $i0, $i1;
        java.lang.Object $r8;
        com.android.server.am.HistoryRecord $r9;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: android.content.pm.ActivityInfo;

        $r3 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r4 = $r2.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        if $r4 == null goto label1;

        $r3 = new android.content.ComponentName;

        $r4 = $r2.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r5 = $r2.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        specialinvoke $r3.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

     label1:
        $r6 = null;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label2:
        if $i0 < 0 goto label6;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (com.android.server.am.HistoryRecord) $r8;

        $z0 = $r9.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label5;

        $r10 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r10 == $r6 goto label5;

        $i1 = $r9.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i1 == 3 goto label5;

        $r6 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r10 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r4 = $r10.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        if $r4 == null goto label3;

        $r10 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r4 = $r10.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $r5 = $r2.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        return $r9;

     label3:
        $r10 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r1 = $r10.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r1 == null goto label4;

        $r10 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r1 = $r10.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $r11 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke $r11.<android.content.ComponentName: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        return $r9;

     label4:
        $r10 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r1 = $r10.<com.android.server.am.TaskRecord: android.content.Intent affinityIntent>;

        if $r1 == null goto label5;

        $r10 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r1 = $r10.<com.android.server.am.TaskRecord: android.content.Intent affinityIntent>;

        $r11 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke $r11.<android.content.ComponentName: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        return $r9;

     label5:
        $i0 = $i0 + -1;

        goto label2;

     label6:
        return null;
    }

    private final boolean finishActivityLocked(com.android.server.am.HistoryRecord, int, int, android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r4;
        int $i0, $i1, $i2;
        android.content.Intent $r2;
        java.lang.String $r3, $r9;
        boolean $z0;
        java.lang.StringBuilder $r5, r18;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        com.android.server.am.TaskRecord $r8, $r12;
        java.util.ArrayList $r10;
        java.lang.Object $r11;
        android.content.pm.ActivityInfo $r13;
        android.content.pm.ApplicationInfo $r14;
        com.android.server.WindowManagerService $r15;
        byte $b3;
        com.android.server.am.ActivityManagerService$ActivityState $r16, $r17;
        android.os.IBinder r19;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.content.Intent;

        $r3 := @parameter4: java.lang.String;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 == 0 goto label01;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate finish request for ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r3);

        return 0;

     label01:
        $r1.<com.android.server.am.HistoryRecord: boolean finishing> = 1;

        $r6 = newarray (java.lang.Object)[4];

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[0] = $r7;

        $r8 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i2 = $r8.<com.android.server.am.TaskRecord: int taskId>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[1] = $r7;

        $r9 = $r1.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

        $r6[2] = $r9;

        $r6[3] = $r3;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30001, $r6);

        $r8 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i2 = $r8.<com.android.server.am.TaskRecord: int numActivities>;

        $i2 = $i2 - 1;

        $r8.<com.android.server.am.TaskRecord: int numActivities> = $i2;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean frontOfTask>;

        if $z0 == 0 goto label02;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i2 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $i2 = $i2 - 1;

        if $i1 >= $i2 goto label02;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i2 = $i1 + 1;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (com.android.server.am.HistoryRecord) $r11;

        $r8 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r12 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r8 != $r12 goto label02;

        $r4.<com.android.server.am.HistoryRecord: boolean frontOfTask> = 1;

     label02:
        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void pauseKeyDispatchingLocked()>();

        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mFocusedActivity>;

        if $r4 != $r1 goto label03;

        $r4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>(null);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.HistoryRecord)>($r4);

     label03:
        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo>;

        if $r4 == null goto label05;

        $r13 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r14 = $r13.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        if $i2 <= 0 goto label04;

        $r13 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r14 = $r13.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        $r3 = $r1.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.HistoryRecord)>($i2, $r3, $r2, $r1);

     label04:
        $r3 = $r1.<com.android.server.am.HistoryRecord: java.lang.String resultWho>;

        $i2 = $r1.<com.android.server.am.HistoryRecord: int requestCode>;

        virtualinvoke $r4.<com.android.server.am.HistoryRecord: void addResultLocked(com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)>($r1, $r3, $i2, $i0, $r2);

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo> = null;

     label05:
        $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList results> = null;

        $r1.<com.android.server.am.HistoryRecord: java.util.HashSet pendingResults> = null;

        $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents> = null;

        $r1.<com.android.server.am.HistoryRecord: android.os.Bundle icicle> = null;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label06;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mCancelledThumbnails>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label06:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r4 != $r1 goto label13;

        if $i1 <= 0 goto label07;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = $i1 - 1;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.android.server.am.HistoryRecord) $r11;

        $r8 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r12 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r8 == $r12 goto label11;

     label07:
        $z0 = 1;

     label08:
        $r15 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        if $z0 == 0 goto label12;

        $b3 = 9;

     label09:
        virtualinvoke $r15.<com.android.server.WindowManagerService: void prepareAppTransition(int)>($b3);

        $r15 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r19 = (android.os.IBinder) $r1;

        virtualinvoke $r15.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r19, 0);

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r1 != null goto label10;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startPausingLocked(boolean,boolean)>(0, 0);

     label10:
        return 0;

     label11:
        $z0 = 0;

        goto label08;

     label12:
        $b3 = 7;

        goto label09;

     label13:
        $r16 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r17 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState PAUSING>;

        if $r16 == $r17 goto label10;

        $r1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord finishCurrentActivityLocked(com.android.server.am.HistoryRecord,int,int)>($r1, $i1, 1);

        if $r1 != null goto label14;

        return 1;

     label14:
        return 0;
    }

    private final com.android.server.am.HistoryRecord finishCurrentActivityLocked(com.android.server.am.HistoryRecord, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        int $i0, $i1;
        android.os.IBinder r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $i0 := @parameter1: int;

        r2 = (android.os.IBinder) $r1;

        $i1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>(r2, 0);

        if $i1 >= 0 goto label1;

        return null;

     label1:
        $r1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord finishCurrentActivityLocked(com.android.server.am.HistoryRecord,int,int)>($r1, $i1, $i0);

        return $r1;
    }

    private final com.android.server.am.HistoryRecord finishCurrentActivityLocked(com.android.server.am.HistoryRecord, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r6;
        int $i0, $i1;
        com.android.server.am.ActivityManagerService$ActivityState $r2, $r7;
        boolean $z0;
        java.util.ArrayList $r3;
        android.os.Message $r4;
        android.os.Handler $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 != 2 goto label2;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean nowVisible>;

        if $z0 == 0 goto label2;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 3 goto label1;

        $r4 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r4.<android.os.Message: int what> = 11;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

     label1:
        $r2 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState STOPPING>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r2;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        return $r1;

     label2:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r6 != $r1 goto label3;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity> = null;

     label3:
        $r2 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r7 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState FINISHING>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r7;

        if $i1 == 0 goto label4;

        $r7 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState STOPPED>;

        if $r2 == $r7 goto label4;

        $r7 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState INITIALIZING>;

        if $r2 != $r7 goto label6;

     label4:
        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean destroyActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r1, 1);

        if $z0 == 0 goto label5;

        return null;

     label5:
        return $r1;

     label6:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mFinishingActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return $r1;
    }

    private final boolean finishReceiverLocked(android.os.IBinder, int, java.lang.String, android.os.Bundle, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1, $r7;
        int $i0, $i1;
        java.lang.String $r2;
        android.os.Bundle $r3;
        boolean $z0, $z1;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        com.android.server.am.BroadcastRecord $r6;
        android.content.Intent $r8;
        com.android.server.am.ProcessRecord $r9;
        com.android.server.am.BroadcastFilter $r10;
        com.android.server.am.ReceiverList $r11;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.os.Bundle;

        $z0 := @parameter4: boolean;

        $z1 := @parameter5: boolean;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label02;

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "finishReceiver called but no pending broadcasts");

     label01:
        return 0;

     label02:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = (com.android.server.am.BroadcastRecord) $r5;

        $r7 = $r6.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver>;

        if $r7 != null goto label04;

        if $z1 == 0 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "finishReceiver called but none active");

     label03:
        return 0;

     label04:
        $r7 = $r6.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver>;

        if $r7 == $r1 goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "finishReceiver called but active receiver is different");

        return 0;

     label05:
        $i1 = $r6.<com.android.server.am.BroadcastRecord: int state>;

        $r6.<com.android.server.am.BroadcastRecord: int state> = 0;

        if $i1 != 0 goto label06;

        if $z1 == 0 goto label06;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "finishReceiver called but state is IDLE");

     label06:
        $r6.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver> = null;

        $r8 = $r6.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        virtualinvoke $r8.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(null);

        $r9 = $r6.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        if $r9 == null goto label07;

        $r9 = $r6.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        $r9.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver> = null;

     label07:
        $r10 = $r6.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastFilter curFilter>;

        if $r10 == null goto label08;

        $r10 = $r6.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastFilter curFilter>;

        $r11 = $r10.<com.android.server.am.BroadcastFilter: com.android.server.am.ReceiverList receiverList>;

        $r11.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast> = null;

     label08:
        $r6.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastFilter curFilter> = null;

        $r6.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp> = null;

        $r6.<com.android.server.am.BroadcastRecord: android.content.ComponentName curComponent> = null;

        $r6.<com.android.server.am.BroadcastRecord: android.content.pm.ActivityInfo curReceiver> = null;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast> = null;

        $r6.<com.android.server.am.BroadcastRecord: int resultCode> = $i0;

        $r6.<com.android.server.am.BroadcastRecord: java.lang.String resultData> = $r2;

        $r6.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras> = $r3;

        $r6.<com.android.server.am.BroadcastRecord: boolean resultAbort> = $z0;

        if $i1 == 1 goto label09;

        if $i1 != 3 goto label10;

     label09:
        return 1;

     label10:
        return 0;
    }

    private final void finishTaskMove(int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return;
    }

    private final java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        java.util.List $r2;
        android.content.pm.IPackageManager $r3;
        java.lang.String $r4;
        android.content.pm.ApplicationInfo $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        android.content.pm.ProviderInfo $r7;
        java.util.HashMap $r8;
        com.android.server.am.ContentProviderRecord $r9;
        android.os.RemoteException $r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = null;

     label1:
        $r3 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

     label2:
        $r4 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r5 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

     label3:
        $i0 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>($r4, $i0, 3072);

     label4:
        if $r2 == null goto label7;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = 0;

     label5:
        if $i1 >= $i0 goto label9;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (android.content.pm.ProviderInfo) $r6;

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $r4 = $r7.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r6 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r9 = (com.android.server.am.ContentProviderRecord) $r6;

        if $r9 != null goto label6;

        $r9 = new com.android.server.am.ContentProviderRecord;

        $r5 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        specialinvoke $r9.<com.android.server.am.ContentProviderRecord: void <init>(android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo)>($r7, $r5);

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $r4 = $r7.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r9);

     label6:
        $r8 = $r1.<com.android.server.am.ProcessRecord: java.util.HashMap pubProviders>;

        $r4 = $r7.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r9);

        $r5 = $r7.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        virtualinvoke $r1.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label5;

     label7:
        return $r2;

     label8:
        $r10 := @caughtexception;

        goto label4;

     label9:
        return $r2;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
    }

    private android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord, int, java.lang.String, java.lang.String, java.lang.String, byte[])
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r7;
        byte[] $r5;
        android.app.ActivityManager$ProcessErrorStateInfo $r6;
        android.content.pm.ApplicationInfo $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: byte[];

        $r6 = new android.app.ActivityManager$ProcessErrorStateInfo;

        specialinvoke $r6.<android.app.ActivityManager$ProcessErrorStateInfo: void <init>()>();

        $r6.<android.app.ActivityManager$ProcessErrorStateInfo: int condition> = $i0;

        $r7 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String processName> = $r7;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $r6.<android.app.ActivityManager$ProcessErrorStateInfo: int pid> = $i0;

        $r8 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        $r6.<android.app.ActivityManager$ProcessErrorStateInfo: int uid> = $i0;

        $r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String tag> = $r2;

        $r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String shortMsg> = $r3;

        $r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String longMsg> = $r4;

        $r6.<android.app.ActivityManager$ProcessErrorStateInfo: byte[] crashData> = $r5;

        return $r6;
    }

    private com.android.server.am.HistoryRecord getCallingRecordLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        int $i0;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.am.HistoryRecord $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 1);

        if $i0 < 0 goto label1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        if $r4 == null goto label1;

        $r4 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo>;

        return $r4;

     label1:
        return null;
    }

    private java.util.HashMap getCommonServicesLocked()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.util.HashMap $r1;
        android.os.IBinder $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        if $r1 != null goto label1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs> = $r1;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("package", $r2);

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("window", $r2);

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("alarm");

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("alarm", $r2);

     label1:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        return $r1;
    }

    private android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1;
        android.app.IActivityManager$ContentProviderHolder $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread,java.lang.String)>(null, $r1);

        return $r2;
    }

    private final android.app.IActivityManager$ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        java.lang.String $r2, $r13, $r25, $r26;
        android.content.ComponentName $r3;
        android.content.pm.ProviderInfo $r4;
        com.android.server.am.ProcessRecord $r5, $r6;
        java.lang.SecurityException $r7;
        java.lang.StringBuilder $r8;
        int $i0, $i2;
        java.lang.Throwable $r9, $r21;
        java.util.HashMap $r10;
        java.lang.Object $r11;
        com.android.server.am.ContentProviderRecord $r12, $r16;
        android.app.IActivityManager$ContentProviderHolder $r14;
        boolean $z0, $z1;
        android.content.IContentProvider $r15;
        long $l1;
        java.util.HashSet $r17;
        android.content.pm.ApplicationInfo $r18, $r24;
        java.lang.Object[] $r19;
        java.lang.Integer $r20;
        android.content.pm.IPackageManager $r22;
        java.util.ArrayList $r23;
        java.lang.InterruptedException $r27;
        android.os.RemoteException $r28, $r29;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: java.lang.String;

        $r4 = null;

        entermonitor $r0;

        $r5 = null;

        if $r1 == null goto label04;

     label01:
        $r6 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        $r5 = $r6;

        if $r6 != null goto label04;

        $r7 = new java.lang.SecurityException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when getting content provider ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw $r7;

     label02:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label03:
        throw $r9;

     label04:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r12 = (com.android.server.am.ContentProviderRecord) $r11;

        if $r12 == null goto label22;

        $r4 = $r12.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r13 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord,int)>($r4, $r5, -1);

        if $r13 == null goto label08;

        $r14 = new android.app.IActivityManager$ContentProviderHolder;

        $r2 = $r4.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r2 == null goto label07;

        $r2 = $r4.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

     label05:
        specialinvoke $r14.<android.app.IActivityManager$ContentProviderHolder: void <init>(android.content.pm.ProviderInfo,java.lang.String)>($r4, $r2);

        exitmonitor $r0;

     label06:
        return $r14;

     label07:
        $r2 = $r4.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        goto label05;

     label08:
        if $r5 == null goto label11;

        $z0 = virtualinvoke $r12.<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>($r5);

        if $z0 == 0 goto label11;

        $r15 = $r12.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        if $r15 == null goto label09;

        $r16 = new com.android.server.am.ContentProviderRecord;

        specialinvoke $r16.<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ContentProviderRecord)>($r12);

        $r12 = $r16;

     label09:
        exitmonitor $r0;

     label10:
        return $r12;

     label11:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if $r5 == null goto label20;

        $r17 = $r5.<com.android.server.am.ProcessRecord: java.util.HashSet conProviders>;

        virtualinvoke $r17.<java.util.HashSet: boolean add(java.lang.Object)>($r12);

        $r17 = $r12.<com.android.server.am.ContentProviderRecord: java.util.HashSet clients>;

        virtualinvoke $r17.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

     label12:
        $r5 = $r12.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord app>;

        if $r5 == null goto label13;

        $r5 = $r12.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r5);

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

     label14:
        exitmonitor $r0;

     label15:
        entermonitor $r12;

     label16:
        $r15 = $r12.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        if $r15 != null goto label60;

        $r5 = $r12.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp>;

        if $r5 != null goto label57;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r18 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = $r18.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r18 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": launching app became null");

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        $r19 = newarray (java.lang.Object)[3];

        $r18 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = $r18.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r19[0] = $r13;

        $r18 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r19[1] = $r20;

        $r19[2] = $r2;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30036, $r19);

        exitmonitor $r12;

     label17:
        return null;

     label18:
        $r21 := @caughtexception;

        exitmonitor $r12;

     label19:
        throw $r21;

     label20:
        $i0 = $r12.<com.android.server.am.ContentProviderRecord: int externals>;

        $i0 = $i0 + 1;

        $r12.<com.android.server.am.ContentProviderRecord: int externals> = $i0;

     label21:
        goto label12;

     label22:
        $r22 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r4 = interfaceinvoke $r22.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>($r2, 2048);

     label23:
        if $r4 != null goto label26;

     label24:
        exitmonitor $r0;

     label25:
        return null;

     label26:
        $r13 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord,int)>($r4, $r5, -1);

        if $r13 == null goto label30;

        $r14 = new android.app.IActivityManager$ContentProviderHolder;

        $r2 = $r4.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r2 == null goto label29;

        $r2 = $r4.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

     label27:
        specialinvoke $r14.<android.app.IActivityManager$ContentProviderHolder: void <init>(android.content.pm.ProviderInfo,java.lang.String)>($r4, $r2);

        exitmonitor $r0;

     label28:
        return $r14;

     label29:
        $r2 = $r4.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        goto label27;

     label30:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $r13 = $r4.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        $r12 = (com.android.server.am.ContentProviderRecord) $r11;

     label31:
        if $r12 != null goto label40;

        $z0 = 1;

     label32:
        if $z0 == 0 goto label44;

     label33:
        $r22 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

     label34:
        $r18 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label35:
        $r13 = $r18.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r18 = interfaceinvoke $r22.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r13, 1024);

     label36:
        if $r18 != null goto label41;

     label37:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package info for content provider ");

        $r13 = $r4.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label38:
        exitmonitor $r0;

     label39:
        return null;

     label40:
        $z0 = 0;

        goto label32;

     label41:
        $r16 = new com.android.server.am.ContentProviderRecord;

     label42:
        specialinvoke $r16.<com.android.server.am.ContentProviderRecord: void <init>(android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo)>($r4, $r18);

     label43:
        $r12 = $r16;

     label44:
        if $r5 == null goto label47;

     label45:
        $z1 = virtualinvoke $r12.<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>($r5);

        if $z1 == 0 goto label47;

        exitmonitor $r0;

     label46:
        return $r12;

     label47:
        $r23 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i0 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label48:
        if $i2 >= $i0 goto label49;

        $r23 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r11 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        if $r11 != $r12 goto label51;

     label49:
        if $i2 < $i0 goto label53;

        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r13 = $r4.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $r18 = $r12.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r3 = new android.content.ComponentName;

        $r24 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r25 = $r24.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r26 = $r4.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r3.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r25, $r26);

        $r6 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName)>($r13, $r18, 0, 0, "content provider", $r3);

        if $r6 != null goto label52;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r18 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = $r18.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r18 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": process is bad");

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        exitmonitor $r0;

     label50:
        return null;

     label51:
        $i2 = $i2 + 1;

        goto label48;

     label52:
        $r12.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp> = $r6;

        $r23 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

     label53:
        if $z0 == 0 goto label54;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $r13 = $r4.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r12);

     label54:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r12);

        if $r5 == null goto label55;

        $r17 = $r5.<com.android.server.am.ProcessRecord: java.util.HashSet conProviders>;

        virtualinvoke $r17.<java.util.HashSet: boolean add(java.lang.Object)>($r12);

        $r17 = $r12.<com.android.server.am.ContentProviderRecord: java.util.HashSet clients>;

        virtualinvoke $r17.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        goto label14;

     label55:
        $i0 = $r12.<com.android.server.am.ContentProviderRecord: int externals>;

        $i0 = $i0 + 1;

        $r12.<com.android.server.am.ContentProviderRecord: int externals> = $i0;

     label56:
        goto label14;

     label57:
        virtualinvoke $r12.<java.lang.Object: void wait()>();

     label58:
        goto label16;

     label59:
        $r27 := @caughtexception;

        goto label16;

     label60:
        exitmonitor $r12;

     label61:
        return $r12;

     label62:
        $r28 := @caughtexception;

        goto label44;

     label63:
        $r29 := @caughtexception;

        goto label23;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label04 to label06 with label02;
        catch java.lang.Throwable from label07 to label10 with label02;
        catch java.lang.Throwable from label11 to label15 with label02;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label20 to label21 with label02;
        catch android.os.RemoteException from label22 to label23 with label63;
        catch java.lang.Throwable from label22 to label23 with label02;
        catch java.lang.Throwable from label24 to label25 with label02;
        catch java.lang.Throwable from label26 to label28 with label02;
        catch java.lang.Throwable from label29 to label31 with label02;
        catch android.os.RemoteException from label33 to label34 with label62;
        catch android.os.RemoteException from label35 to label36 with label62;
        catch android.os.RemoteException from label37 to label38 with label62;
        catch java.lang.Throwable from label33 to label38 with label02;
        catch java.lang.Throwable from label38 to label39 with label02;
        catch android.os.RemoteException from label42 to label43 with label62;
        catch java.lang.Throwable from label41 to label43 with label02;
        catch java.lang.Throwable from label45 to label46 with label02;
        catch java.lang.Throwable from label47 to label50 with label02;
        catch java.lang.Throwable from label51 to label56 with label02;
        catch java.lang.InterruptedException from label57 to label58 with label59;
        catch java.lang.Throwable from label57 to label58 with label18;
        catch java.lang.Throwable from label60 to label61 with label18;
    }

    private final int getLRURecordIndexForAppLocked(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        android.os.IBinder $r2, $r6;
        java.util.ArrayList $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        com.android.server.am.ProcessRecord $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 = interfaceinvoke $r1.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.ProcessRecord) $r4;

        $r1 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r1 == null goto label2;

        $r1 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r6 = interfaceinvoke $r1.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r6 != $r2 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private final com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.ProcessMap $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        android.util.SparseArray $r5;
        com.android.server.am.ProcessRecord $r6;

        $r1 := @this: com.android.server.am.ActivityManagerService;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $i0 != 1000 goto label2;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r3 = virtualinvoke $r2.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r5 = (android.util.SparseArray) $r4;

        if $r5 == null goto label1;

        $r4 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(0);

        $r6 = (com.android.server.am.ProcessRecord) $r4;

        return $r6;

     label1:
        return null;

     label2:
        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r4 = virtualinvoke $r2.<com.android.server.ProcessMap: java.lang.Object get(java.lang.String,int)>($r0, $i0);

        $r6 = (com.android.server.am.ProcessRecord) $r4;

        return $r6;
    }

    private final com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)
    {
        android.app.IApplicationThread $r0;
        com.android.server.am.ActivityManagerService $r1;
        int $i0;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.am.ProcessRecord $r4;

        $r1 := @this: com.android.server.am.ActivityManagerService;

        $r0 := @parameter0: android.app.IApplicationThread;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = specialinvoke $r1.<com.android.server.am.ActivityManagerService: int getLRURecordIndexForAppLocked(android.app.IApplicationThread)>($r0);

        if $i0 < 0 goto label2;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.ProcessRecord) $r3;

        return $r4;

     label2:
        return null;
    }

    private final java.util.List getStickies(java.lang.String, android.content.IntentFilter, java.util.List)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1;
        android.content.IntentFilter $r2;
        java.util.List $r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        java.util.ArrayList $r8, r10;
        int $i0, $i1, $i2;
        android.content.Intent $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.IntentFilter;

        $r3 := @parameter2: java.util.List;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mStickyBroadcasts>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r8 = (java.util.ArrayList) $r7;

        if $r8 != null goto label1;

        return $r3;

     label1:
        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r7 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r9 = (android.content.Intent) $r7;

        $i2 = virtualinvoke $r2.<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>($r5, $r9, 1, "ActivityManager");

        if $i2 < 0 goto label4;

        if $r3 != null goto label3;

        r10 = new java.util.ArrayList;

        $r3 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

     label3:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        return $r3;
    }

    private void grantUriPermissionFromIntentLocked(int, java.lang.String, android.content.Intent, com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1;
        java.lang.String $r1;
        android.content.Intent $r2;
        com.android.server.am.HistoryRecord $r3;
        android.net.Uri $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.Intent;

        $r3 := @parameter3: com.android.server.am.HistoryRecord;

        if $r2 != null goto label1;

        return;

     label1:
        $r4 = virtualinvoke $r2.<android.content.Intent: android.net.Uri getData()>();

        if $r4 == null goto label2;

        $i1 = virtualinvoke $r2.<android.content.Intent: int getFlags()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.HistoryRecord)>($i0, $r1, $r4, $i1, $r3);

        return;

     label2:
        return;
    }

    private void grantUriPermissionLocked(int, java.lang.String, android.net.Uri, int, com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r6, $r7;
        android.net.Uri $r2;
        com.android.server.am.HistoryRecord $r3;
        android.os.RemoteException $r4, $r19;
        android.content.pm.IPackageManager $r5;
        boolean $z0, $z1;
        android.content.pm.ProviderInfo $r8;
        java.util.HashMap $r9;
        java.lang.Object $r10;
        com.android.server.am.ContentProviderRecord $r11;
        java.lang.StringBuilder $r12;
        java.lang.SecurityException $r13;
        android.os.PatternMatcher[] $r14;
        android.os.PatternMatcher $r15;
        android.util.SparseArray $r16;
        com.android.server.am.UriPermission $r17;
        java.util.HashSet $r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.net.Uri;

        $i1 := @parameter3: int;

        $r3 := @parameter4: com.android.server.am.HistoryRecord;

        $i1 = $i1 & 3;

        if $i1 != 0 goto label01;

        return;

     label01:
        $r5 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r6 = "content";

        $r7 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label21;

        $r6 = virtualinvoke $r2.<android.net.Uri: java.lang.String getAuthority()>();

        $r8 = null;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r11 = (com.android.server.am.ContentProviderRecord) $r10;

        if $r11 == null goto label03;

        $r8 = $r11.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

     label02:
        if $r8 != null goto label05;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r1);

        return;

     label03:
        $r8 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>($r6, 2048);

     label04:
        goto label02;

     label05:
        $i2 = interfaceinvoke $r5.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String)>($r1);

     label06:
        if $i2 < 0 goto label22;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,int,int)>($r5, $r8, $i2, $i1);

        if $z0 != 0 goto label23;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean checkUriPermissionLocked(android.net.Uri,int,int)>($r2, $i2, $i1);

        if $z0 != 0 goto label24;

        $z0 = $r8.<android.content.pm.ProviderInfo: boolean grantUriPermissions>;

        if $z0 != 0 goto label08;

        $r13 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r1 = $r8.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = $r8.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not allow granting of Uri permissions (uri ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r13;

     label07:
        $r4 := @caughtexception;

        return;

     label08:
        $r14 = $r8.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        if $r14 == null goto label12;

        $r14 = $r8.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $i3 = lengthof $r14;

        $z0 = 0;

        $i4 = 0;

     label09:
        if $i4 >= $i3 goto label10;

        $r14 = $r8.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $r15 = $r14[$i4];

        if $r15 == null goto label11;

        $r14 = $r8.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $r15 = $r14[$i4];

        $r1 = virtualinvoke $r2.<android.net.Uri: java.lang.String getPath()>();

        $z1 = virtualinvoke $r15.<android.os.PatternMatcher: boolean match(java.lang.String)>($r1);

        if $z1 == 0 goto label11;

        $z0 = 1;

     label10:
        if $z0 != 0 goto label12;

        $r13 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r1 = $r8.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = $r8.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not allow granting of permission to path of Uri ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r13;

     label11:
        $i4 = $i4 + 1;

        goto label09;

     label12:
        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,int,int)>($r5, $r8, $i0, $i1);

        if $z0 != 0 goto label13;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean checkUriPermissionLocked(android.net.Uri,int,int)>($r2, $i0, $i1);

        if $z0 != 0 goto label13;

        $r13 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uid ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to uri ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r13;

     label13:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r10 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r9 = (java.util.HashMap) $r10;

        if $r9 != null goto label14;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r16.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r9);

     label14:
        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r17 = (com.android.server.am.UriPermission) $r10;

        if $r17 != null goto label15;

        $r17 = new com.android.server.am.UriPermission;

        specialinvoke $r17.<com.android.server.am.UriPermission: void <init>(int,android.net.Uri)>($i2, $r2);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r17);

     label15:
        $i0 = $r17.<com.android.server.am.UriPermission: int modeFlags>;

        $i0 = $i0 | $i1;

        $r17.<com.android.server.am.UriPermission: int modeFlags> = $i0;

        if $r3 != null goto label16;

        $i0 = $r17.<com.android.server.am.UriPermission: int globalModeFlags>;

        $i0 = $i0 | $i1;

        $r17.<com.android.server.am.UriPermission: int globalModeFlags> = $i0;

        return;

     label16:
        $i0 = $i1 & 1;

        if $i0 == 0 goto label18;

        $r18 = $r17.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        virtualinvoke $r18.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        $r18 = $r3.<com.android.server.am.HistoryRecord: java.util.HashSet readUriPermissions>;

        if $r18 != null goto label17;

        $r18 = new java.util.HashSet;

        specialinvoke $r18.<java.util.HashSet: void <init>()>();

        $r3.<com.android.server.am.HistoryRecord: java.util.HashSet readUriPermissions> = $r18;

     label17:
        $r18 = $r3.<com.android.server.am.HistoryRecord: java.util.HashSet readUriPermissions>;

        virtualinvoke $r18.<java.util.HashSet: boolean add(java.lang.Object)>($r17);

        return;

     label18:
        $i0 = $i1 & 2;

        if $i0 == 0 goto label25;

        $r18 = $r17.<com.android.server.am.UriPermission: java.util.HashSet writeActivities>;

        virtualinvoke $r18.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        $r18 = $r3.<com.android.server.am.HistoryRecord: java.util.HashSet writeUriPermissions>;

        if $r18 != null goto label19;

        $r18 = new java.util.HashSet;

        specialinvoke $r18.<java.util.HashSet: void <init>()>();

        $r3.<com.android.server.am.HistoryRecord: java.util.HashSet writeUriPermissions> = $r18;

     label19:
        $r18 = $r3.<com.android.server.am.HistoryRecord: java.util.HashSet writeUriPermissions>;

        virtualinvoke $r18.<java.util.HashSet: boolean add(java.lang.Object)>($r17);

        return;

     label20:
        $r19 := @caughtexception;

        goto label02;

     label21:
        return;

     label22:
        return;

     label23:
        return;

     label24:
        return;

     label25:
        return;

        catch android.os.RemoteException from label03 to label04 with label20;
        catch android.os.RemoteException from label05 to label06 with label07;
    }

    private final void handleAppDiedLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r5;
        boolean $z0, $z1, $z2;
        android.os.Bundle $r2, r13;
        java.util.ArrayList $r3;
        com.android.server.am.HistoryRecord $r4;
        int $i0;
        java.lang.Object $r6;
        com.android.server.WindowManagerService $r7;
        com.android.server.am.ActivityManagerService$ActivityState $r8;
        android.content.ComponentName $r9;
        java.lang.StringBuilder $r10, r12;
        java.lang.String $r11;
        android.os.IBinder r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,int)>($r1, $z0, -1);

        if $z0 != 0 goto label01;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

     label01:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r4 == null goto label02;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        $r5 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r5 != $r1 goto label02;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity> = null;

     label02:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mLastPausedActivity>;

        if $r4 == null goto label03;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mLastPausedActivity>;

        $r5 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r5 != $r1 goto label03;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mLastPausedActivity> = null;

     label03:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        staticinvoke <com.android.server.am.ActivityManagerService: void removeHistoryRecordsForAppLocked(java.util.ArrayList,com.android.server.am.ProcessRecord)>($r3, $r1);

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        staticinvoke <com.android.server.am.ActivityManagerService: void removeHistoryRecordsForAppLocked(java.util.ArrayList,com.android.server.am.ProcessRecord)>($r3, $r1);

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        staticinvoke <com.android.server.am.ActivityManagerService: void removeHistoryRecordsForAppLocked(java.util.ArrayList,com.android.server.am.ProcessRecord)>($r3, $r1);

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mFinishingActivities>;

        staticinvoke <com.android.server.am.ActivityManagerService: void removeHistoryRecordsForAppLocked(java.util.ArrayList,com.android.server.am.ProcessRecord)>($r3, $r1);

        $z1 = 0;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label04:
        if $i0 <= 0 goto label11;

        $i0 = $i0 + -1;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.HistoryRecord) $r6;

        $r5 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r5 != $r1 goto label08;

        $z2 = $r4.<com.android.server.am.HistoryRecord: boolean haveState>;

        if $z2 != 0 goto label05;

        $z2 = $r4.<com.android.server.am.HistoryRecord: boolean stateNotNeeded>;

        if $z2 == 0 goto label06;

     label05:
        $z2 = $r4.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z2 == 0 goto label09;

     label06:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $r4.<com.android.server.am.HistoryRecord: boolean inHistory> = 0;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r14 = (android.os.IBinder) $r4;

        virtualinvoke $r7.<com.android.server.WindowManagerService: void removeAppToken(android.os.IBinder)>(r14);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeActivityUriPermissionsLocked(com.android.server.am.HistoryRecord)>($r4);

     label07:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void cleanUpActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r4, 1);

        $r8 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState STOPPED>;

        $r4.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r8;

     label08:
        goto label04;

     label09:
        $z2 = $r4.<com.android.server.am.HistoryRecord: boolean visible>;

        if $z2 == 0 goto label10;

        $z1 = 1;

     label10:
        $r4.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app> = null;

        $r4.<com.android.server.am.HistoryRecord: boolean nowVisible> = 0;

        $z2 = $r4.<com.android.server.am.HistoryRecord: boolean haveState>;

        if $z2 != 0 goto label07;

        $r4.<com.android.server.am.HistoryRecord: android.os.Bundle icicle> = null;

        goto label07;

     label11:
        $r3 = $r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r9 = $r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r9 == null goto label12;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crash of app ");

        $r11 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" running instrumentation ");

        $r9 = $r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        r13 = new android.os.Bundle;

        $r2 = r13;

        specialinvoke r13.<android.os.Bundle: void <init>()>();

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", "Process crashed.");

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>($r1, 0, $r2);

     label12:
        if $z0 != 0 goto label13;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        if $z0 != 0 goto label14;

        if $z1 == 0 goto label15;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void ensureActivitiesVisibleLocked(com.android.server.am.HistoryRecord,int)>(null, 0);

        return;

     label13:
        return;

     label14:
        return;

     label15:
        return;
    }

    private final int indexOfTokenLocked(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        boolean $z0;
        com.android.server.am.ActivityManagerService$InvalidTokenException $r2;
        java.util.ArrayList $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        com.android.server.am.HistoryRecord $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = -1;

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label2;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        if $r4 != $r1 goto label3;

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $i1 = $i0;

     label2:
        if $i1 >= 0 goto label4;

        if $z0 == 0 goto label5;

        $r2 = new com.android.server.am.ActivityManagerService$InvalidTokenException;

        specialinvoke $r2.<com.android.server.am.ActivityManagerService$InvalidTokenException: void <init>(android.os.IBinder)>($r1);

        staticinvoke <com.android.internal.os.RuntimeInit: void crash(java.lang.String,java.lang.Throwable)>("ActivityManager", $r2);

        return $i1;

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        return $i1;

     label5:
        return $i1;
    }

    public static final void installSystemProviders()
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.ProcessMap $r1;
        java.lang.Object $r2;
        com.android.server.am.ProcessRecord $r3;
        java.util.List $r4;
        android.app.ActivityThread $r5;

        $r0 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r2 = virtualinvoke $r1.<com.android.server.ProcessMap: java.lang.Object get(java.lang.String,int)>("system", 1000);

        $r3 = (com.android.server.am.ProcessRecord) $r2;

        $r0 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)>($r3);

        $r5 = <com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        virtualinvoke $r5.<android.app.ActivityThread: void installSystemProviders(java.util.List)>($r4);

        return;
    }

    private boolean isNextTransitionForward()
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0;
        com.android.server.WindowManagerService $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $i0 = virtualinvoke $r1.<com.android.server.WindowManagerService: int getPendingAppTransition()>();

        if $i0 == 6 goto label1;

        if $i0 == 8 goto label1;

        if $i0 != 10 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private final void killServicesLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        boolean $z0, $z1;
        java.util.HashSet $r2;
        int $i0;
        java.util.Iterator $r3, $r12;
        java.lang.Object $r4;
        com.android.server.am.ConnectionRecord $r5;
        com.android.server.am.ServiceRecord $r6;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r7;
        com.android.internal.os.BatteryStatsImpl $r8;
        java.util.ArrayList $r9;
        java.util.HashMap $r10;
        java.util.Collection $r11;
        com.android.server.am.IntentBindRecord $r13;
        java.lang.Throwable $r14;
        java.lang.StringBuilder $r15;
        java.lang.String $r16;
        java.lang.Object[] $r17;
        java.lang.Integer $r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 := @parameter1: boolean;

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet connections>;

        $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label02;

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet connections>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.am.ConnectionRecord) $r4;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.HistoryRecord)>($r5, $r1, null);

        goto label01;

     label02:
        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet connections>;

        virtualinvoke $r2.<java.util.HashSet: void clear()>();

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        if $i0 == 0 goto label14;

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.am.ServiceRecord) $r4;

        $r7 = $r6.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r8 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor $r8;

     label04:
        $r7 = $r6.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopLaunchedLocked()>();

        exitmonitor $r8;

     label05:
        $r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        $r6.<com.android.server.am.ServiceRecord: int executeNesting> = 0;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>($r6);

        $r10 = $r6.<com.android.server.am.ServiceRecord: java.util.HashMap bindings>;

        $i0 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label10;

        $r10 = $r6.<com.android.server.am.ServiceRecord: java.util.HashMap bindings>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r4 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (com.android.server.am.IntentBindRecord) $r4;

        $r13.<com.android.server.am.IntentBindRecord: android.os.IBinder binder> = null;

        $r13.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        $r13.<com.android.server.am.IntentBindRecord: boolean received> = 0;

        $r13.<com.android.server.am.IntentBindRecord: boolean requested> = 0;

        goto label06;

     label07:
        $r14 := @caughtexception;

     label08:
        exitmonitor $r8;

     label09:
        throw $r14;

     label10:
        $i0 = $r6.<com.android.server.am.ServiceRecord: int crashCount>;

        if $i0 < 2 goto label11;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service crashed ");

        $i0 = $r6.<com.android.server.am.ServiceRecord: int crashCount>;

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times, stopping: ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r16);

        $r17 = newarray (java.lang.Object)[3];

        $i0 = $r6.<com.android.server.am.ServiceRecord: int crashCount>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r17[0] = $r18;

        $r16 = $r6.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r17[1] = $r16;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r17[2] = $r18;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30034, $r17);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>($r6, 1);

        goto label03;

     label11:
        if $z0 != 0 goto label12;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>($r6, 1);

        goto label03;

     label12:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleServiceRestartLocked(com.android.server.am.ServiceRecord)>($r6);

        goto label03;

     label13:
        if $z0 != 0 goto label14;

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        virtualinvoke $r2.<java.util.HashSet: void clear()>();

     label14:
        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet executingServices>;

        virtualinvoke $r2.<java.util.HashSet: void clear()>();

        return;

        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    private final void logBroadcastReceiverDiscard(com.android.server.am.BroadcastRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.BroadcastRecord $r1;
        int $i0;
        java.util.List $r2;
        java.lang.Object $r3;
        boolean $z0;
        com.android.server.am.BroadcastFilter $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        android.content.Intent $r7;
        java.lang.String $r8;
        android.content.pm.ResolveInfo $r9;
        java.lang.StringBuilder $r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.BroadcastRecord;

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        if $i0 <= 0 goto label2;

        $r2 = $r1.<com.android.server.am.BroadcastRecord: java.util.List receivers>;

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        $i0 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $z0 = $r3 instanceof com.android.server.am.BroadcastFilter;

        if $z0 == 0 goto label1;

        $r4 = (com.android.server.am.BroadcastFilter) $r3;

        $r5 = newarray (java.lang.Object)[4];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $r7 = $r1.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r8 = virtualinvoke $r7.<android.content.Intent: java.lang.String getAction()>();

        $r5[1] = $r8;

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        $i0 = $i0 - 1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[2] = $r6;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[3] = $r6;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30024, $r5);

        return;

     label1:
        $r5 = newarray (java.lang.Object)[4];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $r7 = $r1.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r8 = virtualinvoke $r7.<android.content.Intent: java.lang.String getAction()>();

        $r5[1] = $r8;

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        $i0 = $i0 - 1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[2] = $r6;

        $r9 = (android.content.pm.ResolveInfo) $r3;

        $r8 = virtualinvoke $r9.<android.content.pm.ResolveInfo: java.lang.String toString()>();

        $r5[3] = $r8;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30025, $r5);

        return;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Discarding broadcast before first receiver is invoked: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $r5 = newarray (java.lang.Object)[4];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $r7 = $r1.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r8 = virtualinvoke $r7.<android.content.Intent: java.lang.String getAction()>();

        $r5[1] = $r8;

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[2] = $r6;

        $r5[3] = "NONE";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30025, $r5);

        return;
    }

    private final void logStartActivity(int, com.android.server.am.HistoryRecord, com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1;
        com.android.server.am.HistoryRecord $r1;
        com.android.server.am.TaskRecord $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;
        android.content.Intent $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.android.server.am.HistoryRecord;

        $r2 := @parameter2: com.android.server.am.TaskRecord;

        $r3 = newarray (java.lang.Object)[7];

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[0] = $r4;

        $i1 = $r2.<com.android.server.am.TaskRecord: int taskId>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r4;

        $r5 = $r1.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

        $r3[2] = $r5;

        $r6 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r5 = virtualinvoke $r6.<android.content.Intent: java.lang.String getAction()>();

        $r3[3] = $r5;

        $r6 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r5 = virtualinvoke $r6.<android.content.Intent: java.lang.String getType()>();

        $r3[4] = $r5;

        $r6 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r5 = virtualinvoke $r6.<android.content.Intent: java.lang.String getDataString()>();

        $r3[5] = $r5;

        $r6 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $i1 = virtualinvoke $r6.<android.content.Intent: int getFlags()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[6] = $r4;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>($i0, $r3);

        return;
    }

    public static final android.content.Context main(int)
    {
        int $i0;
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ActivityManagerService$AThread $r1, r12;
        java.lang.InterruptedException $r2;
        android.app.ActivityThread $r3;
        android.app.ApplicationContext $r4;
        java.lang.Object $r5;
        android.os.PowerManager $r6;
        android.os.PowerManager$WakeLock $r7;
        com.android.server.am.BatteryStatsService $r8;
        com.android.server.am.UsageStatsService $r9;
        java.lang.Throwable $r10, $r11;
        android.content.Context r13;

        $i0 := @parameter0: int;

        r12 = new com.android.server.am.ActivityManagerService$AThread;

        $r1 = r12;

        specialinvoke r12.<com.android.server.am.ActivityManagerService$AThread: void <init>()>();

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        entermonitor $r1;

     label01:
        $r0 = $r1.<com.android.server.am.ActivityManagerService$AThread: com.android.server.am.ActivityManagerService mService>;

     label02:
        if $r0 != null goto label06;

     label03:
        virtualinvoke $r1.<java.lang.Object: void wait()>();

     label04:
        goto label01;

     label05:
        $r2 := @caughtexception;

        goto label01;

     label06:
        exitmonitor $r1;

     label07:
        $r0 = $r1.<com.android.server.am.ActivityManagerService$AThread: com.android.server.am.ActivityManagerService mService>;

        <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf> = $r0;

        $r3 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread systemMain()>();

        <com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread> = $r3;

        $r4 = virtualinvoke $r3.<android.app.ActivityThread: android.app.ApplicationContext getSystemContext()>();

        r13 = (android.content.Context) $r4;

        $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext> = r13;

        $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest> = $i0;

        r13 = (android.content.Context) $r4;

        $r5 = virtualinvoke r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r6 = (android.os.PowerManager) $r5;

        $r7 = virtualinvoke $r6.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ActivityManager-Sleep");

        $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mGoingToSleep> = $r7;

        $r7 = virtualinvoke $r6.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ActivityManager-Launch");

        $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity> = $r7;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $r8 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r13 = (android.content.Context) $r4;

        virtualinvoke $r8.<com.android.server.am.BatteryStatsService: void publish(android.content.Context)>(r13);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        r13 = (android.content.Context) $r4;

        virtualinvoke $r9.<com.android.server.am.UsageStatsService: void publish(android.content.Context)>(r13);

        entermonitor $r1;

     label08:
        $r1.<com.android.server.am.ActivityManagerService$AThread: boolean mReady> = 1;

        virtualinvoke $r1.<java.lang.Object: void notifyAll()>();

        exitmonitor $r1;

     label09:
        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, null, null, null);

        r13 = (android.content.Context) $r4;

        return r13;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor $r1;

     label12:
        throw $r10;

     label13:
        $r11 := @caughtexception;

     label14:
        exitmonitor $r1;

     label15:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private final com.android.server.am.HistoryRecord moveActivityToFrontLocked(int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        com.android.server.am.HistoryRecord $r3, $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $r3 = (com.android.server.am.HistoryRecord) $r2;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = $i1 - 1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.HistoryRecord) $r2;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r1.<java.util.ArrayList: void add(int,java.lang.Object)>($i1, $r3);

        $r4.<com.android.server.am.HistoryRecord: boolean frontOfTask> = 0;

        $r3.<com.android.server.am.HistoryRecord: boolean frontOfTask> = 1;

        return $r3;
    }

    private final void moveTaskBackwardsLocked(int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityManager", "moveTaskBackwards not yet implemented!");

        return;
    }

    private final boolean moveTaskToBackLocked(int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r1, $r9;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.app.IActivityWatcher $r4;
        com.android.server.am.HistoryRecord $r5, $r6;
        boolean $z0;
        android.os.RemoteException $r7;
        com.android.server.WindowManagerService $r8;
        java.lang.Object $r10;
        com.android.server.am.TaskRecord $r11;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveTaskToBack: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r3);

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

        if $r4 == null goto label5;

        $r5 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(android.os.IBinder,int)>(null, $i0);

        $r6 = $r5;

        if $r5 != null goto label1;

        $r6 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(android.os.IBinder,int)>(null, 0);

     label1:
        if $r6 == null goto label5;

        $z0 = 1;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

        $r3 = $r6.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

     label2:
        $z0 = interfaceinvoke $r4.<android.app.IActivityWatcher: boolean activityResuming(java.lang.String)>($r3);

     label3:
        if $z0 != 0 goto label5;

        return 0;

     label4:
        $r7 := @caughtexception;

        $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher> = null;

        goto label3;

     label5:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r8 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r8.<com.android.server.WindowManagerService: void prepareAppTransition(int)>(11);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $i2 = 0;

        $i3 = 0;

     label6:
        if $i3 >= $i1 goto label8;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (com.android.server.am.HistoryRecord) $r10;

        $r11 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i4 = $r11.<com.android.server.am.TaskRecord: int taskId>;

        if $i4 != $i0 goto label7;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>($i3);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r9.<java.util.ArrayList: void add(int,java.lang.Object)>($i2, $r5);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

     label7:
        $i3 = $i3 + 1;

        goto label6;

     label8:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r8.<com.android.server.WindowManagerService: void moveAppTokensToBottom(java.util.List)>($r1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void finishTaskMove(int)>($i0);

        return 1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private final void moveTaskToFrontLocked(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.TaskRecord $r1;
        java.util.ArrayList $r2, $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.android.server.am.HistoryRecord $r4;
        com.android.server.WindowManagerService $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.TaskRecord;

        $i0 = $r1.<com.android.server.am.TaskRecord: int taskId>;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

        if $i1 < 0 goto label5;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $r1 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i1 = $r1.<com.android.server.am.TaskRecord: int taskId>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r5 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r5.<com.android.server.WindowManagerService: void prepareAppTransition(int)>(10);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

        $i2 = $i1;

     label2:
        if $i2 < 0 goto label4;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $r1 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i3 = $r1.<com.android.server.am.TaskRecord: int taskId>;

        if $i3 != $i0 goto label3;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>($i2);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r6.<java.util.ArrayList: void add(int,java.lang.Object)>($i1, $r4);

        virtualinvoke $r2.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r4);

        $i1 = $i1 + -1;

        $r1 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void addRecentTask(com.android.server.am.TaskRecord)>($r1);

     label3:
        $i2 = $i2 + -1;

        goto label2;

     label4:
        $r5 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r5.<com.android.server.WindowManagerService: void moveAppTokensToTop(java.util.List)>($r2);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void finishTaskMove(int)>($i0);

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30002, $i0);

        return;

     label5:
        return;
    }

    private final com.android.server.am.HistoryRecord performClearTopTaskLocked(int, com.android.server.am.HistoryRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1, $i2;
        com.android.server.am.HistoryRecord $r1, $r4;
        boolean $z0, $z1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.am.TaskRecord $r5;
        android.content.ComponentName $r6, $r7;
        android.os.IBinder r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.android.server.am.HistoryRecord;

        $z0 := @parameter2: boolean;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label1:
        if $i1 <= 0 goto label7;

        $i1 = $i1 + -1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $z1 = $r4.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 != 0 goto label1;

        $r5 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i2 = $r5.<com.android.server.am.TaskRecord: int taskId>;

        if $i2 == $i0 goto label2;

        return null;

     label2:
        $r6 = $r4.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $r7 = $r1.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $z1 = virtualinvoke $r6.<android.content.ComponentName: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label1;

        if $z0 == 0 goto label4;

     label3:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

        if $i1 >= $i0 goto label4;

        $i1 = $i1 + 1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r1 = (com.android.server.am.HistoryRecord) $r3;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label3;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r1, $i1, 0, null, "clear");

        if $z0 == 0 goto label3;

        $i1 = $i1 + -1;

        goto label3;

     label4:
        $i0 = $r4.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 != 0 goto label6;

        $z0 = $r4.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label6;

        r8 = (android.os.IBinder) $r4;

        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>(r8, 0);

        if $i0 < 0 goto label5;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r4, 0, 0, null, "clear");

     label5:
        return null;

     label6:
        return $r4;

     label7:
        return null;
    }

    static void performReceive(com.android.server.am.ProcessRecord, android.app.IIntentReceiver, android.content.Intent, int, java.lang.String, android.os.Bundle, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ProcessRecord $r0;
        android.app.IIntentReceiver $r1;
        android.content.Intent $r2;
        int $i0;
        java.lang.String $r3;
        android.os.Bundle $r4;
        boolean $z0;
        android.app.IApplicationThread $r5;

        $r0 := @parameter0: com.android.server.am.ProcessRecord;

        $r1 := @parameter1: android.app.IIntentReceiver;

        $r2 := @parameter2: android.content.Intent;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: android.os.Bundle;

        $z0 := @parameter6: boolean;

        if $r0 == null goto label1;

        $r5 = $r0.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label1;

        $r5 = $r0.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleRegisteredReceiver(android.app.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean)>($r1, $r2, $i0, $r3, $r4, $z0);

        return;

     label1:
        interfaceinvoke $r1.<android.app.IIntentReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean)>($r2, $i0, $r3, $r4, $z0);

        return;
    }

    public static boolean prepareTraceFile(boolean)
    {
        boolean $z0, $z1;
        java.io.File $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("dalvik.vm.stack-trace-file", null);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z1 != 0 goto label3;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        $z1 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        $r0 = virtualinvoke $r0.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r1, 511, -1, -1);

        return $z0;

     label1:
        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        return 1;

     label2:
        if $z0 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing old ANR trace file from ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r1);

        $z0 = virtualinvoke $r0.<java.io.File: boolean delete()>();

        return $z0;

     label3:
        return 0;

     label4:
        return 0;

     label5:
        return 0;
    }

    private final void processCurBroadcastLocked(com.android.server.am.BroadcastRecord, com.android.server.am.ProcessRecord) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.BroadcastRecord $r1;
        com.android.server.am.ProcessRecord $r2;
        int $i0;
        java.lang.String $r3;
        android.os.Bundle $r4;
        boolean $z0;
        android.os.IBinder $r5;
        android.app.IApplicationThread $r6;
        android.os.RemoteException $r7;
        android.content.Intent $r8, $r10;
        android.content.ComponentName $r9;
        android.content.pm.ActivityInfo $r11;
        java.lang.Throwable $r12;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.BroadcastRecord;

        $r2 := @parameter1: com.android.server.am.ProcessRecord;

        $r6 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 != null goto label1;

        $r7 = new android.os.RemoteException;

        specialinvoke $r7.<android.os.RemoteException: void <init>()>();

        throw $r7;

     label1:
        $r6 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r5 = interfaceinvoke $r6.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r1.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver> = $r5;

        $r1.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp> = $r2;

        $r2.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver> = $r1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void updateLRUListLocked(com.android.server.am.ProcessRecord,boolean)>($r2, 1);

        $r8 = $r1.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r9 = $r1.<com.android.server.am.BroadcastRecord: android.content.ComponentName curComponent>;

        virtualinvoke $r8.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r9);

     label2:
        $r6 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r8 = new android.content.Intent;

        $r10 = $r1.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Intent)>($r10);

        $r11 = $r1.<com.android.server.am.BroadcastRecord: android.content.pm.ActivityInfo curReceiver>;

        $i0 = $r1.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r3 = $r1.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r4 = $r1.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z0 = $r1.<com.android.server.am.BroadcastRecord: boolean ordered>;

        interfaceinvoke $r6.<android.app.IApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,int,java.lang.String,android.os.Bundle,boolean)>($r8, $r11, $i0, $r3, $r4, $z0);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        $r1.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver> = null;

        $r1.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp> = null;

        $r2.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver> = null;

        throw $r12;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private final void processNextBroadcast(boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0, $z1;
        java.util.ArrayList $r1;
        int $i0, $i1, $i6;
        java.lang.Object $r2;
        com.android.server.am.BroadcastRecord $r3;
        java.util.List $r4;
        com.android.server.am.BroadcastFilter $r5;
        java.lang.StringBuilder $r6;
        com.android.server.am.ProcessRecord $r7;
        java.lang.String $r8, $r25, $r28;
        android.util.SparseArray $r9, $r10;
        java.lang.Throwable $r11, $r12;
        long $l2, $l3, $l5;
        byte $b4;
        android.content.Intent $r13, $r15;
        android.app.IIntentReceiver $r14;
        android.os.Bundle $r16;
        android.os.Handler $r17;
        android.os.Message $r18;
        android.os.IBinder $r19;
        android.os.RemoteException $r20, $r26, $r30;
        android.content.pm.ResolveInfo $r21;
        android.content.pm.ActivityInfo $r22;
        android.content.pm.IPackageManager $r23;
        android.content.pm.ApplicationInfo $r24;
        android.content.ComponentName $r27;
        android.app.IApplicationThread $r29;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 := @parameter0: boolean;

        entermonitor $r0;

     label01:
        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

        if $z0 == 0 goto label02;

        $r0.<com.android.server.am.ActivityManagerService: boolean mBroadcastsScheduled> = 0;

     label02:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label04;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r3 = (com.android.server.am.BroadcastRecord) $r2;

        $r4 = $r3.<com.android.server.am.BroadcastRecord: java.util.List receivers>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label02;

        $r4 = $r3.<com.android.server.am.BroadcastRecord: java.util.List receivers>;

        $r2 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.BroadcastFilter) $r2;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void deliverToRegisteredReceiver(com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean)>($r3, $r5, 0);

        $i1 = $i1 + 1;

        goto label03;

     label04:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if $r3 == null goto label17;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processNextBroadcast: waiting for ");

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        $r7 = $r3.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r9;

     label05:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        $r7 = $r3.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        $i0 = $r7.<com.android.server.am.ProcessRecord: int pid>;

        $r2 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        if $r2 != null goto label10;

        $z0 = 1;

     label06:
        exitmonitor $r9;

     label07:
        if $z0 != 0 goto label16;

     label08:
        exitmonitor $r0;

     label09:
        return;

     label10:
        $z0 = 0;

        goto label06;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor $r9;

     label13:
        throw $r11;

     label14:
        $r12 := @caughtexception;

        exitmonitor $r0;

     label15:
        throw $r12;

     label16:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pending app ");

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        $r7 = $r3.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" died before responding to broadcast");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast> = null;

     label17:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label19;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        exitmonitor $r0;

     label18:
        return;

     label19:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (com.android.server.am.BroadcastRecord) $r2;

        $z0 = 0;

        $r4 = $r3.<com.android.server.am.BroadcastRecord: java.util.List receivers>;

        if $r4 == null goto label23;

        $r4 = $r3.<com.android.server.am.BroadcastRecord: java.util.List receivers>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

     label20:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = $r3.<com.android.server.am.BroadcastRecord: long dispatchTime>;

        $b4 = $l3 cmp 0L;

        if $b4 <= 0 goto label21;

        if $i0 <= 0 goto label21;

        $l3 = $r3.<com.android.server.am.BroadcastRecord: long dispatchTime>;

        $i1 = $i0 * 20000;

        $l5 = (long) $i1;

        $l3 = $l3 + $l5;

        $b4 = $l2 cmp $l3;

        if $b4 <= 0 goto label21;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hung broadcast discarded after timeout failure: now=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dispatchTime=");

        $l2 = $r3.<com.android.server.am.BroadcastRecord: long dispatchTime>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startTime=");

        $l2 = $r3.<com.android.server.am.BroadcastRecord: long startTime>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" intent=");

        $r13 = $r3.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numReceivers=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nextReceiver=");

        $i1 = $r3.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        $i1 = $r3.<com.android.server.am.BroadcastRecord: int state>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void broadcastTimeout()>();

        $z0 = 1;

        $r3.<com.android.server.am.BroadcastRecord: int state> = 0;

     label21:
        $i1 = $r3.<com.android.server.am.BroadcastRecord: int state>;

        if $i1 == 0 goto label24;

        exitmonitor $r0;

     label22:
        return;

     label23:
        $i0 = 0;

        goto label20;

     label24:
        $r4 = $r3.<com.android.server.am.BroadcastRecord: java.util.List receivers>;

        if $r4 == null goto label25;

        $i1 = $r3.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        if $i1 >= $i0 goto label25;

        $z1 = $r3.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        if $z1 != 0 goto label25;

        if $z0 == 0 goto label32;

     label25:
        $r14 = $r3.<com.android.server.am.BroadcastRecord: android.app.IIntentReceiver resultTo>;

     label26:
        if $r14 == null goto label31;

     label27:
        $r7 = $r3.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord callerApp>;

        $r14 = $r3.<com.android.server.am.BroadcastRecord: android.app.IIntentReceiver resultTo>;

        $r13 = new android.content.Intent;

        $r15 = $r3.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

     label28:
        specialinvoke $r13.<android.content.Intent: void <init>(android.content.Intent)>($r15);

     label29:
        $i0 = $r3.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r8 = $r3.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

     label30:
        $r16 = $r3.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        staticinvoke <com.android.server.am.ActivityManagerService: void performReceive(com.android.server.am.ProcessRecord,android.app.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean)>($r7, $r14, $r13, $i0, $r8, $r16, 0);

     label31:
        $r17 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r17.<android.os.Handler: void removeMessages(int)>(8);

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r3 = null;

     label32:
        if $r3 == null goto label17;

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int nextReceiver>;

        $i1 = $i0 + 1;

        $r3.<com.android.server.am.BroadcastRecord: int nextReceiver> = $i1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3.<com.android.server.am.BroadcastRecord: long startTime> = $l2;

        if $i0 != 0 goto label33;

        $l2 = $r3.<com.android.server.am.BroadcastRecord: long startTime>;

        $r3.<com.android.server.am.BroadcastRecord: long dispatchTime> = $l2;

        $r17 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r18 = virtualinvoke $r17.<android.os.Handler: android.os.Message obtainMessage(int)>(8);

        $r17 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $l2 = $r3.<com.android.server.am.BroadcastRecord: long startTime>;

        $l2 = $l2 + 10000L;

        virtualinvoke $r17.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r18, $l2);

     label33:
        $r4 = $r3.<com.android.server.am.BroadcastRecord: java.util.List receivers>;

        $r2 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $z0 = $r2 instanceof com.android.server.am.BroadcastFilter;

        if $z0 == 0 goto label38;

        $r5 = (com.android.server.am.BroadcastFilter) $r2;

        $z0 = $r3.<com.android.server.am.BroadcastRecord: boolean ordered>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void deliverToRegisteredReceiver(com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean)>($r3, $r5, $z0);

        $r19 = $r3.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver>;

        if $r19 == null goto label34;

        $z0 = $r3.<com.android.server.am.BroadcastRecord: boolean ordered>;

        if $z0 != 0 goto label35;

     label34:
        $r3.<com.android.server.am.BroadcastRecord: int state> = 0;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

     label35:
        exitmonitor $r0;

     label36:
        return;

     label37:
        $r20 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending broadcast result of ");

        $r13 = $r3.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r8, $r20);

        goto label31;

     label38:
        $r21 = (android.content.pm.ResolveInfo) $r2;

        $z0 = 0;

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r22.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int callingPid>;

        $i1 = $r3.<com.android.server.am.BroadcastRecord: int callingUid>;

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $z1 = $r22.<android.content.pm.ComponentInfo: boolean exported>;

        if $z1 == 0 goto label50;

        $i6 = -1;

     label39:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>($r8, $i0, $i1, $i6);

        if $i0 == 0 goto label40;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: broadcasting ");

        $r13 = $r3.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r8 = virtualinvoke $r13.<android.content.Intent: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r8 = $r3.<com.android.server.am.BroadcastRecord: java.lang.String callerPackage>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int callingPid>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int callingUid>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r22.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to receiver ");

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r22.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r22.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $z0 = 1;

     label40:
        $i0 = $r3.<com.android.server.am.BroadcastRecord: int callingUid>;

        if $i0 == 1000 goto label47;

        $r8 = $r3.<com.android.server.am.BroadcastRecord: java.lang.String requiredPermission>;

     label41:
        if $r8 == null goto label47;

     label42:
        $r23 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

     label43:
        $r8 = $r3.<com.android.server.am.BroadcastRecord: java.lang.String requiredPermission>;

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r22.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label44:
        $r25 = $r24.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $i0 = interfaceinvoke $r23.<android.content.pm.IPackageManager: int checkPermission(java.lang.String,java.lang.String)>($r8, $r25);

     label45:
        if $i0 == 0 goto label47;

     label46:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: receiving ");

        $r13 = $r3.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r22.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = $r24.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r8 = $r3.<com.android.server.am.BroadcastRecord: java.lang.String requiredPermission>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to sender ");

        $r8 = $r3.<com.android.server.am.BroadcastRecord: java.lang.String callerPackage>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid ");

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int callingUid>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $z0 = 1;

     label47:
        $r7 = $r3.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        if $r7 == null goto label48;

        $r7 = $r3.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        $z1 = $r7.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z1 == 0 goto label48;

        $z0 = 1;

     label48:
        if $z0 == 0 goto label52;

        $r3.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver> = null;

        $r3.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastFilter curFilter> = null;

        $r3.<com.android.server.am.BroadcastRecord: int state> = 0;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

        exitmonitor $r0;

     label49:
        return;

     label50:
        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r22.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        goto label39;

     label51:
        $r26 := @caughtexception;

        $i0 = -1;

        goto label45;

     label52:
        $r3.<com.android.server.am.BroadcastRecord: int state> = 1;

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r22.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $r27 = new android.content.ComponentName;

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r22.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r25 = $r24.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r28 = $r22.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r27.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r25, $r28);

        $r3.<com.android.server.am.BroadcastRecord: android.content.ComponentName curComponent> = $r27;

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r3.<com.android.server.am.BroadcastRecord: android.content.pm.ActivityInfo curReceiver> = $r22;

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r22.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        $r7 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)>($r8, $i0);

        if $r7 == null goto label58;

        $r29 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label53:
        if $r29 == null goto label58;

     label54:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void processCurBroadcastLocked(com.android.server.am.BroadcastRecord,com.android.server.am.ProcessRecord)>($r3, $r7);

     label55:
        exitmonitor $r0;

     label56:
        return;

     label57:
        $r30 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when sending broadcast to ");

        $r27 = $r3.<com.android.server.am.BroadcastRecord: android.content.ComponentName curComponent>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r25 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r25, $r30);

     label58:
        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r22.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = $r3.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $i0 = virtualinvoke $r13.<android.content.Intent: int getFlags()>();

        $i0 = $i0 | 4;

        $r27 = $r3.<com.android.server.am.BroadcastRecord: android.content.ComponentName curComponent>;

        $r7 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName)>($r8, $r24, 1, $i0, "broadcast", $r27);

        $r3.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp> = $r7;

        if $r7 != null goto label60;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r22.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = $r24.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r22.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for broadcast ");

        $r13 = $r3.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": process is bad");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logBroadcastReceiverDiscard(com.android.server.am.BroadcastRecord)>($r3);

        $r19 = $r3.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver>;

        $i0 = $r3.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r8 = $r3.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r16 = $r3.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z0 = $r3.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,boolean)>($r19, $i0, $r8, $r16, $z0, 1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

        $r3.<com.android.server.am.BroadcastRecord: int state> = 0;

        exitmonitor $r0;

     label59:
        return;

     label60:
        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast> = $r3;

        exitmonitor $r0;

     label61:
        return;

        catch java.lang.Throwable from label01 to label05 with label14;
        catch java.lang.Throwable from label05 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label13 to label15 with label14;
        catch java.lang.Throwable from label16 to label18 with label14;
        catch java.lang.Throwable from label19 to label22 with label14;
        catch java.lang.Throwable from label23 to label26 with label14;
        catch android.os.RemoteException from label28 to label29 with label37;
        catch android.os.RemoteException from label30 to label31 with label37;
        catch java.lang.Throwable from label27 to label31 with label14;
        catch java.lang.Throwable from label31 to label36 with label14;
        catch java.lang.Throwable from label37 to label41 with label14;
        catch android.os.RemoteException from label42 to label43 with label51;
        catch android.os.RemoteException from label44 to label45 with label51;
        catch java.lang.Throwable from label42 to label45 with label14;
        catch java.lang.Throwable from label46 to label49 with label14;
        catch java.lang.Throwable from label50 to label53 with label14;
        catch android.os.RemoteException from label54 to label55 with label57;
        catch java.lang.Throwable from label54 to label55 with label14;
        catch java.lang.Throwable from label55 to label56 with label14;
        catch java.lang.Throwable from label57 to label59 with label14;
        catch java.lang.Throwable from label60 to label61 with label14;
    }

    private final void processStartTimedOutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r5;
        int $i0, $i1;
        boolean $z0;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        android.app.IApplicationThread $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        com.android.server.ProcessMap $r9;
        android.content.pm.ApplicationInfo $r10;
        com.android.server.am.BroadcastRecord $r11;
        java.lang.Throwable $r12;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $z0 = 0;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.ProcessRecord) $r4;

        if $r5 == null goto label2;

        $r6 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 != null goto label2;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>($i0);

        $z0 = 1;

     label2:
        exitmonitor $r2;

     label3:
        if $z0 == 0 goto label7;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed to attach");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r8 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r10 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r9.<com.android.server.ProcessMap: void remove(java.lang.String,int)>($r8, $i1);

        staticinvoke <android.os.Process: void killProcess(int)>($i0);

        $r11 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if $r11 == null goto label8;

        $r11 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        $r1 = $r11.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        $i1 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i1 != $i0 goto label9;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before broadcast acknowledged, skipping");

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast> = null;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

        return;

     label4:
        $r12 := @caughtexception;

     label5:
        exitmonitor $r2;

     label6:
        throw $r12;

     label7:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spurious process start timeout - pid not known for ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        return;

     label8:
        return;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private final boolean realStartActivityLocked(com.android.server.am.HistoryRecord, com.android.server.am.ProcessRecord, boolean, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r6;
        com.android.server.am.ProcessRecord $r2;
        boolean $z0, $z1, $z2;
        android.os.Bundle $r3;
        com.android.server.WindowManagerService $r4;
        android.content.res.Configuration $r5;
        java.util.ArrayList $r7, $r14;
        int $i0;
        android.app.IApplicationThread $r8;
        android.os.RemoteException $r9, r21;
        java.lang.StringBuilder $r10, r22;
        android.content.Intent $r11, $r18, r23;
        android.content.ComponentName $r12;
        java.lang.String $r13;
        java.lang.Object[] $r15;
        java.lang.Integer $r16;
        com.android.server.am.TaskRecord $r17;
        android.content.pm.ActivityInfo $r19;
        com.android.server.am.ActivityManagerService$ActivityState $r20;
        android.os.IBinder r24;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 := @parameter1: com.android.server.am.ProcessRecord;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>($r2, 0);

        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r24 = (android.os.IBinder) $r1;

        virtualinvoke $r4.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r24, 1);

        if $z1 == 0 goto label02;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $z1 = virtualinvoke $r1.<com.android.server.am.HistoryRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>($r2);

        if $z1 == 0 goto label06;

        $r6 = $r1;

     label01:
        r24 = (android.os.IBinder) $r6;

        $r5 = virtualinvoke $r4.<com.android.server.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>($r5, r24);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.HistoryRecord)>($r5, $r1);

     label02:
        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app> = $r2;

        $r7 = $r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int indexOf(java.lang.Object)>($r1);

        if $i0 >= 0 goto label03;

        $r7 = $r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label03:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void updateLRUListLocked(com.android.server.am.ProcessRecord,boolean)>($r2, 1);

        $r8 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 != null goto label07;

        r21 = new android.os.RemoteException;

        $r9 = r21;

     label04:
        specialinvoke r21.<android.os.RemoteException: void <init>()>();

        throw $r9;

     label05:
        $r9 := @caughtexception;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean launchFailed>;

        if $z0 == 0 goto label24;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Second failure launching ");

        $r11 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r12 = virtualinvoke $r11.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r13 = virtualinvoke $r12.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", giving up");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r13, $r9);

        $i0 = $r2.<com.android.server.am.ProcessRecord: int pid>;

        $r8 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>($r2, $i0, $r8);

        r24 = (android.os.IBinder) $r1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String)>(r24, 0, null, "2nd-crash");

        return 0;

     label06:
        $r6 = null;

        goto label01;

     label07:
        $r7 = null;

        $r14 = null;

        if $z0 == 0 goto label08;

        $r7 = $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        $r14 = $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents>;

     label08:
        if $z0 == 0 goto label14;

        $r15 = newarray (java.lang.Object)[3];

     label09:
        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label10:
        $r15[0] = $r16;

        $r17 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

     label11:
        $i0 = $r17.<com.android.server.am.TaskRecord: int taskId>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label12:
        $r15[1] = $r16;

        $r13 = $r1.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

     label13:
        $r15[2] = $r13;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30006, $r15);

     label14:
        $z1 = $r1.<com.android.server.am.HistoryRecord: boolean isHomeActivity>;

        if $z1 == 0 goto label15;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess> = $r2;

     label15:
        $r8 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r23 = new android.content.Intent;

        $r11 = r23;

     label16:
        $r18 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        specialinvoke r23.<android.content.Intent: void <init>(android.content.Intent)>($r18);

     label17:
        $r19 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r3 = $r1.<com.android.server.am.HistoryRecord: android.os.Bundle icicle>;

        if $z0 != 0 goto label23;

     label18:
        $z1 = 1;

     label19:
        $z2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean isNextTransitionForward()>();

        r24 = (android.os.IBinder) $r1;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,android.content.pm.ActivityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean)>($r11, r24, $r19, $r3, $r7, $r14, $z1, $z2);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void updateUsageStats(com.android.server.am.HistoryRecord,boolean)>($r1, 1);

     label20:
        $r1.<com.android.server.am.HistoryRecord: boolean launchFailed> = 0;

        $z1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateLRUListLocked(com.android.server.am.HistoryRecord)>($r1);

        if $z1 == 0 goto label21;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" being launched, but already in LRU list");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label21:
        if $z0 == 0 goto label25;

        $r20 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState RESUMED>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r20;

        $r1.<com.android.server.am.HistoryRecord: android.os.Bundle icicle> = null;

        $r1.<com.android.server.am.HistoryRecord: boolean haveState> = 0;

        $r1.<com.android.server.am.HistoryRecord: boolean stopped> = 0;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity> = $r1;

        $r17 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r17.<com.android.server.am.TaskRecord: void touchActiveTime()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void completeResumeLocked(com.android.server.am.HistoryRecord)>($r1);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void pauseIfSleepingLocked()>();

     label22:
        return 1;

     label23:
        $z1 = 0;

        goto label19;

     label24:
        $r7 = $r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        throw $r9;

     label25:
        $r20 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState STOPPED>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r20;

        $r1.<com.android.server.am.HistoryRecord: boolean stopped> = 1;

        goto label22;

        catch android.os.RemoteException from label04 to label05 with label05;
        catch android.os.RemoteException from label09 to label10 with label05;
        catch android.os.RemoteException from label11 to label12 with label05;
        catch android.os.RemoteException from label13 to label14 with label05;
        catch android.os.RemoteException from label16 to label17 with label05;
        catch android.os.RemoteException from label18 to label20 with label05;
    }

    private final void realStartServiceLocked(com.android.server.am.ServiceRecord, com.android.server.am.ProcessRecord) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        com.android.server.am.ProcessRecord $r2, $r11;
        android.app.IApplicationThread $r3;
        android.os.RemoteException $r4;
        long $l0;
        java.util.HashSet $r5;
        java.lang.Object[] $r6;
        int $i1;
        java.lang.Integer $r7;
        java.lang.String $r8;
        android.content.Intent$FilterComparison $r9;
        android.content.Intent $r10;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r12;
        com.android.internal.os.BatteryStatsImpl $r13;
        android.content.pm.ServiceInfo $r14;
        java.lang.Throwable $r15, $r16;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 := @parameter1: com.android.server.am.ProcessRecord;

        $r3 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 != null goto label01;

        $r4 = new android.os.RemoteException;

        specialinvoke $r4.<android.os.RemoteException: void <init>()>();

        throw $r4;

     label01:
        $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = $r2;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1.<com.android.server.am.ServiceRecord: long lastActivity> = $l0;

        $r1.<com.android.server.am.ServiceRecord: long restartTime> = $l0;

        $r5 = $r2.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord)>($r1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void updateLRUListLocked(com.android.server.am.ProcessRecord,boolean)>($r2, 1);

     label02:
        $r6 = newarray (java.lang.Object)[4];

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[0] = $r7;

        $r8 = $r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r6[1] = $r8;

        $r9 = $r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r10 = virtualinvoke $r9.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r8 = virtualinvoke $r10.<android.content.Intent: java.lang.String toString()>();

        $r6[2] = $r8;

        $r11 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r11.<com.android.server.am.ProcessRecord: int pid>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[3] = $r7;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30030, $r6);

        $r12 = $r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r13 = virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor $r13;

     label03:
        $r12 = $r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startLaunchedLocked()>();

        exitmonitor $r13;

     label04:
        $r3 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r14 = $r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        interfaceinvoke $r3.<android.app.IApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo)>($r1, $r14);

     label05:
        goto label06;

     label06:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void requestServiceBindingsLocked(com.android.server.am.ServiceRecord)>($r1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean)>($r1, 1);

        return;

     label07:
        $r15 := @caughtexception;

     label08:
        exitmonitor $r13;

     label09:
        throw $r15;

     label10:
        $r16 := @caughtexception;

        $r5 = $r2.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        virtualinvoke $r5.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleServiceRestartLocked(com.android.server.am.ServiceRecord)>($r1);

        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    private final boolean relaunchActivityLocked(com.android.server.am.HistoryRecord, int, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        int $i0, $i2;
        boolean $z0, $z1;
        java.util.ArrayList $r2, $r3;
        short $s1;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        com.android.server.am.TaskRecord $r6;
        java.lang.String $r7;
        com.android.server.am.ProcessRecord $r8;
        android.app.IApplicationThread $r9;
        android.os.RemoteException $r10;
        android.os.IBinder r11;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = null;

        $r3 = null;

        if $z0 == 0 goto label1;

        $r2 = $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        $r3 = $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents>;

     label1:
        if $z0 == 0 goto label7;

        $s1 = 30019;

     label2:
        $r4 = newarray (java.lang.Object)[3];

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[0] = $r5;

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i2 = $r6.<com.android.server.am.TaskRecord: int taskId>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[1] = $r5;

        $r7 = $r1.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

        $r4[2] = $r7;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>($s1, $r4);

        $r8 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>($r8, 0);

        $r8 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $z0 != 0 goto label8;

        $z1 = 1;

     label3:
        r11 = (android.os.IBinder) $r1;

     label4:
        interfaceinvoke $r9.<android.app.IApplicationThread: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean)>(r11, $r2, $r3, $i0, $z1);

     label5:
        if $z0 == 0 goto label6;

        $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList results> = null;

        $r1.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents> = null;

     label6:
        return 1;

     label7:
        $s1 = 30020;

        goto label2;

     label8:
        $z1 = 0;

        goto label3;

     label9:
        $r10 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label4 to label5 with label9;
    }

    private final void removeActivityFromHistoryLocked(com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        com.android.server.am.ActivityManagerService$ActivityState $r2, $r3;
        java.util.ArrayList $r4;
        com.android.server.WindowManagerService $r5;
        android.os.IBinder r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r3 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r2 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState DESTROYED>;

        if $r3 == $r2 goto label1;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r1.<com.android.server.am.HistoryRecord: boolean inHistory> = 0;

        $r2 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState DESTROYED>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r2;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r6 = (android.os.IBinder) $r1;

        virtualinvoke $r5.<com.android.server.WindowManagerService: void removeAppToken(android.os.IBinder)>(r6);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void cleanUpActivityServicesLocked(com.android.server.am.HistoryRecord)>($r1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeActivityUriPermissionsLocked(com.android.server.am.HistoryRecord)>($r1);

        return;

     label1:
        return;
    }

    private void removeActivityUriPermissionsLocked(com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.server.am.UriPermission $r5;
        int $i0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 = $r1.<com.android.server.am.HistoryRecord: java.util.HashSet readUriPermissions>;

        if $r2 == null goto label2;

        $r2 = $r1.<com.android.server.am.HistoryRecord: java.util.HashSet readUriPermissions>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.am.UriPermission) $r4;

        $r2 = $r5.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        $r2 = $r5.<com.android.server.am.UriPermission: java.util.HashSet readActivities>;

        $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label1;

        $i0 = $r5.<com.android.server.am.UriPermission: int globalModeFlags>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label1;

        $i0 = $r5.<com.android.server.am.UriPermission: int modeFlags>;

        $i0 = $i0 & -2;

        $r5.<com.android.server.am.UriPermission: int modeFlags> = $i0;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>($r5);

        goto label1;

     label2:
        $r2 = $r1.<com.android.server.am.HistoryRecord: java.util.HashSet writeUriPermissions>;

        if $r2 == null goto label4;

        $r2 = $r1.<com.android.server.am.HistoryRecord: java.util.HashSet writeUriPermissions>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.am.UriPermission) $r4;

        $r2 = $r5.<com.android.server.am.UriPermission: java.util.HashSet writeActivities>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        $r2 = $r5.<com.android.server.am.UriPermission: java.util.HashSet writeActivities>;

        $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label3;

        $i0 = $r5.<com.android.server.am.UriPermission: int globalModeFlags>;

        $i0 = $i0 & 2;

        if $i0 != 0 goto label3;

        $i0 = $r5.<com.android.server.am.UriPermission: int modeFlags>;

        $i0 = $i0 & -3;

        $r5.<com.android.server.am.UriPermission: int modeFlags> = $i0;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>($r5);

        goto label3;

     label4:
        return;

     label5:
        return;
    }

    private void removeConnectionLocked(com.android.server.am.ConnectionRecord, com.android.server.am.ProcessRecord, com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ConnectionRecord $r1;
        com.android.server.am.ProcessRecord $r2, $r11;
        com.android.server.am.HistoryRecord $r3, $r10;
        com.android.server.am.AppBindRecord $r4;
        com.android.server.am.ServiceRecord $r5;
        android.app.IServiceConnection $r6;
        android.os.IBinder $r7;
        java.util.HashMap $r8;
        java.util.HashSet $r9;
        int $i0;
        com.android.server.am.IntentBindRecord $r12;
        android.app.IApplicationThread $r13;
        boolean $z0;
        android.content.Intent$FilterComparison $r14;
        android.content.Intent $r15;
        java.lang.Exception $r16;
        java.lang.StringBuilder $r17;
        java.lang.String $r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ConnectionRecord;

        $r2 := @parameter1: com.android.server.am.ProcessRecord;

        $r3 := @parameter2: com.android.server.am.HistoryRecord;

        $r6 = $r1.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r7 = interfaceinvoke $r6.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r4 = $r1.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r5 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r8 = $r5.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r7);

        $r9 = $r4.<com.android.server.am.AppBindRecord: java.util.HashSet connections>;

        virtualinvoke $r9.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        $r10 = $r1.<com.android.server.am.ConnectionRecord: com.android.server.am.HistoryRecord activity>;

        if $r10 == null goto label1;

        $r10 = $r1.<com.android.server.am.ConnectionRecord: com.android.server.am.HistoryRecord activity>;

        if $r10 == $r3 goto label1;

        $r3 = $r1.<com.android.server.am.ConnectionRecord: com.android.server.am.HistoryRecord activity>;

        $r9 = $r3.<com.android.server.am.HistoryRecord: java.util.HashSet connections>;

        if $r9 == null goto label1;

        $r3 = $r1.<com.android.server.am.ConnectionRecord: com.android.server.am.HistoryRecord activity>;

        $r9 = $r3.<com.android.server.am.HistoryRecord: java.util.HashSet connections>;

        virtualinvoke $r9.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

     label1:
        $r11 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r11 == $r2 goto label2;

        $r2 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r9 = $r2.<com.android.server.am.ProcessRecord: java.util.HashSet connections>;

        virtualinvoke $r9.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

     label2:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServiceConnections>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r7);

        $r9 = $r4.<com.android.server.am.AppBindRecord: java.util.HashSet connections>;

        $i0 = virtualinvoke $r9.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label3;

        $r12 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r8 = $r12.<com.android.server.am.IntentBindRecord: java.util.HashMap apps>;

        $r2 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

     label3:
        $r2 = $r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label5;

        $r2 = $r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 == null goto label5;

        $r12 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r8 = $r12.<com.android.server.am.IntentBindRecord: java.util.HashMap apps>;

        $i0 = virtualinvoke $r8.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label5;

        $r12 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z0 = $r12.<com.android.server.am.IntentBindRecord: boolean hasBound>;

        if $z0 == 0 goto label5;

     label4:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord)>($r5);

        $r2 = $r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r2);

        $r12 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r12.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        $r12 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r12.<com.android.server.am.IntentBindRecord: boolean doRebind> = 0;

        $r2 = $r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r12 = $r4.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r14 = $r12.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r15 = virtualinvoke $r14.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        interfaceinvoke $r13.<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>($r5, $r15);

     label5:
        $i0 = $r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label7;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>($r5, 0);

        return;

     label6:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when unbinding service ");

        $r18 = $r5.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r18, $r16);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean)>($r5, 1);

        goto label5;

     label7:
        return;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    private void removeContentProviderExternal(java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.server.am.ContentProviderRecord $r4;
        android.content.pm.ProviderInfo $r5;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.server.am.ContentProviderRecord) $r3;

        if $r4 != null goto label3;

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $r5 = $r4.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r1 = $r5.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.server.am.ContentProviderRecord) $r3;

        $i0 = $r4.<com.android.server.am.ContentProviderRecord: int externals>;

        $i0 = $i0 - 1;

        $r4.<com.android.server.am.ContentProviderRecord: int externals> = $i0;

        $i0 = $r4.<com.android.server.am.ContentProviderRecord: int externals>;

        if $i0 >= 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Externals < 0 for content provider ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityManager", $r1);

     label4:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        exitmonitor $r0;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private final void removeDyingProviderLocked(com.android.server.am.ProcessRecord, com.android.server.am.ContentProviderRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r11;
        com.android.server.am.ContentProviderRecord $r2;
        java.util.HashMap $r3;
        android.content.pm.ProviderInfo $r4;
        java.lang.String $r5;
        java.lang.String[] $r6;
        int $i0, $i1;
        java.lang.Throwable $r7;
        java.util.HashSet $r8;
        java.util.Iterator $r9;
        boolean $z0;
        java.lang.Object $r10;
        android.app.IApplicationThread $r12;
        java.lang.StringBuilder $r13;
        java.util.ArrayList $r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        entermonitor $r2;

     label1:
        $r2.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp> = null;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor $r2;

     label2:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $r4 = $r2.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r5 = $r4.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

        $r4 = $r2.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r5 = $r4.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i0 = 0;

     label3:
        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label7;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $r5 = $r6[$i0];

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor $r2;

     label6:
        throw $r7;

     label7:
        $r8 = $r2.<com.android.server.am.ContentProviderRecord: java.util.HashSet clients>;

        $r9 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label8:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.android.server.am.ProcessRecord) $r10;

        $z0 = $r11.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label8;

        $r12 = $r11.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 == null goto label8;

        $i0 = $r11.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 == 0 goto label8;

        $i0 = $r11.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i0 == $i1 goto label8;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing app ");

        $r5 = $r11.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $i0 = $r11.<com.android.server.am.ProcessRecord: int pid>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") because provider ");

        $r4 = $r2.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r5 = $r4.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is in dying process ");

        $r5 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r5);

        $i0 = $r11.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcess(int)>($i0);

        goto label8;

     label9:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r14.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private static void removeHistoryRecordsForAppLocked(java.util.ArrayList, com.android.server.am.ProcessRecord)
    {
        java.util.ArrayList $r0;
        com.android.server.am.ProcessRecord $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        com.android.server.am.HistoryRecord $r4;

        $r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: com.android.server.am.ProcessRecord;

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

     label1:
        if $i0 <= 0 goto label2;

        $i0 = $i0 + -1;

        $r3 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $r2 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r2 != $r1 goto label1;

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        goto label1;

     label2:
        return;
    }

    private final boolean removeProcessLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r5;
        int $i0, $i1;
        android.content.pm.ApplicationInfo $r3;
        java.lang.StringBuilder $r4;
        com.android.server.ProcessMap $r6;
        android.util.SparseArray $r7, $r8;
        android.os.Handler $r9;
        java.util.ArrayList $r10;
        java.lang.Throwable $r11;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 := @parameter1: boolean;

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force removing process ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r5);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        virtualinvoke $r6.<com.android.server.ProcessMap: void remove(java.lang.String,int)>($r2, $i0);

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 <= 0 goto label7;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i0 == $i1 goto label7;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r7;

     label1:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        virtualinvoke $r8.<android.util.SparseArray: void remove(int)>($i0);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: void removeMessages(int,java.lang.Object)>(20, $r1);

        exitmonitor $r7;

     label2:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean)>($r1, 1);

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        virtualinvoke $r10.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        staticinvoke <android.os.Process: void killProcess(int)>($i0);

        $z1 = $r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label8;

        if $z0 != 0 goto label6;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo)>($r3);

        return 0;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor $r7;

     label5:
        throw $r11;

     label6:
        return 1;

     label7:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return 0;

     label8:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.UriPermission $r1;
        int $i0;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4;
        android.net.Uri $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.UriPermission;

        $i0 = $r1.<com.android.server.am.UriPermission: int modeFlags>;

        $i0 = $i0 & 3;

        if $i0 != 0 goto label1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i0 = $r1.<com.android.server.am.UriPermission: int uid>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r4 = (java.util.HashMap) $r3;

        if $r4 == null goto label2;

        $r5 = $r1.<com.android.server.am.UriPermission: android.net.Uri uri>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label3;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i0 = $r1.<com.android.server.am.UriPermission: int uid>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>($i0);

        return;

     label1:
        return;

     label2:
        return;

     label3:
        return;
    }

    private void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher, android.content.ComponentName, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IInstrumentationWatcher $r1;
        android.content.ComponentName $r2;
        java.lang.String $r3;
        android.os.Bundle $r4;
        android.os.RemoteException $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IInstrumentationWatcher;

        $r2 := @parameter1: android.content.ComponentName;

        $r3 := @parameter2: java.lang.String;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r3);

        if $r1 == null goto label4;

        $r4 = new android.os.Bundle;

     label1:
        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("id", "ActivityManagerService");

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("Error", $r3);

        interfaceinvoke $r1.<android.app.IInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>($r2, -1, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ActivityManager", $r5);

        return;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private final boolean requestFinishActivityLocked(android.os.IBinder, int, android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        int $i0, $i1, $i2;
        android.content.Intent $r2, $r8;
        java.lang.String $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        com.android.server.am.HistoryRecord $r6, $r7;
        boolean $z0, $z1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.Intent;

        $r3 := @parameter3: java.lang.String;

        $i1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i1 >= 0 goto label1;

        return 0;

     label1:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r6 = (com.android.server.am.HistoryRecord) $r5;

        $z0 = 1;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i2 = $i2 - 1;

     label2:
        if $i2 < 0 goto label3;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (com.android.server.am.HistoryRecord) $r5;

        $z1 = $r7.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 != 0 goto label4;

        if $r7 == $r6 goto label4;

        $z0 = 0;

     label3:
        if $z0 == 0 goto label5;

        $r8 = $r6.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $z0 = virtualinvoke $r8.<android.content.Intent: boolean hasCategory(java.lang.String)>("android.intent.category.HOME");

        if $z0 == 0 goto label5;

        return 0;

     label4:
        $i2 = $i2 + -1;

        goto label2;

     label5:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r6, $i1, $i0, $r2, $r3);

        return 1;
    }

    private final boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord, com.android.server.am.IntentBindRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        com.android.server.am.IntentBindRecord $r2;
        boolean $z0, $z1;
        com.android.server.am.ProcessRecord $r3;
        android.app.IApplicationThread $r4;
        java.util.HashMap $r5;
        int $i0;
        android.content.Intent$FilterComparison $r6;
        android.content.Intent $r7;
        android.os.RemoteException $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 := @parameter1: com.android.server.am.IntentBindRecord;

        $z0 := @parameter2: boolean;

        $r3 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r3 == null goto label01;

        $r3 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r4 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r4 != null goto label02;

     label01:
        return 0;

     label02:
        $z1 = $r2.<com.android.server.am.IntentBindRecord: boolean requested>;

        if $z1 == 0 goto label03;

        if $z0 == 0 goto label09;

     label03:
        $r5 = $r2.<com.android.server.am.IntentBindRecord: java.util.HashMap apps>;

        $i0 = virtualinvoke $r5.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label09;

     label04:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord)>($r1);

     label05:
        $r3 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r4 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label06:
        $r6 = $r2.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r7 = virtualinvoke $r6.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        interfaceinvoke $r4.<android.app.IApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean)>($r1, $r7, $z0);

     label07:
        if $z0 != 0 goto label08;

        $r2.<com.android.server.am.IntentBindRecord: boolean requested> = 1;

     label08:
        $r2.<com.android.server.am.IntentBindRecord: boolean hasBound> = 1;

        $r2.<com.android.server.am.IntentBindRecord: boolean doRebind> = 0;

     label09:
        return 1;

     label10:
        $r8 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label04 to label05 with label10;
        catch android.os.RemoteException from label06 to label07 with label10;
    }

    private final void requestServiceBindingsLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.android.server.am.IntentBindRecord $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.HashMap bindings>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.am.IntentBindRecord) $r5;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean)>($r1, $r6, 0);

        if $z0 != 0 goto label1;

        return;

     label2:
        return;
    }

    private final com.android.server.am.HistoryRecord resetTaskIfNeededLocked(com.android.server.am.HistoryRecord, com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r2, $r5, $r10;
        android.content.pm.ActivityInfo $r3, $r14;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.am.TaskRecord $r4, $r8, r17;
        long $l1;
        byte $b2;
        java.util.ArrayList $r6;
        java.lang.Object $r7;
        android.content.Intent $r9;
        java.lang.String $r11, $r12;
        com.android.server.WindowManagerService $r13;
        android.content.ComponentName $r15, $r16;
        android.os.IBinder r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 := @parameter1: com.android.server.am.HistoryRecord;

        $r3 = $r2.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i0 = $r3.<android.content.pm.ActivityInfo: int flags>;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label06;

        $z0 = 1;

     label01:
        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $l1 = virtualinvoke $r4.<com.android.server.am.TaskRecord: long getInactiveDuration()>();

        $b2 = $l1 cmp 1800000L;

        if $b2 <= 0 goto label02;

        $r3 = $r2.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i0 = $r3.<android.content.pm.ActivityInfo: int flags>;

        $i0 = $i0 & 8;

        if $i0 != 0 goto label02;

        $z0 = 1;

     label02:
        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r5 = null;

        $i3 = 0;

        $i0 = -1;

        $i4 = -1;

        $i5 = -1;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i6 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i6 = $i6 - 1;

     label03:
        if $i6 < -1 goto label62;

        if $i6 < 0 goto label07;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        $r2 = (com.android.server.am.HistoryRecord) $r7;

     label04:
        if $r2 == null goto label08;

        $z1 = $r2.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 == 0 goto label08;

     label05:
        $i6 = $i6 + -1;

        goto label03;

     label06:
        $z0 = 0;

        goto label01;

     label07:
        $r2 = null;

        goto label04;

     label08:
        if $r5 != null goto label09;

        $r5 = $r2;

        $i3 = $i6;

        $i4 = -1;

        goto label05;

     label09:
        $r3 = $r5.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i7 = $r3.<android.content.pm.ActivityInfo: int flags>;

        $i8 = $i7 & 2;

        if $i8 == 0 goto label15;

        $z1 = 1;

     label10:
        $i7 = $i7 & 64;

        if $i7 == 0 goto label16;

        $z2 = 1;

     label11:
        $r8 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r8 != $r4 goto label45;

        if $i0 >= 0 goto label12;

        $i0 = $i3;

     label12:
        if $r2 == null goto label44;

        $r8 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r8 != $r4 goto label44;

        $r9 = $r5.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $i7 = virtualinvoke $r9.<android.content.Intent: int getFlags()>();

        $i7 = $i7 & 524288;

        if $i7 == 0 goto label17;

        $z3 = 1;

     label13:
        if $z1 != 0 goto label18;

        if $z3 != 0 goto label18;

        $r10 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo>;

        if $r10 == null goto label18;

        if $i4 >= 0 goto label14;

        $i4 = $i3;

     label14:
        $r5 = $r2;

        $i3 = $i6;

        goto label05;

     label15:
        $z1 = 0;

        goto label10;

     label16:
        $z2 = 0;

        goto label11;

     label17:
        $z3 = 0;

        goto label13;

     label18:
        if $z1 != 0 goto label31;

        if $z3 != 0 goto label31;

        if $z2 == 0 goto label31;

        $r11 = $r5.<com.android.server.am.HistoryRecord: java.lang.String taskAffinity>;

        if $r11 == null goto label31;

        $r11 = $r5.<com.android.server.am.HistoryRecord: java.lang.String taskAffinity>;

        $r12 = $r4.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label31;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r10 = (com.android.server.am.HistoryRecord) $r7;

        $r11 = $r5.<com.android.server.am.HistoryRecord: java.lang.String taskAffinity>;

        if $r11 == null goto label23;

        $r11 = $r5.<com.android.server.am.HistoryRecord: java.lang.String taskAffinity>;

        $r8 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r12 = $r8.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label23;

        $r8 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task> = $r8;

     label19:
        $r13 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $i7 = $r4.<com.android.server.am.TaskRecord: int taskId>;

        r18 = (android.os.IBinder) $r5;

        virtualinvoke $r13.<com.android.server.WindowManagerService: void setAppGroupId(android.os.IBinder,int)>(r18, $i7);

        if $i4 >= 0 goto label20;

        $i4 = $i3;

     label20:
        $i7 = 0;

     label21:
        if $i3 > $i4 goto label28;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r10 = (com.android.server.am.HistoryRecord) $r7;

        $z1 = $r10.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 == 0 goto label27;

     label22:
        $i3 = $i3 + 1;

        goto label21;

     label23:
        $i7 = $r0.<com.android.server.am.ActivityManagerService: int mCurTask>;

        $i7 = $i7 + 1;

        $r0.<com.android.server.am.ActivityManagerService: int mCurTask> = $i7;

        $i7 = $r0.<com.android.server.am.ActivityManagerService: int mCurTask>;

        if $i7 > 0 goto label24;

        $r0.<com.android.server.am.ActivityManagerService: int mCurTask> = 1;

     label24:
        r17 = new com.android.server.am.TaskRecord;

        $r8 = r17;

        $i7 = $r0.<com.android.server.am.ActivityManagerService: int mCurTask>;

        $r3 = $r5.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r14 = $r5.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i8 = $r14.<android.content.pm.ActivityInfo: int flags>;

        $i8 = $i8 & 4;

        if $i8 == 0 goto label26;

        $z1 = 1;

     label25:
        specialinvoke r17.<com.android.server.am.TaskRecord: void <init>(int,android.content.pm.ActivityInfo,android.content.Intent,boolean)>($i7, $r3, null, $z1);

        $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task> = $r8;

        $r8 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r9 = $r5.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r8.<com.android.server.am.TaskRecord: android.content.Intent affinityIntent> = $r9;

        goto label19;

     label26:
        $z1 = 0;

        goto label25;

     label27:
        $i8 = $r4.<com.android.server.am.TaskRecord: int numActivities>;

        $i8 = $i8 - 1;

        $r4.<com.android.server.am.TaskRecord: int numActivities> = $i8;

        $r8 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task> = $r8;

        $r8 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i8 = $r8.<com.android.server.am.TaskRecord: int numActivities>;

        $i8 = $i8 + 1;

        $r8.<com.android.server.am.TaskRecord: int numActivities> = $i8;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>($i3);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r6.<java.util.ArrayList: void add(int,java.lang.Object)>($i7, $r10);

        $r13 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r18 = (android.os.IBinder) $r10;

        virtualinvoke $r13.<com.android.server.WindowManagerService: void moveAppToken(int,android.os.IBinder)>($i7, r18);

        $r13 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r8 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i8 = $r8.<com.android.server.am.TaskRecord: int taskId>;

        r18 = (android.os.IBinder) $r10;

        virtualinvoke $r13.<com.android.server.WindowManagerService: void setAppGroupId(android.os.IBinder,int)>(r18, $i8);

        $i7 = $i7 + 1;

        $i6 = $i6 + 1;

        goto label22;

     label28:
        if $r1 != $r10 goto label29;

        $r1 = $r2;

     label29:
        if $i0 != $i4 goto label30;

        $i0 = -1;

     label30:
        $i4 = -1;

        $r8 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void addRecentTask(com.android.server.am.TaskRecord)>($r8);

        goto label14;

     label31:
        if $z0 != 0 goto label32;

        if $z1 != 0 goto label32;

        if $z3 == 0 goto label43;

     label32:
        if $z3 == 0 goto label38;

        $i4 = $i3 + 1;

     label33:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i7 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i4 >= $i7 goto label34;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r5 = (com.android.server.am.HistoryRecord) $r7;

        $r8 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r8 != $r4 goto label34;

        $i4 = $i4 + 1;

        goto label33;

     label34:
        $i4 = $i4 + -1;

     label35:
        $r5 = null;

     label36:
        if $i3 > $i4 goto label40;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (com.android.server.am.HistoryRecord) $r7;

        $z1 = $r5.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 == 0 goto label39;

     label37:
        $i3 = $i3 + 1;

        goto label36;

     label38:
        if $i4 >= 0 goto label35;

        $i4 = $i3;

        goto label35;

     label39:
        $z1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r5, $i3, 0, null, "reset");

        if $z1 == 0 goto label37;

        $i4 = $i4 + -1;

        $i3 = $i3 + -1;

        goto label37;

     label40:
        if $r1 != $r5 goto label41;

        $r1 = $r2;

     label41:
        if $i0 != $i4 goto label42;

        $i0 = -1;

     label42:
        $i4 = -1;

        goto label14;

     label43:
        $i4 = -1;

        goto label14;

     label44:
        $i4 = -1;

        goto label14;

     label45:
        $r10 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo>;

        if $r10 == null goto label46;

        if $i4 >= 0 goto label14;

        $i4 = $i3;

        goto label14;

     label46:
        if $i0 < 0 goto label14;

        if $z2 == 0 goto label14;

        $r11 = $r4.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        if $r11 == null goto label14;

        $r11 = $r4.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $r12 = $r5.<com.android.server.am.HistoryRecord: java.lang.String taskAffinity>;

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 == 0 goto label14;

        if $z0 != 0 goto label47;

        if $z1 == 0 goto label52;

     label47:
        if $i4 >= 0 goto label48;

        $i4 = $i3;

     label48:
        if $i3 > $i4 goto label51;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (com.android.server.am.HistoryRecord) $r7;

        $z1 = $r5.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 == 0 goto label50;

     label49:
        $i3 = $i3 + 1;

        goto label48;

     label50:
        $z1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r5, $i3, 0, null, "reset");

        if $z1 == 0 goto label49;

        $i0 = $i0 + -1;

        $i5 = $i5 + -1;

        $i4 = $i4 + -1;

        $i3 = $i3 + -1;

        goto label49;

     label51:
        $i4 = -1;

        goto label14;

     label52:
        if $i4 >= 0 goto label53;

        $i4 = $i3;

     label53:
        if $i4 < $i3 goto label58;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r10 = (com.android.server.am.HistoryRecord) $r7;

        $z1 = $r10.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 == 0 goto label55;

     label54:
        $i4 = $i4 + -1;

        goto label53;

     label55:
        if $i5 >= 0 goto label57;

        $i5 = $i0;

        $r1 = $r10;

     label56:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>($i4);

        $r8 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i7 = $r8.<com.android.server.am.TaskRecord: int numActivities>;

        $i7 = $i7 - 1;

        $r8.<com.android.server.am.TaskRecord: int numActivities> = $i7;

        $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task> = $r4;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r6.<java.util.ArrayList: void add(int,java.lang.Object)>($i5, $r10);

        $i7 = $r4.<com.android.server.am.TaskRecord: int numActivities>;

        $i7 = $i7 + 1;

        $r4.<com.android.server.am.TaskRecord: int numActivities> = $i7;

        $r13 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r18 = (android.os.IBinder) $r10;

        virtualinvoke $r13.<com.android.server.WindowManagerService: void moveAppToken(int,android.os.IBinder)>($i5, r18);

        $r13 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r8 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i7 = $r8.<com.android.server.am.TaskRecord: int taskId>;

        r18 = (android.os.IBinder) $r10;

        virtualinvoke $r13.<com.android.server.WindowManagerService: void setAppGroupId(android.os.IBinder,int)>(r18, $i7);

        goto label54;

     label57:
        $i5 = $i5 + -1;

        goto label56;

     label58:
        $i4 = -1;

        $r3 = $r5.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i3 = $r3.<android.content.pm.ActivityInfo: int launchMode>;

        if $i3 != 1 goto label14;

        $i3 = $i5 - 1;

     label59:
        if $i3 < 0 goto label14;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r10 = (com.android.server.am.HistoryRecord) $r7;

        $z1 = $r10.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z1 == 0 goto label61;

     label60:
        $i3 = $i3 + -1;

        goto label59;

     label61:
        $r9 = $r10.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r15 = virtualinvoke $r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r9 = $r5.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r16 = virtualinvoke $r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z1 = virtualinvoke $r15.<android.content.ComponentName: boolean equals(java.lang.Object)>($r16);

        if $z1 == 0 goto label60;

        $z1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r10, $i3, 0, null, "replace");

        if $z1 == 0 goto label60;

        $i0 = $i0 + -1;

        $i5 = $i5 + -1;

        goto label60;

     label62:
        return $r1;
    }

    private void restartPackageLocked(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1;
        int $i0;
        android.content.Intent $r2;
        android.net.Uri $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void uninstallPackageLocked(java.lang.String,int,boolean)>($r1, $i0, 0);

        $r2 = new android.content.Intent;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", $r1, null);

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.PACKAGE_RESTARTED", $r3);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", $i0);

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>(null, null, $r2, null, null, 0, null, null, null, 0, 0, $i0, 1000);

        return;
    }

    private final boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r2, $r13;
        boolean $z0, $z1;
        int $i0, $i2, $i3;
        java.lang.String $r3, $r5;
        android.content.Intent $r4, r29;
        android.net.Uri $r6;
        android.content.ComponentName $r7, r30;
        android.content.Context $r8;
        android.content.pm.PackageManager $r9;
        android.content.pm.ActivityInfo $r10;
        android.content.pm.ApplicationInfo $r11;
        com.android.server.am.ProcessRecord $r12;
        com.android.server.am.ActivityManagerService$ActivityState $r14, $r15;
        com.android.server.WindowManagerService $r16;
        java.util.ArrayList $r17;
        com.android.server.am.TaskRecord $r18, $r19;
        byte $b1;
        android.app.IApplicationThread $r20;
        android.content.res.Configuration $r21;
        android.os.Handler $r22;
        java.lang.Object[] $r23;
        java.lang.Integer $r24;
        java.lang.Exception $r25, $r28;
        java.lang.StringBuilder $r26, r31;
        java.lang.CharSequence $r27;
        android.os.IBinder r32;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>(null);

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mUserLeaving>;

        $r0.<com.android.server.am.ActivityManagerService: boolean mUserLeaving> = 0;

        if $r2 != null goto label07;

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i0 != 1 goto label01;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction>;

        if $r3 != null goto label01;

        return 0;

     label01:
        r29 = new android.content.Intent;

        $r4 = r29;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction>;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData>;

        if $r5 == null goto label06;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData>;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

     label02:
        specialinvoke r29.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>($r3, $r6);

        $r7 = $r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent>;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r7);

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i0 == 1 goto label03;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.HOME");

     label03:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r10 = virtualinvoke $r4.<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>($r9, 1024);

        if $r10 == null goto label05;

        r30 = new android.content.ComponentName;

        $r11 = $r10.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r3 = $r11.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r5 = $r10.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke r30.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r3, $r5);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r30);

        $r3 = $r10.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $r11 = $r10.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        $r12 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)>($r3, $i0);

        if $r12 == null goto label04;

        $r7 = $r12.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r7 != null goto label05;

     label04:
        $i0 = virtualinvoke $r4.<android.content.Intent: int getFlags()>();

        $i0 = $i0 | 268435456;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setFlags(int)>($i0);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,boolean,boolean)>(null, $r4, null, null, 0, $r10, null, null, 0, 0, 0, 0, 0);

     label05:
        return 1;

     label06:
        $r6 = null;

        goto label02;

     label07:
        $r13 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r13 != $r2 goto label08;

        $r14 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r15 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState RESUMED>;

        if $r14 != $r15 goto label08;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void executeAppTransition()>();

        return 0;

     label08:
        $z1 = $r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z1 == 0 goto label09;

        $r13 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mLastPausedActivity>;

        if $r13 != $r2 goto label09;

        $r14 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r15 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState PAUSED>;

        if $r14 != $r15 goto label09;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void executeAppTransition()>();

        return 0;

     label09:
        $r17 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r17.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

        $r17 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r17.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

        $r13 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r13 == null goto label10;

        return 0;

     label10:
        $r13 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r13 == null goto label11;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startPausingLocked(boolean,boolean)>($z0, 0);

        return 1;

     label11:
        if $r1 == null goto label12;

        if $r1 == $r2 goto label12;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean waitingVisible>;

        if $z0 != 0 goto label18;

        if $r2 == null goto label18;

        $z0 = $r2.<com.android.server.am.HistoryRecord: boolean nowVisible>;

        if $z0 != 0 goto label18;

        $r1.<com.android.server.am.HistoryRecord: boolean waitingVisible> = 1;

        $r17 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label12:
        if $r1 == null goto label23;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 == 0 goto label20;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r18 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r19 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r18 != $r19 goto label19;

        $b1 = 7;

     label13:
        virtualinvoke $r16.<com.android.server.WindowManagerService: void prepareAppTransition(int)>($b1);

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r32 = (android.os.IBinder) $r1;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void setAppWillBeHidden(android.os.IBinder)>(r32);

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r32 = (android.os.IBinder) $r1;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r32, 0);

     label14:
        $r12 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label35;

        $r12 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r20 = $r12.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r20 == null goto label35;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r32 = (android.os.IBinder) $r2;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r32, 1);

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        $r14 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

        $r15 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState RESUMED>;

        $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r15;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity> = $r2;

        $r18 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r18.<com.android.server.am.TaskRecord: void touchActiveTime()>();

        $r12 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void updateLRUListLocked(com.android.server.am.ProcessRecord,boolean)>($r12, 1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateLRUListLocked(com.android.server.am.HistoryRecord)>($r2);

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r21 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r12 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $z0 = virtualinvoke $r2.<com.android.server.am.HistoryRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>($r12);

        if $z0 == 0 goto label24;

        $r13 = $r2;

     label15:
        r32 = (android.os.IBinder) $r13;

        $r21 = virtualinvoke $r16.<com.android.server.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>($r21, r32);

        if $r21 == null goto label16;

        $r2.<com.android.server.am.HistoryRecord: boolean frozenBeforeDestroy> = 1;

     label16:
        $z0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.HistoryRecord)>($r21, $r2);

        if $z0 != 0 goto label25;

        $r1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>(null);

        if $r1 == $r2 goto label17;

        $r22 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r22.<android.os.Handler: boolean sendEmptyMessage(int)>(19);

     label17:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void executeAppTransition()>();

        return 1;

     label18:
        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 == 0 goto label12;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r32 = (android.os.IBinder) $r1;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r32, 0);

        goto label12;

     label19:
        $b1 = 9;

        goto label13;

     label20:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r18 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r19 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r18 != $r19 goto label22;

        $b1 = 6;

     label21:
        virtualinvoke $r16.<com.android.server.WindowManagerService: void prepareAppTransition(int)>($b1);

        goto label14;

     label22:
        $b1 = 8;

        goto label21;

     label23:
        $r17 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if $i0 <= 1 goto label14;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void prepareAppTransition(int)>(6);

        goto label14;

     label24:
        $r13 = null;

        goto label15;

     label25:
        $r17 = $r2.<com.android.server.am.HistoryRecord: java.util.ArrayList results>;

        if $r17 == null goto label26;

        $i0 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        $z0 = $r2.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label26;

        if $i0 <= 0 goto label26;

        $r12 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r20 = $r12.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r32 = (android.os.IBinder) $r2;

        interfaceinvoke $r20.<android.app.IApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>(r32, $r17);

     label26:
        $r17 = $r2.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents>;

        if $r17 == null goto label27;

        $r12 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r20 = $r12.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r17 = $r2.<com.android.server.am.HistoryRecord: java.util.ArrayList newIntents>;

        r32 = (android.os.IBinder) $r2;

        interfaceinvoke $r20.<android.app.IApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>($r17, r32);

     label27:
        $r23 = newarray (java.lang.Object)[3];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r2);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r23[0] = $r24;

        $r18 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r18.<com.android.server.am.TaskRecord: int taskId>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r23[1] = $r24;

        $r3 = $r2.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

        $r23[2] = $r3;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30007, $r23);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void updateUsageStats(com.android.server.am.HistoryRecord,boolean)>($r2, 1);

        $r12 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r20 = $r12.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean isNextTransitionForward()>();

        r32 = (android.os.IBinder) $r2;

        interfaceinvoke $r20.<android.app.IApplicationThread: void scheduleResumeActivity(android.os.IBinder,boolean)>(r32, $z0);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void pauseIfSleepingLocked()>();

     label28:
        $r2.<com.android.server.am.HistoryRecord: boolean visible> = 1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void completeResumeLocked(com.android.server.am.HistoryRecord)>($r2);

     label29:
        $r2.<com.android.server.am.HistoryRecord: android.os.Bundle icicle> = null;

        $r2.<com.android.server.am.HistoryRecord: boolean haveState> = 0;

        $r2.<com.android.server.am.HistoryRecord: boolean stopped> = 0;

     label30:
        return 1;

     label31:
        $r25 := @caughtexception;

        $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r14;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity> = $r1;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restarting because process died: ");

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r3);

        $z0 = $r2.<com.android.server.am.HistoryRecord: boolean hasBeenLaunched>;

        if $z0 != 0 goto label33;

        $r2.<com.android.server.am.HistoryRecord: boolean hasBeenLaunched> = 1;

     label32:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startSpecificActivityLocked(com.android.server.am.HistoryRecord,boolean,boolean)>($r2, 1, 0);

        return 1;

     label33:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r3 = $r2.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        $i0 = $r2.<com.android.server.am.HistoryRecord: int theme>;

        $r27 = $r2.<com.android.server.am.HistoryRecord: java.lang.CharSequence nonLocalizedLabel>;

        $i2 = $r2.<com.android.server.am.HistoryRecord: int labelRes>;

        $i3 = $r2.<com.android.server.am.HistoryRecord: int icon>;

        r32 = (android.os.IBinder) $r2;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,java.lang.CharSequence,int,int,android.os.IBinder,boolean)>(r32, $r3, $i0, $r27, $i2, $i3, null, 1);

        goto label32;

     label34:
        $r28 := @caughtexception;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown during resume of ");

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r3, $r28);

        r32 = (android.os.IBinder) $r2;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String)>(r32, 0, null, "resume-exception");

        return 1;

     label35:
        $z0 = $r2.<com.android.server.am.HistoryRecord: boolean hasBeenLaunched>;

        if $z0 != 0 goto label37;

        $r2.<com.android.server.am.HistoryRecord: boolean hasBeenLaunched> = 1;

     label36:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startSpecificActivityLocked(com.android.server.am.HistoryRecord,boolean,boolean)>($r2, 1, 1);

        goto label30;

     label37:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r3 = $r2.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        $i0 = $r2.<com.android.server.am.HistoryRecord: int theme>;

        $r27 = $r2.<com.android.server.am.HistoryRecord: java.lang.CharSequence nonLocalizedLabel>;

        $i2 = $r2.<com.android.server.am.HistoryRecord: int labelRes>;

        $i3 = $r2.<com.android.server.am.HistoryRecord: int icon>;

        r32 = (android.os.IBinder) $r2;

        virtualinvoke $r16.<com.android.server.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,java.lang.CharSequence,int,int,android.os.IBinder,boolean)>(r32, $r3, $i0, $r27, $i2, $i3, null, 1);

        goto label36;

        catch java.lang.Exception from label25 to label28 with label31;
        catch java.lang.Exception from label28 to label29 with label34;
    }

    private final com.android.server.am.HistoryRecord resumedAppLocked()
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        com.android.server.am.ProcessRecord $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r1 == null goto label1;

        $r2 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r2 != null goto label3;

     label1:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r1 == null goto label2;

        $r2 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r2 != null goto label4;

     label2:
        $r1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return $r1;

     label3:
        return $r1;

     label4:
        return $r1;
    }

    private com.android.server.am.ActivityManagerService$ServiceLookupResult retrieveServiceLocked(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.Intent $r1;
        java.lang.String $r2, $r15;
        int $i0, $i1, $i2, $i3;
        android.content.ComponentName $r3, $r21;
        com.android.server.am.ActivityManagerService$ServiceRestarter $r4;
        android.content.Intent$FilterComparison $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        com.android.server.am.ServiceRecord $r8, $r16;
        android.content.pm.IPackageManager $r9;
        android.content.pm.ResolveInfo $r10;
        android.content.pm.ServiceInfo $r11;
        java.lang.StringBuilder $r12;
        com.android.server.am.ActivityManagerService$ServiceLookupResult $r13;
        android.content.pm.ApplicationInfo $r14;
        com.android.server.am.BatteryStatsService $r17;
        com.android.internal.os.BatteryStatsImpl $r18;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r19;
        java.util.ArrayList $r20;
        boolean $z0;
        java.lang.Throwable $r22;
        android.os.RemoteException $r23, $r24, $r25, $r26;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r3 == null goto label01;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r3 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r8 = (com.android.server.am.ServiceRecord) $r7;

     label01:
        $r5 = new android.content.Intent$FilterComparison;

        specialinvoke $r5.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r1);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServicesByIntent>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r8 = (com.android.server.am.ServiceRecord) $r7;

        if $r8 != null goto label41;

     label02:
        $r9 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r10 = interfaceinvoke $r9.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int)>($r1, $r2, 1024);

     label03:
        if $r10 == null goto label07;

        $r11 = $r10.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

     label04:
        if $r11 != null goto label08;

     label05:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start service ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not found");

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

     label06:
        return null;

     label07:
        $r11 = null;

        goto label04;

     label08:
        $r3 = new android.content.ComponentName;

        $r14 = $r11.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r2 = $r14.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

     label09:
        $r15 = $r11.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r3.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r2, $r15);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

     label10:
        $r16 = (com.android.server.am.ServiceRecord) $r7;

        if $r16 != null goto label40;

        $r5 = new android.content.Intent$FilterComparison;

     label11:
        $r1 = virtualinvoke $r1.<android.content.Intent: android.content.Intent cloneFilter()>();

        specialinvoke $r5.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r1);

     label12:
        $r4 = new com.android.server.am.ActivityManagerService$ServiceRestarter;

     label13:
        specialinvoke $r4.<com.android.server.am.ActivityManagerService$ServiceRestarter: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityManagerService$1)>($r0, null);

        $r17 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r18 = virtualinvoke $r17.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

     label14:
        entermonitor $r18;

     label15:
        $r14 = $r11.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        $r2 = $r11.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r15 = $r11.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r19 = virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>($i2, $r2, $r15);

        exitmonitor $r18;

     label16:
        $r8 = new com.android.server.am.ServiceRecord;

     label17:
        specialinvoke $r8.<com.android.server.am.ServiceRecord: void <init>(com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.ComponentName,android.content.Intent$FilterComparison,android.content.pm.ServiceInfo,java.lang.Runnable)>($r19, $r3, $r5, $r11, $r4);

     label18:
        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)>($r8);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r8);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServicesByIntent>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r8);

        $r20 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $i2 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

     label19:
        $i3 = 0;

     label20:
        if $i3 >= $i2 goto label32;

     label21:
        $r20 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $r7 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>($i3);

     label22:
        $r16 = (com.android.server.am.ServiceRecord) $r7;

     label23:
        $r21 = $r16.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z0 = virtualinvoke $r21.<android.content.ComponentName: boolean equals(java.lang.Object)>($r3);

     label24:
        if $z0 == 0 goto label27;

     label25:
        $r20 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>($i3);

     label26:
        $i3 = $i3 + -1;

        $i2 = $i2 + -1;

     label27:
        $i3 = $i3 + 1;

        goto label20;

     label28:
        $r22 := @caughtexception;

     label29:
        exitmonitor $r18;

     label30:
        throw $r22;

     label31:
        $r23 := @caughtexception;

        $r8 = $r16;

     label32:
        if $r8 == null goto label36;

        $r2 = $r8.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        $z0 = $r8.<com.android.server.am.ServiceRecord: boolean exported>;

        if $z0 == 0 goto label34;

        $i2 = -1;

     label33:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>($r2, $i0, $i1, $i2);

        if $i0 == 0 goto label35;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r3 = $r8.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r2 = $r8.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        $r13 = new com.android.server.am.ActivityManagerService$ServiceLookupResult;

        $r2 = $r8.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        specialinvoke $r13.<com.android.server.am.ActivityManagerService$ServiceLookupResult: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ServiceRecord,java.lang.String)>($r0, null, $r2);

        return $r13;

     label34:
        $r14 = $r8.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i2 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        goto label33;

     label35:
        $r13 = new com.android.server.am.ActivityManagerService$ServiceLookupResult;

        specialinvoke $r13.<com.android.server.am.ActivityManagerService$ServiceLookupResult: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ServiceRecord,java.lang.String)>($r0, $r8, null);

        return $r13;

     label36:
        return null;

     label37:
        $r24 := @caughtexception;

        goto label32;

     label38:
        $r25 := @caughtexception;

        $r8 = $r16;

        goto label32;

     label39:
        $r26 := @caughtexception;

        goto label32;

     label40:
        $r8 = $r16;

        goto label32;

     label41:
        goto label32;

        catch android.os.RemoteException from label02 to label03 with label37;
        catch android.os.RemoteException from label05 to label06 with label37;
        catch android.os.RemoteException from label09 to label10 with label37;
        catch android.os.RemoteException from label11 to label12 with label38;
        catch android.os.RemoteException from label13 to label14 with label31;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch android.os.RemoteException from label17 to label18 with label31;
        catch android.os.RemoteException from label18 to label19 with label39;
        catch android.os.RemoteException from label21 to label22 with label39;
        catch android.os.RemoteException from label23 to label24 with label39;
        catch android.os.RemoteException from label25 to label26 with label39;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch android.os.RemoteException from label30 to label31 with label31;
    }

    private void retrieveSettings()
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.res.Configuration $r1, $r5;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.String $r4;
        int $i0;
        boolean $z0, $z1;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "debug_app");

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "wait_for_debugger", 0);

        if $i0 == 0 goto label5;

        $z0 = 1;

     label1:
        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "always_finish_activities", 0);

        if $i0 == 0 goto label6;

        $z1 = 1;

     label2:
        $r1 = new android.content.res.Configuration;

        specialinvoke $r1.<android.content.res.Configuration: void <init>()>();

        staticinvoke <android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>($r3, $r1);

        entermonitor $r0;

     label3:
        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = $r4;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = $r4;

        $r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = $z0;

        $r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = $z0;

        $r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = $z1;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r5.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r1);

        exitmonitor $r0;

     label4:
        return;

     label5:
        $z0 = 0;

        goto label1;

     label6:
        $z1 = 0;

        goto label2;

     label7:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label8:
        throw $r6;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void revokeUriPermissionLocked(int, android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.net.Uri $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.pm.IPackageManager $r2;
        java.lang.String $r3, $r15;
        android.content.pm.ProviderInfo $r4;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        com.android.server.am.ContentProviderRecord $r7;
        java.lang.StringBuilder $r8;
        boolean $z0;
        java.lang.SecurityException $r9;
        java.util.List $r10, $r16;
        android.util.SparseArray $r11, $r17;
        java.util.Collection $r12;
        java.util.Iterator $r13;
        com.android.server.am.UriPermission $r14;
        android.os.RemoteException $r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.net.Uri;

        $i1 := @parameter2: int;

        $i1 = $i1 & 3;

        if $i1 != 0 goto label01;

        return;

     label01:
        $r2 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r4 = null;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r7 = (com.android.server.am.ContentProviderRecord) $r6;

        if $r7 == null goto label03;

        $r4 = $r7.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

     label02:
        if $r4 != null goto label05;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r3);

        return;

     label03:
        $r4 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>($r3, 2048);

     label04:
        goto label02;

     label05:
        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,int,int)>($r2, $r4, $i0, $i1);

        if $z0 != 0 goto label06;

        $r9 = new java.lang.SecurityException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uid ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to uri ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r3);

        throw $r9;

     label06:
        $r10 = virtualinvoke $r1.<android.net.Uri: java.util.List getPathSegments()>();

        if $r10 == null goto label14;

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i2 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        $i3 = 0;

     label07:
        if $i3 >= $i2 goto label15;

        $r11 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r6 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>($i3);

        $r5 = (java.util.HashMap) $r6;

        $r12 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        $r13 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r6 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.android.server.am.UriPermission) $r6;

        $r1 = $r14.<com.android.server.am.UriPermission: android.net.Uri uri>;

        $r15 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 == 0 goto label08;

        $r16 = virtualinvoke $r1.<android.net.Uri: java.util.List getPathSegments()>();

        if $r16 == null goto label08;

        $i4 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i4 < $i0 goto label08;

        $i4 = 0;

     label09:
        if $i4 >= $i0 goto label10;

        $r6 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i4);

        $r15 = (java.lang.String) $r6;

        $r6 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i4);

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label08;

        $i4 = $i4 + 1;

        goto label09;

     label10:
        virtualinvoke $r14.<com.android.server.am.UriPermission: void clearModes(int)>($i1);

        $i4 = $r14.<com.android.server.am.UriPermission: int modeFlags>;

        if $i4 != 0 goto label08;

        interfaceinvoke $r13.<java.util.Iterator: void remove()>();

        goto label08;

     label11:
        $i4 = virtualinvoke $r5.<java.util.HashMap: int size()>();

        if $i4 != 0 goto label12;

        $r11 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r17 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i4 = virtualinvoke $r17.<android.util.SparseArray: int keyAt(int)>($i3);

        virtualinvoke $r11.<android.util.SparseArray: void remove(int)>($i4);

        $i2 = $i2 + -1;

        $i3 = $i3 + -1;

     label12:
        $i3 = $i3 + 1;

        goto label07;

     label13:
        $r18 := @caughtexception;

        goto label02;

     label14:
        return;

     label15:
        return;

        catch android.os.RemoteException from label03 to label04 with label13;
    }

    private void saveLocaleLocked(java.util.Locale, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.util.Locale $r1;
        boolean $z0, $z1;
        java.lang.String $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.util.Locale;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String getLanguage()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("user.language", $r2);

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String getCountry()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("user.region", $r2);

     label1:
        if $z1 == 0 goto label2;

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String getLanguage()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.language", $r2);

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String getCountry()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.country", $r2);

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String getVariant()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.localevar", $r2);

        return;

     label2:
        return;
    }

    private static boolean scanArgs(java.lang.String[], java.lang.String)
    {
        java.lang.String[] $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label3;

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private final void scheduleBroadcastsLocked()
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0;
        android.os.Handler $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mBroadcastsScheduled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(7);

        $r0.<com.android.server.am.ActivityManagerService: boolean mBroadcastsScheduled> = 1;

        return;
    }

    private final void scheduleServiceRestartLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        java.lang.String $r2;
        int $i0;
        long $l1, $l3;
        byte $b2;
        java.util.ArrayList $r3;
        boolean $z0;
        android.os.Handler $r4;
        java.lang.Runnable $r5;
        java.lang.StringBuilder $r6;
        java.lang.Object[] $r7;
        java.lang.Long $r8;
        android.os.Message $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $i0 = $r1.<com.android.server.am.ServiceRecord: int totalRestartCount>;

        $i0 = $i0 + 1;

        $r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = $i0;

        $l1 = $r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label3;

        $i0 = $r1.<com.android.server.am.ServiceRecord: int restartCount>;

        $i0 = $i0 + 1;

        $r1.<com.android.server.am.ServiceRecord: int restartCount> = $i0;

        $r1.<com.android.server.am.ServiceRecord: long restartDelay> = 5000L;

     label1:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label2:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r5 = $r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r5);

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r5 = $r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $l1 = $r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r5, $l1);

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = $r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l1 = $l1 + $l3;

        $r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling restart of crashed service ");

        $r2 = $r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $l1 = $r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        $r7 = newarray (java.lang.Object)[2];

        $r2 = $r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r7[0] = $r2;

        $l1 = $r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r7[1] = $r8;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30035, $r7);

        $r9 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r9.<android.os.Message: int what> = 18;

        $r9.<android.os.Message: java.lang.Object obj> = $r1;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r9);

        return;

     label3:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = $r1.<com.android.server.am.ServiceRecord: long restartTime>;

        $l3 = $l3 + 40000L;

        $b2 = $l1 cmp $l3;

        if $b2 <= 0 goto label4;

        $r1.<com.android.server.am.ServiceRecord: int restartCount> = 1;

        $r1.<com.android.server.am.ServiceRecord: long restartDelay> = 5000L;

        goto label1;

     label4:
        $l1 = $r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l1 = $l1 * 2L;

        $r1.<com.android.server.am.ServiceRecord: long restartDelay> = $l1;

        goto label1;
    }

    public static com.android.server.am.ActivityManagerService self()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        return r0;
    }

    private final void sendServiceArgsLocked(com.android.server.am.ServiceRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.util.List $r2;
        java.lang.Object $r3;
        android.content.Intent $r4;
        com.android.server.am.ProcessRecord $r5;
        android.app.IApplicationThread $r6;
        java.lang.Exception $r7;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $z0 := @parameter1: boolean;

        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.List startArgs>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 != 0 goto label1;

        return;

     label1:
        $i0 = $r1.<com.android.server.am.ServiceRecord: int lastStartId>;

        $i0 = $i0 - $i1;

        $i0 = $i0 + 1;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label7;

     label3:
        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.List startArgs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (android.content.Intent) $r3;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord)>($r1);

        if $z0 != 0 goto label4;

        $z0 = 1;

        $r5 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r5);

     label4:
        $r5 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r6 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $i3 = $i0 + $i2;

        interfaceinvoke $r6.<android.app.IApplicationThread: void scheduleServiceArgs(android.os.IBinder,int,android.content.Intent)>($r1, $i3, $r4);

     label5:
        $i2 = $i2 + 1;

        goto label2;

     label6:
        $r7 := @caughtexception;

     label7:
        if $i2 != $i1 goto label8;

        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.List startArgs>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;

     label8:
        if $i2 <= 0 goto label9;

        $r2 = $r1.<com.android.server.am.ServiceRecord: java.util.List startArgs>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(0);

        $i2 = $i2 + -1;

        goto label8;

     label9:
        return;

        catch java.lang.Exception from label3 to label5 with label6;
    }

    private final void setFocusedActivityLocked(com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r2;
        com.android.server.WindowManagerService $r3;
        android.os.IBinder r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mFocusedActivity>;

        if $r2 == $r1 goto label1;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mFocusedActivity> = $r1;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r4 = (android.os.IBinder) $r1;

        virtualinvoke $r3.<com.android.server.WindowManagerService: void setFocusedApp(android.os.IBinder,boolean)>(r4, 1);

        return;

     label1:
        return;
    }

    public static void setSystemProcess()
    {
        com.android.server.am.ActivityManagerService $r0, $r11;
        android.content.Context $r8;
        android.content.pm.PackageManager $r9;
        android.content.pm.ApplicationInfo $r10;
        android.app.ActivityThread $r12;
        android.app.ActivityThread$ApplicationThread $r13;
        java.lang.String $r14;
        com.android.server.am.ProcessRecord $r15;
        int $i0;
        com.android.server.ProcessMap $r16;
        android.util.SparseArray $r17, $r18;
        java.lang.Throwable $r19, $r20;
        android.content.pm.PackageManager$NameNotFoundException $r21;
        com.android.server.am.ActivityManagerService$MemBinder r23;
        com.android.server.am.ActivityManagerService$CpuBinder r24;
        com.android.server.am.ActivityManagerService$BroadcastsBinder r25;
        com.android.server.am.ActivityManagerService$ServicesBinder r26;
        com.android.server.am.ActivityManagerService$SendersBinder r27;
        com.android.server.am.ActivityManagerService$ProvidersBinder r28;
        com.android.server.am.ActivityManagerService$PermissionController r29;
        java.lang.RuntimeException r30;
        android.os.IBinder r31;

        $r0 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        r31 = (android.os.IBinder) $r0;

     label01:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("activity", r31);

     label02:
        r23 = new com.android.server.am.ActivityManagerService$MemBinder;

     label03:
        specialinvoke r23.<com.android.server.am.ActivityManagerService$MemBinder: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("meminfo", r23);

     label04:
        r24 = new com.android.server.am.ActivityManagerService$CpuBinder;

     label05:
        specialinvoke r24.<com.android.server.am.ActivityManagerService$CpuBinder: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("cpuinfo", r24);

     label06:
        r25 = new com.android.server.am.ActivityManagerService$BroadcastsBinder;

     label07:
        specialinvoke r25.<com.android.server.am.ActivityManagerService$BroadcastsBinder: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("activity.broadcasts", r25);

     label08:
        r26 = new com.android.server.am.ActivityManagerService$ServicesBinder;

     label09:
        specialinvoke r26.<com.android.server.am.ActivityManagerService$ServicesBinder: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("activity.services", r26);

     label10:
        r27 = new com.android.server.am.ActivityManagerService$SendersBinder;

     label11:
        specialinvoke r27.<com.android.server.am.ActivityManagerService$SendersBinder: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("activity.senders", r27);

     label12:
        r28 = new com.android.server.am.ActivityManagerService$ProvidersBinder;

     label13:
        specialinvoke r28.<com.android.server.am.ActivityManagerService$ProvidersBinder: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("activity.providers", r28);

     label14:
        r29 = new com.android.server.am.ActivityManagerService$PermissionController;

     label15:
        specialinvoke r29.<com.android.server.am.ActivityManagerService$PermissionController: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        r31 = (android.os.IBinder) r29;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("permission", r31);

     label16:
        $r0 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

     label17:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r10 = virtualinvoke $r9.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>("android", 1024);

     label18:
        $r0 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        entermonitor $r0;

     label19:
        $r11 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r12 = <com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        $r13 = virtualinvoke $r12.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r14 = $r10.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r15 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.app.IApplicationThread,android.content.pm.ApplicationInfo,java.lang.String)>($r13, $r10, $r14);

        $r15.<com.android.server.am.ProcessRecord: boolean persistent> = 1;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $r15.<com.android.server.am.ProcessRecord: int pid> = $i0;

        $r15.<com.android.server.am.ProcessRecord: int maxAdj> = -16;

        $r11 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r16 = $r11.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r14 = $r15.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r10 = $r15.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r16.<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r14, $i0, $r15);

        $r11 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r17 = $r11.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r17;

     label20:
        $r11 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r18 = $r11.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i0 = $r15.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r18.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r15);

        exitmonitor $r17;

     label21:
        $r11 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        specialinvoke $r11.<com.android.server.am.ActivityManagerService: void updateLRUListLocked(com.android.server.am.ProcessRecord,boolean)>($r15, 1);

        exitmonitor $r0;

     label22:
        return;

     label23:
        $r19 := @caughtexception;

     label24:
        exitmonitor $r17;

     label25:
        throw $r19;

     label26:
        $r20 := @caughtexception;

        exitmonitor $r0;

     label27:
        throw $r20;

     label28:
        $r21 := @caughtexception;

        r30 = new java.lang.RuntimeException;

        specialinvoke r30.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to find android system package", $r21);

        throw r30;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label28;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label28;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label28;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label28;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label28;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label28;
        catch android.content.pm.PackageManager$NameNotFoundException from label13 to label14 with label28;
        catch android.content.pm.PackageManager$NameNotFoundException from label15 to label16 with label28;
        catch android.content.pm.PackageManager$NameNotFoundException from label17 to label18 with label28;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.lang.Throwable from label25 to label27 with label26;
        catch android.content.pm.PackageManager$NameNotFoundException from label27 to label28 with label28;
    }

    private final int startActivityLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, android.net.Uri[], int, android.content.pm.ActivityInfo, android.os.IBinder, java.lang.String, int, int, int, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.Intent $r1, $r21, $r31;
        java.lang.String $r2, $r7, $r9;
        android.net.Uri[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.content.pm.ActivityInfo $r4, $r32;
        android.os.IBinder $r5;
        boolean $z0, $z1, $z2;
        android.app.IApplicationThread $r6;
        java.lang.StringBuilder $r8;
        com.android.server.am.HistoryRecord $r10, $r11, $r14, $r24, $r25, $r29;
        java.util.ArrayList $r12;
        java.lang.Object $r13;
        byte $b7;
        android.content.ComponentName $r15, $r26;
        com.android.server.am.ProcessRecord $r16, $r17;
        android.content.pm.ApplicationInfo $r18;
        java.lang.SecurityException $r19;
        android.app.IActivityWatcher $r20;
        android.os.RemoteException $r22;
        android.content.res.Configuration $r23;
        long $l8;
        android.net.Uri $r27;
        com.android.server.am.TaskRecord $r28, $r30;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r6 := @parameter0: android.app.IApplicationThread;

        $r1 := @parameter1: android.content.Intent;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.net.Uri[];

        $i0 := @parameter4: int;

        $r4 := @parameter5: android.content.pm.ActivityInfo;

        $r5 := @parameter6: android.os.IBinder;

        $r7 := @parameter7: java.lang.String;

        $i1 := @parameter8: int;

        $i2 := @parameter9: int;

        $i3 := @parameter10: int;

        $z1 := @parameter11: boolean;

        $z0 := @parameter12: boolean;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting activity: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        $r10 = null;

        $r11 = null;

        if $r5 == null goto label01;

        $i4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r5, 0);

        if $i4 < 0 goto label01;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r10 = (com.android.server.am.HistoryRecord) $r13;

        if $i1 < 0 goto label01;

        $z2 = $r10.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z2 != 0 goto label01;

        $r11 = $r10;

     label01:
        $i5 = virtualinvoke $r1.<android.content.Intent: int getFlags()>();

        $i4 = $i5;

        $i6 = 33554432 & $i5;

        if $i6 == 0 goto label03;

        if $r10 == null goto label03;

        if $i1 < 0 goto label02;

        return -3;

     label02:
        $r14 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo>;

        $r11 = $r14;

        $r9 = $r10.<com.android.server.am.HistoryRecord: java.lang.String resultWho>;

        $r7 = $r9;

        $i6 = $r10.<com.android.server.am.HistoryRecord: int requestCode>;

        $i1 = $i6;

        $r10.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo> = null;

        if $r14 == null goto label03;

        virtualinvoke $r14.<com.android.server.am.HistoryRecord: void removeResultsLocked(com.android.server.am.HistoryRecord,java.lang.String,int)>($r10, $r9, $i6);

     label03:
        $b7 = 0;

        $r15 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r15 != null goto label04;

        $b7 = -1;

     label04:
        if $b7 != 0 goto label05;

        if $r4 != null goto label05;

        $b7 = -2;

     label05:
        $r16 = null;

        if $b7 != 0 goto label06;

        if $r6 == null goto label06;

        $r17 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r6);

        $r16 = $r17;

        if $r17 == null goto label08;

        $i2 = $r17.<com.android.server.am.ProcessRecord: int pid>;

        $r18 = $r17.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r18.<android.content.pm.ApplicationInfo: int uid>;

     label06:
        if $b7 == 0 goto label09;

        if $r11 == null goto label07;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendActivityResultLocked(int,com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)>(-1, $r11, $r7, $i1, 0, null);

     label07:
        return $b7;

     label08:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting: ");

        $r9 = virtualinvoke $r1.<android.content.Intent: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        $b7 = -4;

        goto label06;

     label09:
        $r9 = $r4.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $z2 = $r4.<android.content.pm.ComponentInfo: boolean exported>;

        if $z2 == 0 goto label12;

        $i6 = -1;

     label10:
        $i6 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>($r9, $i2, $i3, $i6);

        if $i6 == 0 goto label13;

        if $r11 == null goto label11;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendActivityResultLocked(int,com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)>(-1, $r11, $r7, $i1, 0, null);

     label11:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r2 = virtualinvoke $r1.<android.content.Intent: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r2 = $r4.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        $r19 = new java.lang.SecurityException;

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw $r19;

     label12:
        $r18 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        goto label10;

     label13:
        $r20 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

        if $r20 == null goto label22;

        $z2 = 0;

     label14:
        $r21 = virtualinvoke $r1.<android.content.Intent: android.content.Intent cloneFilter()>();

     label15:
        $r20 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

        $r18 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label16:
        $r9 = $r18.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z2 = interfaceinvoke $r20.<android.app.IActivityWatcher: boolean activityStarting(android.content.Intent,java.lang.String)>($r21, $r9);

     label17:
        if $z2 != 0 goto label20;

        $z2 = 1;

     label18:
        if $z2 == 0 goto label22;

        if $r11 == null goto label19;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendActivityResultLocked(int,com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)>(-1, $r11, $r7, $i1, 0, null);

     label19:
        return 0;

     label20:
        $z2 = 0;

        goto label18;

     label21:
        $r22 := @caughtexception;

        $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher> = null;

        goto label18;

     label22:
        $r14 = new com.android.server.am.HistoryRecord;

        $r23 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r14.<com.android.server.am.HistoryRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.content.res.Configuration,com.android.server.am.HistoryRecord,java.lang.String,int,boolean)>($r0, $r16, $i3, $r1, $r2, $r4, $r23, $r11, $r7, $i1, $z0);

        $l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r14.<com.android.server.am.HistoryRecord: long startTime> = $l8;

        $i2 = 16777216 & $i5;

        if $i2 == 0 goto label28;

        $r24 = $r14;

     label23:
        $i2 = 262144 & $i5;

        if $i2 != 0 goto label29;

        $z0 = 1;

     label24:
        $r0.<com.android.server.am.ActivityManagerService: boolean mUserLeaving> = $z0;

        if $z1 == 0 goto label26;

        $r25 = $r10;

        if $r10 != null goto label25;

        $r25 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>($r24);

     label25:
        $r15 = $r25.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $r26 = $r14.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $z0 = virtualinvoke $r15.<android.content.ComponentName: boolean equals(java.lang.Object)>($r26);

        if $z0 != 0 goto label26;

        $z1 = 0;

     label26:
        if $r3 == null goto label30;

        if $i3 <= 0 goto label30;

        $i2 = 0;

     label27:
        $i6 = lengthof $r3;

        if $i2 >= $i6 goto label30;

        $r2 = $r14.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        $r27 = $r3[$i2];

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.HistoryRecord)>($i3, $r2, $r27, $i0, $r14);

        $i2 = $i2 + 1;

        goto label27;

     label28:
        $r24 = null;

        goto label23;

     label29:
        $z0 = 0;

        goto label24;

     label30:
        $r2 = $r14.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.HistoryRecord)>($i3, $r2, $r1, $r14);

        if $r10 != null goto label41;

        $i0 = 268435456 & $i5;

        if $i0 != 0 goto label31;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        $i4 = $i5 | 268435456;

     label31:
        if $r11 == null goto label32;

        $i0 = 268435456 & $i4;

        if $i0 == 0 goto label32;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "Activity is launching as a new task, so cancelling activity result.");

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendActivityResultLocked(int,com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)>(-1, $r11, $r7, $i1, 0, null);

        $r14.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo> = null;

        $r11 = null;

     label32:
        $z0 = 0;

        $i0 = 268435456 & $i4;

        if $i0 == 0 goto label33;

        $i0 = 134217728 & $i4;

        if $i0 == 0 goto label34;

     label33:
        $i0 = $r14.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 == 2 goto label34;

        $i0 = $r14.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 != 3 goto label56;

     label34:
        if $r11 != null goto label56;

        $i0 = $r14.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 == 3 goto label44;

        $r4 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r25 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord findTaskLocked(android.content.Intent,android.content.pm.ActivityInfo)>($r1, $r4);

     label35:
        if $r25 == null goto label56;

        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r21 = $r28.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r21 != null goto label36;

        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r4 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        virtualinvoke $r28.<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>($r1, $r4);

     label36:
        $r29 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>($r24);

        $r28 = $r29.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r30 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r28 == $r30 goto label39;

        $r21 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        virtualinvoke $r21.<android.content.Intent: android.content.Intent addFlags(int)>(4194304);

        if $r10 == null goto label37;

        $r28 = $r29.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r30 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r28 != $r30 goto label45;

     label37:
        $z2 = 1;

     label38:
        if $z2 == 0 goto label39;

        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void moveTaskToFrontLocked(com.android.server.am.TaskRecord)>($r28);

     label39:
        $i0 = 2097152 & $i4;

        if $i0 == 0 goto label40;

        $r25 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord resetTaskIfNeededLocked(com.android.server.am.HistoryRecord,com.android.server.am.HistoryRecord)>($r25, $r14);

     label40:
        if $z1 == 0 goto label46;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return 1;

     label41:
        $i0 = $r10.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 != 3 goto label42;

        $i4 = $i5 | 268435456;

        goto label31;

     label42:
        $i0 = $r14.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 == 3 goto label43;

        $i0 = $r14.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 != 2 goto label31;

     label43:
        $i4 = $i5 | 268435456;

        goto label31;

     label44:
        $r4 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r25 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord findActivityLocked(android.content.Intent,android.content.pm.ActivityInfo)>($r1, $r4);

        goto label35;

     label45:
        $z2 = 0;

        goto label38;

     label46:
        $i0 = 67108864 & $i4;

        if $i0 != 0 goto label47;

        $i0 = $r14.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 == 2 goto label47;

        $i0 = $r14.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 != 3 goto label51;

     label47:
        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r28.<com.android.server.am.TaskRecord: int taskId>;

        $r29 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord performClearTopTaskLocked(int,com.android.server.am.HistoryRecord,boolean)>($i0, $r14, 1);

        if $r29 == null goto label50;

        $z2 = $r29.<com.android.server.am.HistoryRecord: boolean frontOfTask>;

        if $z2 == 0 goto label48;

        $r28 = $r29.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r21 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r4 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        virtualinvoke $r28.<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>($r21, $r4);

     label48:
        $r28 = $r29.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logStartActivity(int,com.android.server.am.HistoryRecord,com.android.server.am.TaskRecord)>(30003, $r14, $r28);

        $r21 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void deliverNewIntentLocked(com.android.server.am.HistoryRecord,android.content.Intent)>($r29, $r21);

     label49:
        if $z0 != 0 goto label56;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return 2;

     label50:
        $z0 = 1;

        $r10 = $r25;

        goto label49;

     label51:
        $r15 = $r14.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r26 = $r28.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $z2 = virtualinvoke $r15.<android.content.ComponentName: boolean equals(java.lang.Object)>($r26);

        if $z2 == 0 goto label54;

        $i0 = 536870912 & $i4;

        if $i0 == 0 goto label53;

        $r15 = $r25.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $r26 = $r14.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $z2 = virtualinvoke $r15.<android.content.ComponentName: boolean equals(java.lang.Object)>($r26);

        if $z2 == 0 goto label53;

        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logStartActivity(int,com.android.server.am.HistoryRecord,com.android.server.am.TaskRecord)>(30003, $r14, $r28);

        $z2 = $r25.<com.android.server.am.HistoryRecord: boolean frontOfTask>;

        if $z2 == 0 goto label52;

        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r21 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r4 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        virtualinvoke $r28.<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>($r21, $r4);

     label52:
        $r21 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void deliverNewIntentLocked(com.android.server.am.HistoryRecord,android.content.Intent)>($r25, $r21);

        goto label49;

     label53:
        $r21 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r31 = $r28.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $z2 = virtualinvoke $r21.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r31);

        if $z2 != 0 goto label49;

        $z0 = 1;

        $r10 = $r25;

        goto label49;

     label54:
        $i0 = 2097152 & $i4;

        if $i0 != 0 goto label55;

        $z0 = 1;

        $r10 = $r25;

        goto label49;

     label55:
        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $z2 = $r28.<com.android.server.am.TaskRecord: boolean rootWasReset>;

        if $z2 != 0 goto label49;

        $r28 = $r25.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r21 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r4 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        virtualinvoke $r28.<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>($r21, $r4);

        goto label49;

     label56:
        $r2 = $r14.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        if $r2 == null goto label59;

        $r24 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>($r24);

        if $r24 == null goto label61;

        if $r11 != null goto label61;

        $r15 = $r24.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $r26 = $r14.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $z2 = virtualinvoke $r15.<android.content.ComponentName: boolean equals(java.lang.Object)>($r26);

        if $z2 == 0 goto label61;

        $r16 = $r24.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r16 == null goto label61;

        $r16 = $r24.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r6 = $r16.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 == null goto label61;

        $i0 = 536870912 & $i4;

        if $i0 != 0 goto label57;

        $i0 = $r14.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 == 1 goto label57;

        $i0 = $r14.<com.android.server.am.HistoryRecord: int launchMode>;

        if $i0 != 2 goto label61;

     label57:
        $r28 = $r24.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logStartActivity(int,com.android.server.am.HistoryRecord,com.android.server.am.TaskRecord)>(30003, $r24, $r28);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        if $z1 == 0 goto label58;

        return 1;

     label58:
        $r1 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void deliverNewIntentLocked(com.android.server.am.HistoryRecord,android.content.Intent)>($r24, $r1);

        return 3;

     label59:
        if $r11 == null goto label60;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendActivityResultLocked(int,com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)>(-1, $r11, $r7, $i1, 0, null);

     label60:
        return -2;

     label61:
        $z1 = 0;

        if $r11 != null goto label67;

        if $z0 != 0 goto label67;

        $i0 = 268435456 & $i4;

        if $i0 == 0 goto label67;

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mCurTask>;

        $i0 = $i0 + 1;

        $r0.<com.android.server.am.ActivityManagerService: int mCurTask> = $i0;

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mCurTask>;

        if $i0 > 0 goto label62;

        $r0.<com.android.server.am.ActivityManagerService: int mCurTask> = 1;

     label62:
        $r28 = new com.android.server.am.TaskRecord;

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mCurTask>;

        $r4 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r32 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i1 = $r32.<android.content.pm.ActivityInfo: int flags>;

        $i1 = $i1 & 4;

        if $i1 == 0 goto label66;

        $z1 = 1;

     label63:
        specialinvoke $r28.<com.android.server.am.TaskRecord: void <init>(int,android.content.pm.ActivityInfo,android.content.Intent,boolean)>($i0, $r4, $r1, $z1);

        $r14.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task> = $r28;

        $z1 = 1;

        $r28 = $r14.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void addRecentTask(com.android.server.am.TaskRecord)>($r28);

     label64:
        if $z1 == 0 goto label65;

        $r28 = $r14.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r28.<com.android.server.am.TaskRecord: int taskId>;

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30004, $i0);

     label65:
        $r28 = $r14.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logStartActivity(int,com.android.server.am.HistoryRecord,com.android.server.am.TaskRecord)>(30005, $r14, $r28);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r14, $z1);

        return 0;

     label66:
        $z1 = 0;

        goto label63;

     label67:
        if $r10 == null goto label70;

        if $z0 != 0 goto label68;

        $i0 = 67108864 & $i4;

        if $i0 == 0 goto label68;

        $r28 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r28.<com.android.server.am.TaskRecord: int taskId>;

        $r11 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord performClearTopTaskLocked(int,com.android.server.am.HistoryRecord,boolean)>($i0, $r14, 1);

        if $r11 == null goto label69;

        $r28 = $r11.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logStartActivity(int,com.android.server.am.HistoryRecord,com.android.server.am.TaskRecord)>(30003, $r14, $r28);

        $r1 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void deliverNewIntentLocked(com.android.server.am.HistoryRecord,android.content.Intent)>($r11, $r1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return 3;

     label68:
        if $z0 != 0 goto label69;

        $i0 = 131072 & $i4;

        if $i0 == 0 goto label69;

        $r28 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r28.<com.android.server.am.TaskRecord: int taskId>;

        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int findActivityInHistoryLocked(com.android.server.am.HistoryRecord,int)>($r14, $i0);

        if $i0 < 0 goto label69;

        $r10 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord moveActivityToFrontLocked(int)>($i0);

        $r28 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logStartActivity(int,com.android.server.am.HistoryRecord,com.android.server.am.TaskRecord)>(30003, $r14, $r28);

        $r1 = $r14.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void deliverNewIntentLocked(com.android.server.am.HistoryRecord,android.content.Intent)>($r10, $r1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return 3;

     label69:
        $r28 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r14.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task> = $r28;

        goto label64;

     label70:
        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label73;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = $i0 - 1;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r10 = (com.android.server.am.HistoryRecord) $r13;

     label71:
        if $r10 == null goto label74;

        $r28 = $r10.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

     label72:
        $r14.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task> = $r28;

        goto label64;

     label73:
        $r10 = null;

        goto label71;

     label74:
        $r28 = new com.android.server.am.TaskRecord;

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mCurTask>;

        $r4 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r32 = $r14.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i1 = $r32.<android.content.pm.ActivityInfo: int flags>;

        $i1 = $i1 & 4;

        if $i1 == 0 goto label76;

        $z0 = 1;

     label75:
        specialinvoke $r28.<com.android.server.am.TaskRecord: void <init>(int,android.content.pm.ActivityInfo,android.content.Intent,boolean)>($i0, $r4, $r1, $z0);

        goto label72;

     label76:
        $z0 = 0;

        goto label75;

        catch android.os.RemoteException from label14 to label15 with label21;
        catch android.os.RemoteException from label16 to label17 with label21;
    }

    private final void startActivityLocked(com.android.server.am.HistoryRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r4, $r16;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        com.android.server.am.TaskRecord $r5, $r6;
        com.android.server.WindowManagerService $r7;
        android.content.pm.ActivityInfo $r8;
        com.android.server.am.ProcessRecord $r9, $r10;
        com.android.server.ProcessMap $r11;
        java.lang.String $r12;
        android.content.pm.ApplicationInfo $r13;
        android.app.IApplicationThread $r14;
        byte $b3;
        android.content.Intent $r15;
        java.lang.CharSequence $r17;
        android.view.IApplicationToken r18;
        android.os.IBinder r19, r20;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = -1;

        if $z0 != 0 goto label06;

        $z1 = 1;

        $i2 = $i0 - 1;

     label01:
        if $i2 < 0 goto label06;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $z2 = $r4.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z2 == 0 goto label03;

     label02:
        $i2 = $i2 + -1;

        goto label01;

     label03:
        $r5 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r5 != $r6 goto label04;

        $i1 = $i2 + 1;

        if $z1 != 0 goto label06;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r2.<java.util.ArrayList: void add(int,java.lang.Object)>($i1, $r1);

        $r1.<com.android.server.am.HistoryRecord: boolean inHistory> = 1;

        $r5 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r5.<com.android.server.am.TaskRecord: int numActivities>;

        $i0 = $i0 + 1;

        $r5.<com.android.server.am.TaskRecord: int numActivities> = $i0;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r5 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r5.<com.android.server.am.TaskRecord: int taskId>;

        $r8 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i2 = $r8.<android.content.pm.ActivityInfo: int screenOrientation>;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean fullscreen>;

        r18 = (android.view.IApplicationToken) $r1;

        virtualinvoke $r7.<com.android.server.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,boolean)>($i1, r18, $i0, $i2, $z0);

        return;

     label04:
        $z2 = $r4.<com.android.server.am.HistoryRecord: boolean fullscreen>;

        if $z2 == 0 goto label05;

        $z1 = 0;

     label05:
        goto label02;

     label06:
        if $i1 >= 0 goto label07;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label07:
        if $i1 >= $i0 goto label08;

        $r0.<com.android.server.am.ActivityManagerService: boolean mUserLeaving> = 0;

     label08:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        virtualinvoke $r2.<java.util.ArrayList: void add(int,java.lang.Object)>($i1, $r1);

        $r1.<com.android.server.am.HistoryRecord: boolean inHistory> = 1;

        $r1.<com.android.server.am.HistoryRecord: boolean frontOfTask> = $z0;

        $r5 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i2 = $r5.<com.android.server.am.TaskRecord: int numActivities>;

        $i2 = $i2 + 1;

        $r5.<com.android.server.am.TaskRecord: int numActivities> = $i2;

        if $i0 <= 0 goto label19;

        $z1 = $z0;

        $r9 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r10 = $r9;

        if $r9 != null goto label09;

        $r11 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r12 = $r1.<com.android.server.am.HistoryRecord: java.lang.String processName>;

        $r8 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r13 = $r8.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        $r3 = virtualinvoke $r11.<com.android.server.ProcessMap: java.lang.Object get(java.lang.String,int)>($r12, $i0);

        $r10 = (com.android.server.am.ProcessRecord) $r3;

     label09:
        if $r10 == null goto label10;

        $r14 = $r10.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r14 != null goto label11;

     label10:
        $z1 = 1;

     label11:
        $r7 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        if $z0 == 0 goto label16;

        $b3 = 8;

     label12:
        virtualinvoke $r7.<com.android.server.WindowManagerService: void prepareAppTransition(int)>($b3);

        $r7 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r5 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r5.<com.android.server.am.TaskRecord: int taskId>;

        $r8 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i2 = $r8.<android.content.pm.ActivityInfo: int screenOrientation>;

        $z2 = $r1.<com.android.server.am.HistoryRecord: boolean fullscreen>;

        r18 = (android.view.IApplicationToken) $r1;

        virtualinvoke $r7.<com.android.server.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,boolean)>($i1, r18, $i0, $i2, $z2);

        $z2 = 1;

        if $z0 == 0 goto label13;

        $r15 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $i1 = virtualinvoke $r15.<android.content.Intent: int getFlags()>();

        $i1 = $i1 & 2097152;

        if $i1 == 0 goto label13;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord resetTaskIfNeededLocked(com.android.server.am.HistoryRecord,com.android.server.am.HistoryRecord)>($r1, $r1);

        $r4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>(null);

        if $r4 != $r1 goto label17;

        $z2 = 1;

     label13:
        if $z2 == 0 goto label15;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        $r16 = $r4;

        if $r4 == null goto label14;

        $r5 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r5 == $r6 goto label18;

        $r16 = null;

     label14:
        $r7 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r12 = $r1.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        $i1 = $r1.<com.android.server.am.HistoryRecord: int theme>;

        $r17 = $r1.<com.android.server.am.HistoryRecord: java.lang.CharSequence nonLocalizedLabel>;

        $i0 = $r1.<com.android.server.am.HistoryRecord: int labelRes>;

        $i2 = $r1.<com.android.server.am.HistoryRecord: int icon>;

        r19 = (android.os.IBinder) $r1;

        r20 = (android.os.IBinder) $r16;

        virtualinvoke $r7.<com.android.server.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,java.lang.CharSequence,int,int,android.os.IBinder,boolean)>(r19, $r12, $i1, $r17, $i0, $i2, r20, $z1);

     label15:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return;

     label16:
        $b3 = 6;

        goto label12;

     label17:
        $z2 = 0;

        goto label13;

     label18:
        $z0 = $r4.<com.android.server.am.HistoryRecord: boolean nowVisible>;

        if $z0 == 0 goto label14;

        $r16 = null;

        goto label14;

     label19:
        $r7 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r5 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r5.<com.android.server.am.TaskRecord: int taskId>;

        $r8 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i2 = $r8.<android.content.pm.ActivityInfo: int screenOrientation>;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean fullscreen>;

        r18 = (android.view.IApplicationToken) $r1;

        virtualinvoke $r7.<com.android.server.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,boolean)>($i1, r18, $i0, $i2, $z0);

        goto label15;
    }

    private final void startPausingLocked(boolean, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0, $z1, $z2;
        com.android.server.am.HistoryRecord $r1, $r14;
        java.lang.StringBuilder $r3, r17;
        java.lang.String $r4;
        com.android.server.am.ActivityManagerService$ActivityState $r5;
        com.android.server.am.TaskRecord $r6;
        com.android.server.am.ProcessRecord $r7;
        android.app.IApplicationThread $r8;
        java.lang.Object[] $r9;
        int $i0;
        java.lang.Integer $r10;
        android.os.PowerManager$WakeLock $r11;
        android.os.Handler $r12;
        android.os.Message $r13;
        java.lang.Exception $r15;
        java.lang.RuntimeException r16;
        android.os.IBinder r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r1 == null goto label1;

        r16 = new java.lang.RuntimeException;

        specialinvoke r16.<java.lang.RuntimeException: void <init>()>();

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to pause when pause is already pending for ");

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r4, r16);

     label1:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r1 != null goto label2;

        r16 = new java.lang.RuntimeException;

        specialinvoke r16.<java.lang.RuntimeException: void <init>()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Trying to pause when nothing is resumed", r16);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return;

     label2:
        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity> = null;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity> = $r1;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mLastPausedActivity> = $r1;

        $r5 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState PAUSING>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r5;

        $r6 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r6.<com.android.server.am.TaskRecord: void touchActiveTime()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label8;

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label8;

     label3:
        $r9 = newarray (java.lang.Object)[2];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9[0] = $r10;

        $r4 = $r1.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

        $r9[1] = $r4;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30013, $r9);

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $z2 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        $i0 = $r1.<com.android.server.am.HistoryRecord: int configChangeFlags>;

        r18 = (android.os.IBinder) $r1;

        interfaceinvoke $r8.<android.app.IApplicationThread: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int)>(r18, $z2, $z0, $i0);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void updateUsageStats(com.android.server.am.HistoryRecord,boolean)>($r1, 0);

     label4:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z0 != 0 goto label5;

        $r11 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r11.<android.os.PowerManager$WakeLock: void acquire()>();

        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r12.<android.os.Handler: boolean hasMessages(int)>(16);

        if $z0 != 0 goto label5;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r13 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int)>(16);

        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r12.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r13, 10000L);

     label5:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r14 == null goto label9;

        if $z1 != 0 goto label6;

        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void pauseKeyDispatchingLocked()>();

     label6:
        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r13 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int)>(9);

        $r13.<android.os.Message: java.lang.Object obj> = $r1;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r12.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r13, 500L);

        return;

     label7:
        $r15 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown during pause", $r15);

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity> = null;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mLastPausedActivity> = null;

        goto label4;

     label8:
        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity> = null;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mLastPausedActivity> = null;

        goto label4;

     label9:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return;

        catch java.lang.Exception from label3 to label4 with label7;
    }

    private final com.android.server.am.ProcessRecord startProcessLocked(java.lang.String, android.content.pm.ApplicationInfo, boolean, int, java.lang.String, android.content.ComponentName)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1, $r3, $r5, $r9;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0;
        int $i0, $i1;
        android.content.ComponentName $r4;
        com.android.server.am.ProcessRecord $r6, $r7;
        android.app.IApplicationThread $r8;
        com.android.server.ProcessMap $r10;
        java.lang.Object $r11;
        java.lang.Object[] $r12;
        java.lang.Integer $r13;
        java.util.ArrayList $r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.ApplicationInfo;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: android.content.ComponentName;

        $i1 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)>($r1, $i1);

        $r7 = $r6;

        if $r6 == null goto label02;

        if $z0 == 0 goto label01;

        $r8 = $r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 != null goto label02;

     label01:
        $i1 = $r6.<com.android.server.am.ProcessRecord: int pid>;

        if $i1 <= 0 goto label02;

        return $r6;

     label02:
        if $r4 == null goto label04;

        $r9 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

     label03:
        $i0 = $i0 & 4;

        if $i0 == 0 goto label05;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mBadProcesses>;

        $r5 = $r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $r11 = virtualinvoke $r10.<com.android.server.ProcessMap: java.lang.Object get(java.lang.String,int)>($r5, $i0);

        if $r11 == null goto label06;

        return null;

     label04:
        $r9 = null;

        goto label03;

     label05:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessCrashTimes>;

        $r5 = $r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r10.<com.android.server.ProcessMap: void remove(java.lang.String,int)>($r5, $i0);

        $r10 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mBadProcesses>;

        $r5 = $r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $r11 = virtualinvoke $r10.<com.android.server.ProcessMap: java.lang.Object get(java.lang.String,int)>($r5, $i0);

        if $r11 == null goto label06;

        $r12 = newarray (java.lang.Object)[2];

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12[0] = $r13;

        $r5 = $r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r12[1] = $r5;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30016, $r12);

        $r10 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mBadProcesses>;

        $r5 = $r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r10.<com.android.server.ProcessMap: void remove(java.lang.String,int)>($r5, $i0);

        if $r6 == null goto label06;

        $r6.<com.android.server.am.ProcessRecord: boolean bad> = 0;

     label06:
        if $r6 != null goto label09;

        $r6 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.app.IApplicationThread,android.content.pm.ApplicationInfo,java.lang.String)>(null, $r2, $r1);

        $r7 = $r6;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r10.<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r1, $i0, $r6);

     label07:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label10;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 8;

        if $i0 != 0 goto label10;

        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $z0 = virtualinvoke $r14.<java.util.ArrayList: boolean contains(java.lang.Object)>($r7);

        if $z0 != 0 goto label08;

        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label08:
        return $r7;

     label09:
        $r1 = $r2.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        virtualinvoke $r6.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String)>($r1);

        goto label07;

     label10:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>($r7, $r3, $r9);

        $i0 = $r7.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 == 0 goto label11;

        return $r7;

     label11:
        return null;
    }

    private final void startProcessLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        java.lang.String $r2, $r3, $r15, $r17;
        java.lang.StringBuilder $r4;
        int $i0, $i1, $i3;
        android.util.SparseArray $r5, $r6;
        android.os.Handler $r7;
        java.util.ArrayList $r8;
        int[] $r9, $r10, $r11;
        android.content.pm.ApplicationInfo $r12;
        android.content.Context $r13;
        android.content.pm.PackageManager $r14;
        android.content.ComponentName $r16;
        boolean $z0;
        byte $b2;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r18;
        com.android.internal.os.BatteryStatsImpl $r19;
        java.lang.Object[] $r20;
        java.lang.Integer $r21;
        com.android.server.Watchdog $r22;
        java.lang.Throwable $r23, $r26, $r28;
        android.content.pm.PackageManager$NameNotFoundException $r24;
        java.lang.RuntimeException $r25;
        android.os.Message $r27;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 <= 0 goto label03;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i0 == $i1 goto label03;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r5;

     label01:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>($i0);

        $r7 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeMessages(int,java.lang.Object)>(20, $r1);

        exitmonitor $r5;

     label02:
        $r1.<com.android.server.am.ProcessRecord: int pid> = 0;

     label03:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r8.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

        $r9 = $r0.<com.android.server.am.ActivityManagerService: int[] mProcDeaths>;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: int[] mProcDeaths>;

        $r11 = $r0.<com.android.server.am.ActivityManagerService: int[] mProcDeaths>;

        $i0 = lengthof $r11;

        $i0 = $i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r10, 1, $i0);

        $r9 = $r0.<com.android.server.am.ActivityManagerService: int[] mProcDeaths>;

        $r9[0] = 0;

     label04:
        $r12 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r12.<android.content.pm.ApplicationInfo: int uid>;

     label05:
        $r9 = null;

     label06:
        $r13 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

     label07:
        $r14 = virtualinvoke $r13.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label08:
        $r12 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

     label09:
        $r15 = $r12.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r9 = virtualinvoke $r14.<android.content.pm.PackageManager: int[] getPackageGids(java.lang.String)>($r15);

     label10:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i1 == 0 goto label13;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i1 != 1 goto label11;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent>;

        if $r16 == null goto label11;

        $r15 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent>;

        $r17 = virtualinvoke $r16.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z0 == 0 goto label11;

        $i0 = 0;

     label11:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i1 != 2 goto label13;

        $r12 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r12.<android.content.pm.ApplicationInfo: int flags>;

     label12:
        $i1 = $i1 & 16;

        if $i1 == 0 goto label13;

        $i0 = 0;

     label13:
        $b2 = 0;

        $r12 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r12.<android.content.pm.ApplicationInfo: int flags>;

     label14:
        $i1 = $i1 & 2;

        if $i1 == 0 goto label15;

        $b2 = 0 | 1;

     label15:
        $r15 = "1";

        $r17 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.checkjni");

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17);

     label16:
        if $z0 == 0 goto label17;

        $b2 = $b2 | 2;

     label17:
        $r15 = "1";

        $r17 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.assert");

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z0 == 0 goto label18;

        $b2 = $b2 | 4;

     label18:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSimpleProcessManagement>;

        if $z0 == 0 goto label38;

        $r15 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label19:
        $i1 = staticinvoke <android.os.Process: int start(java.lang.String,java.lang.String,int,int,int[],int,java.lang.String[])>("android.app.ActivityThread", $r15, $i0, $i0, $r9, $b2, null);

        $r18 = $r1.<com.android.server.am.ProcessRecord: com.android.internal.os.BatteryStatsImpl$Uid$Proc batteryStats>;

        $r19 = virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor $r19;

     label20:
        $z0 = virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z0 == 0 goto label21;

        $r18 = $r1.<com.android.server.am.ProcessRecord: com.android.internal.os.BatteryStatsImpl$Uid$Proc batteryStats>;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void incStartsLocked()>();

     label21:
        exitmonitor $r19;

     label22:
        $r20 = newarray (java.lang.Object)[5];

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r20[0] = $r21;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r20[1] = $r21;

        $r15 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r20[2] = $r15;

        $r20[3] = $r2;

     label23:
        if $r3 == null goto label42;

     label24:
        $r15 = $r3;

     label25:
        $r20[4] = $r15;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30014, $r20);

        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label26;

        $r22 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        $r15 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r22.<com.android.server.Watchdog: void processStarted(com.android.server.Watchdog$PssRequestor,java.lang.String,int)>($r1, $r15, $i1);

     label26:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start proc ");

        $r15 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        if $r3 == null goto label27;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label27:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pid=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gids={");

        if $r9 == null goto label44;

        $i0 = 0;

     label28:
        $i3 = lengthof $r9;

        if $i0 >= $i3 goto label44;

        if $i0 == 0 goto label29;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label29:
        $i3 = $r9[$i0];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

     label30:
        $i0 = $i0 + 1;

        goto label28;

     label31:
        $r23 := @caughtexception;

     label32:
        exitmonitor $r5;

     label33:
        throw $r23;

     label34:
        $r24 := @caughtexception;

     label35:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unable to retrieve gids", $r24);

     label36:
        goto label10;

     label37:
        $r25 := @caughtexception;

        $r1.<com.android.server.am.ProcessRecord: int pid> = 0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure starting process ");

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r2, $r25);

        return;

     label38:
        $r15 = null;

        goto label19;

     label39:
        $r26 := @caughtexception;

     label40:
        exitmonitor $r19;

     label41:
        throw $r26;

     label42:
        $r15 = "";

     label43:
        goto label25;

     label44:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        if $i1 == 0 goto label45;

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i1 != $i0 goto label47;

     label45:
        $i0 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        $r1.<com.android.server.am.ProcessRecord: int pid> = $i0;

        $r1.<com.android.server.am.ProcessRecord: boolean removed> = 0;

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStartingProcesses>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label46:
        return;

     label47:
        if $i1 <= 0 goto label52;

        $r1.<com.android.server.am.ProcessRecord: int pid> = $i1;

        $r1.<com.android.server.am.ProcessRecord: boolean removed> = 0;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r5;

     label48:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r1);

        $r7 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r27 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int)>(20);

        $r27.<android.os.Message: java.lang.Object obj> = $r1;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r27, 10000L);

        exitmonitor $r5;

     label49:
        return;

     label50:
        $r28 := @caughtexception;

        exitmonitor $r5;

     label51:
        throw $r28;

     label52:
        $r1.<com.android.server.am.ProcessRecord: int pid> = 0;

     label53:
        $r25 = new java.lang.RuntimeException;

     label54:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure starting process ");

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": returned pid=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        $r2 = virtualinvoke $r25.<java.lang.Throwable: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r2, $r25);

     label55:
        return;

        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.lang.RuntimeException from label04 to label05 with label37;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label34;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label34;
        catch java.lang.RuntimeException from label06 to label10 with label37;
        catch java.lang.RuntimeException from label10 to label12 with label37;
        catch java.lang.RuntimeException from label13 to label14 with label37;
        catch java.lang.RuntimeException from label15 to label16 with label37;
        catch java.lang.RuntimeException from label17 to label20 with label37;
        catch java.lang.Throwable from label20 to label22 with label39;
        catch java.lang.RuntimeException from label22 to label23 with label37;
        catch java.lang.RuntimeException from label24 to label30 with label37;
        catch java.lang.Throwable from label32 to label33 with label31;
        catch java.lang.RuntimeException from label35 to label36 with label37;
        catch java.lang.Throwable from label40 to label41 with label39;
        catch java.lang.RuntimeException from label41 to label42 with label37;
        catch java.lang.RuntimeException from label43 to label46 with label37;
        catch java.lang.RuntimeException from label47 to label48 with label37;
        catch java.lang.Throwable from label48 to label49 with label50;
        catch java.lang.Throwable from label50 to label51 with label50;
        catch java.lang.RuntimeException from label51 to label53 with label37;
        catch java.lang.RuntimeException from label54 to label55 with label37;
    }

    private final void startSpecificActivityLocked(com.android.server.am.HistoryRecord, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        boolean $z0, $z1;
        android.os.RemoteException $r2;
        java.lang.String $r3;
        android.content.pm.ActivityInfo $r4;
        android.content.pm.ApplicationInfo $r5;
        int $i0;
        com.android.server.am.ProcessRecord $r6;
        long $l1;
        byte $b2;
        android.app.IApplicationThread $r7;
        java.lang.StringBuilder $r8;
        android.content.Intent $r9;
        android.content.ComponentName $r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r3 = $r1.<com.android.server.am.HistoryRecord: java.lang.String processName>;

        $r4 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)>($r3, $i0);

        $l1 = $r1.<com.android.server.am.HistoryRecord: long startTime>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1.<com.android.server.am.HistoryRecord: long startTime> = $l1;

     label1:
        if $r6 == null goto label5;

        $r7 = $r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label5;

     label2:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean realStartActivityLocked(com.android.server.am.HistoryRecord,com.android.server.am.ProcessRecord,boolean,boolean)>($r1, $r6, $z0, $z1);

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when starting activity ");

        $r9 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r3 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r3, $r2);

     label5:
        $r3 = $r1.<com.android.server.am.HistoryRecord: java.lang.String processName>;

        $r4 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r9 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName)>($r3, $r5, 1, 0, "activity", $r10);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private final void stopActivityLocked(com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r6;
        android.content.Intent $r2;
        int $i0;
        android.content.pm.ActivityInfo $r3;
        boolean $z0;
        com.android.server.am.ProcessRecord $r4;
        android.app.IApplicationThread $r5;
        com.android.server.am.ActivityManagerService$ActivityState $r7;
        com.android.server.WindowManagerService $r8;
        java.lang.Exception $r9;
        android.os.IBinder r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 = $r1.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $i0 = virtualinvoke $r2.<android.content.Intent: int getFlags()>();

        $i0 = $i0 & 1073741824;

        if $i0 != 0 goto label01;

        $r3 = $r1.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

        $i0 = $r3.<android.content.pm.ActivityInfo: int flags>;

        $i0 = $i0 & 128;

        if $i0 == 0 goto label02;

     label01:
        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label08;

        r10 = (android.os.IBinder) $r1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String)>(r10, 0, null, "no-history");

        return;

     label02:
        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label09;

        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r5 = $r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label10;

        $r6 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mFocusedActivity>;

        if $r6 != $r1 goto label03;

        $r6 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>(null);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.HistoryRecord)>($r6);

     label03:
        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void resumeKeyDispatchingLocked()>();

     label04:
        $r1.<com.android.server.am.HistoryRecord: boolean stopped> = 0;

        $r7 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState STOPPING>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r7;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean visible>;

        if $z0 != 0 goto label05;

        $r8 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r10 = (android.os.IBinder) $r1;

        virtualinvoke $r8.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r10, 0);

     label05:
        $r4 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r5 = $r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean visible>;

        $i0 = $r1.<com.android.server.am.HistoryRecord: int configChangeFlags>;

        r10 = (android.os.IBinder) $r1;

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleStopActivity(android.os.IBinder,boolean,int)>(r10, $z0, $i0);

     label06:
        return;

     label07:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown during pause", $r9);

        $r1.<com.android.server.am.HistoryRecord: boolean stopped> = 1;

        $r7 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState STOPPED>;

        $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r7;

        $z0 = $r1.<com.android.server.am.HistoryRecord: boolean configDestroy>;

        if $z0 == 0 goto label11;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean destroyActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r1, 1);

        return;

     label08:
        return;

     label09:
        return;

     label10:
        return;

     label11:
        return;

        catch java.lang.Exception from label04 to label06 with label07;
    }

    private final com.android.server.am.HistoryRecord topRunningActivityLocked(android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.am.HistoryRecord $r4;
        boolean $z0;
        com.android.server.am.TaskRecord $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label3;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $z0 = $r4.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label2;

        if $r1 == $r4 goto label2;

        $r5 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i2 = $r5.<com.android.server.am.TaskRecord: int taskId>;

        if $i0 == $i2 goto label2;

        return $r4;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        return null;
    }

    private final com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1, $r4;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label3;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $z0 = $r4.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label2;

        if $r4 == $r1 goto label2;

        return $r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return null;
    }

    private final void trimApplications()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        com.android.server.am.ProcessRecord $r3;
        com.android.server.am.BroadcastRecord $r4;
        java.util.HashSet $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        android.app.IApplicationThread $r8;
        android.os.IBinder $r9;
        boolean $z0;
        android.content.pm.ApplicationInfo $r10;
        java.lang.Exception $r11, $r12, $r14;
        com.android.server.am.HistoryRecord $r13;
        byte $b4;
        java.lang.Throwable $r15;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor $r0;

     label01:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label02:
        if $i0 < 0 goto label10;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (com.android.server.am.ProcessRecord) $r2;

        $r1 = $r3.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label05;

        $r4 = $r3.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if $r4 != null goto label05;

        $r5 = $r3.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $i1 = virtualinvoke $r5.<java.util.HashSet: int size()>();

        if $i1 != 0 goto label05;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exiting empty application process ");

        $r7 = $r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r8 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label06;

        $r8 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r9 = interfaceinvoke $r8.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

     label03:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        $i1 = $r3.<com.android.server.am.ProcessRecord: int pid>;

        if $i1 <= 0 goto label07;

        $i1 = $r3.<com.android.server.am.ProcessRecord: int pid>;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i1 == $i2 goto label07;

        $i1 = $r3.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcess(int)>($i1);

     label04:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,int)>($r3, 0, -1);

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $z0 = $r3.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label05;

        $z0 = $r3.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label05;

        $r10 = $r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo)>($r10);

     label05:
        $i0 = $i0 + -1;

        goto label02;

     label06:
        $r9 = null;

        goto label03;

     label07:
        $r8 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleExit()>();

     label08:
        goto label04;

     label09:
        $r11 := @caughtexception;

        goto label04;

     label10:
        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        if $z0 != 0 goto label46;

        $i0 = 0;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

     label11:
        if $i1 < 0 goto label14;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (com.android.server.am.ProcessRecord) $r2;

        $z0 = $r3.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label12;

        $r5 = $r3.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $i2 = virtualinvoke $r5.<java.util.HashSet: int size()>();

        if $i2 != 0 goto label12;

        $r4 = $r3.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if $r4 != null goto label12;

        $i2 = $r3.<com.android.server.am.ProcessRecord: int persistentActivities>;

        if $i2 <= 0 goto label13;

     label12:
        $i0 = $i0 + 1;

     label13:
        $i1 = $i1 + -1;

        goto label11;

     label14:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        if $i1 > 0 goto label15;

        $i1 = 2;

     label15:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        if $z0 == 0 goto label16;

        $i1 = 1;

     label16:
        $i0 = $i1 + $i0;

        $i1 = 0;

     label17:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label26;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 <= $i0 goto label26;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (com.android.server.am.ProcessRecord) $r2;

        $z0 = $r3.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label21;

        $r1 = $r3.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label21;

        $r4 = $r3.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if $r4 != null goto label21;

        $r5 = $r3.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $i2 = virtualinvoke $r5.<java.util.HashSet: int size()>();

        if $i2 != 0 goto label21;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exiting empty application process ");

        $r7 = $r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r8 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label22;

        $r8 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r9 = interfaceinvoke $r8.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

     label18:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        $i2 = $r3.<com.android.server.am.ProcessRecord: int pid>;

        if $i2 <= 0 goto label23;

        $i2 = $r3.<com.android.server.am.ProcessRecord: int pid>;

        $i3 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i2 == $i3 goto label23;

        $i2 = $r3.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcess(int)>($i2);

     label19:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,int)>($r3, 0, $i1);

     label20:
        $i1 = $i1 + -1;

     label21:
        $i1 = $i1 + 1;

        goto label17;

     label22:
        $r9 = null;

        goto label18;

     label23:
        $r8 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleExit()>();

     label24:
        goto label19;

     label25:
        $r12 := @caughtexception;

        goto label19;

     label26:
        $i1 = 0;

     label27:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label46;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 <= $i0 goto label46;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (com.android.server.am.ProcessRecord) $r2;

        $z0 = $r3.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label32;

        $r4 = $r3.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if $r4 != null goto label32;

        $r5 = $r3.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $i2 = virtualinvoke $r5.<java.util.HashSet: int size()>();

        if $i2 != 0 goto label32;

        $i2 = $r3.<com.android.server.am.ProcessRecord: int persistentActivities>;

        if $i2 != 0 goto label32;

        $z0 = 1;

     label28:
        $r1 = $r3.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i3 = 0;

     label29:
        if $i3 >= $i2 goto label34;

        if $z0 == 0 goto label34;

        $r1 = $r3.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r13 = (com.android.server.am.HistoryRecord) $r2;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean haveState>;

        if $z0 != 0 goto label30;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean stateNotNeeded>;

        if $z0 != 0 goto label33;

     label30:
        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean visible>;

        if $z0 != 0 goto label33;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean stopped>;

        if $z0 == 0 goto label33;

        $z0 = 1;

     label31:
        $i3 = $i3 + 1;

        goto label29;

     label32:
        $z0 = 0;

        goto label28;

     label33:
        $z0 = 0;

        goto label31;

     label34:
        if $z0 == 0 goto label41;

        $i3 = 0;

     label35:
        if $i3 >= $i2 goto label37;

        $r1 = $r3.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r13 = (com.android.server.am.HistoryRecord) $r2;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label36;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean destroyActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r13, 0);

     label36:
        $r13.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo> = null;

        $i3 = $i3 + 1;

        goto label35;

     label37:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exiting application process ");

        $r7 = $r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r8 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label42;

        $r8 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r9 = interfaceinvoke $r8.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

     label38:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        $i2 = $r3.<com.android.server.am.ProcessRecord: int pid>;

        if $i2 <= 0 goto label43;

        $i2 = $r3.<com.android.server.am.ProcessRecord: int pid>;

        $i3 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i2 == $i3 goto label43;

        $i2 = $r3.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcess(int)>($i2);

     label39:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,int)>($r3, 0, $i1);

     label40:
        $i1 = $i1 + -1;

     label41:
        $i1 = $i1 + 1;

        goto label27;

     label42:
        $r9 = null;

        goto label38;

     label43:
        $r8 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleExit()>();

     label44:
        goto label39;

     label45:
        $r14 := @caughtexception;

        goto label39;

     label46:
        $b4 = 20;

     label47:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        if $z0 == 0 goto label48;

        $b4 = 1;

     label48:
        $i0 = 0;

     label49:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label52;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 <= $b4 goto label52;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r13 = (com.android.server.am.HistoryRecord) $r2;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean haveState>;

        if $z0 != 0 goto label50;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean stateNotNeeded>;

        if $z0 != 0 goto label51;

     label50:
        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean visible>;

        if $z0 != 0 goto label51;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean stopped>;

        if $z0 == 0 goto label51;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean persistent>;

        if $z0 != 0 goto label51;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label51;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean destroyActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r13, 1);

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 <= $i2 goto label51;

        $i0 = $i0 + -1;

     label51:
        $i0 = $i0 + 1;

        goto label49;

     label52:
        exitmonitor $r0;

     label53:
        return;

     label54:
        $r15 := @caughtexception;

        exitmonitor $r0;

     label55:
        throw $r15;

        catch java.lang.Throwable from label01 to label05 with label54;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label54;
        catch java.lang.Throwable from label10 to label20 with label54;
        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Throwable from label23 to label24 with label54;
        catch java.lang.Throwable from label27 to label40 with label54;
        catch java.lang.Exception from label43 to label44 with label45;
        catch java.lang.Throwable from label43 to label44 with label54;
        catch java.lang.Throwable from label47 to label53 with label54;
        catch java.lang.Throwable from label54 to label55 with label54;
    }

    private final void uninstallPackageLocked(java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0, $z1;
        java.util.ArrayList $r1;
        java.lang.String $r2, $r4, $r14;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3;
        android.content.pm.IPackageManager $r5;
        com.android.server.ProcessMap $r6;
        java.util.HashMap $r7;
        java.util.Collection $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;
        android.util.SparseArray $r11;
        com.android.server.am.ProcessRecord $r12;
        android.content.pm.ApplicationInfo $r13;
        com.android.server.am.HistoryRecord $r15;
        android.content.Intent $r16;
        android.content.ComponentName $r17;
        com.android.server.am.ServiceRecord $r18;
        android.os.RemoteException $r19;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uninstalling process ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        if $i0 >= 0 goto label02;

     label01:
        $r5 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i0 = interfaceinvoke $r5.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String)>($r2);

     label02:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessCrashTimes>;

        $r7 = virtualinvoke $r6.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.util.SparseArray) $r10;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        if $r10 == null goto label03;

        interfaceinvoke $r9.<java.util.Iterator: void remove()>();

        goto label03;

     label04:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r6 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r7 = virtualinvoke $r6.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.util.SparseArray) $r10;

        $i1 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        $i2 = 0;

     label06:
        if $i2 >= $i1 goto label05;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>($i2);

        $r12 = (com.android.server.am.ProcessRecord) $r10;

        $z1 = $r12.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z1 == 0 goto label08;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        if $i0 <= 0 goto label09;

        if $i0 == 1000 goto label09;

        $r13 = $r12.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 == $i0 goto label10;

     label09:
        $r14 = $r12.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 != 0 goto label10;

        $r14 = $r12.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z1 == 0 goto label07;

     label10:
        $r12.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label07;

     label11:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label12:
        if $i1 >= $i0 goto label13;

        $r10 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r12 = (com.android.server.am.ProcessRecord) $r10;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean)>($r12, $z0);

        $i1 = $i1 + 1;

        goto label12;

     label13:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label14:
        if $i0 < 0 goto label17;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r10 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r15 = (com.android.server.am.HistoryRecord) $r10;

        $r4 = $r15.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label16;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force finishing activity ");

        $r16 = $r15.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r17 = virtualinvoke $r16.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r4 = virtualinvoke $r17.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        $r12 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label15;

        $r12 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r12.<com.android.server.am.ProcessRecord: boolean removed> = 1;

     label15:
        $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app> = null;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r15, $i0, 0, null, "uninstall");

     label16:
        $i0 = $i0 + -1;

        goto label14;

     label17:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r7 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (com.android.server.am.ServiceRecord) $r10;

        $r4 = $r18.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label18;

        $r12 = $r18.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label19;

        $r12 = $r18.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r12.<com.android.server.am.ProcessRecord: boolean removed> = 1;

     label19:
        $r18.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        goto label18;

     label20:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label21:
        if $i1 >= $i0 goto label22;

        $r10 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r18 = (com.android.server.am.ServiceRecord) $r10;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>($r18, 1);

        $i1 = $i1 + 1;

        goto label21;

     label22:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        return;

     label23:
        $r19 := @caughtexception;

        goto label02;

        catch android.os.RemoteException from label01 to label02 with label23;
    }

    private final boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        java.lang.Runnable $r2;
        long $l0;
        byte $b1;
        java.util.ArrayList $r3;
        android.os.Handler $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $l0 = $r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke $r1.<com.android.server.am.ServiceRecord: void resetRestartCounter()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r2 = $r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        return 1;
    }

    private final void updateLRUListLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        boolean $z0;
        int $i0;
        java.util.ArrayList $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        return;

     label2:
        return;
    }

    private final boolean updateLRUListLocked(com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return $z0;
    }

    private final boolean updateOomAdjLocked()
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0, $z1;
        com.android.server.am.HistoryRecord $r1;
        com.android.server.am.ProcessRecord $r2, $r5;
        int $i0, $i1, $i2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = 1;

        $r1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord resumedAppLocked()>();

        if $r1 == null goto label3;

        $r2 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

     label1:
        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $i0 = $i0 + 1;

        $r0.<com.android.server.am.ActivityManagerService: int mAdjSeq> = $i0;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

     label2:
        if $i0 <= 0 goto label5;

        $i0 = $i0 + -1;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.ProcessRecord) $r4;

        $z1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord)>($r5, $i1, $r2);

        if $z1 == 0 goto label4;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int HIDDEN_APP_MAX_ADJ>;

        if $i1 >= $i2 goto label2;

        $i2 = $r5.<com.android.server.am.ProcessRecord: int curAdj>;

        if $i2 != $i1 goto label2;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r2 = null;

        goto label1;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        if $i0 <= 0 goto label6;

        return 0;

     label6:
        return $z0;
    }

    private final boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r3;
        int $i0, $i1;
        com.android.server.am.HistoryRecord $r2;
        boolean $z0, $z1, $z2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord resumedAppLocked()>();

        if $r2 == null goto label4;

        $r3 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

     label1:
        $i0 = $r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $i1 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

        if $i0 < $i1 goto label5;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int HIDDEN_APP_MAX_ADJ>;

        if $i0 > $i1 goto label5;

        $z0 = 1;

     label2:
        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $i0 = $i0 + 1;

        $r0.<com.android.server.am.ActivityManagerService: int mAdjSeq> = $i0;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int hiddenAdj>;

        $z1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord)>($r1, $i0, $r3);

        if $z1 == 0 goto label7;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $i1 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

        if $i0 < $i1 goto label6;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int HIDDEN_APP_MAX_ADJ>;

        if $i0 > $i1 goto label6;

        $z2 = 1;

     label3:
        if $z2 == $z0 goto label8;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        return $z1;

     label4:
        $r3 = null;

        goto label1;

     label5:
        $z0 = 0;

        goto label2;

     label6:
        $z2 = 0;

        goto label3;

     label7:
        return $z1;

     label8:
        return $z1;
    }

    private final boolean updateOomAdjLocked(com.android.server.am.ProcessRecord, int, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r2;
        int $i0, $i1, $i2;
        android.app.IApplicationThread $r3;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.android.server.am.ProcessRecord;

        $r1.<com.android.server.am.ProcessRecord: int hiddenAdj> = $i0;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 != null goto label1;

        return 1;

     label1:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord)>($r1, $i0, $r2);

        $i1 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i1 == 0 goto label4;

        $i1 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i1 == $i2 goto label4;

        $i1 = $r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        $i2 = $r1.<com.android.server.am.ProcessRecord: int setRawAdj>;

        if $i1 == $i2 goto label3;

        $i1 = $r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 <= $i2 goto label5;

        $i1 = $r1.<com.android.server.am.ProcessRecord: int setRawAdj>;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int FOREGROUND_APP_ADJ>;

        if $i1 > $i2 goto label5;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcLocked(com.android.server.am.ProcessRecord)>($r1);

     label2:
        $i1 = $r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        $r1.<com.android.server.am.ProcessRecord: int setRawAdj> = $i1;

     label3:
        $i1 = $r1.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i0 == $i1 goto label4;

        $i1 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $z0 = staticinvoke <android.os.Process: boolean setOomAdj(int,int)>($i1, $i0);

        if $z0 == 0 goto label6;

        $r1.<com.android.server.am.ProcessRecord: int setAdj> = $i0;

     label4:
        return 1;

     label5:
        $i1 = $r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        $i2 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

        if $i1 < $i2 goto label2;

        $i1 = $r1.<com.android.server.am.ProcessRecord: int setRawAdj>;

        $i2 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

        if $i1 >= $i2 goto label2;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcLocked(com.android.server.am.ProcessRecord)>($r1);

        goto label2;

     label6:
        return 0;
    }

    private void updateUsageStats(com.android.server.am.HistoryRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.HistoryRecord $r1;
        boolean $z0;
        com.android.server.am.UsageStatsService $r2;
        android.content.ComponentName $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.HistoryRecord;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        $r3 = $r1.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        virtualinvoke $r2.<com.android.server.am.UsageStatsService: void noteResumeComponent(android.content.ComponentName)>($r3);

        return;

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        $r3 = $r1.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        virtualinvoke $r2.<com.android.server.am.UsageStatsService: void notePauseComponent(android.content.ComponentName)>($r3);

        return;
    }

    public final void activityDestroyed(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        android.os.Handler $r2;
        int $i0;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.android.server.am.HistoryRecord $r5;
        com.android.server.am.ActivityManagerService$ActivityState $r6, $r7;
        long $l1;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int,java.lang.Object)>(17, $r1);

        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i0 < 0 goto label2;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $r6 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r7 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState DESTROYING>;

        if $r6 != $r7 goto label2;

        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeActivityFromHistoryLocked(com.android.server.am.HistoryRecord)>($r5);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

     label2:
        exitmonitor $r0;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void activityIdle(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        long $l0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void activityIdleInternal(android.os.IBinder,boolean)>($r1, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

        return;
    }

    final void activityIdleInternal(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0, $z1, $z2;
        java.lang.Exception $r1;
        java.util.ArrayList $r2, $r3, $r4, $r14;
        android.os.IBinder $r5;
        android.app.IApplicationThread $r6, $r13;
        android.os.Handler $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r8;
        com.android.server.am.HistoryRecord $r9, $r10;
        android.os.PowerManager$WakeLock $r11;
        com.android.server.am.ProcessRecord $r12;
        java.lang.Throwable $r15, $r16, $r17, $r19;
        android.content.Intent $r18;
        long $l4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r5 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $r2 = null;

        $r4 = null;

        $r6 = null;

        $z1 = 0;

        entermonitor $r0;

        if $r5 == null goto label02;

     label01:
        $r7 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeMessages(int,java.lang.Object)>(10, $r5);

     label02:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r5, 0);

        if $i0 < 0 goto label05;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r8 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (com.android.server.am.HistoryRecord) $r8;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r10 != $r9 goto label03;

        $r11 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $z2 = virtualinvoke $r11.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z2 == 0 goto label03;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeMessages(int)>(16);

        $r11 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r11.<android.os.PowerManager$WakeLock: void release()>();

     label03:
        $r9.<com.android.server.am.HistoryRecord: boolean idle> = 1;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        $z2 = $r9.<com.android.server.am.HistoryRecord: boolean thumbnailNeeded>;

        if $z2 == 0 goto label04;

        $r12 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label04;

        $r12 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r12.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 == null goto label04;

        $r12 = $r9.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r6 = $r12.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r9.<com.android.server.am.HistoryRecord: boolean thumbnailNeeded> = 0;

     label04:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void ensureActivitiesVisibleLocked(com.android.server.am.HistoryRecord,int)>(null, 0);

        $z2 = $r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z2 != 0 goto label05;

        if $z0 != 0 goto label05;

        $r0.<com.android.server.am.ActivityManagerService: boolean mBooted> = 1;

        $z1 = 1;

     label05:
        $r3 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList processStoppingActivitiesLocked(boolean)>(1);

        if $r3 == null goto label18;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label06:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mFinishingActivities>;

        $i2 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label08;

        $r2 = new java.util.ArrayList;

        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mFinishingActivities>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

     label07:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mFinishingActivities>;

        virtualinvoke $r14.<java.util.ArrayList: void clear()>();

     label08:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mCancelledThumbnails>;

        $i0 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label10;

        $r4 = new java.util.ArrayList;

        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mCancelledThumbnails>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

     label09:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mCancelledThumbnails>;

        virtualinvoke $r14.<java.util.ArrayList: void clear()>();

     label10:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        $r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

        exitmonitor $r0;

     label11:
        if $r6 == null goto label13;

     label12:
        interfaceinvoke $r6.<android.app.IApplicationThread: void requestThumbnail(android.os.IBinder)>($r5);

     label13:
        $i3 = 0;

     label14:
        if $i3 >= $i1 goto label26;

        $r8 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r9 = (com.android.server.am.HistoryRecord) $r8;

        entermonitor $r0;

     label15:
        $z2 = $r9.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z2 == 0 goto label23;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord finishCurrentActivityLocked(com.android.server.am.HistoryRecord,int)>($r9, 0);

     label16:
        exitmonitor $r0;

     label17:
        $i3 = $i3 + 1;

        goto label14;

     label18:
        $i1 = 0;

        goto label06;

     label19:
        $r15 := @caughtexception;

     label20:
        exitmonitor $r0;

     label21:
        throw $r15;

     label22:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown when requesting thumbnail", $r1);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.HistoryRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)>(null, $r5, null, null, 1);

        goto label13;

     label23:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void stopActivityLocked(com.android.server.am.HistoryRecord)>($r9);

        goto label16;

     label24:
        $r16 := @caughtexception;

        exitmonitor $r0;

     label25:
        throw $r16;

     label26:
        $i1 = 0;

     label27:
        if $i1 >= $i2 goto label32;

        $r8 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r9 = (com.android.server.am.HistoryRecord) $r8;

        entermonitor $r0;

     label28:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean destroyActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r9, 1);

        exitmonitor $r0;

     label29:
        $i1 = $i1 + 1;

        goto label27;

     label30:
        $r17 := @caughtexception;

        exitmonitor $r0;

     label31:
        throw $r17;

     label32:
        $i2 = 0;

     label33:
        if $i2 >= $i0 goto label34;

        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r9 = (com.android.server.am.HistoryRecord) $r8;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.HistoryRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)>($r9, null, null, null, 1);

        $i2 = $i2 + 1;

        goto label33;

     label34:
        if $z0 == 0 goto label38;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label36;

        $r3 = new java.util.ArrayList;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $i2 = 0;

     label35:
        if $i2 >= $i0 goto label36;

        $r8 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r12 = (com.android.server.am.ProcessRecord) $r8;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>($r12, "on-hold", null);

        $i2 = $i2 + 1;

        goto label35;

     label36:
        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i0 == 1 goto label38;

        entermonitor $r0;

     label37:
        $r18 = new android.content.Intent;

        specialinvoke $r18.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.BOOT_COMPLETED", null);

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>(null, null, $r18, null, null, 0, null, null, "android.permission.RECEIVE_BOOT_COMPLETED", 0, 0, $i0, 1000);

        exitmonitor $r0;

     label38:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        if $z1 == 0 goto label44;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3050, $l4);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enableScreenAfterBoot()>();

        return;

     label39:
        $r19 := @caughtexception;

     label40:
        exitmonitor $r0;

     label41:
        throw $r19;

     label42:
        $r15 := @caughtexception;

        goto label20;

     label43:
        $r15 := @caughtexception;

        goto label20;

     label44:
        return;

        catch java.lang.Throwable from label01 to label07 with label19;
        catch java.lang.Throwable from label07 to label08 with label42;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label43;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label22;
        catch java.lang.Throwable from label15 to label17 with label24;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label25 with label24;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label40 to label41 with label39;
    }

    public final void activityPaused(android.os.IBinder, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        android.os.Bundle $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        long $l0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.os.Bundle;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r3;

     label1:
        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void activityPaused(android.os.IBinder,android.os.Bundle,boolean)>($r1, $r2, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

        return;
    }

    final void activityPaused(android.os.IBinder, android.os.Bundle, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        android.os.Bundle $r2;
        boolean $z0;
        int $i0;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.android.server.am.HistoryRecord $r5, $r7;
        android.os.Handler $r6;
        com.android.server.am.ActivityManagerService$ActivityState $r8;
        java.lang.Object[] $r9;
        java.lang.Integer $r10;
        java.lang.String $r11;
        java.lang.Throwable $r12;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.os.Bundle;

        $z0 := @parameter2: boolean;

        entermonitor $r0;

     label01:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i0 < 0 goto label03;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        if $z0 != 0 goto label02;

        $r5.<com.android.server.am.HistoryRecord: android.os.Bundle icicle> = $r2;

        $r5.<com.android.server.am.HistoryRecord: boolean haveState> = 1;

     label02:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeMessages(int,java.lang.Object)>(9, $r5);

        $r7 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r7 != $r5 goto label05;

        $r8 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState PAUSED>;

        $r5.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r8;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void completePauseLocked()>();

     label03:
        exitmonitor $r0;

     label04:
        return;

     label05:
        $r9 = newarray (java.lang.Object)[3];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r5);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9[0] = $r10;

        $r11 = $r5.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

        $r9[1] = $r11;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r5 == null goto label09;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        $r11 = $r5.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

     label06:
        $r9[2] = $r11;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30012, $r9);

        goto label03;

     label07:
        $r12 := @caughtexception;

        exitmonitor $r0;

     label08:
        throw $r12;

     label09:
        $r11 = "(none)";

     label10:
        goto label06;

        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label05 to label08 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
    }

    public final void activityStopped(android.os.IBinder, android.graphics.Bitmap, java.lang.CharSequence)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        android.graphics.Bitmap $r2;
        java.lang.CharSequence $r3;
        com.android.server.am.HistoryRecord $r4, $r7;
        long $l0;
        int $i1;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        com.android.server.am.ActivityManagerService$ActivityState $r8;
        boolean $z0;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 := @parameter2: java.lang.CharSequence;

        $r4 = null;

        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        entermonitor $r0;

     label1:
        $i1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i1 < 0 goto label2;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (com.android.server.am.HistoryRecord) $r6;

        $r4 = $r7;

        $r7.<com.android.server.am.HistoryRecord: android.graphics.Bitmap thumbnail> = $r2;

        $r7.<com.android.server.am.HistoryRecord: java.lang.CharSequence description> = $r3;

        $r7.<com.android.server.am.HistoryRecord: boolean stopped> = 1;

        $r8 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState STOPPED>;

        $r7.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state> = $r8;

        $z0 = $r7.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 != 0 goto label2;

        $z0 = $r7.<com.android.server.am.HistoryRecord: boolean configDestroy>;

        if $z0 == 0 goto label2;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean destroyActivityLocked(com.android.server.am.HistoryRecord,boolean)>($r7, 1);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

     label2:
        exitmonitor $r0;

     label3:
        if $r4 == null goto label4;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.HistoryRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)>($r4, null, null, null, 0);

     label4:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor $r0;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    final com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.pm.ApplicationInfo $r1;
        java.lang.String $r2;
        int $i0;
        com.android.server.am.ProcessRecord $r3, $r4;
        com.android.server.ProcessMap $r5;
        android.app.IApplicationThread $r6;
        java.util.ArrayList $r7;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = $r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int uid>;

        $r3 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)>($r2, $i0);

        $r4 = $r3;

        if $r3 != null goto label1;

        $r3 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.app.IApplicationThread,android.content.pm.ApplicationInfo,java.lang.String)>(null, $r1, null);

        $r4 = $r3;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r2 = $r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r5.<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r2, $i0, $r3);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void updateLRUListLocked(com.android.server.am.ProcessRecord,boolean)>($r3, 1);

     label1:
        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 9;

        if $i0 != 9 goto label2;

        $r4.<com.android.server.am.ProcessRecord: boolean persistent> = 1;

        $r4.<com.android.server.am.ProcessRecord: int maxAdj> = -12;

     label2:
        $r6 = $r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 != null goto label3;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int indexOf(java.lang.Object)>($r4);

        if $i0 >= 0 goto label4;

        $r7 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r2 = $r4.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>($r4, "added application", $r2);

        return $r4;

     label3:
        return $r4;

     label4:
        return $r4;
    }

    final void appNotRespondingLocked(com.android.server.am.ProcessRecord, com.android.server.am.HistoryRecord, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r20;
        com.android.server.am.HistoryRecord $r2;
        java.lang.String $r3, $r8, $r9;
        java.lang.StringBuilder $r4, $r14;
        java.util.HashMap $r5;
        boolean $z0;
        java.lang.Object[] $r6;
        int $i0, $i1;
        java.lang.Integer $r7;
        java.lang.Thread $r10;
        com.android.server.ProcessStats $r11;
        android.app.IActivityWatcher $r12;
        android.os.RemoteException $r13;
        android.os.Message $r15;
        android.os.Handler $r16;
        java.lang.Throwable $r17, $r22;
        java.util.ArrayList $r18;
        java.lang.Object $r19;
        android.app.IApplicationThread $r21;
        java.lang.InterruptedException $r23;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 := @parameter1: com.android.server.am.HistoryRecord;

        $r3 := @parameter2: java.lang.String;

        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z0 != 0 goto label32;

        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r6 = newarray (java.lang.Object)[3];

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[0] = $r7;

        $r8 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r6[1] = $r8;

        $r6[2] = $r3;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30008, $r6);

        $r8 = "1";

        $r9 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.secure", "0");

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label02;

        $z0 = virtualinvoke $r1.<com.android.server.am.ProcessRecord: boolean isInterestingToUserLocked()>();

        if $z0 != 0 goto label02;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 == $i1 goto label02;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcess(int)>($i0);

        return;

     label02:
        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessStatsThread>;

        entermonitor $r10;

     label03:
        $r11 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        $r8 = virtualinvoke $r11.<com.android.server.ProcessStats: java.lang.String printCurrentState()>();

        exitmonitor $r10;

     label04:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANR (application not responding) in process: ");

        $r9 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        if $r3 == null goto label05;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nAnnotation: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label05:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nCPU usage:\n");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $z0 = staticinvoke <com.android.server.am.ActivityManagerService: boolean prepareTraceFile(boolean)>(1);

        if $z0 != 0 goto label21;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i0, 3);

     label06:
        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

        if $r12 == null goto label14;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

        $r8 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

     label07:
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = interfaceinvoke $r12.<android.app.IActivityWatcher: int appNotResponding(java.lang.String,int,java.lang.String)>($r8, $i0, $r9);

     label08:
        if $i0 == 0 goto label14;

        if $i0 >= 0 goto label14;

     label09:
        virtualinvoke $r0.<java.lang.Object: void wait(long)>(2000L);

     label10:
        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

     label11:
        staticinvoke <android.os.Process: void killProcess(int)>($i0);

     label12:
        return;

     label13:
        $r13 := @caughtexception;

        $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher> = null;

     label14:
        if $r2 == null goto label29;

        $r8 = $r2.<com.android.server.am.HistoryRecord: java.lang.String shortComponentName>;

     label15:
        if $r3 == null goto label30;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANR ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void makeAppNotRespondingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,byte[])>($r1, $r8, $r3, $r9, null);

        $r15 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r15.<android.os.Message: int what> = 2;

        $r15.<android.os.Message: java.lang.Object obj> = $r5;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app", $r1);

        if $r2 == null goto label17;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("activity", $r2);

     label17:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r16.<android.os.Handler: boolean sendMessage(android.os.Message)>($r15);

        return;

     label18:
        $r17 := @caughtexception;

     label19:
        exitmonitor $r10;

     label20:
        throw $r17;

     label21:
        entermonitor $r0;

     label22:
        $r18 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i0 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label23:
        if $i0 < 0 goto label25;

        $r18 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r20 = (com.android.server.am.ProcessRecord) $r19;

        $r21 = $r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r21 == null goto label24;

        $i1 = $r20.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i1, 3);

     label24:
        $i0 = $i0 + -1;

        goto label23;

     label25:
        exitmonitor $r0;

     label26:
        goto label06;

     label27:
        $r22 := @caughtexception;

        exitmonitor $r0;

     label28:
        throw $r22;

     label29:
        $r8 = null;

        goto label15;

     label30:
        $r3 = "ANR";

        goto label16;

     label31:
        $r23 := @caughtexception;

        goto label10;

     label32:
        return;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch android.os.RemoteException from label07 to label08 with label13;
        catch java.lang.InterruptedException from label09 to label10 with label31;
        catch android.os.RemoteException from label09 to label10 with label13;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label22 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public final void attachApplication(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        java.lang.Throwable $r2;
        int $i0;
        long $l1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        entermonitor $r0;

     label1:
        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean attachApplicationLocked(android.app.IApplicationThread,int)>($r1, $i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int bindService(android.app.IApplicationThread, android.os.IBinder, android.content.Intent, java.lang.String, android.app.IServiceConnection, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        android.os.IBinder $r2;
        android.content.Intent $r3;
        java.lang.String $r4;
        android.app.IServiceConnection $r5;
        int $i0, $i1, $i2;
        com.android.server.am.ConnectionRecord $r6;
        com.android.server.am.ServiceRecord $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        com.android.server.am.ProcessRecord $r9;
        java.lang.SecurityException $r10;
        java.lang.StringBuilder $r11;
        java.lang.Throwable $r12;
        com.android.server.am.HistoryRecord $r13;
        java.util.ArrayList $r14;
        java.lang.Object $r15;
        com.android.server.am.ActivityManagerService$ServiceLookupResult $r16;
        long $l3, $l4;
        com.android.server.am.AppBindRecord $r17, $r23;
        java.util.HashMap $r18;
        java.util.HashSet $r19;
        com.android.server.am.IntentBindRecord $r20;
        android.content.ComponentName $r21;
        java.lang.Exception $r22;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: android.os.IBinder;

        $r3 := @parameter2: android.content.Intent;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: android.app.IServiceConnection;

        $i0 := @parameter5: int;

        if $r3 == null goto label01;

        $z0 = virtualinvoke $r3.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label01;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r8;

     label01:
        entermonitor $r0;

     label02:
        $r9 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        if $r9 != null goto label05;

        $r10 = new java.lang.SecurityException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when binding service ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r10;

     label03:
        $r12 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r12;

     label05:
        $r13 = null;

        if $r2 == null goto label09;

     label06:
        $i1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r2, 0);

        if $i1 >= 0 goto label08;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding with unknown activity: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        exitmonitor $r0;

     label07:
        return 0;

     label08:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r13 = (com.android.server.am.HistoryRecord) $r15;

     label09:
        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r16 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int)>($r3, $r4, $i1, $i2);

        if $r16 != null goto label11;

        exitmonitor $r0;

     label10:
        return 0;

     label11:
        $r7 = $r16.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r7 != null goto label13;

        exitmonitor $r0;

     label12:
        return -1;

     label13:
        $r7 = $r16.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord)>($r7);

        if $z0 == 0 goto label14;

     label14:
        $r17 = virtualinvoke $r7.<com.android.server.am.ServiceRecord: com.android.server.am.AppBindRecord retrieveAppBindingLocked(android.content.Intent,com.android.server.am.ProcessRecord)>($r3, $r9);

        $r6 = new com.android.server.am.ConnectionRecord;

        specialinvoke $r6.<com.android.server.am.ConnectionRecord: void <init>(com.android.server.am.AppBindRecord,com.android.server.am.HistoryRecord,android.app.IServiceConnection,int)>($r17, $r13, $r5, $i0);

        $r2 = interfaceinvoke $r5.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r18 = $r7.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

        $r19 = $r17.<com.android.server.am.AppBindRecord: java.util.HashSet connections>;

        virtualinvoke $r19.<java.util.HashSet: boolean add(java.lang.Object)>($r6);

        if $r13 == null goto label16;

        $r19 = $r13.<com.android.server.am.HistoryRecord: java.util.HashSet connections>;

        if $r19 != null goto label15;

        $r19 = new java.util.HashSet;

        specialinvoke $r19.<java.util.HashSet: void <init>()>();

        $r13.<com.android.server.am.HistoryRecord: java.util.HashSet connections> = $r19;

     label15:
        $r19 = $r13.<com.android.server.am.HistoryRecord: java.util.HashSet connections>;

        virtualinvoke $r19.<java.util.HashSet: boolean add(java.lang.Object)>($r6);

     label16:
        $r9 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r19 = $r9.<com.android.server.am.ProcessRecord: java.util.HashSet connections>;

        virtualinvoke $r19.<java.util.HashSet: boolean add(java.lang.Object)>($r6);

        $r18 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServiceConnections>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

        $i0 = $i0 & 1;

        if $i0 == 0 goto label18;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r7.<com.android.server.am.ServiceRecord: long lastActivity> = $l4;

        $i0 = virtualinvoke $r3.<android.content.Intent: int getFlags()>();

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean)>($r7, $i0, 0);

        if $z0 != 0 goto label18;

        exitmonitor $r0;

     label17:
        return 0;

     label18:
        $r9 = $r7.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r9 == null goto label19;

        $r9 = $r7.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r9);

     label19:
        $r9 = $r7.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r9 == null goto label26;

        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z0 = $r20.<com.android.server.am.IntentBindRecord: boolean received>;

     label20:
        if $z0 == 0 goto label26;

     label21:
        $r5 = $r6.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r21 = $r7.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r2 = $r20.<com.android.server.am.IntentBindRecord: android.os.IBinder binder>;

        interfaceinvoke $r5.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>($r21, $r2);

     label22:
        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r18 = $r20.<com.android.server.am.IntentBindRecord: java.util.HashMap apps>;

        $i0 = virtualinvoke $r18.<java.util.HashMap: int size()>();

        if $i0 != 1 goto label23;

        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z0 = $r20.<com.android.server.am.IntentBindRecord: boolean doRebind>;

        if $z0 == 0 goto label23;

        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean)>($r7, $r20, 1);

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l3);

        exitmonitor $r0;

     label24:
        return 1;

     label25:
        $r22 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending service ");

        $r4 = $r7.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r5 = $r6.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r2 = interfaceinvoke $r5.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r23 = $r6.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r9 = $r23.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r4 = $r9.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r4, $r22);

        goto label22;

     label26:
        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z0 = $r20.<com.android.server.am.IntentBindRecord: boolean requested>;

        if $z0 != 0 goto label23;

        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean)>($r7, $r20, 0);

     label27:
        goto label23;

        catch java.lang.Throwable from label02 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label08 to label10 with label03;
        catch java.lang.Throwable from label11 to label12 with label03;
        catch java.lang.Throwable from label13 to label17 with label03;
        catch java.lang.Throwable from label18 to label20 with label03;
        catch java.lang.Exception from label21 to label22 with label25;
        catch java.lang.Throwable from label21 to label22 with label03;
        catch java.lang.Throwable from label22 to label24 with label03;
        catch java.lang.Throwable from label25 to label27 with label03;
    }

    public final int broadcastIntent(android.app.IApplicationThread, android.content.Intent, java.lang.String, android.app.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        java.lang.String $r2, $r4, $r6, $r12;
        android.app.IIntentReceiver $r3;
        int $i0, $i1, $i2;
        android.os.Bundle $r5;
        boolean $z0, $z1, $z2;
        android.content.Intent $r7, $r8;
        java.lang.IllegalArgumentException $r9;
        com.android.server.am.ProcessRecord $r10;
        long $l3;
        android.content.pm.ApplicationInfo $r11;
        java.lang.StringBuilder $r13;
        java.lang.IllegalStateException $r14;
        java.lang.Throwable $r15;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r8 := @parameter1: android.content.Intent;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.app.IIntentReceiver;

        $i0 := @parameter4: int;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: android.os.Bundle;

        $r6 := @parameter7: java.lang.String;

        $z0 := @parameter8: boolean;

        $z1 := @parameter9: boolean;

        if $r8 == null goto label01;

        $z2 = virtualinvoke $r8.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z2 != 1 goto label01;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r9;

     label01:
        entermonitor $r0;

     label02:
        $z2 = $r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z2 != 0 goto label05;

        $i1 = virtualinvoke $r8.<android.content.Intent: int getFlags()>();

        $i2 = 536870912 & $i1;

        if $i2 == 0 goto label08;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(android.content.Intent)>($r8);

     label03:
        virtualinvoke $r7.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

     label04:
        $r8 = $r7;

     label05:
        $r10 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if $r10 == null goto label12;

        $r11 = $r10.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r12 = $r11.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

     label06:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>($r10, $r12, $r8, $r2, $r3, $i0, $r4, $r5, $r6, $z0, $z1, $i1, $i2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l3);

        exitmonitor $r0;

     label07:
        return $i0;

     label08:
        $i1 = 1073741824 & $i1;

        if $i1 != 0 goto label05;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to launch receivers of broadcast intent ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" before boot completion");

        $r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot broadcast before boot completed");

        throw $r14;

     label09:
        $r15 := @caughtexception;

     label10:
        exitmonitor $r0;

     label11:
        throw $r15;

     label12:
        $r12 = null;

        goto label06;

     label13:
        $r15 := @caughtexception;

        goto label10;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label07 with label09;
        catch java.lang.Throwable from label08 to label11 with label09;
    }

    int broadcastIntentInPackage(java.lang.String, int, android.content.Intent, java.lang.String, android.app.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1, $r3, $r5, $r7;
        int $i0, $i1;
        android.content.Intent $r2;
        android.app.IIntentReceiver $r4;
        android.os.Bundle $r6;
        boolean $z0, $z1;
        long $l2;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.Intent;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: android.app.IIntentReceiver;

        $i1 := @parameter5: int;

        $r5 := @parameter6: java.lang.String;

        $r6 := @parameter7: android.os.Bundle;

        $r7 := @parameter8: java.lang.String;

        $z0 := @parameter9: boolean;

        $z1 := @parameter10: boolean;

        entermonitor $r0;

     label1:
        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>(null, $r1, $r2, $r3, $r4, $i1, $r5, $r6, $r7, $z0, $z1, -1, $i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        exitmonitor $r0;

     label2:
        return $i0;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void cancelIntentSender(android.app.IIntentSender)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IIntentSender $r1;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r2;
        android.content.pm.IPackageManager $r3;
        com.android.server.am.PendingIntentRecord$Key $r4;
        java.lang.String $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r6;
        java.lang.SecurityException $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IIntentSender;

        $z0 = $r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label01;

        return;

     label01:
        entermonitor $r0;

     label02:
        $r2 = (com.android.server.am.PendingIntentRecord) $r1;

     label03:
        $r3 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

     label04:
        $r4 = $r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

     label05:
        $r5 = $r4.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String)>($r5);

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label06:
        if $i0 == $i1 goto label15;

     label07:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: cancelIntentSender() from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to cancel packges ");

     label08:
        $r4 = $r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

     label09:
        $r5 = $r4.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r5);

        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

     label10:
        throw $r7;

     label11:
        $r8 := @caughtexception;

     label12:
        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

     label13:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label14:
        throw $r9;

     label15:
        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord,boolean)>($r2, 1);

        exitmonitor $r0;

     label16:
        return;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch android.os.RemoteException from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch android.os.RemoteException from label07 to label08 with label11;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label03 to label11 with label13;
        catch java.lang.Throwable from label12 to label14 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
    }

    void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.PendingIntentRecord $r1;
        boolean $z0;
        java.util.HashMap $r2;
        com.android.server.am.PendingIntentRecord$Key $r3;
        com.android.server.am.HistoryRecord $r4;
        java.util.HashSet $r5;
        java.lang.ref.WeakReference $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.PendingIntentRecord;

        $z0 := @parameter1: boolean;

        $r1.<com.android.server.am.PendingIntentRecord: boolean canceled> = 1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r3 = $r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r3 = $r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r4 = $r3.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.HistoryRecord activity>;

        if $r4 == null goto label2;

        $r3 = $r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r4 = $r3.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.HistoryRecord activity>;

        $r5 = $r4.<com.android.server.am.HistoryRecord: java.util.HashSet pendingResults>;

        $r6 = $r1.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r5.<java.util.HashSet: boolean remove(java.lang.Object)>($r6);

        return;

     label1:
        return;

     label2:
        return;
    }

    int checkCallingPermission(java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1;
        int $i0, $i1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>($r1, $i0, $i1);

        return $i0;
    }

    int checkComponentPermission(java.lang.String, int, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1, $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3;
        com.android.server.am.ActivityManagerService$Identity $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;
        android.content.pm.IPackageManager $r7;
        android.os.RemoteException $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 := @parameter3: int;

        $r2 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (com.android.server.am.ActivityManagerService$Identity) $r3;

        if $r4 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkComponentPermission() adjusting {pid,uid} to {");

        $i1 = $r4.<com.android.server.am.ActivityManagerService$Identity: int pid>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = $r4.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        $i2 = $r4.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        $i1 = $r4.<com.android.server.am.ActivityManagerService$Identity: int pid>;

     label1:
        if $i2 == 0 goto label2;

        if $i2 == 1000 goto label2;

        $i3 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i1 == $i3 goto label2;

        $z0 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        if $i0 < 0 goto label4;

        if $i2 == $i0 goto label4;

        return -1;

     label4:
        if $r1 != null goto label5;

        return 0;

     label5:
        $r7 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i1 = interfaceinvoke $r7.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>($r1, $i2);

     label6:
        return $i1;

     label7:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "PackageManager is dead?!?", $r8);

        return -1;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public int checkPermission(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1;
        int $i0, $i1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>($r1, $i0, $i1, -1);

        return $i0;
    }

    public int checkUriPermission(android.net.Uri, int, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.net.Uri $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3;
        com.android.server.am.ActivityManagerService$Identity $r4;
        byte $b4;
        boolean $z0;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.net.Uri;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 := @parameter3: int;

        $r2 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (com.android.server.am.ActivityManagerService$Identity) $r3;

        if $r4 == null goto label1;

        $i2 = $r4.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        $i1 = $r4.<com.android.server.am.ActivityManagerService$Identity: int pid>;

     label1:
        $i3 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i1 != $i3 goto label2;

        return 0;

     label2:
        entermonitor $r0;

     label3:
        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean checkUriPermissionLocked(android.net.Uri,int,int)>($r1, $i2, $i0);

        if $z0 == 0 goto label8;

        $b4 = 0;

     label4:
        exitmonitor $r0;

     label5:
        return $b4;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r5;

     label8:
        $b4 = -1;

        goto label4;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1;
        android.content.pm.IPackageDataObserver $r2;
        android.content.Intent $r3;
        int $i0, $i1, $i3;
        long $l2;
        android.content.pm.IPackageManager $r4;
        java.lang.StringBuilder $r5;
        android.net.Uri $r6;
        java.lang.SecurityException $r7;
        java.lang.Throwable $r8, $r9;
        android.os.RemoteException $r10, $r11;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageDataObserver;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r4 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i3 = -1;

        entermonitor $r0;

     label02:
        $i3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String)>($r1);

     label03:
        if $i3 != -1 goto label06;

     label04:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r1);

        exitmonitor $r0;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        return 0;

     label06:
        if $i0 == $i3 goto label08;

     label07:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int)>("android.permission.CLEAR_APP_USER_DATA", $i1, $i0, -1);

        if $i0 != 0 goto label11;

     label08:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void restartPackageLocked(java.lang.String,int)>($r1, $i3);

        exitmonitor $r0;

     label09:
        interfaceinvoke $r4.<android.content.pm.IPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>($r1, $r2);

        $r3 = new android.content.Intent;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", $r1, null);

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.PACKAGE_DATA_CLEARED", $r6);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", $i3);

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>(null, null, $r3, null, null, 0, null, null, null, 0, 0, $i1, 1000);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        return 1;

     label11:
        $r7 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.CLEAR_APP_USER_DATA");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to clear data");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for process:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label12:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label13:
        throw $r8;

     label14:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        throw $r9;

     label15:
        $r10 := @caughtexception;

        goto label03;

     label16:
        $r11 := @caughtexception;

        goto label10;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch android.os.RemoteException from label02 to label03 with label15;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label09 with label12;
        catch android.os.RemoteException from label09 to label10 with label16;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label13 with label12;
        catch java.lang.Throwable from label13 to label14 with label14;
    }

    public void collectPss(com.android.server.Watchdog$PssStats)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.Watchdog$PssStats $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.android.server.am.ProcessRecord $r5;
        boolean $z0;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.Watchdog$PssStats;

        $r1.<com.android.server.Watchdog$PssStats: int mEmptyPss> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mEmptyCount> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mBackgroundPss> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mBackgroundCount> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mServicePss> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mServiceCount> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mVisiblePss> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mVisibleCount> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mForegroundPss> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mForegroundCount> = 0;

        $r1.<com.android.server.Watchdog$PssStats: int mNoPssCount> = 0;

        entermonitor $r0;

     label01:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: int[] mProcDeaths>;

        $i0 = lengthof $r2;

        $r2 = $r1.<com.android.server.Watchdog$PssStats: int[] mProcDeaths>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label04;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: int[] mProcDeaths>;

        $i1 = lengthof $r2;

     label02:
        $i2 = 0;

        $i0 = 0;

     label03:
        if $i0 >= $i1 goto label05;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: int[] mProcDeaths>;

        $i3 = $r2[$i0];

        $i2 = $i2 + $i3;

        $r2 = $r1.<com.android.server.Watchdog$PssStats: int[] mProcDeaths>;

        $r2[$i0] = $i2;

        $i0 = $i0 + 1;

        goto label03;

     label04:
        $r2 = $r1.<com.android.server.Watchdog$PssStats: int[] mProcDeaths>;

        $i1 = lengthof $r2;

        goto label02;

     label05:
        $r2 = $r1.<com.android.server.Watchdog$PssStats: int[] mProcDeaths>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label06;

        $r2 = $r1.<com.android.server.Watchdog$PssStats: int[] mProcDeaths>;

        $r2[$i0] = 0;

        $i0 = $i0 + 1;

        goto label05;

     label06:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label07:
        if $i0 < 0 goto label17;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.ProcessRecord) $r4;

        $z0 = $r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label09;

     label08:
        $i0 = $i0 + -1;

        goto label07;

     label09:
        $i1 = $r5.<com.android.server.am.ProcessRecord: int lastPss>;

        if $i1 != 0 goto label12;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mNoPssCount>;

        $i1 = $i1 + 1;

        $r1.<com.android.server.Watchdog$PssStats: int mNoPssCount> = $i1;

        goto label08;

     label10:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label11:
        throw $r6;

     label12:
        $i1 = $r5.<com.android.server.am.ProcessRecord: int setAdj>;

        $i2 = <com.android.server.am.ActivityManagerService: int EMPTY_APP_ADJ>;

        if $i1 != $i2 goto label13;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mEmptyPss>;

        $i2 = $r5.<com.android.server.am.ProcessRecord: int lastPss>;

        $i1 = $i1 + $i2;

        $r1.<com.android.server.Watchdog$PssStats: int mEmptyPss> = $i1;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mEmptyCount>;

        $i1 = $i1 + 1;

        $r1.<com.android.server.Watchdog$PssStats: int mEmptyCount> = $i1;

        goto label08;

     label13:
        $i1 = $r5.<com.android.server.am.ProcessRecord: int setAdj>;

        $i2 = <com.android.server.am.ActivityManagerService: int CONTENT_PROVIDER_ADJ>;

        if $i1 != $i2 goto label14;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mEmptyPss>;

        $i2 = $r5.<com.android.server.am.ProcessRecord: int lastPss>;

        $i1 = $i1 + $i2;

        $r1.<com.android.server.Watchdog$PssStats: int mEmptyPss> = $i1;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mEmptyCount>;

        $i1 = $i1 + 1;

        $r1.<com.android.server.Watchdog$PssStats: int mEmptyCount> = $i1;

        goto label08;

     label14:
        $i1 = $r5.<com.android.server.am.ProcessRecord: int setAdj>;

        $i2 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

        if $i1 < $i2 goto label15;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mBackgroundPss>;

        $i2 = $r5.<com.android.server.am.ProcessRecord: int lastPss>;

        $i1 = $i1 + $i2;

        $r1.<com.android.server.Watchdog$PssStats: int mBackgroundPss> = $i1;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mBackgroundCount>;

        $i1 = $i1 + 1;

        $r1.<com.android.server.Watchdog$PssStats: int mBackgroundCount> = $i1;

        goto label08;

     label15:
        $i1 = $r5.<com.android.server.am.ProcessRecord: int setAdj>;

        $i2 = $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ>;

        if $i1 < $i2 goto label16;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mVisiblePss>;

        $i2 = $r5.<com.android.server.am.ProcessRecord: int lastPss>;

        $i1 = $i1 + $i2;

        $r1.<com.android.server.Watchdog$PssStats: int mVisiblePss> = $i1;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mVisibleCount>;

        $i1 = $i1 + 1;

        $r1.<com.android.server.Watchdog$PssStats: int mVisibleCount> = $i1;

        goto label08;

     label16:
        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mForegroundPss>;

        $i2 = $r5.<com.android.server.am.ProcessRecord: int lastPss>;

        $i1 = $i1 + $i2;

        $r1.<com.android.server.Watchdog$PssStats: int mForegroundPss> = $i1;

        $i1 = $r1.<com.android.server.Watchdog$PssStats: int mForegroundCount>;

        $i1 = $i1 + 1;

        $r1.<com.android.server.Watchdog$PssStats: int mForegroundCount> = $i1;

        goto label08;

     label17:
        exitmonitor $r0;

     label18:
        return;

        catch java.lang.Throwable from label01 to label11 with label10;
        catch java.lang.Throwable from label12 to label18 with label10;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService $r0;
        java.io.PrintWriter $r1;
        java.lang.String[] $r2;
        java.io.FileDescriptor $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;
        java.lang.Throwable $r7, $r19;
        java.util.ArrayList $r8;
        com.android.server.am.HistoryRecord $r9;
        java.lang.Object $r10;
        com.android.server.am.TaskRecord $r11;
        com.android.server.ProcessMap $r12;
        java.util.HashMap $r13;
        java.util.Collection $r14;
        java.util.Iterator $r15;
        android.util.SparseArray $r16, $r18;
        com.android.server.am.ProcessRecord $r17;
        long $l4, $l5;
        java.util.Set $r20;
        java.util.Map$Entry $r21;
        java.lang.Long $r22;
        android.content.res.Configuration $r23;
        android.os.PowerManager$WakeLock $r24;
        android.app.IActivityWatcher $r25;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 := @parameter0: java.io.FileDescriptor;

        $r1 := @parameter1: java.io.PrintWriter;

        $r2 := @parameter2: java.lang.String[];

        entermonitor $r0;

     label01:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label03;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        exitmonitor $r0;

     label02:
        return;

     label03:
        $i0 = lengthof $r2;

        if $i0 == 0 goto label07;

        $r5 = "service";

        $r6 = $r2[0];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label07;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r3, $r1, $r2);

        exitmonitor $r0;

     label04:
        return;

     label05:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label06:
        throw $r7;

     label07:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Activities in Current Activity Manager State:");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpHistoryList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String)>($r1, $r8, "  ", "History");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Running activities (most recent first):");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUActivities>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpHistoryList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String)>($r1, $r8, "  ", "Running");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label08;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Activities waiting for another to become visible:");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpHistoryList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String)>($r1, $r8, "  ", "Waiting");

     label08:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label09;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Activities waiting to stop:");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpHistoryList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String)>($r1, $r8, "  ", "Stopping");

     label09:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mFinishingActivities>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label10;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Activities waiting to finish:");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mFinishingActivities>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpHistoryList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String)>($r1, $r8, "  ", "Finishing");

     label10:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPausingActivity: ");

        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mResumedActivity: ");

        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mFocusedActivity: ");

        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mFocusedActivity>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLastPausedActivity: ");

        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mLastPausedActivity>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label12;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Recent tasks in Current Activity Manager State:");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label12;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Recent Task #");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r11 = (com.android.server.am.TaskRecord) $r10;

        virtualinvoke $r11.<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        $i1 = $i1 + 1;

        goto label11;

     label12:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurTask: ");

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mCurTask>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Processes in Current Activity Manager State:");

        $z0 = 0;

        $i0 = 0;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r13 = virtualinvoke $r12.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.util.Collection values()>();

        $r15 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label19;

        $r10 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (android.util.SparseArray) $r10;

        $i1 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        $i2 = 0;

     label14:
        if $i2 >= $i1 goto label13;

        if $z0 != 0 goto label15;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  All known processes:");

        $z0 = 1;

     label15:
        $r10 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>($i2);

        $r17 = (com.android.server.am.ProcessRecord) $r10;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $z1 = $r17.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label18;

        $r5 = "  *PERSISTENT* Process [";

     label16:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = $r17.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] UID ");

        $i3 = virtualinvoke $r16.<android.util.SparseArray: int keyAt(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke $r17.<com.android.server.am.ProcessRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        $z1 = $r17.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label17;

        $i0 = $i0 + 1;

     label17:
        $i2 = $i2 + 1;

        goto label14;

     label18:
        $r5 = "  Process [";

        goto label16;

     label19:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label21;

        if $z0 == 0 goto label20;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label20:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Running processes (most recent first):");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean)>($r1, $r8, "    ", "Running Norm Proc", "Running PERS Proc", 1);

        $z0 = 1;

     label21:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r16;

     label22:
        $r18 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i1 = virtualinvoke $r18.<android.util.SparseArray: int size()>();

        if $i1 <= 0 goto label25;

        if $z0 == 0 goto label23;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label23:
        $z0 = 1;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  PID mappings:");

        $i1 = 0;

     label24:
        $r18 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i2 = virtualinvoke $r18.<android.util.SparseArray: int size()>();

        if $i1 >= $i2 goto label25;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    PID #");

        $r18 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i2 = virtualinvoke $r18.<android.util.SparseArray: int keyAt(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r18 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r10 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $i1 = $i1 + 1;

        goto label24;

     label25:
        exitmonitor $r16;

     label26:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i1 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        if $i1 <= 0 goto label33;

        if $z0 == 0 goto label27;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label27:
        $z0 = 1;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Foreground Processes:");

        $i1 = 0;

     label28:
        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i2 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        if $i1 >= $i2 goto label33;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    PID #");

        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i2 = virtualinvoke $r16.<android.util.SparseArray: int keyAt(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r16 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $r10 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

     label29:
        $i1 = $i1 + 1;

        goto label28;

     label30:
        $r19 := @caughtexception;

     label31:
        exitmonitor $r16;

     label32:
        throw $r19;

     label33:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label35;

        if $z0 == 0 goto label34;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label34:
        $z0 = 1;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Persisent processes that are starting:");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean)>($r1, $r8, "    ", "Starting Initial Proc", "Restarting PERS Proc", 0);

     label35:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStartingProcesses>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label37;

        if $z0 == 0 goto label36;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label36:
        $z0 = 1;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are starting:");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStartingProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean)>($r1, $r8, "    ", "Starting Norm Proc", "Starting PERS Proc", 0);

     label37:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label39;

        if $z0 == 0 goto label38;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label38:
        $z0 = 1;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are being removed:");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean)>($r1, $r8, "    ", "Removed Norm Proc", "Removed PERS Proc", 0);

     label39:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label41;

        if $z0 == 0 goto label40;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label40:
        $z0 = 1;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are on old until the system is ready:");

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean)>($r1, $r8, "    ", "OnHold Norm Proc", "OnHold PERS Proc", 0);

     label41:
        $r12 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessCrashTimes>;

        $r13 = virtualinvoke $r12.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $i1 = virtualinvoke $r13.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label47;

        if $z0 == 0 goto label42;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label42:
        $z0 = 1;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Time since processes crashed:");

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r12 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessCrashTimes>;

        $r13 = virtualinvoke $r12.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $r20 = virtualinvoke $r13.<java.util.HashMap: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label43:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label47;

        $r10 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (java.util.Map$Entry) $r10;

        $r10 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (android.util.SparseArray) $r10;

        $i1 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

     label44:
        $i2 = 0;

     label45:
        if $i2 >= $i1 goto label43;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Process ");

        $r10 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r10;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid ");

        $i3 = virtualinvoke $r16.<android.util.SparseArray: int keyAt(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": last crashed ");

        $r10 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>($i2);

        $r22 = (java.lang.Long) $r10;

        $l5 = virtualinvoke $r22.<java.lang.Long: long longValue()>();

        $l5 = $l4 - $l5;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms ago");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

     label46:
        $i2 = $i2 + 1;

        goto label45;

     label47:
        $r12 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mBadProcesses>;

        $r13 = virtualinvoke $r12.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $i1 = virtualinvoke $r13.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label53;

        if $z0 == 0 goto label48;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label48:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Bad processes:");

        $r12 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mBadProcesses>;

        $r13 = virtualinvoke $r12.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $r20 = virtualinvoke $r13.<java.util.HashMap: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label49:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label53;

        $r10 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (java.util.Map$Entry) $r10;

        $r10 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (android.util.SparseArray) $r10;

        $i1 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

     label50:
        $i2 = 0;

     label51:
        if $i2 >= $i1 goto label49;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Bad process ");

        $r10 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r10;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid ");

        $i3 = virtualinvoke $r16.<android.util.SparseArray: int keyAt(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": crashed at time ");

        $r10 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

     label52:
        $i2 = $i2 + 1;

        goto label51;

     label53:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Total persistent processes: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHomeProcess: ");

        $r17 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mConfiguration: ");

        $r23 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mStartRunning=");

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSystemReady=");

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBooting=");

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBooted=");

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFactoryTest=");

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSleeping=");

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mGoingToSleep=");

        $r24 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mGoingToSleep>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLaunchingActivity=");

        $r24 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDebugApp=");

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/orig=");

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDebugTransient=");

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mOrigWaitForDebugger=");

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAlwaysFinishActivities=");

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWatcher=");

        $r25 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        exitmonitor $r0;

     label54:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label07 to label22 with label05;
        catch java.lang.Throwable from label22 to label26 with label30;
        catch java.lang.Throwable from label26 to label29 with label05;
        catch java.lang.Throwable from label31 to label32 with label30;
        catch java.lang.Throwable from label32 to label44 with label05;
        catch java.lang.Throwable from label45 to label46 with label05;
        catch java.lang.Throwable from label47 to label50 with label05;
        catch java.lang.Throwable from label51 to label52 with label05;
        catch java.lang.Throwable from label53 to label54 with label05;
    }

    void dumpBroadcasts(java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.io.PrintWriter $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.android.server.am.ReceiverList $r8;
        android.app.IIntentReceiver $r9;
        java.lang.Throwable $r10;
        com.android.server.IntentResolver $r11;
        android.util.PrintWriterPrinter $r12;
        java.util.ArrayList $r13;
        com.android.server.am.BroadcastRecord $r14;
        java.util.Set $r15;
        java.util.Map$Entry $r16;
        android.os.Handler $r17;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.io.PrintWriter;

        entermonitor $r0;

     label01:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label03;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        exitmonitor $r0;

     label02:
        return;

     label03:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Broadcasts in Current Activity Manager State:");

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label07;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Registered Receivers:");

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.am.ReceiverList) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Receiver ");

        $r9 = $r8.<com.android.server.am.ReceiverList: android.app.IIntentReceiver receiver>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r8.<com.android.server.am.ReceiverList: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        goto label04;

     label05:
        $r10 := @caughtexception;

        exitmonitor $r0;

     label06:
        throw $r10;

     label07:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Receiver Resolver Table:");

        $r11 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        $r12 = new android.util.PrintWriterPrinter;

        specialinvoke $r12.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>($r1);

        virtualinvoke $r11.<com.android.server.IntentResolver: void dump(android.util.Printer,java.lang.String)>($r12, "  ");

        $r13 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label08;

        $r13 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label08;

        $r14 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if $r14 == null goto label15;

     label08:
        $r13 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label09;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Active broadcasts:");

     label09:
        $r13 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label10:
        if $i0 < 0 goto label11;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Broadcast #");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        $r13 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        $r7 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r14 = (com.android.server.am.BroadcastRecord) $r7;

        virtualinvoke $r14.<com.android.server.am.BroadcastRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        $i0 = $i0 + -1;

        goto label10;

     label11:
        $r13 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label12;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Active serialized broadcasts:");

     label12:
        $r13 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label13:
        if $i0 < 0 goto label14;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Serialized Broadcast #");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        $r13 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mOrderedBroadcasts>;

        $r7 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r14 = (com.android.server.am.BroadcastRecord) $r7;

        virtualinvoke $r14.<com.android.server.am.BroadcastRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        $i0 = $i0 + -1;

        goto label13;

     label14:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Pending broadcast:");

        $r14 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if $r14 == null goto label18;

        $r14 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        virtualinvoke $r14.<com.android.server.am.BroadcastRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

     label15:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mBroadcastsScheduled=");

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mBroadcastsScheduled>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mStickyBroadcasts>;

        if $r4 == null goto label19;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Sticky broadcasts:");

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mStickyBroadcasts>;

        $r15 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Sticky action ");

        $r7 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r7;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        $r7 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.util.ArrayList) $r7;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label17:
        if $i1 >= $i0 goto label16;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r7 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        $i1 = $i1 + 1;

        goto label17;

     label18:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("    (null)");

        goto label15;

     label19:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  mHandler:");

        $r17 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r12 = new android.util.PrintWriterPrinter;

        specialinvoke $r12.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>($r1);

        virtualinvoke $r17.<android.os.Handler: void dump(android.util.Printer,java.lang.String)>($r12, "    ");

        exitmonitor $r0;

     label20:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label06 with label05;
        catch java.lang.Throwable from label07 to label20 with label05;
    }

    void dumpProviders(java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.io.PrintWriter $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;
        java.util.HashMap $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        java.util.Map$Entry $r8;
        com.android.server.am.ContentProviderRecord $r9;
        java.lang.Throwable $r10;
        java.util.ArrayList $r11;
        android.util.SparseArray $r12;
        java.util.Collection $r13;
        com.android.server.am.UriPermission $r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.io.PrintWriter;

        entermonitor $r0;

     label01:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label03;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        exitmonitor $r0;

     label02:
        return;

     label03:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Content Providers in Current Activity Manager State:");

        $z0 = 0;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label08;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Published content providers (by name):");

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (com.android.server.am.ContentProviderRecord) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Provider ");

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r7;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r9.<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        goto label04;

     label05:
        $r10 := @caughtexception;

        exitmonitor $r0;

     label06:
        throw $r10;

     label07:
        $z0 = 1;

     label08:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label12;

        if $z0 == 0 goto label09;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label09:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Published content providers (by class):");

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (com.android.server.am.ContentProviderRecord) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Provider ");

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r7;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r9.<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        goto label10;

     label11:
        $z0 = 1;

     label12:
        $r11 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label15;

        if $z0 == 0 goto label13;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label13:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Launching content providers:");

        $r11 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label14:
        if $i0 < 0 goto label15;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Provider #");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        $r11 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r7 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (com.android.server.am.ContentProviderRecord) $r7;

        virtualinvoke $r9.<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        $i0 = $i0 + -1;

        goto label14;

     label15:
        virtualinvoke $r1.<java.io.PrintWriter: void println()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Granted Uri Permissions:");

        $i0 = 0;

     label16:
        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i1 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        if $i0 >= $i1 goto label19;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i1 = virtualinvoke $r12.<android.util.SparseArray: int keyAt(int)>($i0);

        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r7 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>($i0);

        $r4 = (java.util.HashMap) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Uris granted to uid ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        $r13 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label17:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.android.server.am.UriPermission) $r7;

        virtualinvoke $r14.<com.android.server.am.UriPermission: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        goto label17;

     label18:
        $i0 = $i0 + 1;

        goto label16;

     label19:
        exitmonitor $r0;

     label20:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label06 with label05;
        catch java.lang.Throwable from label08 to label20 with label05;
    }

    void dumpSenders(java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.io.PrintWriter $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.ref.WeakReference $r8;
        com.android.server.am.PendingIntentRecord $r9;
        java.lang.Throwable $r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.io.PrintWriter;

        entermonitor $r0;

     label01:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label03;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        exitmonitor $r0;

     label02:
        return;

     label03:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Intent Senders in Current Activity Manager State:");

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label10;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.ref.WeakReference) $r7;

        if $r8 == null goto label08;

        $r7 = virtualinvoke $r8.<java.lang.ref.Reference: java.lang.Object get()>();

        $r9 = (com.android.server.am.PendingIntentRecord) $r7;

     label05:
        if $r9 == null goto label09;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  IntentSender ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r9.<com.android.server.am.PendingIntentRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        goto label04;

     label06:
        $r10 := @caughtexception;

        exitmonitor $r0;

     label07:
        throw $r10;

     label08:
        $r9 = null;

        goto label05;

     label09:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  IntentSender ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        goto label04;

     label10:
        exitmonitor $r0;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label07 with label06;
        catch java.lang.Throwable from label09 to label11 with label06;
    }

    protected void dumpService(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService $r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2;
        java.lang.String[] $r3, $r5;
        int $i0;
        java.lang.String $r4, $r12;
        com.android.server.am.ServiceRecord $r6;
        android.content.ComponentName $r7;
        java.util.HashMap $r8;
        java.lang.Object $r9;
        java.util.Collection $r10;
        java.util.Iterator $r11;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.io.PrintWriter;

        $r3 := @parameter2: java.lang.String[];

        $i0 = lengthof $r3;

        if $i0 != 1 goto label2;

        $r4 = null;

        $r5 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

        $r6 = null;

     label1:
        if $r6 == null goto label5;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void dumpService(java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ServiceRecord,java.lang.String[])>($r1, $r2, $r6, $r5);

        return;

     label2:
        $r4 = $r3[1];

        $r7 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r4);

        if $r7 == null goto label4;

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        $r6 = (com.android.server.am.ServiceRecord) $r9;

     label3:
        $i0 = lengthof $r3;

        $i0 = $i0 - 2;

        $r5 = newarray (java.lang.String)[$i0];

        $i0 = lengthof $r3;

        if $i0 <= 2 goto label1;

        $i0 = lengthof $r3;

        $i0 = $i0 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 2, $r5, 0, $i0);

        goto label1;

     label4:
        $r6 = null;

        goto label3;

     label5:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r10 = virtualinvoke $r8.<java.util.HashMap: java.util.Collection values()>();

        $r11 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r9 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.am.ServiceRecord) $r9;

        if $r4 == null goto label7;

        $r7 = $r6.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r12 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String flattenToString()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean contains(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label6;

     label7:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void dumpService(java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ServiceRecord,java.lang.String[])>($r1, $r2, $r6, $r5);

        goto label6;

     label8:
        return;
    }

    void dumpServices(java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.io.PrintWriter $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        com.android.server.am.ServiceRecord $r8;
        java.lang.Throwable $r9;
        java.util.ArrayList $r10;
        com.android.server.am.ConnectionRecord $r11;
        com.android.server.am.AppBindRecord $r12;
        android.app.IServiceConnection $r13;
        android.os.IBinder $r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.io.PrintWriter;

        entermonitor $r0;

     label01:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label03;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        exitmonitor $r0;

     label02:
        return;

     label03:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Services in Current Activity Manager State:");

        $z0 = 0;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label08;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Active services:");

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.am.ServiceRecord) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Service ");

        $r3 = $r8.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r8.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        goto label04;

     label05:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label06:
        throw $r9;

     label07:
        $z0 = 1;

     label08:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label12;

        if $z0 == 0 goto label09;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label09:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Pending services:");

        $i0 = 0;

     label10:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label11;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingServices>;

        $r7 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (com.android.server.am.ServiceRecord) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Pending Service ");

        $r3 = $r8.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r8.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        $i0 = $i0 + 1;

        goto label10;

     label11:
        $z0 = 1;

     label12:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices>;

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label16;

        if $z0 == 0 goto label13;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label13:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Restarting services:");

        $i0 = 0;

     label14:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices>;

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label15;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices>;

        $r7 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (com.android.server.am.ServiceRecord) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Restarting Service ");

        $r3 = $r8.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r8.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        $i0 = $i0 + 1;

        goto label14;

     label15:
        $z0 = 1;

     label16:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices>;

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label20;

        if $z0 == 0 goto label17;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label17:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Stopping services:");

        $i0 = 0;

     label18:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices>;

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label19;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices>;

        $r7 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (com.android.server.am.ServiceRecord) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Stopping Service ");

        $r3 = $r8.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r8.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        $i0 = $i0 + 1;

        goto label18;

     label19:
        $z0 = 1;

     label20:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServiceConnections>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label23;

        if $z0 == 0 goto label21;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

     label21:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("  Connection bindings to services:");

        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServiceConnections>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label22:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.android.server.am.ConnectionRecord) $r7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r12 = $r11.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r8 = $r12.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r3 = $r8.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r13 = $r11.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r14 = interfaceinvoke $r13.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke $r11.<com.android.server.am.ConnectionRecord: void dump(java.io.PrintWriter,java.lang.String)>($r1, "    ");

        goto label22;

     label23:
        exitmonitor $r0;

     label24:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label06 with label05;
        catch java.lang.Throwable from label08 to label24 with label05;
    }

    void enableScreenAfterBoot()
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.WindowManagerService $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r1.<com.android.server.WindowManagerService: void enableScreenAfterBoot()>();

        return;
    }

    void enforceCallingPermission(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1, $r2;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>($r1);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r1);

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r4;
    }

    public final void enterSafeMode()
    {
        com.android.server.am.ActivityManagerService $r0;
        android.view.WindowManager$LayoutParams $r1;
        boolean $z0;
        android.content.pm.IPackageManager $r2;
        android.content.Context $r3;
        android.view.LayoutInflater $r4;
        android.view.View $r5;
        android.graphics.drawable.Drawable $r6;
        int $i0;
        java.lang.Object $r7;
        android.view.WindowManager $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor $r0;

     label1:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

     label2:
        if $z0 != 0 goto label5;

     label3:
        $r2 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        interfaceinvoke $r2.<android.content.pm.IPackageManager: void enterSafeMode()>();

     label4:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        $r5 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367114, null);

        $r1 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r1.<android.view.WindowManager$LayoutParams: void <init>()>();

        $r1.<android.view.WindowManager$LayoutParams: int type> = 2006;

        $r1.<android.view.ViewGroup$LayoutParams: int width> = -2;

        $r1.<android.view.ViewGroup$LayoutParams: int height> = -2;

        $r1.<android.view.WindowManager$LayoutParams: int gravity> = 83;

        $r6 = virtualinvoke $r5.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $i0 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getOpacity()>();

        $r1.<android.view.WindowManager$LayoutParams: int format> = $i0;

        $r1.<android.view.WindowManager$LayoutParams: int flags> = 24;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r8 = (android.view.WindowManager) $r7;

        interfaceinvoke $r8.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r5, $r1);

     label5:
        exitmonitor $r0;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label8:
        throw $r9;

     label9:
        $r10 := @caughtexception;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public final boolean finishActivity(android.os.IBinder, int, android.content.Intent)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        int $i0;
        android.content.Intent $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        android.app.IActivityWatcher $r4;
        com.android.server.am.HistoryRecord $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;
        long $l1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.Intent;

        if $r2 == null goto label01;

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r3;

     label01:
        entermonitor $r0;

     label02:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

        if $r4 == null goto label12;

        $r5 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(android.os.IBinder,int)>($r1, 0);

     label03:
        if $r5 == null goto label12;

        $z0 = 1;

     label04:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

        $r6 = $r5.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

     label05:
        $z0 = interfaceinvoke $r4.<android.app.IActivityWatcher: boolean activityResuming(java.lang.String)>($r6);

     label06:
        if $z0 != 0 goto label12;

     label07:
        exitmonitor $r0;

     label08:
        return 0;

     label09:
        $r7 := @caughtexception;

        $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher> = null;

        goto label06;

     label10:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label11:
        throw $r8;

     label12:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String)>($r1, $i0, $r2, "app-request");

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label13:
        return $z0;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch java.lang.Throwable from label04 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label09 to label11 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
    }

    public void finishInstrumentation(android.app.IApplicationThread, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        int $i0;
        android.os.Bundle $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        com.android.server.am.ProcessRecord $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        long $l1;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Bundle;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r3;

     label1:
        entermonitor $r0;

     label2:
        $r4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        if $r4 != null goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishInstrumentation: no app for ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        exitmonitor $r0;

     label3:
        return;

     label4:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>($r4, $i0, $r2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void finishInstrumentationLocked(com.android.server.am.ProcessRecord, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        int $i0;
        android.os.Bundle $r2;
        android.app.IInstrumentationWatcher $r3;
        android.content.ComponentName $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Bundle;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher>;

        if $r3 == null goto label2;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher>;

        $r4 = $r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

     label1:
        interfaceinvoke $r3.<android.app.IInstrumentationWatcher: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>($r4, $i0, $r2);

     label2:
        $r1.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher> = null;

        $r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass> = null;

        $r1.<com.android.server.am.ProcessRecord: java.lang.String instrumentationProfileFile> = null;

        $r1.<com.android.server.am.ProcessRecord: android.os.Bundle instrumentationArguments> = null;

        $r5 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void uninstallPackageLocked(java.lang.String,int,boolean)>($r5, -1, 0);

        return;

     label3:
        $r6 := @caughtexception;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void finishOtherInstances(android.os.IBinder, android.content.ComponentName)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        android.content.ComponentName $r2, $r7;
        long $l0;
        java.util.ArrayList $r3;
        int $i1, $i2;
        com.android.server.am.TaskRecord $r4, $r8;
        java.lang.Object $r5;
        com.android.server.am.HistoryRecord $r6;
        boolean $z0;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.content.ComponentName;

        entermonitor $r0;

     label1:
        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = null;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label4;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r6 = (com.android.server.am.HistoryRecord) $r5;

        $r7 = $r6.<com.android.server.am.HistoryRecord: android.content.ComponentName realActivity>;

        $z0 = virtualinvoke $r7.<android.content.ComponentName: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        if $r6 == $r1 goto label3;

        $r8 = $r6.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r4 == $r8 goto label3;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r6, $i2, 0, null, "others");

        if $z0 == 0 goto label3;

        $i2 = $i2 + -1;

        $i1 = $i1 + -1;

     label3:
        $r4 = $r6.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i2 = $i2 + 1;

        goto label2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

        exitmonitor $r0;

     label5:
        return;

     label6:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void finishReceiver(android.os.IBinder, int, java.lang.String, android.os.Bundle, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        int $i0;
        java.lang.String $r2;
        android.os.Bundle $r3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r4;
        long $l1;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.os.Bundle;

        $z0 := @parameter4: boolean;

        if $r3 == null goto label1;

        $z1 = virtualinvoke $r3.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z1 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r4;

     label1:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        entermonitor $r0;

     label2:
        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,boolean)>($r1, $i0, $r2, $r3, $z0, 1);

        exitmonitor $r0;

     label3:
        if $z0 == 0 goto label4;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void processNextBroadcast(boolean)>(0);

     label4:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r0;

     label7:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public final void finishSubActivity(android.os.IBinder, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        java.lang.String $r2, $r8;
        int $i0, $i1, $i3;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.android.server.am.HistoryRecord $r5, $r6, $r7;
        long $l2;
        boolean $z0;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        entermonitor $r0;

     label01:
        $i1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i1 >= 0 goto label03;

        exitmonitor $r0;

     label02:
        return;

     label03:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

     label04:
        if $i1 < 0 goto label08;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r6 = (com.android.server.am.HistoryRecord) $r4;

        $r7 = $r6.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo>;

        if $r7 != $r5 goto label07;

        $i3 = $r6.<com.android.server.am.HistoryRecord: int requestCode>;

        if $i3 != $i0 goto label07;

        $r8 = $r6.<com.android.server.am.HistoryRecord: java.lang.String resultWho>;

        if $r8 != null goto label05;

        if $r2 == null goto label06;

     label05:
        $r8 = $r6.<com.android.server.am.HistoryRecord: java.lang.String resultWho>;

        if $r8 == null goto label07;

        $r8 = $r6.<com.android.server.am.HistoryRecord: java.lang.String resultWho>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label07;

     label06:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r6, $i1, 0, null, "request-sub");

     label07:
        $i1 = $i1 + -1;

        goto label04;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        exitmonitor $r0;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    void foregroundTokenDied(com.android.server.am.ActivityManagerService$ForegroundToken)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ActivityManagerService$ForegroundToken $r1, $r5;
        android.util.SparseArray $r2, $r3;
        int $i0;
        java.lang.Object $r4;
        com.android.server.am.ProcessRecord $r6;
        java.lang.Throwable $r7, $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ActivityManagerService$ForegroundToken;

        entermonitor $r0;

     label01:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r2;

     label02:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i0 = $r1.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.ActivityManagerService$ForegroundToken) $r4;

        if $r5 == $r1 goto label05;

        exitmonitor $r2;

     label03:
        exitmonitor $r0;

     label04:
        return;

     label05:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i0 = $r1.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>($i0);

        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i0 = $r1.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r6 = (com.android.server.am.ProcessRecord) $r4;

        if $r6 != null goto label10;

        exitmonitor $r2;

     label06:
        exitmonitor $r0;

     label07:
        return;

     label08:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label09:
        throw $r7;

     label10:
        $r6.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        $r6.<com.android.server.am.ProcessRecord: boolean foregroundServices> = 0;

        exitmonitor $r2;

     label11:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        exitmonitor $r0;

     label12:
        return;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor $r2;

     label15:
        throw $r8;

     label16:
        nop;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label08;
    }

    public android.content.ComponentName getActivityClassForToken(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        int $i0;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.am.HistoryRecord $r4;
        android.content.Intent $r5;
        android.content.ComponentName $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        entermonitor $r0;

     label1:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i0 < 0 goto label3;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $r5 = $r4.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.ComponentName getComponent()>();

        exitmonitor $r0;

     label2:
        return $r6;

     label3:
        exitmonitor $r0;

     label4:
        return null;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.ComponentName getCallingActivity(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        com.android.server.am.HistoryRecord $r2;
        android.content.Intent $r3;
        android.content.ComponentName $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        entermonitor $r0;

     label1:
        $r2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord getCallingRecordLocked(android.os.IBinder)>($r1);

        if $r2 == null goto label4;

        $r3 = $r2.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.ComponentName getComponent()>();

     label2:
        exitmonitor $r0;

     label3:
        return $r4;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public java.lang.String getCallingPackage(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        com.android.server.am.HistoryRecord $r2;
        com.android.server.am.ProcessRecord $r3;
        java.lang.String $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        entermonitor $r0;

     label1:
        $r2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord getCallingRecordLocked(android.os.IBinder)>($r1);

        if $r2 == null goto label4;

        $r3 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r3 == null goto label4;

        $r3 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r4 = $r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label2:
        exitmonitor $r0;

     label3:
        return $r4;

     label4:
        $r4 = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public android.content.res.Configuration getConfiguration()
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.res.Configuration $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor $r0;

     label1:
        $r1 = new android.content.res.Configuration;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r1.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r2);

        exitmonitor $r0;

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r4;
        android.app.IActivityManager$ContentProviderHolder $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null IApplicationThread when getting content provider ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label1:
        $r5 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread,java.lang.String)>($r1, $r2);

        return $r5;
    }

    public android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.pm.ConfigurationInfo $r1;
        android.content.res.Configuration $r2;
        int $i0;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = new android.content.pm.ConfigurationInfo;

        specialinvoke $r1.<android.content.pm.ConfigurationInfo: void <init>()>();

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i0 = $r2.<android.content.res.Configuration: int touchscreen>;

        $r1.<android.content.pm.ConfigurationInfo: int reqTouchScreen> = $i0;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i0 = $r2.<android.content.res.Configuration: int keyboard>;

        $r1.<android.content.pm.ConfigurationInfo: int reqKeyboardType> = $i0;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i0 = $r2.<android.content.res.Configuration: int navigation>;

        $r1.<android.content.pm.ConfigurationInfo: int reqNavigation> = $i0;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i0 = $r2.<android.content.res.Configuration: int navigation>;

        if $i0 == 1 goto label2;

        $i0 = $r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i0 = $i0 | 2;

        $r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i0;

     label2:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i0 = $r2.<android.content.res.Configuration: int keyboard>;

        if $i0 == 0 goto label3;

        $i0 = $r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i0 = $i0 | 1;

        $r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i0;

     label3:
        exitmonitor $r0;

     label4:
        return $r1;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.app.IIntentSender getIntentSender(int, java.lang.String, android.os.IBinder, java.lang.String, int, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.os.IBinder $r1;
        java.lang.String $r2, $r4, $r6;
        android.content.Intent $r3, $r19;
        com.android.server.am.PendingIntentRecord$Key $r5, r24;
        boolean $z0, $z1, $z2;
        android.content.pm.IPackageManager $r8;
        java.lang.StringBuilder $r9, r22;
        java.lang.SecurityException $r10, r23;
        android.os.RemoteException $r11;
        java.lang.Throwable $r12;
        com.android.server.am.HistoryRecord $r13;
        java.util.ArrayList $r14;
        java.lang.Object $r15;
        java.util.HashMap $r16;
        java.lang.ref.WeakReference $r17;
        com.android.server.am.PendingIntentRecord $r18, r25;
        java.util.HashSet $r20, r26;
        java.lang.IllegalArgumentException r21;
        android.app.IIntentSender r27;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r6 := @parameter1: java.lang.String;

        $r1 := @parameter2: android.os.IBinder;

        $r2 := @parameter3: java.lang.String;

        $i1 := @parameter4: int;

        $r3 := @parameter5: android.content.Intent;

        $r4 := @parameter6: java.lang.String;

        $i2 := @parameter7: int;

        if $r3 == null goto label01;

        $z0 = virtualinvoke $r3.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label01;

        r21 = new java.lang.IllegalArgumentException;

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw r21;

     label01:
        entermonitor $r0;

     label02:
        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label03:
        if $i3 == 0 goto label14;

        if $i3 == 1000 goto label14;

     label04:
        $z0 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z0 == 0 goto label14;

        $r8 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i4 = interfaceinvoke $r8.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String)>($r6);

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label05:
        if $i4 == $i5 goto label14;

        r22 = new java.lang.StringBuilder;

     label06:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: getIntentSender() from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", (need uid=");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to send as package ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

     label07:
        r23 = new java.lang.SecurityException;

     label08:
        $r10 = r23;

        specialinvoke r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

     label09:
        throw $r10;

     label10:
        $r11 := @caughtexception;

     label11:
        r23 = new java.lang.SecurityException;

        specialinvoke r23.<java.lang.SecurityException: void <init>(java.lang.Throwable)>($r11);

        throw r23;

     label12:
        $r12 := @caughtexception;

        exitmonitor $r0;

     label13:
        throw $r12;

     label14:
        $r13 = null;

        if $i0 != 3 goto label19;

     label15:
        $i4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i4 >= 0 goto label17;

        exitmonitor $r0;

     label16:
        return null;

     label17:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r13 = (com.android.server.am.HistoryRecord) $r15;

        $z0 = $r13.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z0 == 0 goto label19;

        exitmonitor $r0;

     label18:
        return null;

     label19:
        $i4 = 536870912 & $i2;

        if $i4 == 0 goto label26;

        $z0 = 1;

     label20:
        $i4 = 268435456 & $i2;

        if $i4 == 0 goto label27;

        $z1 = 1;

     label21:
        $i4 = 134217728 & $i2;

        if $i4 == 0 goto label28;

        $z2 = 1;

     label22:
        $i2 = $i2 & -939524097;

        r24 = new com.android.server.am.PendingIntentRecord$Key;

        $r5 = r24;

        specialinvoke r24.<com.android.server.am.PendingIntentRecord$Key: void <init>(int,java.lang.String,com.android.server.am.HistoryRecord,java.lang.String,int,android.content.Intent,java.lang.String,int)>($i0, $r6, $r13, $r2, $i1, $r3, $r4, $i2);

        $r16 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r17 = (java.lang.ref.WeakReference) $r15;

        if $r17 == null goto label29;

        $r15 = virtualinvoke $r17.<java.lang.ref.Reference: java.lang.Object get()>();

        $r18 = (com.android.server.am.PendingIntentRecord) $r15;

     label23:
        if $r18 == null goto label31;

        if $z1 != 0 goto label30;

        if $z2 == 0 goto label24;

        $r5 = $r18.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r19 = $r5.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        virtualinvoke $r19.<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>($r3);

     label24:
        exitmonitor $r0;

        r27 = (android.app.IIntentSender) $r18;

     label25:
        return r27;

     label26:
        $z0 = 0;

        goto label20;

     label27:
        $z1 = 0;

        goto label21;

     label28:
        $z2 = 0;

        goto label22;

     label29:
        $r18 = null;

        goto label23;

     label30:
        $r18.<com.android.server.am.PendingIntentRecord: boolean canceled> = 1;

        $r16 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

     label31:
        if $z0 == 0 goto label33;

        exitmonitor $r0;

        r27 = (android.app.IIntentSender) $r18;

     label32:
        return r27;

     label33:
        r25 = new com.android.server.am.PendingIntentRecord;

        $r18 = r25;

        specialinvoke r25.<com.android.server.am.PendingIntentRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.PendingIntentRecord$Key,int)>($r0, $r5, $i3);

        $r16 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r17 = $r18.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r17);

        if $i0 != 3 goto label35;

        $r20 = $r13.<com.android.server.am.HistoryRecord: java.util.HashSet pendingResults>;

        if $r20 != null goto label34;

        r26 = new java.util.HashSet;

        specialinvoke r26.<java.util.HashSet: void <init>()>();

        $r13.<com.android.server.am.HistoryRecord: java.util.HashSet pendingResults> = r26;

     label34:
        $r20 = $r13.<com.android.server.am.HistoryRecord: java.util.HashSet pendingResults>;

        $r17 = $r18.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r20.<java.util.HashSet: boolean add(java.lang.Object)>($r17);

     label35:
        exitmonitor $r0;

     label36:
        r27 = (android.app.IIntentSender) $r18;

        return r27;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch android.os.RemoteException from label06 to label07 with label10;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label04 to label10 with label12;
        catch java.lang.Throwable from label11 to label13 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
        catch java.lang.Throwable from label17 to label18 with label12;
        catch java.lang.Throwable from label19 to label25 with label12;
        catch java.lang.Throwable from label26 to label32 with label12;
        catch java.lang.Throwable from label33 to label36 with label12;
    }

    public void getMemoryInfo(android.app.ActivityManager$MemoryInfo)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.ActivityManager$MemoryInfo $r1;
        int $i0, $i1, $i3;
        long $l2, $l4;
        byte $b5;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.ActivityManager$MemoryInfo;

        $i1 = staticinvoke <android.os.Process: int getFreeMemory()>();

        $l2 = (long) $i1;

        $r1.<android.app.ActivityManager$MemoryInfo: long availMem> = $l2;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int HOME_APP_MEM>;

        $l2 = (long) $i1;

        $r1.<android.app.ActivityManager$MemoryInfo: long threshold> = $l2;

        $l2 = $r1.<android.app.ActivityManager$MemoryInfo: long availMem>;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int HOME_APP_MEM>;

        $i3 = $r0.<com.android.server.am.ActivityManagerService: int HIDDEN_APP_MEM>;

        $i0 = $r0.<com.android.server.am.ActivityManagerService: int HOME_APP_MEM>;

        $i0 = $i3 - $i0;

        $i0 = $i0 / 2;

        $i1 = $i1 + $i0;

        $l4 = (long) $i1;

        $b5 = $l2 cmp $l4;

        if $b5 >= 0 goto label2;

        $z0 = 1;

     label1:
        $r1.<android.app.ActivityManager$MemoryInfo: boolean lowMemory> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public java.lang.String getPackageForIntentSender(android.app.IIntentSender)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IIntentSender $r1;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r2;
        com.android.server.am.PendingIntentRecord$Key $r3;
        java.lang.Throwable $r4;
        java.lang.ClassCastException $r5;
        java.lang.String r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IIntentSender;

        $z0 = $r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label01;

        return null;

     label01:
        entermonitor $r0;

     label02:
        $r2 = (com.android.server.am.PendingIntentRecord) $r1;

     label03:
        $r3 = $r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        r6 = $r3.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

     label04:
        exitmonitor $r0;

     label05:
        return r6;

     label06:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label07:
        throw $r4;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor $r0;

     label10:
        return null;

        catch java.lang.ClassCastException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    public java.lang.String getPackageForToken(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        int $i0;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.am.HistoryRecord $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        entermonitor $r0;

     label1:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i0 < 0 goto label3;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        r6 = $r4.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        exitmonitor $r0;

     label2:
        return r6;

     label3:
        exitmonitor $r0;

     label4:
        return null;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getProcessLimit()
    {
        com.android.server.am.ActivityManagerService $r0;
        int i0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        i0 = $r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        return i0;
    }

    public java.util.List getProcessesInErrorState()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        com.android.server.am.ProcessRecord $r4;
        android.app.IApplicationThread $r5;
        boolean $z0;
        android.app.ActivityManager$ProcessErrorStateInfo $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor $r0;

     label01:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label02:
        $i1 = 0;

        $r1 = null;

     label03:
        if $i1 >= $i0 goto label12;

     label04:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.android.server.am.ProcessRecord) $r3;

        $r5 = $r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label11;

        $z0 = $r4.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z0 != 0 goto label05;

        $z0 = $r4.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z0 == 0 goto label11;

     label05:
        $r6 = null;

        $z0 = $r4.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z0 == 0 goto label09;

        $r6 = $r4.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport>;

     label06:
        if $r6 == null goto label10;

        if $r1 != null goto label18;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1);

     label07:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

     label08:
        $i1 = $i1 + 1;

        goto label03;

     label09:
        $z0 = $r4.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z0 == 0 goto label06;

        $r6 = $r4.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

        goto label06;

     label10:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing app error report, app = ");

        $r8 = $r4.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" crashing = ");

        $z0 = $r4.<com.android.server.am.ProcessRecord: boolean crashing>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notResponding = ");

        $z0 = $r4.<com.android.server.am.ProcessRecord: boolean notResponding>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

     label11:
        goto label08;

     label12:
        exitmonitor $r0;

     label13:
        return $r1;

     label14:
        $r9 := @caughtexception;

     label15:
        exitmonitor $r0;

     label16:
        throw $r9;

     label17:
        $r9 := @caughtexception;

        goto label15;

     label18:
        goto label07;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label07 with label17;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public java.util.List getRecentTasks(int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r1, $r3;
        android.app.ActivityManager$RecentTaskInfo $r2;
        java.lang.Object $r4;
        com.android.server.am.TaskRecord $r5;
        android.content.Intent $r6, $r7;
        android.content.ComponentName $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        entermonitor $r0;

     label01:
        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.GET_TASKS", "getRecentTasks()");

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r1 = new java.util.ArrayList;

        if $i1 >= $i2 goto label08;

        $i3 = $i1;

     label02:
        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i3);

        $i3 = 0;

     label03:
        if $i3 >= $i2 goto label11;

        if $i1 <= 0 goto label11;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (com.android.server.am.TaskRecord) $r4;

        $i4 = $i0 & 1;

        if $i4 != 0 goto label04;

        $r6 = $r5.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r6 == null goto label04;

        $r6 = $r5.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $i4 = virtualinvoke $r6.<android.content.Intent: int getFlags()>();

        $i4 = $i4 & 8388608;

        if $i4 != 0 goto label07;

     label04:
        $r2 = new android.app.ActivityManager$RecentTaskInfo;

        specialinvoke $r2.<android.app.ActivityManager$RecentTaskInfo: void <init>()>();

        $i4 = $r5.<com.android.server.am.TaskRecord: int numActivities>;

        if $i4 <= 0 goto label09;

        $i4 = $r5.<com.android.server.am.TaskRecord: int taskId>;

     label05:
        $r2.<android.app.ActivityManager$RecentTaskInfo: int id> = $i4;

        $r6 = new android.content.Intent;

        $r7 = $r5.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r7 == null goto label10;

        $r7 = $r5.<com.android.server.am.TaskRecord: android.content.Intent intent>;

     label06:
        specialinvoke $r6.<android.content.Intent: void <init>(android.content.Intent)>($r7);

        $r2.<android.app.ActivityManager$RecentTaskInfo: android.content.Intent baseIntent> = $r6;

        $r8 = $r5.<com.android.server.am.TaskRecord: android.content.ComponentName origActivity>;

        $r2.<android.app.ActivityManager$RecentTaskInfo: android.content.ComponentName origActivity> = $r8;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + -1;

     label07:
        $i3 = $i3 + 1;

        goto label03;

     label08:
        $i3 = $i2;

        goto label02;

     label09:
        $i4 = -1;

        goto label05;

     label10:
        $r7 = $r5.<com.android.server.am.TaskRecord: android.content.Intent affinityIntent>;

        goto label06;

     label11:
        exitmonitor $r0;

     label12:
        return $r1;

     label13:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label14:
        throw $r9;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public int getRequestedOrientation(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        int $i0;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.am.HistoryRecord $r4;
        com.android.server.WindowManagerService $r5;
        java.lang.Throwable $r6;
        android.view.IApplicationToken r7;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        entermonitor $r0;

     label1:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i0 >= 0 goto label3;

        exitmonitor $r0;

     label2:
        return -1;

     label3:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.HistoryRecord) $r3;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r7 = (android.view.IApplicationToken) $r4;

        $i0 = virtualinvoke $r5.<com.android.server.WindowManagerService: int getAppOrientation(android.view.IApplicationToken)>(r7);

        exitmonitor $r0;

     label4:
        return $i0;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getRunningAppProcesses()
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1, $i2, $i3;
        android.app.ActivityManager$RunningAppProcessInfo $r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ProcessRecord $r5;
        android.app.IApplicationThread $r6;
        boolean $z0;
        java.lang.String $r7;
        java.lang.String[] $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor $r0;

     label01:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label02:
        $i2 = 0;

        $r2 = null;

     label03:
        if $i2 >= $i1 goto label17;

     label04:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r5 = (com.android.server.am.ProcessRecord) $r4;

        $r6 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 == null goto label21;

        $z0 = $r5.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z0 != 0 goto label21;

        $z0 = $r5.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z0 != 0 goto label21;

        $r1 = new android.app.ActivityManager$RunningAppProcessInfo;

        $r7 = $r5.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i0 = $r5.<com.android.server.am.ProcessRecord: int pid>;

        $r8 = virtualinvoke $r5.<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()>();

        specialinvoke $r1.<android.app.ActivityManager$RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>($r7, $i0, $r8);

        $i0 = $r5.<com.android.server.am.ProcessRecord: int curAdj>;

        $i3 = <com.android.server.am.ActivityManagerService: int CONTENT_PROVIDER_ADJ>;

        if $i0 < $i3 goto label08;

        $r1.<android.app.ActivityManager$RunningAppProcessInfo: int importance> = 500;

     label05:
        if $r2 != null goto label20;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label06:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label07:
        $i2 = $i2 + 1;

        goto label03;

     label08:
        $i3 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

        if $i0 < $i3 goto label13;

        $r1.<android.app.ActivityManager$RunningAppProcessInfo: int importance> = 400;

        $i3 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

        $i0 = $i0 - $i3;

        $i0 = $i0 + 1;

        $r1.<android.app.ActivityManager$RunningAppProcessInfo: int lru> = $i0;

     label09:
        goto label05;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor $r0;

     label12:
        throw $r9;

     label13:
        $i3 = $r0.<com.android.server.am.ActivityManagerService: int HOME_APP_ADJ>;

        if $i0 < $i3 goto label14;

        $r1.<android.app.ActivityManager$RunningAppProcessInfo: int importance> = 400;

        $r1.<android.app.ActivityManager$RunningAppProcessInfo: int lru> = 0;

        goto label05;

     label14:
        $i3 = $r0.<com.android.server.am.ActivityManagerService: int SECONDARY_SERVER_ADJ>;

        if $i0 < $i3 goto label15;

        $r1.<android.app.ActivityManager$RunningAppProcessInfo: int importance> = 300;

        goto label05;

     label15:
        $i3 = $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ>;

        if $i0 < $i3 goto label16;

        $r1.<android.app.ActivityManager$RunningAppProcessInfo: int importance> = 200;

        goto label05;

     label16:
        $r1.<android.app.ActivityManager$RunningAppProcessInfo: int importance> = 100;

        goto label05;

     label17:
        exitmonitor $r0;

     label18:
        return $r2;

     label19:
        $r9 := @caughtexception;

        goto label11;

     label20:
        goto label06;

     label21:
        goto label07;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label04 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label18 with label10;
    }

    public java.util.List getServices(int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1, $i2;
        java.util.ArrayList $r1, $r9;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.android.server.am.ServiceRecord $r6;
        android.app.ActivityManager$RunningServiceInfo $r7;
        java.lang.Throwable $r8;
        long $l3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $i1 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label5;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServices>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 >= $i0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.am.ServiceRecord) $r5;

        $r7 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>($r6);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r8;

     label5:
        $i1 = 0;

     label6:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices>;

        $i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label7;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 >= $i0 goto label7;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices>;

        $r5 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r6 = (com.android.server.am.ServiceRecord) $r5;

        $r7 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>($r6);

        $l3 = $r6.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $r7.<android.app.ActivityManager$RunningServiceInfo: long restarting> = $l3;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label6;

     label7:
        exitmonitor $r0;

     label8:
        return $r1;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label6 to label8 with label3;
    }

    public int getTaskForActivity(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        entermonitor $r0;

     label1:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int getTaskForActivityLocked(android.os.IBinder,boolean)>($r1, $z0);

        exitmonitor $r0;

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    int getTaskForActivityLocked(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        boolean $z0;
        java.util.ArrayList $r2;
        int $i0, $i1;
        com.android.server.am.TaskRecord $r3, $r6;
        java.lang.Object $r4;
        com.android.server.am.HistoryRecord $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r3 = null;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        if $r5 != $r1 goto label4;

        if $z0 == 0 goto label2;

        $r6 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r3 == $r6 goto label3;

     label2:
        $r3 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i0 = $r3.<com.android.server.am.TaskRecord: int taskId>;

        return $i0;

     label3:
        return -1;

     label4:
        $r3 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i1 = $i1 + 1;

        goto label1;

     label5:
        return -1;
    }

    public java.util.List getTasks(int, int, android.app.IThumbnailReceiver)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IThumbnailReceiver $r1;
        android.app.ActivityManager$RunningTaskInfo $r2, r33;
        java.lang.Exception $r3;
        java.util.ArrayList $r4, $r12;
        com.android.server.am.HistoryRecord $r5, $r7, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4;
        android.app.IApplicationThread $r6, $r24;
        java.lang.StringBuilder $r8, r31;
        java.lang.String $r9;
        java.lang.Throwable $r11;
        java.lang.Object $r13;
        java.lang.CharSequence $r16;
        com.android.server.am.TaskRecord $r17, $r21, $r22;
        com.android.server.am.PendingThumbnailsRecord $r18, r34;
        com.android.server.am.ActivityManagerService$ActivityState $r19, $r20;
        com.android.server.am.ProcessRecord $r23;
        android.content.Intent $r25;
        android.content.ComponentName $r26;
        android.graphics.Bitmap $r27;
        boolean $z0;
        java.util.HashSet $r28;
        android.os.RemoteException $r29, $r30;
        java.lang.SecurityException r32;
        android.os.IBinder r35;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.app.IThumbnailReceiver;

        $r12 = new java.util.ArrayList;

        $r4 = $r12;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r6 = null;

        $r7 = null;

        entermonitor $r0;

     label01:
        $i1 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.GET_TASKS");

     label02:
        if $i1 == 0 goto label08;

        if $r1 == null goto label04;

     label03:
        interfaceinvoke $r1.<android.app.IThumbnailReceiver: void finished()>();

     label04:
        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: getTasks() from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.GET_TASKS");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        r32 = new java.lang.SecurityException;

        specialinvoke r32.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw r32;

     label05:
        $r11 := @caughtexception;

     label06:
        exitmonitor $r0;

     label07:
        throw $r11;

     label08:
        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

        if $i1 < 0 goto label25;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.HistoryRecord) $r13;

     label09:
        $r14 = $r5;

     label10:
        $r15 = null;

        $r16 = null;

        $r17 = null;

        $i2 = 0;

        $i3 = 0;

        $r18 = null;

     label11:
        if $i1 < 0 goto label29;

        if $i0 <= 0 goto label29;

        $r5 = $r14;

        $i1 = $i1 + -1;

        if $i1 < 0 goto label26;

     label12:
        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r14 = (com.android.server.am.HistoryRecord) $r13;

     label13:
        if $r15 == null goto label14;

        $r19 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r20 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState INITIALIZING>;

        if $r19 != $r20 goto label15;

        $r21 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r22 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r21 != $r22 goto label15;

     label14:
        $r15 = $r5;

        $r16 = $r5.<com.android.server.am.HistoryRecord: java.lang.CharSequence description>;

        $r17 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i3 = 0;

        $i2 = 0;

     label15:
        $i2 = $i2 + 1;

        $r23 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r23 == null goto label16;

        $r23 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r24 = $r23.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r24 == null goto label16;

        $i3 = $i3 + 1;

     label16:
        if $r16 != null goto label17;

        $r16 = $r5.<com.android.server.am.HistoryRecord: java.lang.CharSequence description>;

     label17:
        if $r14 == null goto label18;

        $r21 = $r14.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        if $r21 == $r17 goto label41;

     label18:
        r33 = new android.app.ActivityManager$RunningTaskInfo;

        $r2 = r33;

        specialinvoke r33.<android.app.ActivityManager$RunningTaskInfo: void <init>()>();

        $i4 = $r17.<com.android.server.am.TaskRecord: int taskId>;

        $r2.<android.app.ActivityManager$RunningTaskInfo: int id> = $i4;

        $r25 = $r5.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r26 = virtualinvoke $r25.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r2.<android.app.ActivityManager$RunningTaskInfo: android.content.ComponentName baseActivity> = $r26;

        $r25 = $r15.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r26 = virtualinvoke $r25.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r2.<android.app.ActivityManager$RunningTaskInfo: android.content.ComponentName topActivity> = $r26;

        $r27 = $r15.<com.android.server.am.HistoryRecord: android.graphics.Bitmap thumbnail>;

        $r2.<android.app.ActivityManager$RunningTaskInfo: android.graphics.Bitmap thumbnail> = $r27;

        $r2.<android.app.ActivityManager$RunningTaskInfo: java.lang.CharSequence description> = $r16;

        $r2.<android.app.ActivityManager$RunningTaskInfo: int numActivities> = $i2;

        $r2.<android.app.ActivityManager$RunningTaskInfo: int numRunning> = $i3;

        $r27 = $r2.<android.app.ActivityManager$RunningTaskInfo: android.graphics.Bitmap thumbnail>;

        if $r27 != null goto label40;

        if $r1 == null goto label40;

        $r19 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r20 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState RESUMED>;

        if $r19 == $r20 goto label19;

        $r19 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ActivityManagerService$ActivityState state>;

        $r20 = <com.android.server.am.ActivityManagerService$ActivityState: com.android.server.am.ActivityManagerService$ActivityState PAUSING>;

        if $r19 != $r20 goto label20;

     label19:
        $z0 = $r15.<com.android.server.am.HistoryRecord: boolean idle>;

        if $z0 == 0 goto label27;

        $r23 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r23 == null goto label27;

        $r23 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r24 = $r23.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r24 == null goto label27;

        $r7 = $r15;

        $r23 = $r15.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r6 = $r23.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label20:
        if $r18 != null goto label39;

        r34 = new com.android.server.am.PendingThumbnailsRecord;

        $r18 = r34;

        specialinvoke r34.<com.android.server.am.PendingThumbnailsRecord: void <init>(android.app.IThumbnailReceiver)>($r1);

     label21:
        $r28 = $r18.<com.android.server.am.PendingThumbnailsRecord: java.util.HashSet pendingRecords>;

        virtualinvoke $r28.<java.util.HashSet: boolean add(java.lang.Object)>($r15);

     label22:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label23:
        $i0 = $i0 + -1;

        $r15 = null;

     label24:
        goto label11;

     label25:
        $r14 = null;

        goto label10;

     label26:
        $r14 = null;

        goto label13;

     label27:
        $r15.<com.android.server.am.HistoryRecord: boolean thumbnailNeeded> = 1;

        goto label20;

     label28:
        $r11 := @caughtexception;

        goto label06;

     label29:
        if $r18 == null goto label30;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label30:
        exitmonitor $r0;

     label31:
        if $r6 == null goto label33;

     label32:
        r35 = (android.os.IBinder) $r7;

        interfaceinvoke $r6.<android.app.IApplicationThread: void requestThumbnail(android.os.IBinder)>(r35);

     label33:
        if $r18 != null goto label42;

        if $r1 == null goto label43;

     label34:
        interfaceinvoke $r1.<android.app.IThumbnailReceiver: void finished()>();

     label35:
        return $r4;

     label36:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown when requesting thumbnail", $r3);

        r35 = (android.os.IBinder) $r7;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.HistoryRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)>(null, r35, null, null, 1);

        goto label33;

     label37:
        $r29 := @caughtexception;

        goto label04;

     label38:
        $r30 := @caughtexception;

        return $r4;

     label39:
        goto label21;

     label40:
        goto label22;

     label41:
        goto label24;

     label42:
        return $r4;

     label43:
        return $r4;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch android.os.RemoteException from label03 to label04 with label37;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label04 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label12 to label21 with label28;
        catch java.lang.Throwable from label21 to label23 with label05;
        catch java.lang.Throwable from label27 to label31 with label28;
        catch java.lang.Exception from label32 to label33 with label36;
        catch android.os.RemoteException from label34 to label35 with label38;
    }

    public void goingToSleep()
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.WindowManagerService $r1;
        com.android.server.am.HistoryRecord $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor $r0;

     label1:
        $r0.<com.android.server.am.ActivityManagerService: boolean mSleeping> = 1;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r1.<com.android.server.WindowManagerService: void setEventDispatching(boolean)>(0);

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r2 == null goto label4;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void pauseIfSleepingLocked()>();

     label2:
        exitmonitor $r0;

     label3:
        return;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "goingToSleep with no resumed activity!");

        goto label2;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public void grantUriPermission(android.app.IApplicationThread, java.lang.String, android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        java.lang.String $r2;
        android.net.Uri $r3;
        int $i0, $i1;
        com.android.server.am.ProcessRecord $r4;
        java.lang.SecurityException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Throwable $r7;
        android.content.pm.ApplicationInfo $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.net.Uri;

        $i0 := @parameter3: int;

        entermonitor $r0;

     label01:
        $r4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        if $r4 != null goto label04;

        $r5 = new java.lang.SecurityException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when granting permission to uri ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label02:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label03:
        throw $r7;

     label04:
        if $r2 != null goto label07;

     label05:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "grantUriPermission: null target");

        exitmonitor $r0;

     label06:
        return;

     label07:
        if $r3 != null goto label09;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "grantUriPermission: null uri");

        exitmonitor $r0;

     label08:
        return;

     label09:
        $r8 = $r4.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.HistoryRecord)>($i1, $r2, $r3, $i0, null);

        exitmonitor $r0;

     label10:
        return;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
    }

    boolean handleAppCrashLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r12;
        long $l0, $l2;
        com.android.server.ProcessMap $r2;
        android.content.pm.ApplicationInfo $r3;
        java.lang.String $r4;
        int $i1;
        java.lang.Object $r5;
        java.lang.Long $r6;
        byte $b3;
        java.lang.StringBuilder $r7;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;
        java.util.ArrayList $r10;
        com.android.server.am.HistoryRecord $r11;
        android.content.Intent $r13;
        android.content.ComponentName $r14;
        boolean $z0;
        java.util.HashSet $r15;
        java.util.Iterator $r16;
        com.android.server.am.ServiceRecord $r17;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessCrashTimes>;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r5 = virtualinvoke $r2.<com.android.server.ProcessMap: java.lang.Object get(java.lang.String,int)>($r4, $i1);

        $r6 = (java.lang.Long) $r5;

        if $r6 == null goto label4;

        $l2 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        $l2 = $l2 + 60000L;

        $b3 = $l0 cmp $l2;

        if $b3 >= 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has crashed too many times: killing!");

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        $r8 = newarray (java.lang.Object)[2];

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r8[0] = $r4;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r8[1] = $r9;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30032, $r8);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void killServicesLocked(com.android.server.am.ProcessRecord,boolean)>($r1, 0);

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label3;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r5 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r11 = (com.android.server.am.HistoryRecord) $r5;

        $r12 = $r11.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r12 != $r1 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force finishing activity ");

        $r13 = $r11.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r14 = virtualinvoke $r13.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r4 = virtualinvoke $r14.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r11, $i1, 0, null, "crashed");

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        $z0 = $r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label4;

        $r8 = newarray (java.lang.Object)[2];

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r8[0] = $r9;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r8[1] = $r4;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30015, $r8);

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mBadProcesses>;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r4, $i1, $r6);

        $r1.<com.android.server.am.ProcessRecord: boolean bad> = 1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessCrashTimes>;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r2.<com.android.server.ProcessMap: void remove(java.lang.String,int)>($r4, $i1);

        $r1.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean)>($r1, 0);

        return 0;

     label4:
        $r15 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $i1 = virtualinvoke $r15.<java.util.HashSet: int size()>();

        if $i1 == 0 goto label6;

        $r15 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $r16 = virtualinvoke $r15.<java.util.HashSet: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (com.android.server.am.ServiceRecord) $r5;

        $i1 = $r17.<com.android.server.am.ServiceRecord: int crashCount>;

        $i1 = $i1 + 1;

        $r17.<com.android.server.am.ServiceRecord: int crashCount> = $i1;

        goto label5;

     label6:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessCrashTimes>;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r4, $i1, $r6);

        return 1;
    }

    public int handleApplicationError(android.os.IBinder, int, java.lang.String, java.lang.String, java.lang.String, byte[])
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1, $r17;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r4, $r19;
        byte[] $r5;
        java.util.HashMap $r6;
        android.os.Bundle $r7;
        com.android.server.am.AppErrorResult $r8;
        com.android.server.am.ProcessRecord $r9, $r15;
        com.android.server.ProcessMap $r10;
        java.util.Collection $r11;
        java.util.Iterator $r12;
        boolean $z0;
        java.lang.Object $r13;
        android.util.SparseArray $r14;
        android.app.IApplicationThread $r16;
        android.app.IActivityWatcher $r18;
        java.lang.StringBuilder $r20;
        android.os.RemoteException $r21;
        long $l3;
        android.content.ComponentName $r22;
        java.lang.Throwable $r23, $r29;
        android.os.Message $r24;
        java.lang.Integer $r25;
        android.content.pm.ApplicationInfo $r26;
        android.os.Handler $r27;
        java.lang.Long $r28;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: byte[];

        $r8 = new com.android.server.am.AppErrorResult;

        specialinvoke $r8.<com.android.server.am.AppErrorResult: void <init>()>();

        $r9 = null;

        entermonitor $r0;

        if $r1 == null goto label05;

     label01:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r6 = virtualinvoke $r10.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $r11 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (android.util.SparseArray) $r13;

        $i1 = virtualinvoke $r14.<android.util.SparseArray: int size()>();

        $i2 = 0;

     label03:
        if $i2 >= $i1 goto label02;

        $r13 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>($i2);

        $r15 = (com.android.server.am.ProcessRecord) $r13;

        $r16 = $r15.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 == null goto label04;

        $r16 = $r15.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r17 = interfaceinvoke $r16.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r17 != $r1 goto label04;

        $r9 = $r15;

        goto label02;

     label04:
        $i2 = $i2 + 1;

        goto label03;

     label05:
        if $r9 == null goto label06;

        $i1 = $r9.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i1, 3);

     label06:
        $r18 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

     label07:
        if $r18 == null goto label21;

        if $r9 == null goto label16;

     label08:
        $r19 = $r9.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label09:
        if $r9 == null goto label17;

        $i1 = $r9.<com.android.server.am.ProcessRecord: int pid>;

     label10:
        $r18 = $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher>;

     label11:
        $z0 = interfaceinvoke $r18.<android.app.IActivityWatcher: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,byte[])>($r19, $i1, $r3, $r4, $r5);

     label12:
        if $z0 != 0 goto label21;

     label13:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force-killing crashed app ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at watcher\'s request");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        staticinvoke <android.os.Process: void killProcess(int)>($i1);

     label14:
        exitmonitor $r0;

     label15:
        return 0;

     label16:
        $r19 = null;

        goto label09;

     label17:
        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label18:
        goto label10;

     label19:
        $r21 := @caughtexception;

     label20:
        $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher> = null;

     label21:
        $l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if $r9 == null goto label27;

        $r22 = $r9.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r22 == null goto label27;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in app ");

        $r2 = $r9.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" running instrumentation ");

        $r22 = $r9.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        if $r3 == null goto label22;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

     label22:
        if $r4 == null goto label23;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

     label23:
        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        virtualinvoke $r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", $r3);

        virtualinvoke $r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("longMsg", $r4);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>($r9, 0, $r7);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l3);

        exitmonitor $r0;

     label24:
        return 0;

     label25:
        $r23 := @caughtexception;

        exitmonitor $r0;

     label26:
        throw $r23;

     label27:
        if $r9 == null goto label30;

     label28:
        $z0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: boolean makeAppCrashingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,byte[])>($r9, $r2, $r3, $r4, $r5);

        if $z0 != 0 goto label32;

        exitmonitor $r0;

     label29:
        return 0;

     label30:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Some application object ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tag ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has crashed, but I don\'t know who it is.");

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ShortMsg:");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LongMsg:");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l3);

        exitmonitor $r0;

     label31:
        return 0;

     label32:
        $r24 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r24.<android.os.Message: int what> = 1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("result", $r8);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app", $r9);

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("flags", $r25);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("shortMsg", $r3);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("longMsg", $r4);

        if $r9 == null goto label33;

        $r26 = $r9.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r26.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label33;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("crashData", $r5);

     label33:
        $r24.<android.os.Message: java.lang.Object obj> = $r6;

        $r27 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r27.<android.os.Handler: boolean sendMessage(android.os.Message)>($r24);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l3);

        exitmonitor $r0;

     label34:
        $i0 = virtualinvoke $r8.<com.android.server.am.AppErrorResult: int get()>();

        entermonitor $r0;

        if $r9 == null goto label36;

     label35:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessCrashTimes>;

        $r26 = $r9.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r2 = $r26.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r26 = $r9.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r26.<android.content.pm.ApplicationInfo: int uid>;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r10.<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r2, $i1, $r28);

     label36:
        exitmonitor $r0;

     label37:
        return $i0;

     label38:
        $r29 := @caughtexception;

        exitmonitor $r0;

     label39:
        throw $r29;

        catch java.lang.Throwable from label01 to label07 with label25;
        catch android.os.RemoteException from label11 to label12 with label19;
        catch android.os.RemoteException from label13 to label14 with label19;
        catch java.lang.Throwable from label08 to label14 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label20 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
        catch java.lang.Throwable from label28 to label29 with label25;
        catch java.lang.Throwable from label30 to label31 with label25;
        catch java.lang.Throwable from label32 to label34 with label25;
        catch java.lang.Throwable from label35 to label37 with label38;
        catch java.lang.Throwable from label38 to label39 with label38;
    }

    void killAppAtUsersRequest(com.android.server.am.ProcessRecord, android.app.Dialog, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        android.app.Dialog $r2, $r3;
        boolean $z0;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 := @parameter1: android.app.Dialog;

        $z0 := @parameter2: boolean;

        entermonitor $r0;

     label1:
        $r1.<com.android.server.am.ProcessRecord: boolean crashing> = 0;

        $r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport> = null;

        $r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 0;

        $r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport> = null;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        if $r3 != $r2 goto label2;

        $r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog> = null;

     label2:
        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        if $r3 != $r2 goto label3;

        $r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog> = null;

     label3:
        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 <= 0 goto label5;

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i0 == $i1 goto label5;

        if $z0 == 0 goto label4;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord)>($r1);

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing process ");

        $r5 = $r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") at user\'s request");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r5);

        $i0 = $r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcess(int)>($i0);

     label5:
        exitmonitor $r0;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean killPidsForMemory(int[])
    {
        com.android.server.am.ActivityManagerService $r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.SecurityException $r3;
        boolean $z0;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6;
        com.android.server.am.ProcessRecord $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.Object[] $r10;
        java.lang.Integer $r11;
        java.lang.Throwable $r12;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: int[];

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i1 == 1000 goto label01;

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("killPidsForMemory only available to the system");

        throw $r3;

     label01:
        $z0 = 0;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r4;

     label02:
        $i1 = lengthof $r1;

        $r2 = newarray (int)[$i1];

        $i1 = 0;

        $i2 = 0;

     label03:
        $i0 = lengthof $r1;

        if $i2 >= $i0 goto label05;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i0 = $r1[$i2];

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r7 = (com.android.server.am.ProcessRecord) $r6;

        if $r7 == null goto label04;

        $i0 = $r7.<com.android.server.am.ProcessRecord: int setAdj>;

        $r2[$i2] = $i0;

        if $i0 <= $i1 goto label04;

        $i1 = $i0;

     label04:
        $i2 = $i2 + 1;

        goto label03;

     label05:
        $i2 = <com.android.server.am.ActivityManagerService: int EMPTY_APP_ADJ>;

        if $i1 >= $i2 goto label06;

        $i2 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

        if $i1 <= $i2 goto label06;

        $i1 = <com.android.server.am.ActivityManagerService: int HIDDEN_APP_MIN_ADJ>;

     label06:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing processes for memory at adjustment ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        $i2 = 0;

     label07:
        $i0 = lengthof $r1;

        if $i2 >= $i0 goto label12;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i0 = $r1[$i2];

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r7 = (com.android.server.am.ProcessRecord) $r6;

        if $r7 != null goto label09;

     label08:
        $i2 = $i2 + 1;

        goto label07;

     label09:
        $i0 = $r7.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i0 < $i1 goto label08;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing for memory: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (adj ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        $r10 = newarray (java.lang.Object)[3];

        $i3 = $r7.<com.android.server.am.ProcessRecord: int pid>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r10[0] = $r11;

        $r9 = $r7.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r10[1] = $r9;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r10[2] = $r11;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30023, $r10);

        $z0 = 1;

        $i0 = $r1[$i2];

        staticinvoke <android.os.Process: void killProcess(int)>($i0);

        goto label08;

     label10:
        $r12 := @caughtexception;

        exitmonitor $r4;

     label11:
        throw $r12;

     label12:
        exitmonitor $r4;

     label13:
        return $z0;

        catch java.lang.Throwable from label02 to label11 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
    }

    boolean makeAppCrashingLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String, byte[])
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        java.lang.String $r2, $r3, $r4;
        byte[] $r5;
        android.app.ActivityManager$ProcessErrorStateInfo $r6;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: byte[];

        $r1.<com.android.server.am.ProcessRecord: boolean crashing> = 1;

        $r6 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord,int,java.lang.String,java.lang.String,java.lang.String,byte[])>($r1, 1, $r2, $r3, $r4, $r5);

        $r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport> = $r6;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>($r1);

        virtualinvoke $r1.<com.android.server.am.ProcessRecord: void stopFreezingAllLocked()>();

        $z0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord)>($r1);

        return $z0;
    }

    void makeAppNotRespondingLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String, byte[])
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        java.lang.String $r2, $r3, $r4;
        byte[] $r5;
        android.app.ActivityManager$ProcessErrorStateInfo $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: byte[];

        $r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 1;

        $r6 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord,int,java.lang.String,java.lang.String,java.lang.String,byte[])>($r1, 2, $r2, $r3, $r4, $r5);

        $r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport> = $r6;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>($r1);

        virtualinvoke $r1.<com.android.server.am.ProcessRecord: void stopFreezingAllLocked()>();

        return;
    }

    android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        android.app.ActivityManager$RunningServiceInfo $r2;
        int $i0;
        android.content.ComponentName $r3;
        com.android.server.am.ProcessRecord $r4;
        java.lang.String $r5;
        boolean $z0;
        long $l1;
        java.util.HashMap $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = new android.app.ActivityManager$RunningServiceInfo;

        specialinvoke $r2.<android.app.ActivityManager$RunningServiceInfo: void <init>()>();

        $r3 = $r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r2.<android.app.ActivityManager$RunningServiceInfo: android.content.ComponentName service> = $r3;

        $r4 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label1;

        $r4 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i0 = $r4.<com.android.server.am.ProcessRecord: int pid>;

        $r2.<android.app.ActivityManager$RunningServiceInfo: int pid> = $i0;

     label1:
        $r5 = $r1.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r2.<android.app.ActivityManager$RunningServiceInfo: java.lang.String process> = $r5;

        $z0 = $r1.<com.android.server.am.ServiceRecord: boolean isForeground>;

        $r2.<android.app.ActivityManager$RunningServiceInfo: boolean foreground> = $z0;

        $l1 = $r1.<com.android.server.am.ServiceRecord: long createTime>;

        $r2.<android.app.ActivityManager$RunningServiceInfo: long activeSince> = $l1;

        $z0 = $r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        $r2.<android.app.ActivityManager$RunningServiceInfo: boolean started> = $z0;

        $r6 = $r1.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        $i0 = virtualinvoke $r6.<java.util.HashMap: int size()>();

        $r2.<android.app.ActivityManager$RunningServiceInfo: int clientCount> = $i0;

        $i0 = $r1.<com.android.server.am.ServiceRecord: int crashCount>;

        $r2.<android.app.ActivityManager$RunningServiceInfo: int crashCount> = $i0;

        $l1 = $r1.<com.android.server.am.ServiceRecord: long lastActivity>;

        $r2.<android.app.ActivityManager$RunningServiceInfo: long lastActivityTime> = $l1;

        return $r2;
    }

    public void monitor()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor $r0;

     label1:
        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean moveActivityTaskToBack(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        boolean $z0;
        long $l0;
        int $i1;
        java.lang.Throwable $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        entermonitor $r0;

     label1:
        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if $z0 != 0 goto label4;

        $z0 = 1;

     label2:
        $i1 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int getTaskForActivityLocked(android.os.IBinder,boolean)>($r1, $z0);

        if $i1 < 0 goto label5;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean moveTaskToBackLocked(int)>($i1);

        exitmonitor $r0;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

        exitmonitor $r0;

     label6:
        return 0;

     label7:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void moveTaskBackwards(int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0;
        long $l1;
        java.lang.Throwable $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REORDER_TASKS", "moveTaskBackwards()");

        entermonitor $r0;

     label1:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void moveTaskBackwardsLocked(int)>($i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void moveTaskToBack(int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0;
        long $l1;
        java.lang.Throwable $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REORDER_TASKS", "moveTaskToBack()");

        entermonitor $r0;

     label1:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean moveTaskToBackLocked(int)>($i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void moveTaskToFront(int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i2, $i3, $i4;
        long $l1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        com.android.server.am.TaskRecord $r3;
        com.android.server.am.HistoryRecord $r4;
        java.lang.Throwable $r5, $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REORDER_TASKS", "moveTaskToFront()");

        entermonitor $r0;

     label01:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i3 = 0;

     label03:
        if $i3 >= $i2 goto label07;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r3 = (com.android.server.am.TaskRecord) $r2;

        $i4 = $r3.<com.android.server.am.TaskRecord: int taskId>;

        if $i4 != $i0 goto label06;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void moveTaskToFrontLocked(com.android.server.am.TaskRecord)>($r3);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label05:
        return;

     label06:
        $i3 = $i3 + 1;

        goto label03;

     label07:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = $i2 - 1;

     label08:
        if $i2 < 0 goto label14;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (com.android.server.am.HistoryRecord) $r2;

        $r3 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $i3 = $r3.<com.android.server.am.TaskRecord: int taskId>;

        if $i3 != $i0 goto label13;

        $r3 = $r4.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void moveTaskToFrontLocked(com.android.server.am.TaskRecord)>($r3);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label10:
        return;

     label11:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label12:
        throw $r5;

     label13:
        $i2 = $i2 + -1;

        goto label08;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label15:
        return;

     label16:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        throw $r6;

     label17:
        nop;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label14 to label15 with label11;
        catch java.lang.Throwable from label16 to label17 with label11;
    }

    final com.android.server.am.ProcessRecord newProcessRecordLocked(android.app.IApplicationThread, android.content.pm.ApplicationInfo, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        android.content.pm.ApplicationInfo $r2;
        java.lang.String $r3;
        com.android.server.am.BatteryStatsService $r4;
        com.android.internal.os.BatteryStatsImpl $r5;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r6;
        com.android.server.am.ProcessRecord $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: android.content.pm.ApplicationInfo;

        $r3 := @parameter2: java.lang.String;

        if $r3 == null goto label4;

     label1:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r5 = virtualinvoke $r4.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor $r5;

     label2:
        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>($i0, $r3);

        exitmonitor $r5;

     label3:
        $r7 = new com.android.server.am.ProcessRecord;

        specialinvoke $r7.<com.android.server.am.ProcessRecord: void <init>(com.android.internal.os.BatteryStatsImpl$Uid$Proc,android.app.IApplicationThread,android.content.pm.ApplicationInfo,java.lang.String)>($r6, $r1, $r2, $r3);

        return $r7;

     label4:
        $r3 = $r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        goto label1;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor $r5;

     label7:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void noteWakeupAlarm(android.app.IIntentSender)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IIntentSender $r1;
        boolean $z0;
        com.android.server.am.BatteryStatsService $r2;
        com.android.internal.os.BatteryStatsImpl $r3;
        com.android.server.am.PendingIntentRecord $r4;
        int $i0, $i1;
        com.android.server.am.PendingIntentRecord$Key $r5;
        java.lang.String $r6;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IIntentSender;

        $z0 = $r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r3 = virtualinvoke $r2.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor $r3;

     label2:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $z0 = virtualinvoke $r2.<com.android.server.am.BatteryStatsService: boolean isOnBattery()>();

        if $z0 == 0 goto label4;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r2.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r4 = (com.android.server.am.PendingIntentRecord) $r1;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = $r4.<com.android.server.am.PendingIntentRecord: int uid>;

        if $i1 != $i0 goto label8;

        $i0 = 1000;

     label3:
        $r5 = $r4.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r6 = $r5.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $r7 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)>($i0, $r6);

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void incWakeupsLocked()>();

     label4:
        exitmonitor $r3;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r8;

     label8:
        $i0 = $r4.<com.android.server.am.PendingIntentRecord: int uid>;

     label9:
        goto label3;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label8 to label9 with label6;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        java.lang.RuntimeException $r3;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Parcel;

        $r2 := @parameter2: android.os.Parcel;

        $i1 := @parameter3: int;

     label1:
        $z0 = specialinvoke $r0.<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>($i0, $r1, $r2, $i1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $z0 = $r3 instanceof java.lang.SecurityException;

        if $z0 != 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Activity Manager Crash", $r3);

     label4:
        throw $r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor openContentUri(android.net.Uri) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        android.app.IActivityManager$ContentProviderHolder $r3;
        android.os.ParcelFileDescriptor $r4;
        java.lang.ThreadLocal $r5;
        com.android.server.am.ActivityManagerService$Identity $r6;
        int $i0, $i1;
        android.content.IContentProvider $r7;
        java.io.FileNotFoundException $r8;
        java.lang.Throwable $r9;
        java.lang.StringBuilder $r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r3 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String)>($r2);

        $r4 = null;

        if $r3 == null goto label7;

        $r5 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r6 = new com.android.server.am.ActivityManagerService$Identity;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r6.<com.android.server.am.ActivityManagerService$Identity: void <init>(com.android.server.am.ActivityManagerService,int,int)>($r0, $i0, $i1);

        virtualinvoke $r5.<java.lang.ThreadLocal: void set(java.lang.Object)>($r6);

     label1:
        $r7 = $r3.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

     label2:
        $r4 = interfaceinvoke $r7.<android.content.IContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>($r1, "r");

     label3:
        $r5 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void remove()>();

     label4:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternal(java.lang.String)>($r2);

        return $r4;

     label5:
        $r8 := @caughtexception;

        $r5 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void remove()>();

        goto label4;

     label6:
        $r9 := @caughtexception;

        $r5 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void remove()>();

        throw $r9;

     label7:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get provider for authority \'");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r2);

        return null;

        catch java.io.FileNotFoundException from label2 to label3 with label5;
        catch java.lang.Throwable from label1 to label3 with label6;
    }

    void pauseIfSleepingLocked()
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0;
        android.os.PowerManager$WakeLock $r1;
        android.os.Handler $r2;
        com.android.server.am.HistoryRecord $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z0 == 0 goto label2;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mGoingToSleep>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mGoingToSleep>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        $r1 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void release()>();

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(16);

     label1:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mPausingActivity>;

        if $r3 != null goto label3;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void startPausingLocked(boolean,boolean)>(0, 1);

        return;

     label2:
        return;

     label3:
        return;
    }

    public android.os.IBinder peekService(android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.Intent $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        android.os.IBinder $r4;
        com.android.server.am.ActivityManagerService$ServiceLookupResult $r5;
        com.android.server.am.ServiceRecord $r6;
        java.lang.SecurityException $r7;
        java.lang.StringBuilder $r8;
        android.content.ComponentName $r9;
        int $i0;
        java.lang.Throwable $r10;
        java.util.HashMap $r11;
        android.content.Intent$FilterComparison $r12;
        java.lang.Object $r13;
        com.android.server.am.IntentBindRecord $r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r3;

     label1:
        $r4 = null;

        entermonitor $r0;

     label2:
        $r5 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ServiceLookupResult findServiceLocked(android.content.Intent,java.lang.String)>($r1, $r2);

        if $r5 == null goto label6;

        $r6 = $r5.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r6 != null goto label5;

        $r7 = new java.lang.SecurityException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r6 = $r5.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r9 = $r6.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r2 = $r5.<com.android.server.am.ActivityManagerService$ServiceLookupResult: java.lang.String permission>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw $r7;

     label3:
        $r10 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r10;

     label5:
        $r6 = $r5.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r11 = $r6.<com.android.server.am.ServiceRecord: java.util.HashMap bindings>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r12 = $r6.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r13 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        $r14 = (com.android.server.am.IntentBindRecord) $r13;

        if $r14 == null goto label6;

        $r4 = $r14.<com.android.server.am.IntentBindRecord: android.os.IBinder binder>;

     label6:
        exitmonitor $r0;

     label7:
        return $r4;

        catch java.lang.Throwable from label2 to label4 with label3;
        catch java.lang.Throwable from label5 to label7 with label3;
    }

    final void performAppGcLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        long $l0;
        android.app.IApplicationThread $r2;
        java.lang.Exception $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l0;

        $r2 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r2 == null goto label4;

        $r2 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r2.<android.app.IApplicationThread: void processInBackground()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    final void performAppGcsIfAppropriateLocked()
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean canGcNow()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void performAppGcsLocked()>();

        return;

     label1:
        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;
    }

    final void performAppGcsLocked()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r2;
        com.android.server.am.ProcessRecord $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean canGcNow()>();

        if $z0 == 0 goto label3;

     label2:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label4;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r3 = (com.android.server.am.ProcessRecord) $r2;

        $i0 = $r3.<com.android.server.am.ProcessRecord: int curRawAdj>;

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int VISIBLE_APP_ADJ>;

        if $i0 <= $i1 goto label2;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void performAppGcLocked(com.android.server.am.ProcessRecord)>($r3);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;

     label3:
        return;

     label4:
        return;
    }

    final void performServiceRestartLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        java.util.ArrayList $r2;
        boolean $z0;
        android.content.Intent$FilterComparison $r3;
        android.content.Intent $r4;
        int $i0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRestartingServices>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = $r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r4 = virtualinvoke $r3.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $i0 = virtualinvoke $r4.<android.content.Intent: int getFlags()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean)>($r1, $i0, 1);

        return;
    }

    final java.util.ArrayList processStoppingActivitiesLocked(boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1;
        com.android.server.am.HistoryRecord $r2;
        java.lang.Object $r4;
        com.android.server.WindowManagerService $r5;
        android.os.IBinder r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i0;

        if $i0 > 0 goto label1;

        return null;

     label1:
        $r1 = null;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r2 == null goto label7;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        $z1 = $r2.<com.android.server.am.HistoryRecord: boolean nowVisible>;

        if $z1 == 0 goto label7;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        $z1 = $r2.<com.android.server.am.HistoryRecord: boolean waitingVisible>;

        if $z1 != 0 goto label7;

        $z1 = 1;

     label2:
        $i0 = 0;

     label3:
        if $i0 >= $i1 goto label8;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r2 = (com.android.server.am.HistoryRecord) $r4;

        $z2 = $r2.<com.android.server.am.HistoryRecord: boolean waitingVisible>;

        if $z2 == 0 goto label4;

        if $z1 == 0 goto label4;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

        $r2.<com.android.server.am.HistoryRecord: boolean waitingVisible> = 0;

        $z2 = $r2.<com.android.server.am.HistoryRecord: boolean finishing>;

        if $z2 == 0 goto label4;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r6 = (android.os.IBinder) $r2;

        virtualinvoke $r5.<com.android.server.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>(r6, 0);

     label4:
        $z2 = $r2.<com.android.server.am.HistoryRecord: boolean waitingVisible>;

        if $z2 != 0 goto label6;

        if $z0 == 0 goto label6;

        if $r1 != null goto label5;

        $r3 = new java.util.ArrayList;

        $r1 = $r3;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label5:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $i1 = $i1 + -1;

        $i0 = $i0 + -1;

     label6:
        $i0 = $i0 + 1;

        goto label3;

     label7:
        $z1 = 0;

        goto label2;

     label8:
        return $r1;
    }

    public boolean profileControl(java.lang.String, boolean, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1, $r2, $r16;
        boolean $z0, $z1;
        int $i0;
        java.lang.SecurityException $r3;
        java.lang.Throwable $r4, $r14;
        com.android.server.am.ProcessRecord $r5;
        android.util.SparseArray $r6, $r7;
        java.lang.Object $r8;
        com.android.server.ProcessMap $r9;
        java.util.HashMap $r10;
        android.app.IApplicationThread $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13;
        java.lang.NumberFormatException $r15;
        android.content.pm.ApplicationInfo $r17;
        android.os.RemoteException $r18;
        java.lang.IllegalStateException $r19;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        entermonitor $r0;

     label01:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 == 0 goto label04;

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r3;

     label02:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label03:
        throw $r4;

     label04:
        $r5 = null;

     label05:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label06:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r6;

     label07:
        $r7 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r5 = (com.android.server.am.ProcessRecord) $r8;

        exitmonitor $r6;

     label08:
        if $r5 != null goto label10;

     label09:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessMap mProcessNames>;

        $r10 = virtualinvoke $r9.<com.android.server.ProcessMap: java.util.HashMap getMap()>();

        $r8 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.util.SparseArray) $r8;

        if $r6 == null goto label10;

        $i0 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        if $i0 <= 0 goto label10;

        $r8 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(0);

        $r5 = (com.android.server.am.ProcessRecord) $r8;

     label10:
        if $r5 == null goto label11;

        $r11 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r11 != null goto label16;

     label11:
        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r12;

     label12:
        $r14 := @caughtexception;

     label13:
        exitmonitor $r6;

     label14:
        throw $r14;

     label15:
        $r15 := @caughtexception;

        goto label08;

     label16:
        $r1 = "1";

        $r16 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.secure", "0");

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z1 == 0 goto label17;

        $r17 = $r5.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r17.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 2;

        if $i0 != 0 goto label17;

        $r3 = new java.lang.SecurityException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label17:
        $r11 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label18:
        interfaceinvoke $r11.<android.app.IApplicationThread: void profilerControl(boolean,java.lang.String)>($z0, $r2);

     label19:
        exitmonitor $r0;

     label20:
        return 1;

     label21:
        $r18 := @caughtexception;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

        throw $r19;

     label22:
        nop;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.NumberFormatException from label05 to label06 with label15;
        catch java.lang.Throwable from label05 to label07 with label02;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label12 with label02;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.NumberFormatException from label14 to label15 with label15;
        catch java.lang.Throwable from label14 to label15 with label02;
        catch java.lang.Throwable from label16 to label17 with label02;
        catch android.os.RemoteException from label18 to label19 with label21;
        catch java.lang.Throwable from label17 to label19 with label02;
        catch java.lang.Throwable from label19 to label20 with label02;
        catch java.lang.Throwable from label21 to label22 with label02;
    }

    public final void publishContentProviders(android.app.IApplicationThread, java.util.List)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        java.util.List $r2;
        com.android.server.am.ProcessRecord $r3;
        java.lang.SecurityException $r4;
        java.lang.StringBuilder $r5;
        int $i0, $i2, $i3, $i4;
        java.lang.String $r6;
        java.lang.Throwable $r7, $r16;
        long $l1;
        java.lang.Object $r8;
        android.app.IActivityManager$ContentProviderHolder $r9;
        android.content.pm.ProviderInfo $r10;
        android.content.IContentProvider $r11;
        java.util.HashMap $r12;
        com.android.server.am.ContentProviderRecord $r13;
        java.lang.String[] $r14;
        java.util.ArrayList $r15;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: java.util.List;

        if $r2 != null goto label01;

        return;

     label01:
        entermonitor $r0;

     label02:
        $r3 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        if $r3 != null goto label05;

        $r4 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when publishing content providers");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label03:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r7;

     label05:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = 0;

     label06:
        if $i2 >= $i0 goto label20;

        $r8 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r9 = (android.app.IActivityManager$ContentProviderHolder) $r8;

        if $r9 == null goto label07;

        $r10 = $r9.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        if $r10 == null goto label07;

        $r11 = $r9.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        if $r11 != null goto label08;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r12 = $r3.<com.android.server.am.ProcessRecord: java.util.HashMap pubProviders>;

        $r10 = $r9.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r6 = $r10.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r8 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r13 = (com.android.server.am.ContentProviderRecord) $r8;

        if $r13 == null goto label07;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $r10 = $r13.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r6 = $r10.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r13);

        $r10 = $r13.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r6 = $r10.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r14 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i3 = 0;

     label09:
        $i4 = lengthof $r14;

        if $i3 >= $i4 goto label10;

        $r12 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $r6 = $r14[$i3];

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r13);

        $i3 = $i3 + 1;

        goto label09;

     label10:
        $r15 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i3 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        $i4 = 0;

     label11:
        if $i4 >= $i3 goto label13;

        $r15 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r8 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        if $r8 != $r13 goto label12;

        $r15 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r15.<java.util.ArrayList: java.lang.Object remove(int)>($i4);

        $i4 = $i4 + -1;

        $i3 = $i3 + -1;

     label12:
        $i4 = $i4 + 1;

        goto label11;

     label13:
        entermonitor $r13;

     label14:
        $r11 = $r9.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        $r13.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider> = $r11;

        $r13.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord app> = $r3;

        virtualinvoke $r13.<java.lang.Object: void notifyAll()>();

        exitmonitor $r13;

     label15:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r3);

     label16:
        goto label07;

     label17:
        $r16 := @caughtexception;

     label18:
        exitmonitor $r13;

     label19:
        throw $r16;

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label21:
        return;

        catch java.lang.Throwable from label02 to label04 with label03;
        catch java.lang.Throwable from label05 to label14 with label03;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label03;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label19 to label21 with label03;
    }

    public void publishService(android.os.IBinder, android.content.Intent, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1, $r3;
        android.content.Intent $r2;
        android.content.Intent$FilterComparison $r4, $r15;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.Throwable $r6;
        com.android.server.am.ServiceRecord $r7;
        long $l0;
        java.util.HashMap $r8;
        java.lang.Object $r9;
        com.android.server.am.IntentBindRecord $r10;
        int $i1;
        java.util.Collection $r11;
        java.util.Iterator $r12;
        com.android.server.am.ConnectionRecord $r13;
        com.android.server.am.AppBindRecord $r14;
        android.app.IServiceConnection $r16;
        android.content.ComponentName $r17;
        java.lang.Exception $r18;
        java.lang.StringBuilder $r19;
        com.android.server.am.ProcessRecord $r20;
        java.lang.String $r21;
        java.util.ArrayList $r22;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.content.Intent;

        $r3 := @parameter2: android.os.IBinder;

        if $r2 == null goto label01;

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r5;

     label01:
        entermonitor $r0;

     label02:
        $z0 = $r1 instanceof com.android.server.am.ServiceRecord;

        if $z0 != 0 goto label05;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid service token");

        throw $r5;

     label03:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r6;

     label05:
        $r7 = (com.android.server.am.ServiceRecord) $r1;

        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if $r7 == null goto label13;

        $r4 = new android.content.Intent$FilterComparison;

        specialinvoke $r4.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r2);

        $r8 = $r7.<com.android.server.am.ServiceRecord: java.util.HashMap bindings>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r10 = (com.android.server.am.IntentBindRecord) $r9;

        if $r10 == null goto label12;

        $z0 = $r10.<com.android.server.am.IntentBindRecord: boolean received>;

        if $z0 != 0 goto label12;

        $r10.<com.android.server.am.IntentBindRecord: android.os.IBinder binder> = $r3;

        $r10.<com.android.server.am.IntentBindRecord: boolean requested> = 1;

        $r10.<com.android.server.am.IntentBindRecord: boolean received> = 1;

        $r8 = $r7.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        $i1 = virtualinvoke $r8.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label12;

        $r8 = $r7.<com.android.server.am.ServiceRecord: java.util.HashMap connections>;

        $r11 = virtualinvoke $r8.<java.util.HashMap: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r9 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (com.android.server.am.ConnectionRecord) $r9;

        $r14 = $r13.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r10 = $r14.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r15 = $r10.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $z0 = virtualinvoke $r4.<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>($r15);

     label07:
        if $z0 == 0 goto label06;

     label08:
        $r16 = $r13.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r17 = $r7.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        interfaceinvoke $r16.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>($r17, $r3);

     label09:
        goto label06;

     label10:
        $r18 := @caughtexception;

     label11:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending service ");

        $r17 = $r7.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r16 = $r13.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r1 = interfaceinvoke $r16.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r14 = $r13.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r20 = $r14.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r21 = $r20.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r21, $r18);

        goto label06;

     label12:
        $r22 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices>;

        $z0 = virtualinvoke $r22.<java.util.ArrayList: boolean contains(java.lang.Object)>($r7);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean)>($r7, $z0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

     label13:
        exitmonitor $r0;

     label14:
        return;

        catch java.lang.Throwable from label02 to label04 with label03;
        catch java.lang.Throwable from label05 to label07 with label03;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label03;
        catch java.lang.Throwable from label11 to label14 with label03;
    }

    final java.lang.String readFile(java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1;
        java.io.FileInputStream $r2;
        byte[] $r3;
        int $i0;
        java.io.IOException $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.FileInputStream;

     label1:
        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

        $r3 = newarray (byte)[8192];

        $i0 = virtualinvoke $r2.<java.io.FileInputStream: int read(byte[])>($r3);

        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,int)>($r3, 0, 0, $i0);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        return "";

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.content.Intent registerReceiver(android.app.IApplicationThread, android.app.IIntentReceiver, android.content.IntentFilter, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IIntentReceiver $r1;
        android.content.IntentFilter $r2;
        java.lang.String $r3, $r15;
        java.util.ArrayList $r4, $r24;
        com.android.server.am.BroadcastFilter $r5;
        android.app.IApplicationThread $r6;
        com.android.server.am.ProcessRecord $r7, $r8;
        java.lang.SecurityException $r9;
        java.lang.StringBuilder $r10;
        int $i0, $i1, $i2;
        java.lang.Throwable $r11;
        java.util.List $r12;
        java.util.Iterator $r13;
        boolean $z0;
        java.lang.Object $r14;
        android.content.Intent $r16, $r22;
        java.util.HashMap $r17;
        android.os.IBinder $r18;
        com.android.server.am.ReceiverList $r19;
        java.util.HashSet $r20;
        com.android.server.IntentResolver $r21;
        com.android.server.am.BroadcastRecord $r23;
        android.os.RemoteException $r25;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r6 := @parameter0: android.app.IApplicationThread;

        $r1 := @parameter1: android.app.IIntentReceiver;

        $r2 := @parameter2: android.content.IntentFilter;

        $r3 := @parameter3: java.lang.String;

        entermonitor $r0;

        $r7 = null;

        if $r6 == null goto label04;

     label01:
        $r8 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r6);

        $r7 = $r8;

        if $r8 != null goto label04;

        $r9 = new java.lang.SecurityException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when registering receiver ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r3);

        throw $r9;

     label02:
        $r11 := @caughtexception;

        exitmonitor $r0;

     label03:
        throw $r11;

     label04:
        $r12 = null;

     label05:
        $r13 = virtualinvoke $r2.<android.content.IntentFilter: java.util.Iterator actionsIterator()>();

        if $r13 == null goto label07;

     label06:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.String) $r14;

        $r12 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: java.util.List getStickies(java.lang.String,android.content.IntentFilter,java.util.List)>($r15, $r2, $r12);

        goto label06;

     label07:
        $r12 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: java.util.List getStickies(java.lang.String,android.content.IntentFilter,java.util.List)>(null, $r2, null);

     label08:
        if $r12 == null goto label11;

        $r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0);

        $r16 = (android.content.Intent) $r14;

     label09:
        if $r1 != null goto label12;

        exitmonitor $r0;

     label10:
        return $r16;

     label11:
        $r16 = null;

        goto label09;

     label12:
        $r17 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r18 = interfaceinvoke $r1.<android.app.IIntentReceiver: android.os.IBinder asBinder()>();

        $r14 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r18);

        $r19 = (com.android.server.am.ReceiverList) $r14;

        if $r19 != null goto label14;

        $r19 = new com.android.server.am.ReceiverList;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r19.<com.android.server.am.ReceiverList: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,int,android.app.IIntentReceiver)>($r0, $r7, $i0, $i1, $r1);

        $r7 = $r19.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label19;

        $r7 = $r19.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r20 = $r7.<com.android.server.am.ProcessRecord: java.util.HashSet receivers>;

        virtualinvoke $r20.<java.util.HashSet: boolean add(java.lang.Object)>($r19);

     label13:
        $r17 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r18 = interfaceinvoke $r1.<android.app.IIntentReceiver: android.os.IBinder asBinder()>();

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

     label14:
        $r5 = new com.android.server.am.BroadcastFilter;

        specialinvoke $r5.<com.android.server.am.BroadcastFilter: void <init>(android.content.IntentFilter,com.android.server.am.ReceiverList,java.lang.String)>($r2, $r19, $r3);

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $z0 = virtualinvoke $r5.<android.content.IntentFilter: boolean debugCheck()>();

        if $z0 != 0 goto label15;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "==> For Dynamic broadast");

     label15:
        $r21 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        virtualinvoke $r21.<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)>($r5);

        if $r12 == null goto label23;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        $i1 = 0;

     label16:
        if $i1 >= $i0 goto label23;

        $r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i1);

        $r22 = (android.content.Intent) $r14;

        $r23 = new com.android.server.am.BroadcastRecord;

        specialinvoke $r23.<com.android.server.am.BroadcastRecord: void <init>(android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.util.List,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean)>($r22, null, null, -1, -1, null, $r4, null, 0, null, null, 0);

        $r24 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        $i2 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label17;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

     label17:
        $r24 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mParallelBroadcasts>;

        virtualinvoke $r24.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

     label18:
        $i1 = $i1 + 1;

        goto label16;

     label19:
        $r18 = interfaceinvoke $r1.<android.app.IIntentReceiver: android.os.IBinder asBinder()>();

        interfaceinvoke $r18.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r19, 0);

     label20:
        $r19.<com.android.server.am.ReceiverList: boolean linkedToDeath> = 1;

        goto label13;

     label21:
        $r25 := @caughtexception;

        exitmonitor $r0;

     label22:
        return $r16;

     label23:
        exitmonitor $r0;

     label24:
        return $r16;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label05 to label10 with label02;
        catch java.lang.Throwable from label11 to label18 with label02;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch java.lang.Throwable from label19 to label20 with label02;
        catch java.lang.Throwable from label20 to label22 with label02;
        catch java.lang.Throwable from label23 to label24 with label02;
    }

    public void removeContentProvider(android.app.IApplicationThread, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        java.lang.String $r2, $r12;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.android.server.am.ContentProviderRecord $r5;
        com.android.server.am.ProcessRecord $r6;
        java.lang.SecurityException $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r9;
        android.content.pm.ProviderInfo $r10;
        android.content.pm.ApplicationInfo $r11;
        java.util.HashSet $r13;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: java.lang.String;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (com.android.server.am.ContentProviderRecord) $r4;

        if $r5 != null goto label3;

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r6 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        if $r6 != null goto label6;

        $r7 = new java.lang.SecurityException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when removing content provider ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw $r7;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r9;

     label6:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByClass>;

        $r10 = $r5.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r2 = $r10.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (com.android.server.am.ContentProviderRecord) $r4;

        $r11 = $r5.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r2 = $r11.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r11 = $r6.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r12 = $r11.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        if $r2 != $r12 goto label8;

        exitmonitor $r0;

     label7:
        return;

     label8:
        $r13 = $r5.<com.android.server.am.ContentProviderRecord: java.util.HashSet clients>;

        virtualinvoke $r13.<java.util.HashSet: boolean remove(java.lang.Object)>($r6);

        $r13 = $r6.<com.android.server.am.ProcessRecord: java.util.HashSet conProviders>;

        virtualinvoke $r13.<java.util.HashSet: boolean remove(java.lang.Object)>($r5);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        exitmonitor $r0;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    void removeReceiverLocked(com.android.server.am.ReceiverList)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ReceiverList $r1;
        java.util.HashMap $r2;
        android.app.IIntentReceiver $r3;
        android.os.IBinder $r4;
        int $i0, $i1;
        com.android.server.IntentResolver $r5;
        java.lang.Object $r6;
        android.content.IntentFilter $r7;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ReceiverList;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r3 = $r1.<com.android.server.am.ReceiverList: android.app.IIntentReceiver receiver>;

        $r4 = interfaceinvoke $r3.<android.app.IIntentReceiver: android.os.IBinder asBinder()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        $r6 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (android.content.IntentFilter) $r6;

        virtualinvoke $r5.<com.android.server.IntentResolver: void removeFilter(android.content.IntentFilter)>($r7);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    void removeRequestedPss(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        java.lang.Runnable $r2;
        java.util.ArrayList $r3;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = null;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRequestPssList>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRequestPssList>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.lang.Runnable mRequestPssCallback>;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.Runnable mRequestPssCallback> = null;

     label2:
        exitmonitor $r0;

     label3:
        if $r2 == null goto label7;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor $r0;

     label6:
        throw $r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void reportPss(android.app.IApplicationThread, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        int $i0;
        java.lang.String $r2;
        com.android.server.am.ProcessRecord $r3;
        java.lang.Throwable $r4;
        com.android.server.Watchdog $r5;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $i0 := @parameter1: int;

        entermonitor $r0;

        if $r1 != null goto label3;

     label1:
        exitmonitor $r0;

     label2:
        return;

     label3:
        $r3 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        if $r3 != null goto label7;

        exitmonitor $r0;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r4;

     label7:
        $r3.<com.android.server.am.ProcessRecord: int lastPss> = $i0;

        $r2 = $r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        exitmonitor $r0;

     label8:
        $r5 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r5.<com.android.server.Watchdog: void reportPss(com.android.server.Watchdog$PssRequestor,java.lang.String,int)>($r3, $r2, $i0);

        $z0 = $r3.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label9;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void removeRequestedPss(com.android.server.am.ProcessRecord)>($r3);

        return;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    public void reportThumbnail(android.os.IBinder, android.graphics.Bitmap, java.lang.CharSequence)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        android.graphics.Bitmap $r2;
        java.lang.CharSequence $r3;
        long $l0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 := @parameter2: java.lang.CharSequence;

        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.HistoryRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)>(null, $r1, $r2, $r3, 1);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

        return;
    }

    public void requestPss(java.lang.Runnable)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.Runnable $r1;
        java.util.ArrayList $r2, $r5;
        int $i0, $i1;
        java.lang.Object $r3;
        com.android.server.am.ProcessRecord $r4;
        boolean $z0;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.Runnable;

        entermonitor $r0;

     label01:
        $r0.<com.android.server.am.ActivityManagerService: java.lang.Runnable mRequestPssCallback> = $r1;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRequestPssList>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label02:
        if $i0 < 0 goto label04;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.ProcessRecord) $r3;

        $z0 = $r4.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label03;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRequestPssList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label03:
        $i0 = $i0 + -1;

        goto label02;

     label04:
        $r2 = new java.util.ArrayList;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRequestPssList>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        exitmonitor $r0;

     label05:
        $i0 = staticinvoke <android.os.Process: int myTid()>();

        $i0 = staticinvoke <android.os.Process: int getThreadPriority(int)>($i0);

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

     label06:
        if $i1 < 0 goto label10;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.android.server.am.ProcessRecord) $r3;

        $r4.<com.android.server.am.ProcessRecord: int lastPss> = 0;

        virtualinvoke $r4.<com.android.server.am.ProcessRecord: void requestPss()>();

        $i1 = $i1 + -1;

        goto label06;

     label07:
        $r6 := @caughtexception;

     label08:
        exitmonitor $r0;

     label09:
        throw $r6;

     label10:
        staticinvoke <android.os.Process: void setThreadPriority(int)>($i0);

        return;

        catch java.lang.Throwable from label01 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void restartPackage(java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.SecurityException $r3;
        long $l1;
        android.content.pm.IPackageManager $r4;
        java.lang.Throwable $r5, $r6;
        android.os.RemoteException $r7;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.RESTART_PACKAGES");

        if $i0 == 0 goto label01;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: restartPackage() from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.RESTART_PACKAGES");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r1);

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label01:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r4 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i0 = -1;

        entermonitor $r0;

     label03:
        $i0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String)>($r1);

     label04:
        if $i0 != -1 goto label07;

     label05:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r1);

        exitmonitor $r0;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        return;

     label07:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void restartPackageLocked(java.lang.String,int)>($r1, $i0);

        exitmonitor $r0;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        return;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor $r0;

     label11:
        throw $r5;

     label12:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        throw $r6;

     label13:
        $r7 := @caughtexception;

        goto label04;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch android.os.RemoteException from label03 to label04 with label13;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public void revokeUriPermission(android.app.IApplicationThread, android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        android.net.Uri $r2;
        int $i0, $i1;
        com.android.server.am.ProcessRecord $r3;
        java.lang.SecurityException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        android.content.pm.IPackageManager $r8;
        android.content.pm.ProviderInfo $r9;
        java.util.HashMap $r10;
        java.lang.Object $r11;
        com.android.server.am.ContentProviderRecord $r12;
        android.content.pm.ApplicationInfo $r13;
        android.os.RemoteException $r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: android.net.Uri;

        $i0 := @parameter2: int;

        entermonitor $r0;

     label01:
        $r3 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        if $r3 != null goto label04;

        $r4 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when revoking permission to uri ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label02:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label03:
        throw $r7;

     label04:
        if $r2 != null goto label07;

     label05:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "revokeUriPermission: null uri");

        exitmonitor $r0;

     label06:
        return;

     label07:
        $i0 = $i0 & 3;

        if $i0 != 0 goto label09;

        exitmonitor $r0;

     label08:
        return;

     label09:
        $r8 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r6 = virtualinvoke $r2.<android.net.Uri: java.lang.String getAuthority()>();

        $r9 = null;

        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mProvidersByName>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r12 = (com.android.server.am.ContentProviderRecord) $r11;

        if $r12 == null goto label12;

        $r9 = $r12.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

     label10:
        if $r9 != null goto label14;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        exitmonitor $r0;

     label11:
        return;

     label12:
        $r9 = interfaceinvoke $r8.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>($r6, 2048);

     label13:
        goto label10;

     label14:
        $r13 = $r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void revokeUriPermissionLocked(int,android.net.Uri,int)>($i1, $r2, $i0);

        exitmonitor $r0;

     label15:
        return;

     label16:
        $r14 := @caughtexception;

        goto label10;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label09 to label11 with label02;
        catch android.os.RemoteException from label12 to label13 with label16;
        catch java.lang.Throwable from label12 to label13 with label02;
        catch java.lang.Throwable from label14 to label15 with label02;
    }

    final void scheduleAppGcLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        long $l0, $l1;
        byte $b2;
        java.util.ArrayList $r2;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = $r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l1 = $l1 + 5000L;

        $b2 = $l1 cmp $l0;

        if $b2 <= 0 goto label1;

        return;

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;

     label2:
        return;
    }

    final void scheduleAppGcsLocked()
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.Message $r1;
        android.os.Handler $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(5);

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(5);

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, 5000L);

        return;
    }

    void sendActivityResultLocked(int, com.android.server.am.HistoryRecord, java.lang.String, int, int, android.content.Intent)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1, $i2;
        com.android.server.am.HistoryRecord $r1, $r6;
        java.lang.String $r2, $r5;
        android.content.Intent $r3;
        java.util.ArrayList $r4, r12;
        com.android.server.am.ProcessRecord $r7;
        android.app.IApplicationThread $r8;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r11, r14;
        android.app.ResultInfo r13;
        android.os.IBinder r15;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.android.server.am.HistoryRecord;

        $r2 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $r3 := @parameter5: android.content.Intent;

        if $i0 <= 0 goto label1;

        $r5 = $r1.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.HistoryRecord)>($i0, $r5, $r3, $r1);

     label1:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord mResumedActivity>;

        if $r6 != $r1 goto label7;

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label7;

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label7;

        r12 = new java.util.ArrayList;

        $r4 = r12;

     label2:
        specialinvoke r12.<java.util.ArrayList: void <init>()>();

     label3:
        r13 = new android.app.ResultInfo;

     label4:
        specialinvoke r13.<android.app.ResultInfo: void <init>(java.lang.String,int,int,android.content.Intent)>($r2, $i1, $i2, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        $r7 = $r1.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r15 = (android.os.IBinder) $r1;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>(r15, $r4);

     label5:
        return;

     label6:
        $r10 := @caughtexception;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown sending result to ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r5, $r10);

     label7:
        virtualinvoke $r1.<com.android.server.am.HistoryRecord: void addResultLocked(com.android.server.am.HistoryRecord,java.lang.String,int,int,android.content.Intent)>(null, $r2, $i1, $i2, $r3);

        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    final void sendPendingThumbnail(com.android.server.am.HistoryRecord, android.os.IBinder, android.graphics.Bitmap, java.lang.CharSequence, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        boolean $z0;
        com.android.server.am.HistoryRecord $r2;
        android.graphics.Bitmap $r3;
        java.lang.CharSequence $r4;
        int $i0, $i1, $i2;
        java.util.ArrayList $r5, $r9;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        com.android.server.am.TaskRecord $r8;
        com.android.server.am.PendingThumbnailsRecord $r10;
        java.util.HashSet $r11;
        android.app.IThumbnailReceiver $r12;
        java.lang.Exception $r13;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 := @parameter0: com.android.server.am.HistoryRecord;

        $r1 := @parameter1: android.os.IBinder;

        $r3 := @parameter2: android.graphics.Bitmap;

        $r4 := @parameter3: java.lang.CharSequence;

        $z0 := @parameter4: boolean;

        entermonitor $r0;

        if $r2 != null goto label04;

     label01:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i0 >= 0 goto label03;

        exitmonitor $r0;

     label02:
        return;

     label03:
        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r2 = (com.android.server.am.HistoryRecord) $r6;

     label04:
        if $r3 != null goto label05;

        $r3 = $r2.<com.android.server.am.HistoryRecord: android.graphics.Bitmap thumbnail>;

        $r4 = $r2.<com.android.server.am.HistoryRecord: java.lang.CharSequence description>;

     label05:
        if $r3 != null goto label10;

        if $z0 != 0 goto label10;

        exitmonitor $r0;

     label06:
        return;

     label07:
        $r7 := @caughtexception;

     label08:
        exitmonitor $r0;

     label09:
        throw $r7;

     label10:
        $r8 = $r2.<com.android.server.am.HistoryRecord: com.android.server.am.TaskRecord task>;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label11:
        $i1 = 0;

        $r5 = null;

     label12:
        if $i1 >= $i0 goto label17;

     label13:
        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        $r6 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r10 = (com.android.server.am.PendingThumbnailsRecord) $r6;

        $r11 = $r10.<com.android.server.am.PendingThumbnailsRecord: java.util.HashSet pendingRecords>;

        $z0 = virtualinvoke $r11.<java.util.HashSet: boolean remove(java.lang.Object)>($r2);

        if $z0 == 0 goto label16;

        if $r5 != null goto label27;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

     label14:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r11 = $r10.<com.android.server.am.PendingThumbnailsRecord: java.util.HashSet pendingRecords>;

        $i2 = virtualinvoke $r11.<java.util.HashSet: int size()>();

        if $i2 != 0 goto label16;

        $r10.<com.android.server.am.PendingThumbnailsRecord: boolean finished> = 1;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

     label15:
        $i0 = $i0 + -1;

        goto label12;

     label16:
        $i1 = $i1 + 1;

        goto label12;

     label17:
        exitmonitor $r0;

     label18:
        if $r5 == null goto label25;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label19:
        if $i1 >= $i0 goto label25;

     label20:
        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r10 = (com.android.server.am.PendingThumbnailsRecord) $r6;

        $r12 = $r10.<com.android.server.am.PendingThumbnailsRecord: android.app.IThumbnailReceiver receiver>;

        if $r8 == null goto label23;

        $i2 = $r8.<com.android.server.am.TaskRecord: int taskId>;

     label21:
        interfaceinvoke $r12.<android.app.IThumbnailReceiver: void newThumbnail(int,android.graphics.Bitmap,java.lang.CharSequence)>($i2, $r3, $r4);

        $z0 = $r10.<com.android.server.am.PendingThumbnailsRecord: boolean finished>;

        if $z0 == 0 goto label22;

        $r12 = $r10.<com.android.server.am.PendingThumbnailsRecord: android.app.IThumbnailReceiver receiver>;

        interfaceinvoke $r12.<android.app.IThumbnailReceiver: void finished()>();

     label22:
        $i1 = $i1 + 1;

        goto label19;

     label23:
        $i2 = -1;

        goto label21;

     label24:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown when sending thumbnail", $r13);

        goto label22;

     label25:
        return;

     label26:
        $r7 := @caughtexception;

        goto label08;

     label27:
        goto label14;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.lang.Throwable from label14 to label15 with label07;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Exception from label20 to label22 with label24;
    }

    public void serviceDoneExecuting(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;
        com.android.server.am.ServiceRecord $r4;
        java.util.ArrayList $r5;
        java.lang.StringBuilder $r6;
        android.content.ComponentName $r7;
        java.lang.String $r8;
        long $l0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        entermonitor $r0;

     label01:
        $z0 = $r1 instanceof com.android.server.am.ServiceRecord;

        if $z0 != 0 goto label04;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid service token");

        throw $r2;

     label02:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label03:
        throw $r3;

     label04:
        $r4 = (com.android.server.am.ServiceRecord) $r1;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $r4 == null goto label09;

        if $r4 == $r1 goto label06;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done executing service ");

        $r7 = $r4.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with incorrect token: given ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        exitmonitor $r0;

     label05:
        return;

     label06:
        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean)>($r4, $z0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

     label07:
        exitmonitor $r0;

     label08:
        return;

     label09:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done executing unknown service ");

        $r7 = $r4.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with token ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

     label10:
        goto label07;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label04 to label05 with label02;
        catch java.lang.Throwable from label06 to label08 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
    }

    public void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ServiceRecord $r1;
        boolean $z0;
        com.android.server.am.ProcessRecord $r2;
        int $i0;
        java.util.HashSet $r3;
        android.os.Handler $r4;
        java.util.ArrayList $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ServiceRecord;

        $z0 := @parameter1: boolean;

        $i0 = $r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        $i0 = $i0 - 1;

        $r1.<com.android.server.am.ServiceRecord: int executeNesting> = $i0;

        $i0 = $r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i0 > 0 goto label3;

        $r2 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label4;

        $r2 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r3 = $r2.<com.android.server.am.ProcessRecord: java.util.HashSet executingServices>;

        virtualinvoke $r3.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        $r2 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r3 = $r2.<com.android.server.am.ProcessRecord: java.util.HashSet executingServices>;

        $i0 = virtualinvoke $r3.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label1;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r2 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int,java.lang.Object)>(12, $r2);

     label1:
        if $z0 == 0 goto label2;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

     label2:
        $r2 = $r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r2);

        return;

     label3:
        return;

     label4:
        return;
    }

    void serviceTimeout(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        long $l0, $l2, $l3;
        java.util.HashSet $r2;
        int $i1;
        android.app.IApplicationThread $r3;
        java.util.Iterator $r4;
        com.android.server.am.ServiceRecord $r5, $r7;
        boolean $z0;
        java.lang.Object $r6;
        byte $b4;
        java.util.ArrayList $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        android.content.ComponentName $r11;
        java.lang.Throwable $r12;
        android.os.Handler $r13;
        android.os.Message $r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        entermonitor $r0;

     label01:
        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet executingServices>;

        $i1 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        if $i1 == 0 goto label02;

        $r3 = $r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 != null goto label04;

     label02:
        exitmonitor $r0;

     label03:
        return;

     label04:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l0 = $l0 - 20000L;

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet executingServices>;

        $r4 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

        $r5 = null;

        $l2 = 0L;

     label05:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.android.server.am.ServiceRecord) $r6;

        $l3 = $r7.<com.android.server.am.ServiceRecord: long executingStart>;

        $b4 = $l3 cmp $l0;

        if $b4 >= 0 goto label11;

        $r5 = $r7;

     label06:
        if $r5 == null goto label12;

        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label12;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout executing service: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Executing service ");

        $r11 = $r5.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void appNotRespondingLocked(com.android.server.am.ProcessRecord,com.android.server.am.HistoryRecord,java.lang.String)>($r1, null, $r10);

     label07:
        exitmonitor $r0;

     label08:
        return;

     label09:
        $r12 := @caughtexception;

        exitmonitor $r0;

     label10:
        throw $r12;

     label11:
        $l3 = $r7.<com.android.server.am.ServiceRecord: long executingStart>;

        $b4 = $l3 cmp $l2;

        if $b4 <= 0 goto label05;

        $l2 = $r7.<com.android.server.am.ServiceRecord: long executingStart>;

        goto label05;

     label12:
        $r13 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r14 = virtualinvoke $r13.<android.os.Handler: android.os.Message obtainMessage(int)>(12);

        $r14.<android.os.Message: java.lang.Object obj> = $r1;

        $r13 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $l0 = $l2 + 20000L;

        virtualinvoke $r13.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>($r14, $l0);

     label13:
        goto label07;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label11 to label13 with label09;
    }

    public void setActivityWatcher(android.app.IActivityWatcher)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IActivityWatcher $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IActivityWatcher;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER", "setActivityWatcher()");

        entermonitor $r0;

     label1:
        $r0.<com.android.server.am.ActivityManagerService: android.app.IActivityWatcher mWatcher> = $r1;

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAlwaysFinish(boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0;
        android.content.ContentResolver $r1;
        android.content.Context $r2;
        byte $b0;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 := @parameter0: boolean;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ALWAYS_FINISH", "setAlwaysFinish()");

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if $z0 == 0 goto label4;

        $b0 = 1;

     label1:
        staticinvoke <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r1, "always_finish_activities", $b0);

        entermonitor $r0;

     label2:
        $r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = $z0;

        exitmonitor $r0;

     label3:
        return;

     label4:
        $b0 = 0;

        goto label1;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setDebugApp(java.lang.String, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1, $r4;
        boolean $z0, $z1, $z2;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        byte $b0;
        long $l1;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_DEBUG_APP", "setDebugApp()");

        if $z1 == 0 goto label02;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r3, "debug_app", $r1);

        if $z0 == 0 goto label08;

        $b0 = 1;

     label01:
        staticinvoke <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r3, "wait_for_debugger", $b0);

     label02:
        entermonitor $r0;

        if $z1 != 0 goto label04;

     label03:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = $r4;

        $z2 = $r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger>;

        $r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = $z2;

     label04:
        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = $r1;

        $r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = $z0;

        if $z1 != 0 goto label09;

        $z0 = 1;

     label05:
        $r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient> = $z0;

        if $r1 == null goto label06;

        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void uninstallPackageLocked(java.lang.String,int,boolean)>($r1, -1, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

     label06:
        exitmonitor $r0;

     label07:
        return;

     label08:
        $b0 = 0;

        goto label01;

     label09:
        $z0 = 0;

        goto label05;

     label10:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label11:
        throw $r5;

        catch java.lang.Throwable from label03 to label07 with label10;
        catch java.lang.Throwable from label09 to label11 with label10;
    }

    public void setPersistent(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        boolean $z0;
        com.android.server.am.ProcessRecord $r2;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.SecurityException $r5;
        java.util.ArrayList $r6;
        java.lang.Object $r7;
        com.android.server.am.HistoryRecord $r8;
        java.lang.Throwable $r9;
        long $l1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.PERSISTENT_ACTIVITY");

        if $i0 == 0 goto label01;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: setPersistent() from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.PERSISTENT_ACTIVITY");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label01:
        entermonitor $r0;

     label02:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 1);

        if $i0 >= 0 goto label04;

        exitmonitor $r0;

     label03:
        return;

     label04:
        $r6 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (com.android.server.am.HistoryRecord) $r7;

        $r2 = $r8.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $z0 == 0 goto label15;

        $z0 = $r8.<com.android.server.am.HistoryRecord: boolean persistent>;

        if $z0 == 0 goto label08;

        exitmonitor $r0;

     label05:
        return;

     label06:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label07:
        throw $r9;

     label08:
        $r8.<com.android.server.am.HistoryRecord: boolean persistent> = 1;

        $i0 = $r2.<com.android.server.am.ProcessRecord: int persistentActivities>;

        $i0 = $i0 + 1;

        $r2.<com.android.server.am.ProcessRecord: int persistentActivities> = $i0;

        $i0 = $r2.<com.android.server.am.ProcessRecord: int persistentActivities>;

        if $i0 <= 1 goto label10;

        exitmonitor $r0;

     label09:
        return;

     label10:
        $z0 = $r2.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label12;

        exitmonitor $r0;

     label11:
        return;

     label12:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

     label13:
        exitmonitor $r0;

     label14:
        return;

     label15:
        $z0 = $r8.<com.android.server.am.HistoryRecord: boolean persistent>;

        if $z0 != 0 goto label17;

        exitmonitor $r0;

     label16:
        return;

     label17:
        $r8.<com.android.server.am.HistoryRecord: boolean persistent> = 0;

        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void decPersistentCountLocked(com.android.server.am.ProcessRecord)>($r2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

     label18:
        goto label13;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label12 to label14 with label06;
        catch java.lang.Throwable from label15 to label16 with label06;
        catch java.lang.Throwable from label17 to label18 with label06;
    }

    public void setProcessForeground(android.os.IBinder, int, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1, $r10;
        int $i0;
        boolean $z0, $z1;
        com.android.server.am.ActivityManagerService$4 $r2;
        android.util.SparseArray $r3, $r4;
        java.lang.Object $r5;
        com.android.server.am.ProcessRecord $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        com.android.server.am.ActivityManagerService$ForegroundToken $r9;
        java.lang.Throwable $r11, $r12;
        android.os.RemoteException $r13;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_PROCESS_LIMIT", "setProcessForeground()");

        entermonitor $r0;

        $z1 = 0;

     label01:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r3;

     label02:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r6 = (com.android.server.am.ProcessRecord) $r5;

        if $r6 != null goto label05;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setProcessForeground called on unknown pid: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        exitmonitor $r3;

     label03:
        exitmonitor $r0;

     label04:
        return;

     label05:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r9 = (com.android.server.am.ActivityManagerService$ForegroundToken) $r5;

        if $r9 == null goto label06;

        $r10 = $r9.<com.android.server.am.ActivityManagerService$ForegroundToken: android.os.IBinder token>;

        interfaceinvoke $r10.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r9, 0);

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>($i0);

        $r6.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        $z1 = 1;

     label06:
        if $z0 == 0 goto label10;

        if $r1 == null goto label10;

        $r2 = new com.android.server.am.ActivityManagerService$4;

        specialinvoke $r2.<com.android.server.am.ActivityManagerService$4: void <init>(com.android.server.am.ActivityManagerService)>($r0);

        $r2.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid> = $i0;

        $r2.<com.android.server.am.ActivityManagerService$ForegroundToken: android.os.IBinder token> = $r1;

     label07:
        interfaceinvoke $r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r2);

     label08:
        $r6.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = $r1;

     label09:
        $z1 = 1;

     label10:
        exitmonitor $r3;

     label11:
        if $z1 == 0 goto label13;

     label12:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

     label13:
        exitmonitor $r0;

     label14:
        return;

     label15:
        $r11 := @caughtexception;

        exitmonitor $r0;

     label16:
        throw $r11;

     label17:
        $r12 := @caughtexception;

     label18:
        exitmonitor $r3;

     label19:
        throw $r12;

     label20:
        $r13 := @caughtexception;

        goto label10;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label07 with label17;
        catch android.os.RemoteException from label07 to label08 with label20;
        catch java.lang.Throwable from label07 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label19 to label20 with label15;
    }

    public void setProcessLimit(int)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_PROCESS_LIMIT", "setProcessLimit()");

        $r0.<com.android.server.am.ActivityManagerService: int mProcessLimit> = $i0;

        return;
    }

    public void setRequestedOrientation(android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        int $i0, $i1;
        android.content.res.Configuration $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.android.server.am.HistoryRecord $r5, $r8;
        long $l2;
        com.android.server.WindowManagerService $r6;
        com.android.server.am.ProcessRecord $r7;
        boolean $z0;
        java.lang.Throwable $r9;
        android.view.IApplicationToken r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $i0 := @parameter1: int;

        entermonitor $r0;

     label1:
        $i1 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r1, 0);

        if $i1 >= 0 goto label3;

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r6 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        r10 = (android.view.IApplicationToken) $r5;

        virtualinvoke $r6.<com.android.server.WindowManagerService: void setAppOrientation(android.view.IApplicationToken,int)>(r10, $i0);

        $r6 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r7 = $r5.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $z0 = virtualinvoke $r5.<com.android.server.am.HistoryRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>($r7);

        if $z0 == 0 goto label9;

        $r8 = $r5;

     label4:
        $r1 = (android.os.IBinder) $r8;

        $r2 = virtualinvoke $r6.<com.android.server.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>($r2, $r1);

        if $r2 == null goto label5;

        $r5.<com.android.server.am.HistoryRecord: boolean frozenBeforeDestroy> = 1;

        $z0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.HistoryRecord)>($r2, $r5);

        if $z0 != 0 goto label5;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        exitmonitor $r0;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label8:
        throw $r9;

     label9:
        $r8 = null;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setServiceForeground(android.content.ComponentName, android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        boolean $z0, $z1;
        com.android.server.am.ServiceRecord $r3;
        long $l0;
        com.android.server.am.ProcessRecord $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        $z0 := @parameter2: boolean;

        entermonitor $r0;

     label1:
        $r3 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName,android.os.IBinder)>($r1, $r2);

        if $r3 == null goto label3;

        $z1 = $r3.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z1 == $z0 goto label3;

        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r3.<com.android.server.am.ServiceRecord: boolean isForeground> = $z0;

        $r4 = $r3.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label2;

        $r4 = $r3.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r4, 1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

     label3:
        exitmonitor $r0;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setWindowManager(com.android.server.WindowManagerService)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.WindowManagerService $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.WindowManagerService;

        $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager> = $r1;

        return;
    }

    public void showWaitingForDebugger(android.app.IApplicationThread, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        boolean $z0;
        com.android.server.am.ProcessRecord $r2;
        android.os.Message $r3;
        byte $b0;
        android.os.Handler $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $z0 := @parameter1: boolean;

        entermonitor $r0;

        if $r1 == null goto label04;

     label01:
        $r2 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

     label02:
        if $r2 != null goto label05;

        exitmonitor $r0;

     label03:
        return;

     label04:
        $r2 = null;

        goto label02;

     label05:
        $r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r3.<android.os.Message: int what> = 6;

        $r3.<android.os.Message: java.lang.Object obj> = $r2;

        if $z0 == 0 goto label10;

        $b0 = 1;

     label06:
        $r3.<android.os.Message: int arg1> = $b0;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        exitmonitor $r0;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label09:
        throw $r5;

     label10:
        $b0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void signalPersistentProcesses(int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1, $i2;
        java.lang.SecurityException $r1;
        java.lang.Throwable $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.android.server.am.ProcessRecord $r5;
        android.app.IApplicationThread $r6;
        boolean $z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        if $i0 == 10 goto label1;

        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Only SIGNAL_USR1 is allowed");

        throw $r1;

     label1:
        entermonitor $r0;

     label2:
        $i1 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SIGNAL_PERSISTENT_PROCESSES");

        if $i1 == 0 goto label5;

        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES");

        throw $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r2;

     label5:
        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

     label6:
        if $i1 < 0 goto label8;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (com.android.server.am.ProcessRecord) $r4;

        $r6 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 == null goto label7;

        $z0 = $r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label7;

        $i2 = $r5.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i2, $i0);

     label7:
        $i1 = $i1 + -1;

        goto label6;

     label8:
        exitmonitor $r0;

     label9:
        return;

        catch java.lang.Throwable from label2 to label4 with label3;
        catch java.lang.Throwable from label5 to label9 with label3;
    }

    void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1, $r6;
        boolean $z0;
        com.android.server.am.BroadcastRecord $r2;
        android.os.IBinder $r3;
        int $i0;
        java.lang.String $r4;
        android.os.Bundle $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 = 0;

        $r2 = $r1.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if $r2 == null goto label1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logBroadcastReceiverDiscard(com.android.server.am.BroadcastRecord)>($r2);

        $r3 = $r2.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver>;

        $i0 = $r2.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r4 = $r2.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r5 = $r2.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z0 = $r2.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,boolean)>($r3, $i0, $r4, $r5, $z0, 1);

        $z0 = 1;

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if $r2 == null goto label2;

        $r6 = $r2.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        if $r6 != $r1 goto label2;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void logBroadcastReceiverDiscard(com.android.server.am.BroadcastRecord)>($r2);

        $r3 = $r2.<com.android.server.am.BroadcastRecord: android.os.IBinder receiver>;

        $i0 = $r2.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r4 = $r2.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r5 = $r2.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z0 = $r2.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,boolean)>($r3, $i0, $r4, $r5, $z0, 1);

        $z0 = 1;

     label2:
        if $z0 == 0 goto label3;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>();

        return;

     label3:
        return;
    }

    public final int startActivity(android.app.IApplicationThread, android.content.Intent, java.lang.String, android.net.Uri[], int, android.os.IBinder, java.lang.String, int, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        android.content.Intent $r2, $r7;
        java.lang.String $r3, $r6, $r14, $r15;
        android.net.Uri[] $r4;
        int $i0, $i1;
        android.os.IBinder $r5;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r8;
        android.content.ComponentName $r9;
        android.content.pm.IPackageManager $r10;
        android.content.pm.ResolveInfo $r11;
        android.content.pm.ActivityInfo $r12;
        android.content.pm.ApplicationInfo $r13;
        long $l2;
        android.os.RemoteException $r16;
        java.lang.Throwable $r17;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: android.content.Intent;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: android.net.Uri[];

        $i0 := @parameter4: int;

        $r5 := @parameter5: android.os.IBinder;

        $r6 := @parameter6: java.lang.String;

        $i1 := @parameter7: int;

        $z0 := @parameter8: boolean;

        $z1 := @parameter9: boolean;

        if $r2 == null goto label01;

        $z2 = virtualinvoke $r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z2 == 0 goto label01;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r8;

     label01:
        $r9 = virtualinvoke $r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r9 == null goto label09;

        $z2 = 1;

     label02:
        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(android.content.Intent)>($r2);

     label03:
        $r10 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r11 = interfaceinvoke $r10.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int)>($r7, $r3, 66560);

     label04:
        if $r11 == null goto label10;

        $r12 = $r11.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label05:
        if $r12 == null goto label06;

        $r9 = new android.content.ComponentName;

        $r13 = $r12.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = $r13.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r15 = $r12.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r9.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r14, $r15);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r9);

        if $z1 == 0 goto label06;

        $r14 = $r12.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z1 != 0 goto label06;

        $r14 = $r12.<android.content.pm.ComponentInfo: java.lang.String processName>;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>($r14, 1, 0);

     label06:
        entermonitor $r0;

     label07:
        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,boolean,boolean)>($r1, $r7, $r3, $r4, $i0, $r12, $r5, $r6, $i1, -1, -1, $z0, $z2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        exitmonitor $r0;

     label08:
        return $i0;

     label09:
        $z2 = 0;

        goto label02;

     label10:
        $r12 = null;

        goto label05;

     label11:
        $r16 := @caughtexception;

        $r12 = null;

        goto label05;

     label12:
        $r17 := @caughtexception;

        exitmonitor $r0;

     label13:
        throw $r17;

        catch android.os.RemoteException from label03 to label04 with label11;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    final int startActivityInPackage(int, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0, $i1;
        android.content.Intent $r1, $r5;
        java.lang.String $r2, $r4, $r11, $r12;
        android.os.IBinder $r3;
        boolean $z0, $z1;
        android.content.ComponentName $r6;
        android.content.pm.IPackageManager $r7;
        android.content.pm.ResolveInfo $r8;
        android.content.pm.ActivityInfo $r9;
        android.content.pm.ApplicationInfo $r10;
        android.os.RemoteException $r13;
        java.lang.Throwable $r14;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.Intent;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.os.IBinder;

        $r4 := @parameter4: java.lang.String;

        $i1 := @parameter5: int;

        $z0 := @parameter6: boolean;

        $r6 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r6 == null goto label08;

        $z1 = 1;

     label01:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Intent)>($r1);

     label02:
        $r7 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r8 = interfaceinvoke $r7.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int)>($r5, $r2, 66560);

     label03:
        if $r8 == null goto label09;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label04:
        if $r9 == null goto label05;

        $r6 = new android.content.ComponentName;

        $r10 = $r9.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = $r10.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r12 = $r9.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r6.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r12);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r6);

     label05:
        entermonitor $r0;

     label06:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,boolean,boolean)>(null, $r5, $r2, null, 0, $r9, $r3, $r4, $i1, -1, $i0, $z0, $z1);

        exitmonitor $r0;

     label07:
        return $i0;

     label08:
        $z1 = 0;

        goto label01;

     label09:
        $r9 = null;

        goto label04;

     label10:
        $r13 := @caughtexception;

        $r9 = null;

        goto label04;

     label11:
        $r14 := @caughtexception;

        exitmonitor $r0;

     label12:
        throw $r14;

        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    void startAppProblemLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>($r1);

        return;
    }

    public boolean startInstrumentation(android.content.ComponentName, java.lang.String, int, android.os.Bundle, android.app.IInstrumentationWatcher)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.ComponentName $r1;
        java.lang.String $r2, $r11, $r14;
        int $i0;
        android.os.Bundle $r3;
        android.app.IInstrumentationWatcher $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        android.content.pm.InstrumentationInfo $r6, $r10;
        android.content.pm.ApplicationInfo $r7;
        android.content.Context $r8;
        android.content.pm.PackageManager $r9;
        java.lang.StringBuilder $r12;
        java.lang.Throwable $r13;
        java.lang.SecurityException $r15;
        long $l1;
        com.android.server.am.ProcessRecord $r16;
        android.content.pm.PackageManager$NameNotFoundException $r17;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.os.Bundle;

        $r4 := @parameter4: android.app.IInstrumentationWatcher;

        if $r3 == null goto label01;

        $z0 = virtualinvoke $r3.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 == 0 goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r5;

     label01:
        entermonitor $r0;

        $r6 = null;

        $r7 = null;

     label02:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

     label03:
        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r10 = virtualinvoke $r9.<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>($r1, 0);

     label04:
        $r6 = $r10;

     label05:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r11 = $r10.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r7 = virtualinvoke $r9.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r11, 1024);

     label06:
        if $r6 != null goto label09;

     label07:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation info for: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>($r4, $r1, $r2);

        exitmonitor $r0;

     label08:
        return 0;

     label09:
        if $r7 != null goto label13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation target package: ");

        $r2 = $r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>($r4, $r1, $r2);

        exitmonitor $r0;

     label10:
        return 0;

     label11:
        $r13 := @caughtexception;

        exitmonitor $r0;

     label12:
        throw $r13;

     label13:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r11 = $r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r14 = $r6.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $i0 = virtualinvoke $r9.<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>($r11, $r14);

        if $i0 >= 0 goto label14;

        if $i0 == -1 goto label14;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting instrumentation ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not allowed because package ");

        $r2 = $r6.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a signature matching the target ");

        $r2 = $r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>($r4, $r1, $r2);

        $r15 = new java.lang.SecurityException;

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw $r15;

     label14:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r11 = $r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void uninstallPackageLocked(java.lang.String,int,boolean)>($r11, -1, 1);

        $r16 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo)>($r7);

        $r16.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass> = $r1;

        $r16.<com.android.server.am.ProcessRecord: java.lang.String instrumentationProfileFile> = $r2;

        $r16.<com.android.server.am.ProcessRecord: android.os.Bundle instrumentationArguments> = $r3;

        $r16.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher> = $r4;

        $r16.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationResultClass> = $r1;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label15:
        return 1;

     label16:
        $r17 := @caughtexception;

        goto label06;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label16;
        catch java.lang.Throwable from label02 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label13 to label15 with label11;
    }

    public boolean startNextMatchingActivity(android.os.IBinder, android.content.Intent)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.Intent $r1, $r3, r24;
        android.os.IBinder $r2;
        boolean $z0;
        int $i0, $i1;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        com.android.server.am.HistoryRecord $r7, $r21;
        com.android.server.am.ProcessRecord $r8;
        android.app.IApplicationThread $r9;
        java.lang.Throwable $r10;
        android.net.Uri $r11;
        java.lang.String $r12, $r18;
        android.content.pm.ActivityInfo $r13, $r17;
        android.content.pm.IPackageManager $r14;
        java.util.List $r15;
        android.content.pm.ResolveInfo $r16;
        android.content.pm.ApplicationInfo $r20;
        long $l2;
        android.os.RemoteException $r22;
        java.lang.IllegalArgumentException r23;
        android.content.ComponentName r25;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 := @parameter0: android.os.IBinder;

        $r3 := @parameter1: android.content.Intent;

        if $r3 == null goto label01;

        $z0 = virtualinvoke $r3.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label01;

        r23 = new java.lang.IllegalArgumentException;

        specialinvoke r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw r23;

     label01:
        entermonitor $r0;

     label02:
        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int indexOfTokenLocked(android.os.IBinder,boolean)>($r2, 0);

        if $i0 >= 0 goto label04;

        exitmonitor $r0;

     label03:
        return 0;

     label04:
        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (com.android.server.am.HistoryRecord) $r6;

        $r8 = $r7.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        if $r8 == null goto label05;

        $r8 = $r7.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r9 != null goto label10;

     label05:
        exitmonitor $r0;

     label06:
        return 0;

     label07:
        $r10 := @caughtexception;

     label08:
        exitmonitor $r0;

     label09:
        throw $r10;

     label10:
        r24 = new android.content.Intent;

        $r1 = r24;

        specialinvoke r24.<android.content.Intent: void <init>(android.content.Intent)>($r3);

     label11:
        $r3 = $r7.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r11 = virtualinvoke $r3.<android.content.Intent: android.net.Uri getData()>();

        $r3 = $r7.<com.android.server.am.HistoryRecord: android.content.Intent intent>;

        $r12 = virtualinvoke $r3.<android.content.Intent: java.lang.String getType()>();

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r11, $r12);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(null);

     label12:
        $r13 = null;

     label13:
        $r14 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r12 = $r7.<com.android.server.am.HistoryRecord: java.lang.String resolvedType>;

        $r15 = interfaceinvoke $r14.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int)>($r1, $r12, 66560);

        if $r15 == null goto label26;

        $i0 = interfaceinvoke $r15.<java.util.List: int size()>();

     label14:
        $i1 = 0;

     label15:
        if $i1 >= $i0 goto label23;

        $r6 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>($i1);

     label16:
        $r16 = (android.content.pm.ResolveInfo) $r6;

        $r17 = $r16.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r12 = $r17.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

     label17:
        $r18 = $r7.<com.android.server.am.HistoryRecord: java.lang.String packageName>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r18);

     label18:
        if $z0 == 0 goto label27;

        $r17 = $r16.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r12 = $r17.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r17 = $r7.<com.android.server.am.HistoryRecord: android.content.pm.ActivityInfo info>;

     label19:
        $r18 = $r17.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r18);

     label20:
        if $z0 == 0 goto label27;

        $i1 = $i1 + 1;

     label21:
        if $i1 >= $i0 goto label23;

        $r6 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>($i1);

     label22:
        $r16 = (android.content.pm.ResolveInfo) $r6;

        $r13 = $r16.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label23:
        if $r13 != null goto label28;

     label24:
        exitmonitor $r0;

     label25:
        return 0;

     label26:
        $i0 = 0;

        goto label14;

     label27:
        $i1 = $i1 + 1;

        goto label15;

     label28:
        r25 = new android.content.ComponentName;

        $r20 = $r13.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = $r20.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r18 = $r13.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke r25.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r12, $r18);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r25);

        $i0 = virtualinvoke $r1.<android.content.Intent: int getFlags()>();

        $i0 = $i0 & -503316481;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setFlags(int)>($i0);

        $z0 = $r7.<com.android.server.am.HistoryRecord: boolean finishing>;

        $r7.<com.android.server.am.HistoryRecord: boolean finishing> = 1;

        $r21 = $r7.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo>;

        $r12 = $r7.<com.android.server.am.HistoryRecord: java.lang.String resultWho>;

        $i0 = $r7.<com.android.server.am.HistoryRecord: int requestCode>;

        $r7.<com.android.server.am.HistoryRecord: com.android.server.am.HistoryRecord resultTo> = null;

        if $r21 == null goto label29;

        virtualinvoke $r21.<com.android.server.am.HistoryRecord: void removeResultsLocked(com.android.server.am.HistoryRecord,java.lang.String,int)>($r7, $r12, $i0);

     label29:
        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r8 = $r7.<com.android.server.am.HistoryRecord: com.android.server.am.ProcessRecord app>;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r18 = $r7.<com.android.server.am.HistoryRecord: java.lang.String resolvedType>;

        $i1 = $r7.<com.android.server.am.HistoryRecord: int launchedFromUid>;

        $r2 = (android.os.IBinder) $r21;

        $i0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,boolean,boolean)>($r9, $r1, $r18, null, 0, $r13, $r2, $r12, $i0, -1, $i1, 0, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        $r7.<com.android.server.am.HistoryRecord: boolean finishing> = $z0;

        if $i0 == 0 goto label31;

        exitmonitor $r0;

     label30:
        return 0;

     label31:
        exitmonitor $r0;

     label32:
        return 1;

     label33:
        $r10 := @caughtexception;

        goto label08;

     label34:
        $r22 := @caughtexception;

        goto label23;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label07 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label11 to label12 with label33;
        catch android.os.RemoteException from label13 to label14 with label34;
        catch android.os.RemoteException from label15 to label16 with label34;
        catch android.os.RemoteException from label17 to label18 with label34;
        catch android.os.RemoteException from label19 to label20 with label34;
        catch android.os.RemoteException from label21 to label22 with label34;
        catch java.lang.Throwable from label13 to label23 with label33;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.lang.Throwable from label26 to label30 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
    }

    public final void startRunning(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;
        android.content.ComponentName $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        entermonitor $r0;

     label01:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning>;

        if $z0 == 0 goto label03;

        exitmonitor $r0;

     label02:
        return;

     label03:
        $r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning> = 1;

        if $r1 == null goto label09;

        if $r2 == null goto label09;

        $r5 = new android.content.ComponentName;

        specialinvoke $r5.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

     label04:
        $r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent> = $r5;

        if $r3 == null goto label10;

        $r1 = $r3;

     label05:
        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = $r1;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData> = $r4;

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label11;

        exitmonitor $r0;

     label06:
        return;

     label07:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label08:
        throw $r6;

     label09:
        $r5 = null;

        goto label04;

     label10:
        $r1 = "android.intent.action.MAIN";

        goto label05;

     label11:
        exitmonitor $r0;

     label12:
        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void systemReady()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label10 to label12 with label07;
    }

    public android.content.ComponentName startService(android.app.IApplicationThread, android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        android.content.Intent $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        int $i0, $i1;
        long $l2;
        android.content.ComponentName $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: android.content.Intent;

        $r3 := @parameter2: java.lang.String;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r4;

     label1:
        entermonitor $r0;

     label2:
        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r5 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int)>($r1, $r2, $r3, $i0, $i1);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        exitmonitor $r0;

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    android.content.ComponentName startServiceInPackage(int, android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        int $i0;
        android.content.Intent $r1;
        java.lang.String $r2;
        long $l1;
        android.content.ComponentName $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.Intent;

        $r2 := @parameter2: java.lang.String;

        entermonitor $r0;

     label1:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r3 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int)>(null, $r1, $r2, -1, $i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    android.content.ComponentName startServiceLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        android.content.Intent $r2;
        java.lang.String $r3;
        int $i0, $i1;
        com.android.server.am.ServiceRecord $r4;
        com.android.server.am.ProcessRecord $r5;
        java.lang.SecurityException $r6;
        java.lang.StringBuilder $r7;
        java.lang.Throwable $r8, $r14;
        com.android.server.am.ActivityManagerService$ServiceLookupResult $r9;
        android.content.ComponentName $r10;
        boolean $z0;
        java.util.List $r11;
        long $l2;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r12;
        com.android.internal.os.BatteryStatsImpl $r13;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: android.content.Intent;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        entermonitor $r0;

        if $r1 == null goto label04;

     label01:
        $r5 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        if $r5 != null goto label04;

        $r6 = new java.lang.SecurityException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting service ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r3);

        throw $r6;

     label02:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label03:
        throw $r8;

     label04:
        $r9 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int)>($r2, $r3, $i0, $i1);

        if $r9 != null goto label06;

        exitmonitor $r0;

     label05:
        return null;

     label06:
        $r4 = $r9.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r4 != null goto label10;

        $r10 = new android.content.ComponentName;

        $r3 = $r9.<com.android.server.am.ActivityManagerService$ServiceLookupResult: java.lang.String permission>;

        if $r3 == null goto label09;

        $r3 = $r9.<com.android.server.am.ActivityManagerService$ServiceLookupResult: java.lang.String permission>;

     label07:
        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("!", $r3);

        exitmonitor $r0;

     label08:
        return $r10;

     label09:
        $r3 = "private to package";

        goto label07;

     label10:
        $r4 = $r9.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord)>($r4);

        if $z0 == 0 goto label11;

     label11:
        $r4.<com.android.server.am.ServiceRecord: boolean startRequested> = 1;

        $r11 = $r4.<com.android.server.am.ServiceRecord: java.util.List startArgs>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = $r4.<com.android.server.am.ServiceRecord: int lastStartId>;

        $i0 = $i0 + 1;

        $r4.<com.android.server.am.ServiceRecord: int lastStartId> = $i0;

        $i0 = $r4.<com.android.server.am.ServiceRecord: int lastStartId>;

        if $i0 >= 1 goto label12;

        $r4.<com.android.server.am.ServiceRecord: int lastStartId> = 1;

     label12:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4.<com.android.server.am.ServiceRecord: long lastActivity> = $l2;

        $r12 = $r4.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r13 = virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor $r13;

     label13:
        $r12 = $r4.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startRunningLocked()>();

        exitmonitor $r13;

     label14:
        $i0 = virtualinvoke $r2.<android.content.Intent: int getFlags()>();

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean)>($r4, $i0, 0);

        if $z0 != 0 goto label19;

        $r10 = new android.content.ComponentName;

        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("!", "Service process is bad");

        exitmonitor $r0;

     label15:
        return $r10;

     label16:
        $r14 := @caughtexception;

     label17:
        exitmonitor $r13;

     label18:
        throw $r14;

     label19:
        $r10 = $r4.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        exitmonitor $r0;

     label20:
        return $r10;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label04 to label05 with label02;
        catch java.lang.Throwable from label06 to label08 with label02;
        catch java.lang.Throwable from label09 to label13 with label02;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label02;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label18 to label20 with label02;
    }

    public int stopService(android.app.IApplicationThread, android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        android.content.Intent $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        com.android.server.am.ProcessRecord $r5;
        java.lang.SecurityException $r6;
        java.lang.StringBuilder $r7;
        int $i0;
        java.lang.Throwable $r8, $r13;
        com.android.server.am.ActivityManagerService$ServiceLookupResult $r9;
        com.android.server.am.ServiceRecord $r10;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r11;
        com.android.internal.os.BatteryStatsImpl $r12;
        long $l1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: android.content.Intent;

        $r3 := @parameter2: java.lang.String;

        if $r2 == null goto label01;

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label01;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r4;

     label01:
        entermonitor $r0;

     label02:
        $r5 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>($r1);

        if $r1 == null goto label05;

        if $r5 != null goto label05;

        $r6 = new java.lang.SecurityException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when stopping service ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r3);

        throw $r6;

     label03:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r8;

     label05:
        $r9 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ServiceLookupResult findServiceLocked(android.content.Intent,java.lang.String)>($r2, $r3);

        if $r9 == null goto label14;

        $r10 = $r9.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r10 == null goto label12;

        $r10 = $r9.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r11 = $r10.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r12 = virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor $r12;

     label06:
        $r10 = $r9.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r11 = $r10.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopRunningLocked()>();

        exitmonitor $r12;

     label07:
        $r10 = $r9.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r10.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r10 = $r9.<com.android.server.am.ActivityManagerService$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>($r10, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        exitmonitor $r0;

     label08:
        return 1;

     label09:
        $r13 := @caughtexception;

     label10:
        exitmonitor $r12;

     label11:
        throw $r13;

     label12:
        exitmonitor $r0;

     label13:
        return -1;

     label14:
        exitmonitor $r0;

     label15:
        return 0;

        catch java.lang.Throwable from label02 to label04 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label03;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label13 with label03;
        catch java.lang.Throwable from label14 to label15 with label03;
    }

    public boolean stopServiceToken(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        int $i0, $i1;
        com.android.server.am.ServiceRecord $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r4;
        com.android.internal.os.BatteryStatsImpl $r5;
        long $l2;
        java.lang.Throwable $r6, $r7;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        $i0 := @parameter2: int;

        entermonitor $r0;

     label01:
        $r3 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName,android.os.IBinder)>($r1, $r2);

        if $r3 == null goto label11;

        if $i0 < 0 goto label02;

        $i1 = $r3.<com.android.server.am.ServiceRecord: int lastStartId>;

        if $i1 != $i0 goto label11;

     label02:
        $r4 = $r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        $r5 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor $r5;

     label03:
        $r4 = $r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopRunningLocked()>();

        $r3.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        exitmonitor $r5;

     label04:
        $l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>($r3, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l2);

        exitmonitor $r0;

     label05:
        return 1;

     label06:
        $r6 := @caughtexception;

     label07:
        exitmonitor $r5;

     label08:
        throw $r6;

     label09:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label10:
        throw $r7;

     label11:
        exitmonitor $r0;

     label12:
        return 0;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label10 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }

    public void systemReady()
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.pm.ActivityInfo $r1;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0;
        java.lang.Throwable $r3, $r19, $r21;
        long $l0;
        int $i1, $i2;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        android.content.Intent $r6;
        android.content.pm.ResolveInfo $r7;
        java.lang.CharSequence $r8;
        android.content.ComponentName $r9;
        java.lang.String $r10, $r11;
        android.os.Message $r12;
        android.os.Bundle $r13;
        android.os.Handler $r14;
        android.content.pm.IPackageManager $r15;
        java.util.List $r16;
        java.lang.Object $r17;
        android.content.res.Resources $r18;
        android.os.RemoteException $r20, $r22;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z0 != 0 goto label01;

        $r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning> = 1;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = "android.intent.action.MAIN";

     label01:
        entermonitor $r0;

     label02:
        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z0 == 0 goto label04;

        exitmonitor $r0;

     label03:
        return;

     label04:
        $r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady> = 1;

        $z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning>;

        if $z0 != 0 goto label08;

        exitmonitor $r0;

     label05:
        return;

     label06:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label07:
        throw $r3;

     label08:
        exitmonitor $r0;

     label09:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", "Start running!");

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3040, $l0);

        entermonitor $r0;

     label10:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i1 != 1 goto label12;

        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.FACTORY_TEST");

        $r7 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>($r6, 0);

        $r8 = null;

        if $r7 == null goto label23;

        $r1 = $r7.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r2 = $r1.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label22;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = "android.intent.action.FACTORY_TEST";

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData> = null;

        $r9 = new android.content.ComponentName;

        $r10 = $r2.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r11 = $r1.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r9.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r10, $r11);

        $r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent> = $r9;

     label11:
        if $r8 == null goto label12;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = null;

        $r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData> = null;

        $r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent> = null;

        $r12 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r12.<android.os.Message: int what> = 3;

        $r13 = virtualinvoke $r12.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r13.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("msg", $r8);

        $r14 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r14.<android.os.Handler: boolean sendMessage(android.os.Message)>($r12);

     label12:
        exitmonitor $r0;

     label13:
        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void retrieveSettings()>();

        entermonitor $r0;

     label14:
        $i1 = $r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

     label15:
        if $i1 == 1 goto label27;

     label16:
        $r15 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r16 = interfaceinvoke $r15.<android.content.pm.IPackageManager: java.util.List getPersistentApplications(int)>(1024);

        if $r16 == null goto label27;

        $i1 = interfaceinvoke $r16.<java.util.List: int size()>();

     label17:
        $i2 = 0;

     label18:
        if $i2 >= $i1 goto label27;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i2);

     label19:
        $r2 = (android.content.pm.ApplicationInfo) $r17;

        if $r2 == null goto label21;

     label20:
        $r10 = $r2.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z0 != 0 goto label21;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo)>($r2);

     label21:
        $i2 = $i2 + 1;

        goto label18;

     label22:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r18 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r18.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17039750);

        goto label11;

     label23:
        $r4 = $r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r18 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r18.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17039751);

        goto label11;

     label24:
        $r19 := @caughtexception;

        exitmonitor $r0;

     label25:
        throw $r19;

     label26:
        $r20 := @caughtexception;

     label27:
        $r15 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $z0 = interfaceinvoke $r15.<android.content.pm.IPackageManager: boolean hasSystemUidErrors()>();

        if $z0 == 0 goto label30;

        $r12 = staticinvoke <android.os.Message: android.os.Message obtain()>();

     label28:
        $r12.<android.os.Message: int what> = 14;

     label29:
        $r14 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r14.<android.os.Handler: boolean sendMessage(android.os.Message)>($r12);

     label30:
        $r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        exitmonitor $r0;

     label31:
        return;

     label32:
        $r21 := @caughtexception;

        exitmonitor $r0;

     label33:
        throw $r21;

     label34:
        $r22 := @caughtexception;

        goto label30;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label13 with label24;
        catch java.lang.Throwable from label14 to label15 with label32;
        catch android.os.RemoteException from label16 to label17 with label26;
        catch android.os.RemoteException from label18 to label19 with label26;
        catch android.os.RemoteException from label20 to label21 with label26;
        catch java.lang.Throwable from label16 to label21 with label32;
        catch java.lang.Throwable from label22 to label25 with label24;
        catch android.os.RemoteException from label27 to label28 with label34;
        catch android.os.RemoteException from label29 to label30 with label34;
        catch java.lang.Throwable from label27 to label30 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    public boolean testIsSystemReady()
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean z0;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        z0 = $r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        return z0;
    }

    public void unbindFinished(android.os.IBinder, android.content.Intent, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.os.IBinder $r1;
        android.content.Intent $r2;
        boolean $z0;
        android.content.Intent$FilterComparison $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Throwable $r5;
        com.android.server.am.ServiceRecord $r6;
        long $l0;
        java.util.HashMap $r7;
        java.lang.Object $r8;
        com.android.server.am.IntentBindRecord $r9;
        int $i1;
        java.util.ArrayList $r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: android.content.Intent;

        $z0 := @parameter2: boolean;

        if $r2 == null goto label01;

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label01;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r4;

     label01:
        entermonitor $r0;

     label02:
        $z0 = $r1 instanceof com.android.server.am.ServiceRecord;

        if $z0 != 0 goto label05;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid service token");

        throw $r4;

     label03:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r5;

     label05:
        $r6 = (com.android.server.am.ServiceRecord) $r1;

        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if $r6 == null goto label07;

        $r3 = new android.content.Intent$FilterComparison;

        specialinvoke $r3.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r2);

        $r7 = $r6.<com.android.server.am.ServiceRecord: java.util.HashMap bindings>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r9 = (com.android.server.am.IntentBindRecord) $r8;

        if $r9 == null goto label06;

        $r7 = $r9.<com.android.server.am.IntentBindRecord: java.util.HashMap apps>;

        $i1 = virtualinvoke $r7.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label09;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean)>($r6, $r9, 1);

     label06:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mStoppingServices>;

        $z0 = virtualinvoke $r10.<java.util.ArrayList: boolean contains(java.lang.Object)>($r6);

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean)>($r6, $z0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

     label07:
        exitmonitor $r0;

     label08:
        return;

     label09:
        $r9.<com.android.server.am.IntentBindRecord: boolean doRebind> = 1;

     label10:
        goto label06;

        catch java.lang.Throwable from label02 to label04 with label03;
        catch java.lang.Throwable from label05 to label08 with label03;
        catch java.lang.Throwable from label09 to label10 with label03;
    }

    public boolean unbindService(android.app.IServiceConnection)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IServiceConnection $r1;
        android.os.IBinder $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.android.server.am.ConnectionRecord $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        long $l0;
        com.android.server.am.AppBindRecord $r8;
        com.android.server.am.ServiceRecord $r9;
        com.android.server.am.ProcessRecord $r10;
        java.lang.Throwable $r11;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IServiceConnection;

        entermonitor $r0;

     label1:
        $r2 = interfaceinvoke $r1.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mServiceConnections>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (com.android.server.am.ConnectionRecord) $r4;

        if $r5 != null goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbind failed: could not find connection for ");

        $r2 = interfaceinvoke $r1.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        exitmonitor $r0;

     label2:
        return 0;

     label3:
        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.HistoryRecord)>($r5, null, null);

        $r8 = $r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r9 = $r8.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r10 = $r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r10 == null goto label4;

        $r8 = $r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r9 = $r8.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r10 = $r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r10);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

        exitmonitor $r0;

     label5:
        return 1;

     label6:
        $r11 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public final void unbroadcastIntent(android.app.IApplicationThread, android.content.Intent)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IApplicationThread $r1;
        android.content.Intent $r2, $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.SecurityException $r6;
        java.lang.Throwable $r7;
        java.util.HashMap $r8;
        java.lang.Object $r9;
        java.util.ArrayList $r10;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IApplicationThread;

        $r2 := @parameter1: android.content.Intent;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r3;

     label1:
        entermonitor $r0;

     label2:
        $i0 = virtualinvoke $r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.BROADCAST_STICKY");

        if $i0 == 0 goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: unbroadcastIntent() from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_STICKY");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r5);

        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r7;

     label5:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mStickyBroadcasts>;

        $r5 = virtualinvoke $r2.<android.content.Intent: java.lang.String getAction()>();

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r10 = (java.util.ArrayList) $r9;

        if $r10 == null goto label7;

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label6:
        if $i1 >= $i0 goto label7;

        $r9 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r11 = (android.content.Intent) $r9;

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r11);

        if $z0 == 0 goto label9;

        virtualinvoke $r10.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

     label7:
        exitmonitor $r0;

     label8:
        return;

     label9:
        $i1 = $i1 + 1;

        goto label6;

        catch java.lang.Throwable from label2 to label4 with label3;
        catch java.lang.Throwable from label5 to label8 with label3;
    }

    public void unhandledBack()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.util.ArrayList $r1;
        int $i0, $i2;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        long $l1;
        java.lang.Object $r4;
        com.android.server.am.HistoryRecord $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.FORCE_BACK", "unhandledBack()");

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Performing unhandledBack(): stack size = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r3);

        if $i0 <= 1 goto label2;

        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mHistory>;

        $i2 = $i0 - 1;

        $r4 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r5 = (com.android.server.am.HistoryRecord) $r4;

        $i0 = $i0 - 1;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishActivityLocked(com.android.server.am.HistoryRecord,int,int,android.content.Intent,java.lang.String)>($r5, $i0, 0, null, "unhandled-back");

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

     label2:
        exitmonitor $r0;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unregisterReceiver(android.app.IIntentReceiver)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.app.IIntentReceiver $r1;
        int $i0;
        java.lang.String $r2;
        android.os.Bundle $r3;
        boolean $z0, $z1;
        com.android.server.am.BroadcastRecord $r4;
        java.util.HashMap $r5;
        android.os.IBinder $r6;
        java.lang.Object $r7;
        com.android.server.am.ReceiverList $r8;
        com.android.server.am.ProcessRecord $r9;
        java.util.HashSet $r10;
        java.lang.Throwable $r11;
        long $l1;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.app.IIntentReceiver;

        $z0 = 0;

        entermonitor $r0;

     label1:
        $r5 = $r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r6 = interfaceinvoke $r1.<android.app.IIntentReceiver: android.os.IBinder asBinder()>();

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (com.android.server.am.ReceiverList) $r7;

        if $r8 == null goto label4;

        $r4 = $r8.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast>;

        if $r4 == null goto label2;

        $r4 = $r8.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast>;

        $r6 = interfaceinvoke $r1.<android.app.IIntentReceiver: android.os.IBinder asBinder()>();

        $i0 = $r4.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r2 = $r4.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r3 = $r4.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z0 = $r4.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,boolean)>($r6, $i0, $r2, $r3, $z0, 1);

     label2:
        $r9 = $r8.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r9 == null goto label3;

        $r9 = $r8.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r10 = $r9.<com.android.server.am.ProcessRecord: java.util.HashSet receivers>;

        virtualinvoke $r10.<java.util.HashSet: boolean remove(java.lang.Object)>($r8);

     label3:
        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>($r8);

        $z1 = $r8.<com.android.server.am.ReceiverList: boolean linkedToDeath>;

        if $z1 == 0 goto label4;

        $r8.<com.android.server.am.ReceiverList: boolean linkedToDeath> = 0;

        $r1 = $r8.<com.android.server.am.ReceiverList: android.app.IIntentReceiver receiver>;

        $r6 = interfaceinvoke $r1.<android.app.IIntentReceiver: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r8, 0);

     label4:
        exitmonitor $r0;

     label5:
        if $z0 != 0 goto label8;

        return;

     label6:
        $r11 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r11;

     label8:
        $l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void processNextBroadcast(boolean)>(0);

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l1);

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void updateConfiguration(android.content.res.Configuration)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.res.Configuration $r1;
        com.android.server.WindowManagerService $r2;
        long $l0;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.res.Configuration;

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "updateConfiguration()");

        entermonitor $r0;

        if $r1 != null goto label2;

     label1:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        $r1 = virtualinvoke $r2.<com.android.server.WindowManagerService: android.content.res.Configuration computeNewConfiguration()>();

     label2:
        $l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.HistoryRecord)>($r1, null);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l0);

        exitmonitor $r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean updateConfigurationLocked(android.content.res.Configuration, com.android.server.am.HistoryRecord)
    {
        com.android.server.am.ActivityManagerService $r0;
        android.content.res.Configuration $r1, $r3, $r5;
        android.content.Intent $r2;
        com.android.server.am.HistoryRecord $r4;
        int $i0, $i1, $i2;
        java.util.Locale $r6, $r7, $r8;
        boolean $z0, $z1;
        android.os.Handler $r9;
        android.os.Message $r10;
        java.util.ArrayList $r11;
        java.lang.Object $r12;
        com.android.server.am.ProcessRecord $r13;
        android.app.IApplicationThread $r14;
        java.lang.Exception $r15;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: android.content.res.Configuration;

        $r4 := @parameter1: com.android.server.am.HistoryRecord;

        $i0 = 0;

        if $r1 == null goto label08;

        $r3 = new android.content.res.Configuration;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r3.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r5);

        $i1 = virtualinvoke $r3.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r1);

        $i0 = $i1;

        if $i1 == 0 goto label08;

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(2719, $i1);

        $r6 = $r1.<android.content.res.Configuration: java.util.Locale locale>;

        if $r6 == null goto label02;

        $r6 = $r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r7 = $r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r5 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r8 = $r5.<android.content.res.Configuration: java.util.Locale locale>;

        $z0 = virtualinvoke $r7.<java.util.Locale: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label06;

        $z0 = 1;

     label01:
        $z1 = $r1.<android.content.res.Configuration: boolean userSetLocale>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void saveLocaleLocked(java.util.Locale,boolean,boolean)>($r6, $z0, $z1);

     label02:
        $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration> = $r3;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r10 = virtualinvoke $r9.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        $r1 = new android.content.res.Configuration;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r1.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r3);

        $r10.<android.os.Message: java.lang.Object obj> = $r1;

        $r9 = $r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: boolean sendMessage(android.os.Message)>($r10);

        $r11 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label03:
        if $i2 >= $i1 goto label07;

        $r11 = $r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLRUProcesses>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r13 = (com.android.server.am.ProcessRecord) $r12;

     label04:
        $r14 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r14 == null goto label05;

        $r14 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        interfaceinvoke $r14.<android.app.IApplicationThread: void scheduleConfigurationChanged(android.content.res.Configuration)>($r1);

     label05:
        $i2 = $i2 + 1;

        goto label03;

     label06:
        $z0 = 0;

        goto label01;

     label07:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CONFIGURATION_CHANGED");

        $i1 = $r0.<com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>(null, null, $r2, null, null, 0, null, null, null, 0, 0, $i1, 1000);

     label08:
        if $i0 == 0 goto label09;

        if $r4 != null goto label09;

        $r4 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.HistoryRecord topRunningActivityLocked(com.android.server.am.HistoryRecord)>(null);

     label09:
        if $r4 == null goto label11;

        $z0 = specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean ensureActivityConfigurationLocked(com.android.server.am.HistoryRecord,int)>($r4, $i0);

        if $z0 == 0 goto label12;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: void ensureActivitiesVisibleLocked(com.android.server.am.HistoryRecord,int)>($r4, $i0);

        return $z0;

     label10:
        $r15 := @caughtexception;

        goto label05;

     label11:
        return 1;

     label12:
        return $z0;

        catch java.lang.Exception from label04 to label05 with label10;
    }

    void updateCpuStats()
    {
        com.android.server.am.ActivityManagerService $r0;
        java.lang.Thread $r1, $r2;
        long $l0, $l1;
        byte $b2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessStatsThread>;

        entermonitor $r1;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = $r0.<com.android.server.am.ActivityManagerService: long mLastCpuTime>;

        $l0 = $l0 - 5000L;

        $b2 = $l1 cmp $l0;

        if $b2 >= 0 goto label2;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessStatsThread>;

        virtualinvoke $r2.<java.lang.Object: void notify()>();

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void updateCpuStatsNow()
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r1;
        java.lang.Thread $r2;
        long $l0, $l1, $l2;
        boolean $z0, $z1;
        byte $b3;
        com.android.server.ProcessStats $r3;
        java.lang.String $r4, $r5;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        com.android.server.am.BatteryStatsService $r8;
        com.android.internal.os.BatteryStatsImpl $r9, $r15;
        android.util.SparseArray $r10, $r12;
        com.android.server.ProcessStats$Stats $r11;
        java.lang.Object $r13;
        com.android.server.am.ProcessRecord $r14;
        java.lang.Throwable $r16, $r17, $r18;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = $r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessStatsThread>;

        entermonitor $r2;

     label01:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z0 = 0;

        $l1 = $r0.<com.android.server.am.ActivityManagerService: long mLastCpuTime>;

        $l2 = $l0 - 5000L;

        $b3 = $l1 cmp $l2;

        if $b3 >= 0 goto label03;

        $r0.<com.android.server.am.ActivityManagerService: long mLastCpuTime> = $l0;

        $z0 = 1;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        virtualinvoke $r3.<com.android.server.ProcessStats: void update()>();

        $r4 = "true";

        $r5 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("events.cpu");

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label03;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        $i4 = virtualinvoke $r3.<com.android.server.ProcessStats: int getLastUserTime()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        $i5 = virtualinvoke $r3.<com.android.server.ProcessStats: int getLastSystemTime()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        $i6 = virtualinvoke $r3.<com.android.server.ProcessStats: int getLastIoWaitTime()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        $i7 = virtualinvoke $r3.<com.android.server.ProcessStats: int getLastIrqTime()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        $i8 = virtualinvoke $r3.<com.android.server.ProcessStats: int getLastSoftIrqTime()>();

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        $i9 = virtualinvoke $r3.<com.android.server.ProcessStats: int getLastIdleTime()>();

        $i10 = $i4 + $i5;

        $i10 = $i10 + $i6;

        $i10 = $i10 + $i7;

        $i10 = $i10 + $i8;

        $i9 = $i10 + $i9;

        if $i9 != 0 goto label02;

        $i9 = 1;

     label02:
        $r6 = newarray (java.lang.Object)[6];

        $i10 = $i4 + $i5;

        $i10 = $i10 + $i6;

        $i10 = $i10 + $i7;

        $i10 = $i10 + $i8;

        $i10 = $i10 * 100;

        $i10 = $i10 / $i9;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r6[0] = $r7;

        $i4 = $i4 * 100;

        $i4 = $i4 / $i9;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r6[1] = $r7;

        $i5 = $i5 * 100;

        $i5 = $i5 / $i9;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r6[2] = $r7;

        $i6 = $i6 * 100;

        $i6 = $i6 / $i9;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r6[3] = $r7;

        $i7 = $i7 * 100;

        $i7 = $i7 / $i9;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r6[4] = $r7;

        $i8 = $i8 * 100;

        $i8 = $i8 / $i9;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r6[5] = $r7;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2721, $r6);

     label03:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r9 = virtualinvoke $r8.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor $r9;

     label04:
        $r10 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor $r10;

     label05:
        if $z0 == 0 goto label09;

     label06:
        $r8 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $z0 = virtualinvoke $r8.<com.android.server.am.BatteryStatsService: boolean isOnBattery()>();

        if $z0 == 0 goto label09;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        $i8 = virtualinvoke $r3.<com.android.server.ProcessStats: int countWorkingStats()>();

        $i7 = 0;

     label07:
        if $i7 >= $i8 goto label09;

        $r3 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.ProcessStats mProcessStats>;

        $r11 = virtualinvoke $r3.<com.android.server.ProcessStats: com.android.server.ProcessStats$Stats getWorkingStats(int)>($i7);

        $r12 = $r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i6 = $r11.<com.android.server.ProcessStats$Stats: int pid>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>($i6);

        $r14 = (com.android.server.am.ProcessRecord) $r13;

        if $r14 == null goto label08;

        $r1 = $r14.<com.android.server.am.ProcessRecord: com.android.internal.os.BatteryStatsImpl$Uid$Proc batteryStats>;

        $i6 = $r11.<com.android.server.ProcessStats$Stats: int rel_utime>;

        $i9 = $r11.<com.android.server.ProcessStats$Stats: int rel_stime>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>($i6, $i9);

     label08:
        $i7 = $i7 + 1;

        goto label07;

     label09:
        exitmonitor $r10;

     label10:
        $l1 = $r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime>;

     label11:
        $l2 = $l0 - 1800000L;

        $b3 = $l1 cmp $l2;

     label12:
        if $b3 >= 0 goto label13;

        $r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime> = $l0;

        $r8 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r15 = virtualinvoke $r8.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl: void writeLocked()>();

     label13:
        exitmonitor $r9;

     label14:
        exitmonitor $r2;

     label15:
        return;

     label16:
        $r16 := @caughtexception;

     label17:
        exitmonitor $r10;

     label18:
        throw $r16;

     label19:
        $r17 := @caughtexception;

        exitmonitor $r9;

     label20:
        throw $r17;

     label21:
        $r18 := @caughtexception;

        exitmonitor $r2;

     label22:
        throw $r18;

        catch java.lang.Throwable from label01 to label04 with label21;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label14 with label19;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label18 to label20 with label19;
        catch java.lang.Throwable from label20 to label22 with label21;
    }

    public void updateServiceForegroundLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService $r0;
        com.android.server.am.ProcessRecord $r1;
        boolean $z0, $z1, $z2;
        java.util.HashSet $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        com.android.server.am.ServiceRecord $r5;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 := @parameter1: boolean;

        $z1 = 0;

        $r2 = $r1.<com.android.server.am.ProcessRecord: java.util.HashSet services>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.server.am.ServiceRecord) $r4;

        $z2 = $r5.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z2 == 0 goto label1;

        $z1 = 1;

     label2:
        $z2 = $r1.<com.android.server.am.ProcessRecord: boolean foregroundServices>;

        if $z1 == $z2 goto label3;

        $r1.<com.android.server.am.ProcessRecord: boolean foregroundServices> = $z1;

        if $z0 == 0 goto label4;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked()>();

        return;

     label3:
        return;

     label4:
        return;
    }

    public void wakingUp()
    {
        com.android.server.am.ActivityManagerService $r0;
        boolean $z0;
        android.os.PowerManager$WakeLock $r1;
        com.android.server.WindowManagerService $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mGoingToSleep>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label2;

        $r1 = $r0.<com.android.server.am.ActivityManagerService: android.os.PowerManager$WakeLock mGoingToSleep>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        $r2 = $r0.<com.android.server.am.ActivityManagerService: com.android.server.WindowManagerService mWindowManager>;

        virtualinvoke $r2.<com.android.server.WindowManagerService: void setEventDispatching(boolean)>(1);

        $r0.<com.android.server.am.ActivityManagerService: boolean mSleeping> = 0;

        specialinvoke $r0.<com.android.server.am.ActivityManagerService: boolean resumeTopActivityLocked(com.android.server.am.HistoryRecord)>(null);

        exitmonitor $r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
