public abstract class org.apache.harmony.awt.gl.CommonGraphics2DFactory extends java.lang.Object implements org.apache.harmony.awt.wtk.GraphicsFactory
{
    public static org.apache.harmony.awt.gl.CommonGraphics2DFactory inst;

    public void <init>()
    {
        org.apache.harmony.awt.gl.CommonGraphics2DFactory $r0;

        $r0 := @this: org.apache.harmony.awt.gl.CommonGraphics2DFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.awt.Font embedFont(java.lang.String);

    public java.awt.FontMetrics getFontMetrics(java.awt.Font)
    {
        org.apache.harmony.awt.gl.CommonGraphics2DFactory $r0;
        java.awt.Font $r1, $r7;
        java.awt.FontMetrics[] $r2, $r5, $r6;
        java.awt.FontMetrics $r3;
        int $i0, $i1;
        org.apache.harmony.awt.gl.font.FontMetricsImpl $r4;
        boolean $z0;

        $r0 := @this: org.apache.harmony.awt.gl.CommonGraphics2DFactory;

        $r1 := @parameter0: java.awt.Font;

        $r2 = <org.apache.harmony.awt.gl.CommonGraphics2DFactory: java.awt.FontMetrics[] cacheFM>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        if $r3 != null goto label3;

     label2:
        $r4 = new org.apache.harmony.awt.gl.font.FontMetricsImpl;

        specialinvoke $r4.<org.apache.harmony.awt.gl.font.FontMetricsImpl: void <init>(java.awt.Font)>($r1);

        $r5 = <org.apache.harmony.awt.gl.CommonGraphics2DFactory: java.awt.FontMetrics[] cacheFM>;

        $r2 = <org.apache.harmony.awt.gl.CommonGraphics2DFactory: java.awt.FontMetrics[] cacheFM>;

        $r6 = <org.apache.harmony.awt.gl.CommonGraphics2DFactory: java.awt.FontMetrics[] cacheFM>;

        $i0 = lengthof $r6;

        $i0 = $i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r2, 1, $i0);

        $r2 = <org.apache.harmony.awt.gl.CommonGraphics2DFactory: java.awt.FontMetrics[] cacheFM>;

        $r2[0] = $r4;

        return $r4;

     label3:
        $r7 = virtualinvoke $r3.<java.awt.FontMetrics: java.awt.Font getFont()>();

        $z0 = virtualinvoke $r7.<java.awt.Font: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        return $r3;

     label4:
        $i1 = $i1 + 1;

        goto label1;
    }

    public java.awt.peer.FontPeer getFontPeer(java.awt.Font)
    {
        org.apache.harmony.awt.gl.CommonGraphics2DFactory $r0;
        java.awt.Font $r1;
        org.apache.harmony.awt.gl.font.FontManager $r2;
        java.lang.String $r3;
        int $i0, $i1;
        java.awt.peer.FontPeer $r4;

        $r0 := @this: org.apache.harmony.awt.gl.CommonGraphics2DFactory;

        $r1 := @parameter0: java.awt.Font;

        $r2 = virtualinvoke $r0.<org.apache.harmony.awt.gl.CommonGraphics2DFactory: org.apache.harmony.awt.gl.font.FontManager getFontManager()>();

        $r3 = virtualinvoke $r1.<java.awt.Font: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.awt.Font: int getStyle()>();

        $i1 = virtualinvoke $r1.<java.awt.Font: int getSize()>();

        $r4 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.FontManager: java.awt.peer.FontPeer getFontPeer(java.lang.String,int,int)>($r3, $i0, $i1);

        return $r4;
    }
}
