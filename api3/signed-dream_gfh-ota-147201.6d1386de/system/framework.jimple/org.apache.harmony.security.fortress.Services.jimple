public class org.apache.harmony.security.fortress.Services extends java.lang.Object
{
    private static boolean needRefresh;
    private static final java.util.List providers;
    private static final java.util.Map providersNames;
    public static int refreshNumber;
    private static final java.util.Map services;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.ArrayList $r1;
        org.apache.harmony.security.fortress.Services$1 $r2;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(600);

        <org.apache.harmony.security.fortress.Services: java.util.Map services> = $r0;

        <org.apache.harmony.security.fortress.Services: int refreshNumber> = 1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(20);

        <org.apache.harmony.security.fortress.Services: java.util.List providers> = $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(20);

        <org.apache.harmony.security.fortress.Services: java.util.Map providersNames> = $r0;

        $r2 = new org.apache.harmony.security.fortress.Services$1;

        specialinvoke $r2.<org.apache.harmony.security.fortress.Services$1: void <init>()>();

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);

        return;
    }

    public void <init>()
    {
        org.apache.harmony.security.fortress.Services $r0;

        $r0 := @this: org.apache.harmony.security.fortress.Services;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$000()
    {
        staticinvoke <org.apache.harmony.security.fortress.Services: void loadProviders()>();

        return;
    }

    public static java.security.Provider getProvider(java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.security.Provider $r3;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = <org.apache.harmony.security.fortress.Services: java.util.Map providersNames>;

        $r0 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.security.Provider) $r0;

        return $r3;
    }

    public static java.security.Provider[] getProviders()
    {
        java.util.List $r0, $r1;
        int $i0;
        java.security.Provider[] $r2;
        java.lang.Object[] $r3;

        $r0 = <org.apache.harmony.security.fortress.Services: java.util.List providers>;

        $r1 = <org.apache.harmony.security.fortress.Services: java.util.List providers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = newarray (java.security.Provider)[$i0];

        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r2 = (java.security.Provider[]) $r3;

        return $r2;
    }

    public static java.util.List getProvidersList()
    {
        java.util.ArrayList $r0;
        java.util.List $r1;

        $r0 = new java.util.ArrayList;

        $r1 = <org.apache.harmony.security.fortress.Services: java.util.List providers>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        return $r0;
    }

    public static java.security.Provider$Service getService(java.lang.String)
    {
        java.util.Map $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        java.security.Provider$Service $r3;

        $r2 := @parameter0: java.lang.String;

        $r0 = <org.apache.harmony.security.fortress.Services: java.util.Map services>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r3 = (java.security.Provider$Service) $r1;

        return $r3;
    }

    public static void initServiceInfo(java.security.Provider)
    {
        java.security.Provider $r0;
        java.lang.StringBuffer $r1, $r7;
        java.util.Set $r2;
        java.util.Iterator $r3, $r11;
        boolean $z0;
        java.lang.Object $r4;
        java.security.Provider$Service $r5;
        java.lang.String $r6, $r8;
        int $i0;
        java.util.Map $r9;
        org.apache.harmony.security.fortress.SecurityAccess $r10;

        $r0 := @parameter0: java.security.Provider;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(128);

        $r2 = virtualinvoke $r0.<java.security.Provider: java.util.Set getServices()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.security.Provider$Service) $r4;

        $r6 = virtualinvoke $r5.<java.security.Provider$Service: java.lang.String getType()>();

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i0);

        $r7 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r8 = virtualinvoke $r5.<java.security.Provider$Service: java.lang.String getAlgorithm()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String toUpperCase()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = <org.apache.harmony.security.fortress.Services: java.util.Map services>;

        $z0 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        $r9 = <org.apache.harmony.security.fortress.Services: java.util.Map services>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r5);

     label2:
        $r10 = <org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.SecurityAccess door>;

        $r11 = interfaceinvoke $r10.<org.apache.harmony.security.fortress.SecurityAccess: java.util.Iterator getAliases(java.security.Provider$Service)>($r5);

     label3:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r4;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i0);

        $r7 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String toUpperCase()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = <org.apache.harmony.security.fortress.Services: java.util.Map services>;

        $z0 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 != 0 goto label3;

        $r9 = <org.apache.harmony.security.fortress.Services: java.util.Map services>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r5);

        goto label3;

     label4:
        return;
    }

    public static int insertProviderAt(java.security.Provider, int)
    {
        java.security.Provider $r0;
        int $i0, $i1;
        java.util.List $r1;
        java.util.Map $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.security.Provider;

        $i0 := @parameter1: int;

        $r1 = <org.apache.harmony.security.fortress.Services: java.util.List providers>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 < 1 goto label1;

        if $i0 <= $i1 goto label2;

     label1:
        $i0 = $i1 + 1;

     label2:
        $r1 = <org.apache.harmony.security.fortress.Services: java.util.List providers>;

        $i1 = $i0 - 1;

        interfaceinvoke $r1.<java.util.List: void add(int,java.lang.Object)>($i1, $r0);

        $r2 = <org.apache.harmony.security.fortress.Services: java.util.Map providersNames>;

        $r3 = virtualinvoke $r0.<java.security.Provider: java.lang.String getName()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r0);

        staticinvoke <org.apache.harmony.security.fortress.Services: void setNeedRefresh()>();

        return $i0;
    }

    public static boolean isEmpty()
    {
        boolean $z0;
        java.util.Map $r0;

        $r0 = <org.apache.harmony.security.fortress.Services: java.util.Map services>;

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    private static void loadProviders()
    {
        int $i0, $i1;
        java.lang.ClassLoader $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.security.Provider $r5;
        java.util.List $r6;
        java.util.Map $r7;
        java.lang.Exception $r8;
        org.apache.harmony.security.fortress.SecurityAccess $r9;

        $i1 = 1;

        $r0 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("security.provider.");

        $i0 = $i1 + 1;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>($r2);

        if $r2 == null goto label5;

     label2:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r2, 1, $r0);

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (java.security.Provider) $r4;

        $r6 = <org.apache.harmony.security.fortress.Services: java.util.List providers>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r7 = <org.apache.harmony.security.fortress.Services: java.util.Map providersNames>;

        $r2 = virtualinvoke $r5.<java.security.Provider: java.lang.String getName()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5);

        staticinvoke <org.apache.harmony.security.fortress.Services: void initServiceInfo(java.security.Provider)>($r5);

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        $r8 := @caughtexception;

        $i1 = $i0;

        goto label1;

     label5:
        $r9 = <org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.SecurityAccess door>;

        interfaceinvoke $r9.<org.apache.harmony.security.fortress.SecurityAccess: void renumProviders()>();

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void printServices()
    {
        java.util.Map $r0;
        java.util.Set $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.io.PrintStream $r5;
        java.lang.StringBuilder $r6;

        staticinvoke <org.apache.harmony.security.fortress.Services: void refresh()>();

        $r0 = <org.apache.harmony.security.fortress.Services: java.util.Map services>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r0 = <org.apache.harmony.security.fortress.Services: java.util.Map services>;

        $r3 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r4);

        goto label1;

     label2:
        return;
    }

    public static void refresh()
    {
        boolean $z0;
        int $i0;

        $z0 = <org.apache.harmony.security.fortress.Services: boolean needRefresh>;

        if $z0 == 0 goto label1;

        $i0 = <org.apache.harmony.security.fortress.Services: int refreshNumber>;

        $i0 = $i0 + 1;

        <org.apache.harmony.security.fortress.Services: int refreshNumber> = $i0;

        staticinvoke <org.apache.harmony.security.fortress.Services: void updateServiceInfo()>();

        return;

     label1:
        return;
    }

    public static void removeProvider(int)
    {
        int $i0;
        java.util.List $r0;
        java.lang.Object $r1;
        java.security.Provider $r2;
        java.util.Map $r3;
        java.lang.String $r4;

        $i0 := @parameter0: int;

        $r0 = <org.apache.harmony.security.fortress.Services: java.util.List providers>;

        $i0 = $i0 - 1;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>($i0);

        $r2 = (java.security.Provider) $r1;

        $r3 = <org.apache.harmony.security.fortress.Services: java.util.Map providersNames>;

        $r4 = virtualinvoke $r2.<java.security.Provider: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        staticinvoke <org.apache.harmony.security.fortress.Services: void setNeedRefresh()>();

        return;
    }

    public static void setNeedRefresh()
    {
        <org.apache.harmony.security.fortress.Services: boolean needRefresh> = 1;

        return;
    }

    public static void updateServiceInfo()
    {
        java.util.Map $r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.security.Provider $r4;

        $r0 = <org.apache.harmony.security.fortress.Services: java.util.Map services>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        $r1 = <org.apache.harmony.security.fortress.Services: java.util.List providers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.security.Provider) $r3;

        staticinvoke <org.apache.harmony.security.fortress.Services: void initServiceInfo(java.security.Provider)>($r4);

        goto label1;

     label2:
        <org.apache.harmony.security.fortress.Services: boolean needRefresh> = 0;

        return;
    }
}
