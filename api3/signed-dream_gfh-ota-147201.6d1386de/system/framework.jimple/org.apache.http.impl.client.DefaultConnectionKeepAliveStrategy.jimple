public class org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy extends java.lang.Object implements org.apache.http.conn.ConnectionKeepAliveStrategy
{

    public void <init>()
    {
        org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy $r0;

        $r0 := @this: org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long getKeepAliveDuration(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy $r0;
        org.apache.http.HttpResponse $r1;
        org.apache.http.protocol.HttpContext $r2;
        org.apache.http.message.BasicHeaderElementIterator $r3;
        java.lang.IllegalArgumentException $r4;
        org.apache.http.HeaderIterator $r5;
        boolean $z0;
        org.apache.http.HeaderElement $r6;
        java.lang.String $r7, $r8;
        long $l0;
        java.lang.NumberFormatException $r9;

        $r0 := @this: org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy;

        $r1 := @parameter0: org.apache.http.HttpResponse;

        $r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r4;

     label1:
        $r3 = new org.apache.http.message.BasicHeaderElementIterator;

        $r5 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.HeaderIterator headerIterator(java.lang.String)>("Keep-Alive");

        specialinvoke $r3.<org.apache.http.message.BasicHeaderElementIterator: void <init>(org.apache.http.HeaderIterator)>($r5);

     label2:
        $z0 = interfaceinvoke $r3.<org.apache.http.HeaderElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r3.<org.apache.http.HeaderElementIterator: org.apache.http.HeaderElement nextElement()>();

        $r7 = interfaceinvoke $r6.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $r8 = interfaceinvoke $r6.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if $r8 == null goto label2;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("timeout");

        if $z0 == 0 goto label2;

     label3:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

     label4:
        $l0 = $l0 * 1000L;

        return $l0;

     label5:
        return -1L;

     label6:
        $r9 := @caughtexception;

        goto label2;

        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }
}
