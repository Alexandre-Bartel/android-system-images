class android.os.MemoryFile$MemoryInputStream extends java.io.InputStream
{
    private int mMark;
    private int mOffset;
    private byte[] mSingleByte;
    final android.os.MemoryFile this$0;

    private void <init>(android.os.MemoryFile)
    {
        android.os.MemoryFile$MemoryInputStream $r0;
        android.os.MemoryFile $r1;

        $r0 := @this: android.os.MemoryFile$MemoryInputStream;

        $r1 := @parameter0: android.os.MemoryFile;

        $r0.<android.os.MemoryFile$MemoryInputStream: android.os.MemoryFile this$0> = $r1;

        specialinvoke $r0.<java.io.InputStream: void <init>()>();

        $r0.<android.os.MemoryFile$MemoryInputStream: int mMark> = 0;

        $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset> = 0;

        return;
    }

    void <init>(android.os.MemoryFile, android.os.MemoryFile$1)
    {
        android.os.MemoryFile$MemoryInputStream $r0;
        android.os.MemoryFile $r1;
        android.os.MemoryFile$1 $r2;

        $r0 := @this: android.os.MemoryFile$MemoryInputStream;

        $r1 := @parameter0: android.os.MemoryFile;

        $r2 := @parameter1: android.os.MemoryFile$1;

        specialinvoke $r0.<android.os.MemoryFile$MemoryInputStream: void <init>(android.os.MemoryFile)>($r1);

        return;
    }

    public int available() throws java.io.IOException
    {
        android.os.MemoryFile$MemoryInputStream $r0;
        int $i0, $i1;
        android.os.MemoryFile $r1;

        $r0 := @this: android.os.MemoryFile$MemoryInputStream;

        $i0 = $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset>;

        $r1 = $r0.<android.os.MemoryFile$MemoryInputStream: android.os.MemoryFile this$0>;

        $i1 = staticinvoke <android.os.MemoryFile: int access$200(android.os.MemoryFile)>($r1);

        if $i0 < $i1 goto label1;

        return 0;

     label1:
        $r1 = $r0.<android.os.MemoryFile$MemoryInputStream: android.os.MemoryFile this$0>;

        $i0 = staticinvoke <android.os.MemoryFile: int access$200(android.os.MemoryFile)>($r1);

        $i1 = $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset>;

        $i0 = $i0 - $i1;

        return $i0;
    }

    public void mark(int)
    {
        android.os.MemoryFile$MemoryInputStream $r0;
        int $i0;

        $r0 := @this: android.os.MemoryFile$MemoryInputStream;

        $i0 := @parameter0: int;

        $i0 = $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset>;

        $r0.<android.os.MemoryFile$MemoryInputStream: int mMark> = $i0;

        return;
    }

    public boolean markSupported()
    {
        android.os.MemoryFile$MemoryInputStream $r0;

        $r0 := @this: android.os.MemoryFile$MemoryInputStream;

        return 1;
    }

    public int read() throws java.io.IOException
    {
        android.os.MemoryFile$MemoryInputStream $r0;
        int $i0;
        byte[] $r1;
        java.io.IOException $r2;
        byte $b1;

        $r0 := @this: android.os.MemoryFile$MemoryInputStream;

        $r1 = $r0.<android.os.MemoryFile$MemoryInputStream: byte[] mSingleByte>;

        if $r1 != null goto label1;

        $r1 = newarray (byte)[1];

        $r0.<android.os.MemoryFile$MemoryInputStream: byte[] mSingleByte> = $r1;

     label1:
        $r1 = $r0.<android.os.MemoryFile$MemoryInputStream: byte[] mSingleByte>;

        $i0 = virtualinvoke $r0.<android.os.MemoryFile$MemoryInputStream: int read(byte[],int,int)>($r1, 0, 1);

        if $i0 == 1 goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("read() failed");

        throw $r2;

     label2:
        $r1 = $r0.<android.os.MemoryFile$MemoryInputStream: byte[] mSingleByte>;

        $b1 = $r1[0];

        return $b1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        android.os.MemoryFile$MemoryInputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        android.os.MemoryFile $r2;

        $r0 := @this: android.os.MemoryFile$MemoryInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<android.os.MemoryFile$MemoryInputStream: android.os.MemoryFile this$0>;

        $i2 = $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset>;

        $i0 = virtualinvoke $r2.<android.os.MemoryFile: int readBytes(byte[],int,int,int)>($r1, $i2, $i0, $i1);

        if $i0 <= 0 goto label1;

        $i1 = $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset>;

        $i1 = $i1 + $i0;

        $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset> = $i1;

        return $i0;

     label1:
        return $i0;
    }

    public void reset() throws java.io.IOException
    {
        android.os.MemoryFile$MemoryInputStream $r0;
        int $i0;

        $r0 := @this: android.os.MemoryFile$MemoryInputStream;

        $i0 = $r0.<android.os.MemoryFile$MemoryInputStream: int mMark>;

        $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset> = $i0;

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        android.os.MemoryFile$MemoryInputStream $r0;
        int $i0, $i5;
        long $l1, $l2, $l3;
        android.os.MemoryFile $r1;
        byte $b4;

        $r0 := @this: android.os.MemoryFile$MemoryInputStream;

        $l1 := @parameter0: long;

        $i0 = $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset>;

        $l2 = (long) $i0;

        $l2 = $l2 + $l1;

        $r1 = $r0.<android.os.MemoryFile$MemoryInputStream: android.os.MemoryFile this$0>;

        $i0 = staticinvoke <android.os.MemoryFile: int access$200(android.os.MemoryFile)>($r1);

        $l3 = (long) $i0;

        $b4 = $l2 cmp $l3;

        if $b4 <= 0 goto label1;

        $r1 = $r0.<android.os.MemoryFile$MemoryInputStream: android.os.MemoryFile this$0>;

        $i5 = staticinvoke <android.os.MemoryFile: int access$200(android.os.MemoryFile)>($r1);

        $i0 = $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset>;

        $i0 = $i5 - $i0;

        $l1 = (long) $i0;

     label1:
        $i0 = $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset>;

        $l2 = (long) $i0;

        $l2 = $l2 + $l1;

        $i0 = (int) $l2;

        $r0.<android.os.MemoryFile$MemoryInputStream: int mOffset> = $i0;

        return $l1;
    }
}
