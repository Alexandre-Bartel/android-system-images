public interface  com.android.internal.telephony.SimCard extends java.lang.Object
{
    public static final java.lang.String INTENT_KEY_LOCKED_REASON;
    public static final java.lang.String INTENT_KEY_SIM_STATE;
    public static final java.lang.String INTENT_VALUE_LOCKED_NETWORK;
    public static final java.lang.String INTENT_VALUE_LOCKED_ON_PIN;
    public static final java.lang.String INTENT_VALUE_LOCKED_ON_PUK;
    public static final java.lang.String INTENT_VALUE_SIM_ABSENT;
    public static final java.lang.String INTENT_VALUE_SIM_IMSI;
    public static final java.lang.String INTENT_VALUE_SIM_LOADED;
    public static final java.lang.String INTENT_VALUE_SIM_LOCKED;
    public static final java.lang.String INTENT_VALUE_SIM_NOT_READY;
    public static final java.lang.String INTENT_VALUE_SIM_READY;

    public abstract void changeSimFdnPassword(java.lang.String, java.lang.String, android.os.Message);

    public abstract void changeSimLockPassword(java.lang.String, java.lang.String, android.os.Message);

    public abstract java.lang.String getServiceProviderName();

    public abstract boolean getSimFdnEnabled();

    public abstract boolean getSimLockEnabled();

    public abstract com.android.internal.telephony.SimCard$State getState();

    public abstract void registerForAbsent(android.os.Handler, int, java.lang.Object);

    public abstract void registerForLocked(android.os.Handler, int, java.lang.Object);

    public abstract void registerForNetworkLocked(android.os.Handler, int, java.lang.Object);

    public abstract void setSimFdnEnabled(boolean, java.lang.String, android.os.Message);

    public abstract void setSimLockEnabled(boolean, java.lang.String, android.os.Message);

    public abstract void supplyNetworkDepersonalization(java.lang.String, android.os.Message);

    public abstract void supplyPin(java.lang.String, android.os.Message);

    public abstract void supplyPin2(java.lang.String, android.os.Message);

    public abstract void supplyPuk(java.lang.String, java.lang.String, android.os.Message);

    public abstract void supplyPuk2(java.lang.String, java.lang.String, android.os.Message);

    public abstract void unregisterForAbsent(android.os.Handler);

    public abstract void unregisterForLocked(android.os.Handler);

    public abstract void unregisterForNetworkLocked(android.os.Handler);

    public static void <clinit>()
    {
        <com.android.internal.telephony.SimCard: java.lang.String INTENT_VALUE_SIM_READY> = "READY";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_VALUE_SIM_NOT_READY> = "NOT_READY";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_VALUE_SIM_LOCKED> = "LOCKED";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_VALUE_SIM_LOADED> = "LOADED";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_VALUE_SIM_IMSI> = "IMSI";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_VALUE_SIM_ABSENT> = "ABSENT";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_VALUE_LOCKED_ON_PUK> = "PUK";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_VALUE_LOCKED_ON_PIN> = "PIN";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_VALUE_LOCKED_NETWORK> = "NETWORK";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_KEY_SIM_STATE> = "ss";

        <com.android.internal.telephony.SimCard: java.lang.String INTENT_KEY_LOCKED_REASON> = "reason";

        return;
    }
}
