public class android.telephony.PhoneNumberUtils extends java.lang.Object
{
    public static final int FORMAT_JAPAN;
    public static final int FORMAT_NANP;
    public static final int FORMAT_UNKNOWN;
    private static final java.util.regex.Pattern GLOBAL_PHONE_NUMBER_PATTERN;
    private static final android.util.SparseIntArray KEYPAD_MAP;
    static final int MIN_MATCH;
    private static final java.lang.String[] NANP_COUNTRIES;
    private static final int NANP_STATE_DASH;
    private static final int NANP_STATE_DIGIT;
    private static final int NANP_STATE_ONE;
    private static final int NANP_STATE_PLUS;
    public static final char PAUSE;
    public static final int TOA_International;
    public static final int TOA_Unknown;
    public static final char WAIT;
    public static final char WILD;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        java.lang.String[] $r1;
        android.util.SparseIntArray $r2;

        <android.telephony.PhoneNumberUtils: char WILD> = 78;

        <android.telephony.PhoneNumberUtils: char WAIT> = 59;

        <android.telephony.PhoneNumberUtils: int TOA_Unknown> = 129;

        <android.telephony.PhoneNumberUtils: int TOA_International> = 145;

        <android.telephony.PhoneNumberUtils: char PAUSE> = 44;

        <android.telephony.PhoneNumberUtils: int NANP_STATE_PLUS> = 2;

        <android.telephony.PhoneNumberUtils: int NANP_STATE_ONE> = 3;

        <android.telephony.PhoneNumberUtils: int NANP_STATE_DIGIT> = 1;

        <android.telephony.PhoneNumberUtils: int NANP_STATE_DASH> = 4;

        <android.telephony.PhoneNumberUtils: int MIN_MATCH> = 5;

        <android.telephony.PhoneNumberUtils: int FORMAT_UNKNOWN> = 0;

        <android.telephony.PhoneNumberUtils: int FORMAT_NANP> = 1;

        <android.telephony.PhoneNumberUtils: int FORMAT_JAPAN> = 2;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\+]?[0-9.-]+");

        <android.telephony.PhoneNumberUtils: java.util.regex.Pattern GLOBAL_PHONE_NUMBER_PATTERN> = $r0;

        $r1 = newarray (java.lang.String)[24];

        $r1[0] = "US";

        $r1[1] = "CA";

        $r1[2] = "AS";

        $r1[3] = "AI";

        $r1[4] = "AG";

        $r1[5] = "BS";

        $r1[6] = "BB";

        $r1[7] = "BM";

        $r1[8] = "VG";

        $r1[9] = "KY";

        $r1[10] = "DM";

        $r1[11] = "DO";

        $r1[12] = "GD";

        $r1[13] = "GU";

        $r1[14] = "JM";

        $r1[15] = "PR";

        $r1[16] = "MS";

        $r1[17] = "NP";

        $r1[18] = "KN";

        $r1[19] = "LC";

        $r1[20] = "VC";

        $r1[21] = "TT";

        $r1[22] = "TC";

        $r1[23] = "VI";

        <android.telephony.PhoneNumberUtils: java.lang.String[] NANP_COUNTRIES> = $r1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP> = $r2;

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(97, 50);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(98, 50);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(99, 50);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(65, 50);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(66, 50);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(67, 50);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(100, 51);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(101, 51);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(102, 51);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(68, 51);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(69, 51);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(70, 51);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(103, 52);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(104, 52);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(105, 52);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(71, 52);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(72, 52);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(73, 52);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(106, 53);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(107, 53);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(108, 53);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(74, 53);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(75, 53);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(76, 53);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(109, 54);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(110, 54);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(111, 54);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(77, 54);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(78, 54);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(79, 54);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(112, 55);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(113, 55);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(114, 55);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(115, 55);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(80, 55);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(81, 55);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(82, 55);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(83, 55);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(116, 56);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(117, 56);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(118, 56);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(84, 56);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(85, 56);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(86, 56);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(119, 57);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(120, 57);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(121, 57);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(122, 57);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(87, 57);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(88, 57);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(89, 57);

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(90, 57);

        return;
    }

    public void <init>()
    {
        android.telephony.PhoneNumberUtils $r0;

        $r0 := @this: android.telephony.PhoneNumberUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static char bcdToChar(byte)
    {
        byte $b0;
        int $i1;
        char $c2;

        $b0 := @parameter0: byte;

        if $b0 >= 10 goto label1;

        $i1 = $b0 + 48;

        $c2 = (char) $i1;

        return $c2;

     label1:
        lookupswitch($b0)
        {
            case 10: goto label3;
            case 11: goto label4;
            case 12: goto label5;
            case 13: goto label6;
            default: goto label2;
        };

     label2:
        return 0;

     label3:
        return 42;

     label4:
        return 35;

     label5:
        return 44;

     label6:
        return 78;
    }

    public static java.lang.String calledPartyBCDFragmentToString(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = new java.lang.StringBuilder;

        $i2 = $i1 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i2);

        staticinvoke <android.telephony.PhoneNumberUtils: void internalCalledPartyBCDFragmentToString(java.lang.StringBuilder,byte[],int,int)>($r1, $r0, $i0, $i1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String calledPartyBCDToString(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3;
        boolean $z0;
        java.lang.StringBuilder $r2;
        byte $b3;
        short $s4;
        java.util.regex.Pattern $r4;
        java.util.regex.Matcher $r5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = "";

        $z0 = 0;

        $r2 = new java.lang.StringBuilder;

        $i2 = $i1 * 2;

        $i2 = $i2 + 1;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        if $i1 >= 2 goto label1;

        return "";

     label1:
        $b3 = $r0[$i0];

        $s4 = $b3 & 255;

        if $s4 != 145 goto label2;

        $z0 = 1;

     label2:
        $i0 = $i0 + 1;

        $i1 = $i1 - 1;

        staticinvoke <android.telephony.PhoneNumberUtils: void internalCalledPartyBCDFragmentToString(java.lang.StringBuilder,byte[],int,int)>($r2, $r0, $i0, $i1);

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 != 0 goto label3;

        return "";

     label3:
        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(^[#*])(.*)([#*])(.*)(#)$");

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label6;

        $r3 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

     label4:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label4;

     label6:
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(^[#*])(.*)([#*])(.*)");

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r1 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label4;

     label7:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label4;
    }

    private static int charToBCD(char)
    {
        char $c0;
        int $i1;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $c0 := @parameter0: char;

        if $c0 < 48 goto label1;

        if $c0 > 57 goto label1;

        $i1 = $c0 - 48;

        return $i1;

     label1:
        if $c0 != 42 goto label2;

        return 10;

     label2:
        if $c0 != 35 goto label3;

        return 11;

     label3:
        if $c0 != 44 goto label4;

        return 12;

     label4:
        if $c0 != 78 goto label5;

        return 13;

     label5:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid char for BCD ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r0;
    }

    public static boolean compare(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        char $c3, $c4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label01;

        if $r1 != null goto label03;

     label01:
        if $r0 != $r1 goto label02;

        return 1;

     label02:
        return 0;

     label03:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label04;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label05;

     label04:
        return 0;

     label05:
        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int indexOfLastNetworkChar(java.lang.String)>($r0);

        $i1 = staticinvoke <android.telephony.PhoneNumberUtils: int indexOfLastNetworkChar(java.lang.String)>($r1);

        $i2 = 0;

     label06:
        if $i0 < 0 goto label09;

        if $i1 < 0 goto label09;

        $z0 = 0;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>($c3);

        if $z1 != 0 goto label07;

        $i0 = $i0 + -1;

        $z0 = 1;

     label07:
        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>($c4);

        if $z1 != 0 goto label08;

        $i1 = $i1 + -1;

        $z0 = 1;

     label08:
        if $z0 != 0 goto label06;

        if $c4 == $c3 goto label10;

        if $c3 == 78 goto label10;

        if $c4 == 78 goto label10;

     label09:
        if $i2 >= 5 goto label12;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != $i1 goto label11;

        if $i0 != $i2 goto label11;

        return 1;

     label10:
        $i0 = $i0 + -1;

        $i1 = $i1 + -1;

        $i2 = $i2 + 1;

        goto label06;

     label11:
        return 0;

     label12:
        if $i2 < 5 goto label14;

        if $i0 < 0 goto label13;

        if $i1 >= 0 goto label14;

     label13:
        return 1;

     label14:
        $i2 = $i0 + 1;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchIntlPrefix(java.lang.String,int)>($r0, $i2);

        if $z0 == 0 goto label15;

        $i2 = $i1 + 1;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchIntlPrefix(java.lang.String,int)>($r1, $i2);

        if $z0 == 0 goto label15;

        return 1;

     label15:
        $i2 = $i0 + 1;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchTrunkPrefix(java.lang.String,int)>($r0, $i2);

        if $z0 == 0 goto label16;

        $i2 = $i1 + 1;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchIntlPrefixAndCC(java.lang.String,int)>($r1, $i2);

        if $z0 == 0 goto label16;

        return 1;

     label16:
        $i1 = $i1 + 1;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchTrunkPrefix(java.lang.String,int)>($r1, $i1);

        if $z0 == 0 goto label17;

        $i0 = $i0 + 1;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean matchIntlPrefixAndCC(java.lang.String,int)>($r0, $i0);

        if $z0 == 0 goto label17;

        return 1;

     label17:
        return 0;
    }

    public static java.lang.String convertKeypadLettersToDigits(java.lang.String)
    {
        java.lang.String $r0;
        char $c0;
        int $i1, $i2, $i3;
        char[] $r1;
        android.util.SparseIntArray $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return $r0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        return $r0;

     label2:
        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label4;

        $c0 = $r1[$i2];

        $r2 = <android.telephony.PhoneNumberUtils: android.util.SparseIntArray KEYPAD_MAP>;

        $i3 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>($c0, $c0);

        $c0 = (char) $i3;

        $r1[$i2] = $c0;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);

        return $r0;
    }

    public static java.lang.String extractNetworkPortion(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $z0 = 0;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label6;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>($c2);

        if $z1 == 0 goto label5;

        if $c2 != 43 goto label3;

        if $z0 != 0 goto label5;

     label3:
        $z0 = 1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isStartsPostDial(char)>($c2);

        if $z1 == 0 goto label4;

     label6:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String extractPostDialPortion(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        char $c2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int indexOfLastNetworkChar(java.lang.String)>($r0);

        $i0 = $i0 + 1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label2:
        if $i0 >= $i1 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c2);

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static void formatJapaneseNumber(android.text.Editable)
    {
        android.text.Editable $r0;

        $r0 := @parameter0: android.text.Editable;

        staticinvoke <android.telephony.JapanesePhoneNumberFormatter: void format(android.text.Editable)>($r0);

        return;
    }

    public static void formatNanpNumber(android.text.Editable)
    {
        android.text.Editable $r0;
        int $i0, $i1, $i4, $i5, $i6;
        java.lang.String $r1;
        java.lang.CharSequence $r2;
        char $c2;
        int[] $r3;
        byte $b3;

        $r0 := @parameter0: android.text.Editable;

        $i0 = interfaceinvoke $r0.<android.text.Editable: int length()>();

        $r1 = "+1-nnn-nnn-nnnn";

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label01;

        return;

     label01:
        $r2 = interfaceinvoke $r0.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        $i0 = 0;

     label02:
        $i1 = interfaceinvoke $r0.<android.text.Editable: int length()>();

        if $i0 >= $i1 goto label04;

        $c2 = interfaceinvoke $r0.<android.text.Editable: char charAt(int)>($i0);

        if $c2 != 45 goto label03;

        $i1 = $i0 + 1;

        interfaceinvoke $r0.<android.text.Editable: android.text.Editable delete(int,int)>($i0, $i1);

        goto label02;

     label03:
        $i0 = $i0 + 1;

        goto label02;

     label04:
        $i0 = interfaceinvoke $r0.<android.text.Editable: int length()>();

        $r3 = newarray (int)[3];

        $b3 = 1;

        $i1 = 0;

        $i4 = 0;

        $i5 = 0;

     label05:
        if $i5 >= $i0 goto label17;

        $c2 = interfaceinvoke $r0.<android.text.Editable: char charAt(int)>($i5);

        lookupswitch($c2)
        {
            case 43: goto label16;
            case 44: goto label06;
            case 45: goto label15;
            case 46: goto label06;
            case 47: goto label06;
            case 48: goto label10;
            case 49: goto label07;
            case 50: goto label10;
            case 51: goto label10;
            case 52: goto label10;
            case 53: goto label10;
            case 54: goto label10;
            case 55: goto label10;
            case 56: goto label10;
            case 57: goto label10;
            default: goto label06;
        };

     label06:
        interfaceinvoke $r0.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(0, $i0, $r2);

        return;

     label07:
        if $i1 == 0 goto label08;

        if $b3 != 2 goto label10;

     label08:
        $b3 = 3;

     label09:
        $i5 = $i5 + 1;

        goto label05;

     label10:
        if $b3 != 2 goto label11;

        interfaceinvoke $r0.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(0, $i0, $r2);

        return;

     label11:
        if $b3 != 3 goto label13;

        $i6 = $i4 + 1;

        $r3[$i4] = $i5;

     label12:
        $b3 = 1;

        $i1 = $i1 + 1;

        $i4 = $i6;

        goto label09;

     label13:
        if $b3 == 4 goto label24;

        if $i1 == 3 goto label14;

        if $i1 != 6 goto label24;

     label14:
        $i6 = $i4 + 1;

        $r3[$i4] = $i5;

        goto label12;

     label15:
        $b3 = 4;

        goto label09;

     label16:
        if $i5 != 0 goto label06;

        $b3 = 2;

        goto label09;

     label17:
        if $i1 != 7 goto label23;

        $i0 = $i4 + -1;

     label18:
        $i1 = 0;

     label19:
        if $i1 >= $i0 goto label20;

        $i5 = $r3[$i1];

        $i4 = $i5 + $i1;

        $i5 = $i5 + $i1;

        interfaceinvoke $r0.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i4, $i5, "-");

        $i1 = $i1 + 1;

        goto label19;

     label20:
        $i0 = interfaceinvoke $r0.<android.text.Editable: int length()>();

     label21:
        if $i0 <= 0 goto label22;

        $i1 = $i0 - 1;

        $c2 = interfaceinvoke $r0.<android.text.Editable: char charAt(int)>($i1);

        if $c2 != 45 goto label22;

        $i1 = $i0 - 1;

        interfaceinvoke $r0.<android.text.Editable: android.text.Editable delete(int,int)>($i1, $i0);

        $i0 = $i0 + -1;

        goto label21;

     label22:
        return;

     label23:
        $i0 = $i4;

        goto label18;

     label24:
        $i6 = $i4;

        goto label12;
    }

    public static java.lang.String formatNumber(java.lang.String)
    {
        java.lang.String $r0;
        android.text.SpannableStringBuilder $r1;
        java.util.Locale $r2;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new android.text.SpannableStringBuilder;

        specialinvoke $r1.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r0);

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $i0 = staticinvoke <android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>($r2);

        staticinvoke <android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>($r1, $i0);

        $r0 = virtualinvoke $r1.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static void formatNumber(android.text.Editable, int)
    {
        android.text.Editable $r0;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: android.text.Editable;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r0.<android.text.Editable: int length()>();

        if $i1 <= 2 goto label1;

        $c2 = interfaceinvoke $r0.<android.text.Editable: char charAt(int)>(0);

        if $c2 != 43 goto label1;

        $c2 = interfaceinvoke $r0.<android.text.Editable: char charAt(int)>(1);

        if $c2 != 49 goto label3;

        $i0 = 1;

     label1:
        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label5;
            default: goto label2;
        };

     label2:
        return;

     label3:
        $i0 = interfaceinvoke $r0.<android.text.Editable: int length()>();

        if $i0 < 3 goto label6;

        $c2 = interfaceinvoke $r0.<android.text.Editable: char charAt(int)>(1);

        if $c2 != 56 goto label7;

        $c2 = interfaceinvoke $r0.<android.text.Editable: char charAt(int)>(2);

        if $c2 != 49 goto label8;

        $i0 = 2;

        goto label1;

     label4:
        staticinvoke <android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>($r0);

        return;

     label5:
        staticinvoke <android.telephony.PhoneNumberUtils: void formatJapaneseNumber(android.text.Editable)>($r0);

        return;

     label6:
        return;

     label7:
        return;

     label8:
        return;
    }

    public static int getFormatTypeForLocale(java.util.Locale)
    {
        java.util.Locale $r0, $r4;
        int $i0, $i1;
        java.lang.String $r1, $r3;
        java.lang.String[] $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Locale;

        $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>();

        $r2 = <android.telephony.PhoneNumberUtils: java.lang.String[] NANP_COUNTRIES>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = <android.telephony.PhoneNumberUtils: java.lang.String[] NANP_COUNTRIES>;

        $r3 = $r2[$i1];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r4 = <java.util.Locale: java.util.Locale JAPAN>;

        $z0 = virtualinvoke $r0.<java.util.Locale: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        return 2;

     label4:
        return 0;
    }

    public static java.lang.String getNumberFromIntent(android.content.Intent, android.content.Context)
    {
        android.content.Intent $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r4;
        android.net.Uri $r3;
        boolean $z0;
        android.telephony.TelephonyManager $r5;
        android.content.ContentResolver $r6;
        java.lang.String[] $r7;
        android.database.Cursor $r8;
        int $i0;
        java.lang.Throwable $r9;

        $r0 := @parameter0: android.content.Intent;

        $r1 := @parameter1: android.content.Context;

        $r2 = null;

        $r3 = virtualinvoke $r0.<android.content.Intent: android.net.Uri getData()>();

        $r4 = virtualinvoke $r3.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("tel");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r3.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        return $r2;

     label1:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("voicemail");

        if $z0 == 0 goto label2;

        $r5 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $r2 = virtualinvoke $r5.<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>();

        return $r2;

     label2:
        if $r1 != null goto label3;

        return null;

     label3:
        virtualinvoke $r0.<android.content.Intent: java.lang.String resolveType(android.content.Context)>($r1);

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "number";

        $r8 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r3, $r7, null, null, null);

        if $r8 == null goto label6;

     label4:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label5;

        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("number");

        $r2 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label5:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label6:
        return $r2;

     label7:
        $r9 := @caughtexception;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        throw $r9;

        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public static java.lang.String getStrippedReversed(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>($r0);

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r0 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String internalGetStrippedReversed(java.lang.String,int)>($r0, $i0);

        return $r0;
    }

    private static boolean hasPlus(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(43);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static int indexOfLastNetworkChar(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(44);

        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(59);

        $i1 = staticinvoke <android.telephony.PhoneNumberUtils: int minPositive(int,int)>($i1, $i2);

        if $i1 >= 0 goto label1;

        $i0 = $i0 - 1;

        return $i0;

     label1:
        $i0 = $i1 - 1;

        return $i0;
    }

    private static void internalCalledPartyBCDFragmentToString(java.lang.StringBuilder, byte[], int, int)
    {
        java.lang.StringBuilder $r0;
        byte[] $r1;
        int $i0, $i1, $i3, $i4, $i6;
        byte $b2;
        char $c5;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i4 = $i0;

     label1:
        $i3 = $i1 + $i0;

        if $i4 >= $i3 goto label4;

        $b2 = $r1[$i4];

        $b2 = $b2 & 15;

        $b2 = (byte) $b2;

        $c5 = staticinvoke <android.telephony.PhoneNumberUtils: char bcdToChar(byte)>($b2);

        if $c5 != 0 goto label2;

        return;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $b2 = $r1[$i4];

        $b2 = $b2 >> 4;

        $b2 = $b2 & 15;

        $b2 = (byte) $b2;

        if $b2 != 15 goto label3;

        $i6 = $i4 + 1;

        $i3 = $i1 + $i0;

        if $i6 == $i3 goto label5;

     label3:
        $c5 = staticinvoke <android.telephony.PhoneNumberUtils: char bcdToChar(byte)>($b2);

        if $c5 == 0 goto label6;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i4 = $i4 + 1;

        goto label1;

     label4:
        return;

     label5:
        return;

     label6:
        return;
    }

    private static java.lang.String internalGetStrippedReversed(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1;
        char $c4;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

     label2:
        if $i2 < 0 goto label3;

        $i3 = $i1 - $i2;

        if $i3 > $i0 goto label3;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $i2 = $i2 + -1;

        goto label2;

     label3:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static final boolean is12Key(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 < 48 goto label1;

        if $c0 <= 57 goto label2;

     label1:
        if $c0 == 42 goto label2;

        if $c0 != 35 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static final boolean isDialable(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 < 48 goto label1;

        if $c0 <= 57 goto label2;

     label1:
        if $c0 == 42 goto label2;

        if $c0 == 35 goto label2;

        if $c0 == 43 goto label2;

        if $c0 != 78 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private static boolean isDialable(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1;
        char $c2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label1:
        if $i0 >= $i1 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(char)>($c2);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static boolean isEmergencyNumber(java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.String[] $r2;

        $r1 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>($r1);

        $r0 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.ril.ecclist");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label4;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r0 = $r2[$i1];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("112");

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("911");

        if $z0 == 0 goto label6;

     label5:
        return 1;

     label6:
        return 0;
    }

    public static boolean isGlobalPhoneNumber(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = <android.telephony.PhoneNumberUtils: java.util.regex.Pattern GLOBAL_PHONE_NUMBER_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public static boolean isISODigit(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 < 48 goto label1;

        if $c0 > 57 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean isNonSeparator(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 < 48 goto label1;

        if $c0 <= 57 goto label2;

     label1:
        if $c0 == 42 goto label2;

        if $c0 == 35 goto label2;

        if $c0 == 43 goto label2;

        if $c0 == 78 goto label2;

        if $c0 == 59 goto label2;

        if $c0 != 44 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static final boolean isReallyDialable(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 < 48 goto label1;

        if $c0 <= 57 goto label2;

     label1:
        if $c0 == 42 goto label2;

        if $c0 == 35 goto label2;

        if $c0 != 43 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static final boolean isStartsPostDial(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 == 44 goto label1;

        if $c0 != 59 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isWellFormedSmsAddress(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>($r0);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("+");

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isDialable(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean matchIntlPrefix(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i2;
        byte $b1;
        char $c3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $b1 = 0;

        $i2 = 0;

     label01:
        if $i2 >= $i0 goto label12;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        lookupswitch($b1)
        {
            case 0: goto label03;
            case 1: goto label02;
            case 2: goto label07;
            case 3: goto label02;
            case 4: goto label10;
            default: goto label02;
        };

     label02:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label03:
        if $c3 != 43 goto label05;

        $b1 = 1;

     label04:
        $i2 = $i2 + 1;

        goto label01;

     label05:
        if $c3 != 48 goto label06;

        $b1 = 2;

        goto label04;

     label06:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label07:
        if $c3 != 48 goto label08;

        $b1 = 3;

        goto label04;

     label08:
        if $c3 != 49 goto label09;

        $b1 = 4;

        goto label04;

     label09:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label10:
        if $c3 != 49 goto label11;

        $b1 = 5;

        goto label04;

     label11:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label12:
        if $b1 == 1 goto label13;

        if $b1 == 3 goto label13;

        if $b1 != 5 goto label14;

     label13:
        return 1;

     label14:
        return 0;
    }

    private static boolean matchIntlPrefixAndCC(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        char $c3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 = 0;

        $i2 = 0;

     label01:
        if $i2 >= $i0 goto label16;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        lookupswitch($i1)
        {
            case 0: goto label03;
            case 1: goto label12;
            case 2: goto label07;
            case 3: goto label12;
            case 4: goto label10;
            case 5: goto label12;
            case 6: goto label14;
            case 7: goto label14;
            default: goto label02;
        };

     label02:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label03:
        if $c3 != 43 goto label05;

        $i1 = 1;

     label04:
        $i2 = $i2 + 1;

        goto label01;

     label05:
        if $c3 != 48 goto label06;

        $i1 = 2;

        goto label04;

     label06:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label07:
        if $c3 != 48 goto label08;

        $i1 = 3;

        goto label04;

     label08:
        if $c3 != 49 goto label09;

        $i1 = 4;

        goto label04;

     label09:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label10:
        if $c3 != 49 goto label11;

        $i1 = 5;

        goto label04;

     label11:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label12:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isISODigit(char)>($c3);

        if $z0 == 0 goto label13;

        $i1 = 6;

        goto label04;

     label13:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label14:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isISODigit(char)>($c3);

        if $z0 == 0 goto label15;

        $i1 = $i1 + 1;

        goto label04;

     label15:
        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c3);

        if $z0 == 0 goto label04;

        return 0;

     label16:
        if $i1 == 6 goto label17;

        if $i1 == 7 goto label17;

        if $i1 != 8 goto label18;

     label17:
        return 1;

     label18:
        return 0;
    }

    private static boolean matchTrunkPrefix(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        boolean $z0, $z1;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 = 0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c2 != 48 goto label3;

        if $z0 != 0 goto label3;

        $z0 = 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c2);

        if $z1 == 0 goto label2;

        return 0;

     label4:
        return $z0;
    }

    private static int minPositive(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < 0 goto label2;

        if $i1 < 0 goto label2;

        if $i0 >= $i1 goto label1;

        return $i0;

     label1:
        return $i1;

     label2:
        if $i0 < 0 goto label3;

        return $i0;

     label3:
        if $i1 < 0 goto label4;

        return $i1;

     label4:
        return -1;
    }

    public static byte[] networkPortionToCalledPartyBCD(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>($r0);

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>($r0);

        return $r1;
    }

    public static byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>($r0);

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCDWithLength(java.lang.String)>($r0);

        return $r1;
    }

    public static byte[] numberToCalledPartyBCD(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean hasPlus(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

     label1:
        $i0 = $i0 + 1;

        $i0 = $i0 / 2;

        $i0 = $i0 + 1;

        $r1 = newarray (byte)[$i0];

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCDHelper(byte[],int,java.lang.String)>($r1, 0, $r0);

        return $r1;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        goto label1;
    }

    private static byte[] numberToCalledPartyBCDHelper(byte[], int, java.lang.String)
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r1;
        boolean $z0;
        char $c6;
        byte $b8;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean hasPlus(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\+", "");

        $r0[$i0] = -111;

     label1:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = lengthof $r0;

        $i1 = $i1 - $i0;

        $i1 = $i1 - 1;

        $i2 = $i2 - 0;

        $i2 = $i2 & 1;

        $i1 = $i1 - $i2;

        $i3 = 1;

        $i2 = 0;

     label2:
        $i4 = $i1 + 1;

        if $i3 >= $i4 goto label4;

        $i4 = $i0 + $i3;

        $i5 = $i2 + 1;

        $c6 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $i7 = staticinvoke <android.telephony.PhoneNumberUtils: int charToBCD(char)>($c6);

        $i2 = $i5 + 1;

        $c6 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i5);

        $i5 = staticinvoke <android.telephony.PhoneNumberUtils: int charToBCD(char)>($c6);

        $i5 = $i5 << 4;

        $i7 = $i7 | $i5;

        $b8 = (byte) $i7;

        $r0[$i4] = $b8;

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $r0[$i0] = -127;

        goto label1;

     label4:
        $i0 = $i1 + $i0;

        $i1 = lengthof $r0;

        $i1 = $i1 - 1;

        if $i0 >= $i1 goto label5;

        $i0 = lengthof $r0;

        $i0 = $i0 - 1;

        $c6 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $i2 = staticinvoke <android.telephony.PhoneNumberUtils: int charToBCD(char)>($c6);

        $i2 = $i2 | 240;

        $b8 = (byte) $i2;

        $r0[$i0] = $b8;

        return $r0;

     label5:
        return $r0;
    }

    private static byte[] numberToCalledPartyBCDWithLength(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1;
        byte[] $r1;
        boolean $z0;
        byte $b2;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean hasPlus(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

     label1:
        $i0 = $i0 + 1;

        $i0 = $i0 / 2;

        $i0 = $i0 + 1;

        $i1 = $i0 + 1;

        $r1 = newarray (byte)[$i1];

        $i0 = $i0 & 255;

        $b2 = (byte) $i0;

        $r1[0] = $b2;

        $r1 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCDHelper(byte[],int,java.lang.String)>($r1, 1, $r0);

        return $r1;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        goto label1;
    }

    public static java.lang.String stringFromStringAndTOA(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        char $c1;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $r0 != null goto label1;

        return null;

     label1:
        if $i0 != 145 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c1 == 43 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label2:
        return $r0;
    }

    public static java.lang.String stripSeparators(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        char $c2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>($c2);

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String toCallerIDMinMatch(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>($r0);

        $r0 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String internalGetStrippedReversed(java.lang.String,int)>($r0, 5);

        return $r0;
    }

    public static int toaFromString(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;
        char $c1;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 43 goto label1;

        return 145;

     label1:
        return 129;
    }
}
