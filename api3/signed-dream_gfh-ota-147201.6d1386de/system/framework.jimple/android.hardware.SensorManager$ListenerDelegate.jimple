class android.hardware.SensorManager$ListenerDelegate extends android.os.Binder
{
    private final android.os.Handler mHandler;
    final android.hardware.SensorEventListener mSensorEventListener;
    private final java.util.ArrayList mSensorList;
    public int mSensors;
    private android.hardware.SensorEvent mValuesPool;
    final android.hardware.SensorManager this$0;

    void <init>(android.hardware.SensorManager, android.hardware.SensorEventListener, android.hardware.Sensor, android.os.Handler)
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        android.hardware.SensorManager $r1;
        android.hardware.SensorEventListener $r2;
        android.hardware.Sensor $r3;
        android.os.Handler $r4;
        android.os.Looper $r5;
        java.util.ArrayList $r6;
        android.hardware.SensorManager$ListenerDelegate$1 $r7;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        $r1 := @parameter0: android.hardware.SensorManager;

        $r2 := @parameter1: android.hardware.SensorEventListener;

        $r3 := @parameter2: android.hardware.Sensor;

        $r4 := @parameter3: android.os.Handler;

        $r0.<android.hardware.SensorManager$ListenerDelegate: android.hardware.SensorManager this$0> = $r1;

        specialinvoke $r0.<android.os.Binder: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r0.<android.hardware.SensorManager$ListenerDelegate: java.util.ArrayList mSensorList> = $r6;

        $r0.<android.hardware.SensorManager$ListenerDelegate: android.hardware.SensorEventListener mSensorEventListener> = $r2;

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Looper getLooper()>();

     label1:
        $r7 = new android.hardware.SensorManager$ListenerDelegate$1;

        specialinvoke $r7.<android.hardware.SensorManager$ListenerDelegate$1: void <init>(android.hardware.SensorManager$ListenerDelegate,android.os.Looper,android.hardware.SensorManager)>($r0, $r5, $r1);

        $r0.<android.hardware.SensorManager$ListenerDelegate: android.os.Handler mHandler> = $r7;

        virtualinvoke $r0.<android.hardware.SensorManager$ListenerDelegate: int addSensor(android.hardware.Sensor)>($r3);

        return;

     label2:
        $r5 = $r1.<android.hardware.SensorManager: android.os.Looper mMainLooper>;

        goto label1;
    }

    int addSensor(android.hardware.Sensor)
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        android.hardware.Sensor $r1;
        int $i0, $i1;
        java.util.ArrayList $r2;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        $r1 := @parameter0: android.hardware.Sensor;

        $i1 = $r0.<android.hardware.SensorManager$ListenerDelegate: int mSensors>;

        $i0 = virtualinvoke $r1.<android.hardware.Sensor: int getHandle()>();

        $i0 = 1 << $i0;

        $i1 = $i1 | $i0;

        $r0.<android.hardware.SensorManager$ListenerDelegate: int mSensors> = $i1;

        $r2 = $r0.<android.hardware.SensorManager$ListenerDelegate: java.util.ArrayList mSensorList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $r0.<android.hardware.SensorManager$ListenerDelegate: int mSensors>;

        return $i1;
    }

    protected android.hardware.SensorEvent createSensorEvent()
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        android.hardware.SensorEvent $r1;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        $r1 = new android.hardware.SensorEvent;

        specialinvoke $r1.<android.hardware.SensorEvent: void <init>(int)>(3);

        return $r1;
    }

    protected android.hardware.SensorEvent getFromPool()
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        android.hardware.SensorEvent $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.hardware.SensorManager$ListenerDelegate: android.hardware.SensorEvent mValuesPool>;

        $r0.<android.hardware.SensorManager$ListenerDelegate: android.hardware.SensorEvent mValuesPool> = null;

        exitmonitor $r0;

     label2:
        if $r1 != null goto label6;

        $r1 = virtualinvoke $r0.<android.hardware.SensorManager$ListenerDelegate: android.hardware.SensorEvent createSensorEvent()>();

        return $r1;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor $r0;

     label5:
        throw $r2;

     label6:
        return $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.lang.Object getListener()
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        android.hardware.SensorEventListener r1;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        r1 = $r0.<android.hardware.SensorManager$ListenerDelegate: android.hardware.SensorEventListener mSensorEventListener>;

        return r1;
    }

    java.util.List getSensors()
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        java.util.ArrayList r1;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        r1 = $r0.<android.hardware.SensorManager$ListenerDelegate: java.util.ArrayList mSensorList>;

        return r1;
    }

    boolean hasSensor(android.hardware.Sensor)
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        android.hardware.Sensor $r1;
        int $i0, $i1;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        $r1 := @parameter0: android.hardware.Sensor;

        $i1 = $r0.<android.hardware.SensorManager$ListenerDelegate: int mSensors>;

        $i0 = virtualinvoke $r1.<android.hardware.Sensor: int getHandle()>();

        $i0 = 1 << $i0;

        $i1 = $i1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void onSensorChangedLocked(android.hardware.Sensor, float[], long[], int)
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        android.hardware.Sensor $r1;
        float[] $r2, $r4;
        long[] $r3;
        int $i0;
        android.hardware.SensorEvent $r5;
        float $f0;
        long $l1;
        android.os.Message $r6;
        android.os.Handler $r7;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        $r1 := @parameter0: android.hardware.Sensor;

        $r2 := @parameter1: float[];

        $r3 := @parameter2: long[];

        $i0 := @parameter3: int;

        $r5 = virtualinvoke $r0.<android.hardware.SensorManager$ListenerDelegate: android.hardware.SensorEvent getFromPool()>();

        $r4 = $r5.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r2[0];

        $r4[0] = $f0;

        $f0 = $r2[1];

        $r4[1] = $f0;

        $f0 = $r2[2];

        $r4[2] = $f0;

        $l1 = $r3[0];

        $r5.<android.hardware.SensorEvent: long timestamp> = $l1;

        $r5.<android.hardware.SensorEvent: int accuracy> = $i0;

        $r5.<android.hardware.SensorEvent: android.hardware.Sensor sensor> = $r1;

        $r6 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r6.<android.os.Message: int what> = 0;

        $r6.<android.os.Message: java.lang.Object obj> = $r5;

        $r7 = $r0.<android.hardware.SensorManager$ListenerDelegate: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    int removeSensor(android.hardware.Sensor)
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        android.hardware.Sensor $r1;
        int $i0, $i1;
        java.util.ArrayList $r2;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        $r1 := @parameter0: android.hardware.Sensor;

        $i1 = $r0.<android.hardware.SensorManager$ListenerDelegate: int mSensors>;

        $i0 = virtualinvoke $r1.<android.hardware.Sensor: int getHandle()>();

        $i0 = 1 << $i0;

        $i0 = $i0 ^ -1;

        $i1 = $i1 & $i0;

        $r0.<android.hardware.SensorManager$ListenerDelegate: int mSensors> = $i1;

        $r2 = $r0.<android.hardware.SensorManager$ListenerDelegate: java.util.ArrayList mSensorList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $i1 = $r0.<android.hardware.SensorManager$ListenerDelegate: int mSensors>;

        return $i1;
    }

    protected void returnToPool(android.hardware.SensorEvent)
    {
        android.hardware.SensorManager$ListenerDelegate $r0;
        android.hardware.SensorEvent $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.hardware.SensorManager$ListenerDelegate;

        $r1 := @parameter0: android.hardware.SensorEvent;

        entermonitor $r0;

     label1:
        $r2 = $r0.<android.hardware.SensorManager$ListenerDelegate: android.hardware.SensorEvent mValuesPool>;

        if $r2 != null goto label2;

        $r0.<android.hardware.SensorManager$ListenerDelegate: android.hardware.SensorEvent mValuesPool> = $r1;

     label2:
        exitmonitor $r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
