public abstract class com.android.internal.telephony.PhoneBase extends java.lang.Object implements com.android.internal.telephony.Phone
{
    private static final java.lang.String LOG_TAG;
    protected android.content.Context mContext;
    protected final android.os.RegistrantList mDisconnectRegistrants;
    protected final android.os.RegistrantList mIncomingRingRegistrants;
    protected android.os.Looper mLooper;
    protected final android.os.RegistrantList mMmiCompleteRegistrants;
    protected final android.os.RegistrantList mMmiRegistrants;
    protected final android.os.RegistrantList mNewRingingConnectionRegistrants;
    protected com.android.internal.telephony.PhoneNotifier mNotifier;
    protected final android.os.RegistrantList mPhoneStateRegistrants;
    protected final android.os.RegistrantList mServiceStateRegistrants;
    protected com.android.internal.telephony.test.SimulatedRadioControl mSimulatedRadioControl;
    protected final android.os.RegistrantList mSuppServiceFailedRegistrants;
    boolean mUnitTestMode;
    protected final android.os.RegistrantList mUnknownConnectionRegistrants;

    protected void <init>(com.android.internal.telephony.PhoneNotifier, android.content.Context)
    {
        com.android.internal.telephony.PhoneBase $r0;
        com.android.internal.telephony.PhoneNotifier $r1;
        android.content.Context $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: com.android.internal.telephony.PhoneNotifier;

        $r2 := @parameter1: android.content.Context;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,boolean)>($r1, $r2, 0);

        return;
    }

    protected void <init>(com.android.internal.telephony.PhoneNotifier, android.content.Context, boolean)
    {
        com.android.internal.telephony.PhoneBase $r0;
        com.android.internal.telephony.PhoneNotifier $r1;
        android.content.Context $r2;
        boolean $z0;
        android.os.Looper $r3;
        android.os.RegistrantList $r4;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: com.android.internal.telephony.PhoneNotifier;

        $r2 := @parameter1: android.content.Context;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mPhoneStateRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mNewRingingConnectionRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mIncomingRingRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mDisconnectRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mServiceStateRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mMmiCompleteRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mMmiRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mUnknownConnectionRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mSuppServiceFailedRegistrants> = $r4;

        $r0.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.PhoneNotifier mNotifier> = $r1;

        $r0.<com.android.internal.telephony.PhoneBase: android.content.Context mContext> = $r2;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r0.<com.android.internal.telephony.PhoneBase: android.os.Looper mLooper> = $r3;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void setLocaleByCarrier()>();

        virtualinvoke $r0.<com.android.internal.telephony.PhoneBase: void setUnitTestMode(boolean)>($z0);

        return;
    }

    private void checkCorrectThread(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.Looper $r2, $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Looper getLooper()>();

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.Looper mLooper>;

        if $r2 == $r3 goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("com.android.internal.telephony.Phone must be used from within one thread");

        throw $r4;

     label1:
        return;
    }

    private void setLocaleByCarrier()
    {
        com.android.internal.telephony.PhoneBase $r0;
        java.lang.String $r1, $r6, $r7;
        int $i0, $i1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        java.lang.CharSequence[] $r4;
        java.lang.CharSequence $r5;
        boolean $z0;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.carrier");

        if $r1 == null goto label5;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>(17235979);

        $i0 = 0;

     label2:
        $i1 = lengthof $r4;

        $i1 = $i1 - 1;

        if $i0 >= $i1 goto label6;

        $r5 = $r4[$i0];

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $i1 = $i0 + 1;

        $r5 = $r4[$i1];

        $r7 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r6 = "";

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 < 5 goto label3;

        $r6 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

     label3:
        virtualinvoke $r0.<com.android.internal.telephony.PhoneBase: void setSystemLocale(java.lang.String,java.lang.String)>($r1, $r6);

        return;

     label4:
        $i0 = $i0 + 2;

        goto label2;

     label5:
        return;

     label6:
        return;
    }

    public android.content.Context getContext()
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.content.Context r1;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        r1 = $r0.<com.android.internal.telephony.PhoneBase: android.content.Context mContext>;

        return r1;
    }

    public abstract java.util.List getPendingMmiCodes();

    public com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()
    {
        com.android.internal.telephony.PhoneBase $r0;
        com.android.internal.telephony.test.SimulatedRadioControl r1;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        r1 = $r0.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.test.SimulatedRadioControl mSimulatedRadioControl>;

        return r1;
    }

    public boolean getUnitTestMode()
    {
        com.android.internal.telephony.PhoneBase $r0;
        boolean z0;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        z0 = $r0.<com.android.internal.telephony.PhoneBase: boolean mUnitTestMode>;

        return z0;
    }

    protected void notifyCallStateChangedP()
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.AsyncResult $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 = new android.os.AsyncResult;

        specialinvoke $r1.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r0, null);

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mPhoneStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r1);

        return;
    }

    protected void notifyDisconnectP(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.PhoneBase $r0;
        com.android.internal.telephony.Connection $r1;
        android.os.AsyncResult $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: com.android.internal.telephony.Connection;

        $r2 = new android.os.AsyncResult;

        specialinvoke $r2.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r1, null);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r2);

        return;
    }

    protected void notifyNewRingingConnectionP(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.PhoneBase $r0;
        com.android.internal.telephony.Connection $r1;
        android.os.AsyncResult $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: com.android.internal.telephony.Connection;

        $r2 = new android.os.AsyncResult;

        specialinvoke $r2.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r1, null);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mNewRingingConnectionRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r2);

        return;
    }

    protected void notifyServiceStateChangedP(android.telephony.ServiceState)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.telephony.ServiceState $r1;
        android.os.AsyncResult $r2;
        android.os.RegistrantList $r3;
        com.android.internal.telephony.PhoneNotifier $r4;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.telephony.ServiceState;

        $r2 = new android.os.AsyncResult;

        specialinvoke $r2.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r1, null);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mServiceStateRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r2);

        $r4 = $r0.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r4.<com.android.internal.telephony.PhoneNotifier: void notifyServiceState(com.android.internal.telephony.Phone)>($r0);

        return;
    }

    public void registerForDisconnect(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void registerForIncomingRing(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mIncomingRingRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void registerForMmiComplete(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mMmiCompleteRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void registerForMmiInitiate(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mMmiRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void registerForNewRingingConnection(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mNewRingingConnectionRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void registerForPhoneStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mPhoneStateRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void registerForServiceStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mServiceStateRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void add(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void registerForSuppServiceFailed(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mSuppServiceFailedRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void registerForUnknownConnection(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.RegistrantList $r3;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r3 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mUnknownConnectionRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        return;
    }

    public void setSystemLocale(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.PhoneBase $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        android.content.Context $r5;
        android.content.res.AssetManager $r6;
        java.lang.String[] $r7;
        boolean $z0;
        android.app.IActivityManager $r8;
        android.content.res.Configuration $r9;
        java.util.Locale $r10;
        java.lang.Exception $r11;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.language");

        $r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.country");

        if $r1 != null goto label01;

        return;

     label01:
        virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        if $r2 != null goto label02;

        $r2 = "";

     label02:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        if $r3 == null goto label03;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label17;

     label03:
        if $r4 == null goto label04;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label18;

     label04:
        $r5 = $r0.<com.android.internal.telephony.PhoneBase: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r7 = virtualinvoke $r6.<android.content.res.AssetManager: java.lang.String[] getLocales()>();

        $i0 = lengthof $r7;

     label05:
        $r3 = null;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label07;

        $r4 = $r7[$i1];

        if $r4 == null goto label14;

        $r4 = $r7[$i1];

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 < 2 goto label14;

        $r4 = $r7[$i1];

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label14;

        $r4 = $r7[$i1];

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 < 5 goto label13;

        $r4 = $r7[$i1];

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label14;

        $r3 = $r7[$i1];

     label07:
        if $r3 == null goto label19;

        $r8 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r9 = interfaceinvoke $r8.<android.app.IActivityManager: android.content.res.Configuration getConfiguration()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

     label08:
        if $i0 < 5 goto label15;

     label09:
        $r10 = new java.util.Locale;

        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

        specialinvoke $r10.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        $r9.<android.content.res.Configuration: java.util.Locale locale> = $r10;

     label10:
        $r9.<android.content.res.Configuration: boolean userSetLocale> = 1;

        interfaceinvoke $r8.<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>($r9);

     label11:
        return;

     label12:
        $r11 := @caughtexception;

        return;

     label13:
        if $r3 != null goto label14;

        $r3 = $r7[$i1];

     label14:
        $i1 = $i1 + 1;

        goto label06;

     label15:
        $r10 = new java.util.Locale;

        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        specialinvoke $r10.<java.util.Locale: void <init>(java.lang.String)>($r1);

        $r9.<android.content.res.Configuration: java.util.Locale locale> = $r10;

     label16:
        goto label10;

     label17:
        return;

     label18:
        return;

     label19:
        return;

        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label08 with label12;
        catch java.lang.Exception from label09 to label11 with label12;
        catch java.lang.Exception from label13 to label14 with label12;
        catch java.lang.Exception from label15 to label16 with label12;
    }

    public void setUnitTestMode(boolean)
    {
        com.android.internal.telephony.PhoneBase $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $z0 := @parameter0: boolean;

        $r0.<com.android.internal.telephony.PhoneBase: boolean mUnitTestMode> = $z0;

        return;
    }

    public void unregisterForDisconnect(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForIncomingRing(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mIncomingRingRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForMmiComplete(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        specialinvoke $r0.<com.android.internal.telephony.PhoneBase: void checkCorrectThread(android.os.Handler)>($r1);

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mMmiCompleteRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForMmiInitiate(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mMmiRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForNewRingingConnection(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mNewRingingConnectionRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForPhoneStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mPhoneStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForServiceStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mServiceStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForSuppServiceFailed(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mSuppServiceFailedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForUnknownConnection(android.os.Handler)
    {
        com.android.internal.telephony.PhoneBase $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.PhoneBase;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.PhoneBase: android.os.RegistrantList mUnknownConnectionRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.PhoneBase: java.lang.String LOG_TAG> = "GSM";

        return;
    }
}
