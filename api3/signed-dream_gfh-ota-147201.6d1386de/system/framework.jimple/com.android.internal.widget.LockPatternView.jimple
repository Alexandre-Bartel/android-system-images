public class com.android.internal.widget.LockPatternView extends android.view.View
{
    private static final int MILLIS_PER_CIRCLE_ANIMATING;
    private static final boolean PROFILE_DRAWING;
    static final int STATUS_BAR_HEIGHT;
    private static final long[] VIBE_PATTERN;
    private long mAnimatingPeriodStart;
    private android.graphics.Bitmap mBitmapArrowGreenUp;
    private android.graphics.Bitmap mBitmapArrowRedUp;
    private android.graphics.Bitmap mBitmapBtnDefault;
    private android.graphics.Bitmap mBitmapBtnTouched;
    private android.graphics.Bitmap mBitmapCircleDefault;
    private android.graphics.Bitmap mBitmapCircleGreen;
    private android.graphics.Bitmap mBitmapCircleRed;
    private int mBitmapHeight;
    private int mBitmapWidth;
    private final android.graphics.Path mCurrentPath;
    private float mDiameterFactor;
    private boolean mDrawingProfilingStarted;
    private float mHitFactor;
    private float mInProgressX;
    private float mInProgressY;
    private boolean mInStealthMode;
    private boolean mInputEnabled;
    private final android.graphics.Rect mInvalidate;
    private com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener;
    private android.graphics.Paint mPaint;
    private android.graphics.Paint mPathPaint;
    private java.util.ArrayList mPattern;
    private com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode;
    private boolean[][] mPatternDrawLookup;
    private boolean mPatternInProgress;
    private float mSquareHeight;
    private float mSquareWidth;
    private boolean mTactileFeedbackEnabled;
    private android.os.Vibrator vibe;

    static void <clinit>()
    {
        long[] $r0;

        <com.android.internal.widget.LockPatternView: int STATUS_BAR_HEIGHT> = 25;

        <com.android.internal.widget.LockPatternView: boolean PROFILE_DRAWING> = 0;

        <com.android.internal.widget.LockPatternView: int MILLIS_PER_CIRCLE_ANIMATING> = 700;

        $r0 = newarray (long)[4];

        $r0[0] = 0L;

        $r0[1] = 1L;

        $r0[2] = 40L;

        $r0[3] = 41L;

        <com.android.internal.widget.LockPatternView: long[] VIBE_PATTERN> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.LockPatternView $r0;
        android.content.Context $r1;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.LockPatternView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.Paint $r3;
        java.util.ArrayList $r4;
        int[] $r5;
        java.lang.Class $r6;
        java.lang.Object $r7;
        boolean[][] $r8;
        com.android.internal.widget.LockPatternView$DisplayMode $r9;
        android.graphics.Path $r10;
        android.graphics.Rect $r11;
        android.os.Vibrator $r12;
        android.graphics.Paint$Style $r13;
        android.graphics.Paint$Join $r14;
        android.graphics.Paint$Cap $r15;
        android.graphics.Bitmap $r16;
        int $i0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<com.android.internal.widget.LockPatternView: boolean mDrawingProfilingStarted> = 0;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPaint> = $r3;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(9);

        $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern> = $r4;

        $r5 = newarray (int)[2];

        $r5[0] = 3;

        $r5[1] = 3;

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r7 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r6, $r5);

        $r8 = (boolean[][]) $r7;

        $r0.<com.android.internal.widget.LockPatternView: boolean[][] mPatternDrawLookup> = $r8;

        $r0.<com.android.internal.widget.LockPatternView: float mInProgressX> = -1.0F;

        $r0.<com.android.internal.widget.LockPatternView: float mInProgressY> = -1.0F;

        $r9 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Correct>;

        $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode> = $r9;

        $r0.<com.android.internal.widget.LockPatternView: boolean mInputEnabled> = 1;

        $r0.<com.android.internal.widget.LockPatternView: boolean mInStealthMode> = 0;

        $r0.<com.android.internal.widget.LockPatternView: boolean mTactileFeedbackEnabled> = 1;

        $r0.<com.android.internal.widget.LockPatternView: boolean mPatternInProgress> = 0;

        $r0.<com.android.internal.widget.LockPatternView: float mDiameterFactor> = 0.5F;

        $r0.<com.android.internal.widget.LockPatternView: float mHitFactor> = 0.6F;

        $r10 = new android.graphics.Path;

        specialinvoke $r10.<android.graphics.Path: void <init>()>();

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Path mCurrentPath> = $r10;

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Rect mInvalidate> = $r11;

        $r12 = new android.os.Vibrator;

        specialinvoke $r12.<android.os.Vibrator: void <init>()>();

        $r0.<com.android.internal.widget.LockPatternView: android.os.Vibrator vibe> = $r12;

        virtualinvoke $r0.<android.view.View: void setClickable(boolean)>(1);

        $r3 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r3 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setDither(boolean)>(1);

        $r3 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-1);

        $r3 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAlpha(int)>(128);

        $r3 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint>;

        $r13 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r13);

        $r3 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint>;

        $r14 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r14);

        $r3 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint>;

        $r15 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r15);

        $r16 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap getBitmapFor(int)>(17301702);

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapBtnDefault> = $r16;

        $r16 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap getBitmapFor(int)>(17301703);

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapBtnTouched> = $r16;

        $r16 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap getBitmapFor(int)>(17301915);

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapCircleDefault> = $r16;

        $r16 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap getBitmapFor(int)>(17301916);

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapCircleGreen> = $r16;

        $r16 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap getBitmapFor(int)>(17301917);

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapCircleRed> = $r16;

        $r16 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap getBitmapFor(int)>(17301913);

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapArrowGreenUp> = $r16;

        $r16 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap getBitmapFor(int)>(17301914);

        $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapArrowRedUp> = $r16;

        $r16 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapBtnDefault>;

        $i0 = virtualinvoke $r16.<android.graphics.Bitmap: int getWidth()>();

        $r0.<com.android.internal.widget.LockPatternView: int mBitmapWidth> = $i0;

        $r16 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapBtnDefault>;

        $i0 = virtualinvoke $r16.<android.graphics.Bitmap: int getHeight()>();

        $r0.<com.android.internal.widget.LockPatternView: int mBitmapHeight> = $i0;

        return;
    }

    private void addCellToPattern(com.android.internal.widget.LockPatternView$Cell)
    {
        com.android.internal.widget.LockPatternView $r0;
        com.android.internal.widget.LockPatternView$Cell $r1;
        boolean[][] $r2;
        int $i0;
        boolean[] $r3;
        java.util.ArrayList $r4;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: com.android.internal.widget.LockPatternView$Cell;

        $r2 = $r0.<com.android.internal.widget.LockPatternView: boolean[][] mPatternDrawLookup>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.LockPatternView$Cell: int getRow()>();

        $r3 = $r2[$i0];

        $i0 = virtualinvoke $r1.<com.android.internal.widget.LockPatternView$Cell: int getColumn()>();

        $r3[$i0] = 1;

        $r4 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    private com.android.internal.widget.LockPatternView$Cell checkForNewHit(float, float)
    {
        com.android.internal.widget.LockPatternView $r0;
        float $f0, $f1;
        int $i0, $i1;
        boolean[][] $r1;
        boolean[] $r2;
        boolean $z0;
        com.android.internal.widget.LockPatternView$Cell $r3;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: int getRowHit(float)>($f1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: int getColumnHit(float)>($f0);

        if $i1 >= 0 goto label2;

        return null;

     label2:
        $r1 = $r0.<com.android.internal.widget.LockPatternView: boolean[][] mPatternDrawLookup>;

        $r2 = $r1[$i0];

        $z0 = $r2[$i1];

        if $z0 == 0 goto label3;

        return null;

     label3:
        $r3 = staticinvoke <com.android.internal.widget.LockPatternView$Cell: com.android.internal.widget.LockPatternView$Cell of(int,int)>($i0, $i1);

        return $r3;
    }

    private void clearPatternDrawLookup()
    {
        com.android.internal.widget.LockPatternView $r0;
        int $i0, $i1;
        boolean[][] $r1;
        boolean[] $r2;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $i0 = 0;

     label1:
        if $i0 >= 3 goto label4;

        $i1 = 0;

     label2:
        if $i1 >= 3 goto label3;

        $r1 = $r0.<com.android.internal.widget.LockPatternView: boolean[][] mPatternDrawLookup>;

        $r2 = $r1[$i0];

        $r2[$i1] = 0;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return;
    }

    private com.android.internal.widget.LockPatternView$Cell detectAndAddHit(float, float)
    {
        com.android.internal.widget.LockPatternView $r0;
        float $f0, $f1;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r1;
        com.android.internal.widget.LockPatternView$Cell $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        byte $b5;
        boolean[][] $r5;
        boolean[] $r6;
        android.os.Vibrator $r7;
        long[] $r8;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r2 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$Cell checkForNewHit(float,float)>($f0, $f1);

        if $r2 == null goto label10;

        $r3 = null;

        $r1 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label05;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

        $r4 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (com.android.internal.widget.LockPatternView$Cell) $r4;

        $i0 = $r2.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $i1 = $r3.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $i1 = $i0 - $i1;

        $i0 = $r2.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $i2 = $r3.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $i0 = $i0 - $i2;

        $i2 = $r3.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $i3 = $r3.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        if $i4 != 2 goto label02;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i4 == 1 goto label02;

        $i2 = $r3.<com.android.internal.widget.LockPatternView$Cell: int row>;

        if $i1 <= 0 goto label08;

        $b5 = 1;

     label01:
        $i2 = $i2 + $b5;

     label02:
        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i4 != 2 goto label04;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        if $i1 == 1 goto label04;

        $i1 = $r3.<com.android.internal.widget.LockPatternView$Cell: int column>;

        if $i0 <= 0 goto label09;

        $b5 = 1;

     label03:
        $i3 = $i1 + $b5;

     label04:
        $r3 = staticinvoke <com.android.internal.widget.LockPatternView$Cell: com.android.internal.widget.LockPatternView$Cell of(int,int)>($i2, $i3);

     label05:
        if $r3 == null goto label06;

        $r5 = $r0.<com.android.internal.widget.LockPatternView: boolean[][] mPatternDrawLookup>;

        $i0 = $r3.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $r6 = $r5[$i0];

        $i0 = $r3.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $z0 = $r6[$i0];

        if $z0 != 0 goto label06;

        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void addCellToPattern(com.android.internal.widget.LockPatternView$Cell)>($r3);

     label06:
        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void addCellToPattern(com.android.internal.widget.LockPatternView$Cell)>($r2);

        $z0 = $r0.<com.android.internal.widget.LockPatternView: boolean mTactileFeedbackEnabled>;

        if $z0 == 0 goto label07;

        $r7 = $r0.<com.android.internal.widget.LockPatternView: android.os.Vibrator vibe>;

        $r8 = <com.android.internal.widget.LockPatternView: long[] VIBE_PATTERN>;

        virtualinvoke $r7.<android.os.Vibrator: void vibrate(long[],int)>($r8, -1);

     label07:
        return $r2;

     label08:
        $b5 = -1;

        goto label01;

     label09:
        $b5 = -1;

        goto label03;

     label10:
        return null;
    }

    private void drawArrow(android.graphics.Canvas, float, float, com.android.internal.widget.LockPatternView$Cell, com.android.internal.widget.LockPatternView$Cell)
    {
        com.android.internal.widget.LockPatternView $r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2, $f3;
        com.android.internal.widget.LockPatternView$Cell $r2, $r3;
        android.graphics.Matrix $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.internal.widget.LockPatternView$DisplayMode $r5, $r6;
        boolean $z0;
        android.graphics.Bitmap $r7, $r8;
        double $d0, $d1;
        android.graphics.Paint $r9;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r2 := @parameter3: com.android.internal.widget.LockPatternView$Cell;

        $r3 := @parameter4: com.android.internal.widget.LockPatternView$Cell;

        $r5 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $r6 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Wrong>;

        if $r5 == $r6 goto label3;

        $z0 = 1;

     label1:
        $i2 = $r3.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $i3 = $r2.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $i4 = $r3.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $i5 = $r2.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $f2 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $i0 = (int) $f2;

        $i6 = $r0.<com.android.internal.widget.LockPatternView: int mBitmapWidth>;

        $i0 = $i0 - $i6;

        $i0 = $i0 / 2;

        $f2 = $r0.<com.android.internal.widget.LockPatternView: float mSquareHeight>;

        $i6 = (int) $f2;

        $i1 = $r0.<com.android.internal.widget.LockPatternView: int mBitmapHeight>;

        $i6 = $i6 - $i1;

        $i1 = $i6 / 2;

        if $z0 == 0 goto label4;

        $r7 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapArrowGreenUp>;

     label2:
        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        $r8 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapCircleDefault>;

        $i6 = virtualinvoke $r8.<android.graphics.Bitmap: int getWidth()>();

        $r8 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapCircleDefault>;

        $i7 = virtualinvoke $r8.<android.graphics.Bitmap: int getHeight()>();

        $i2 = $i2 - $i3;

        $d0 = (double) $i2;

        $i4 = $i4 - $i5;

        $d1 = (double) $i4;

        $d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        $f2 = (float) $d0;

        $d0 = (double) $f2;

        $d0 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $f2 = (float) $d0;

        $f2 = $f2 + 90.0F;

        $f3 = (float) $i0;

        $f0 = $f3 + $f0;

        $f3 = (float) $i1;

        $f1 = $f3 + $f1;

        virtualinvoke $r4.<android.graphics.Matrix: void setTranslate(float,float)>($f0, $f1);

        $f0 = (float) $i6;

        $f0 = $f0 / 2.0F;

        $f1 = (float) $i7;

        $f1 = $f1 / 2.0F;

        virtualinvoke $r4.<android.graphics.Matrix: boolean preRotate(float,float,float)>($f2, $f0, $f1);

        $i4 = virtualinvoke $r7.<android.graphics.Bitmap: int getWidth()>();

        $i4 = $i6 - $i4;

        $f0 = (float) $i4;

        $f0 = $f0 / 2.0F;

        virtualinvoke $r4.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, 0.0F);

        $r9 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r7, $r4, $r9);

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $r7 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapArrowRedUp>;

        goto label2;
    }

    private void drawCircle(android.graphics.Canvas, int, int, boolean)
    {
        com.android.internal.widget.LockPatternView $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        float $f0, $f1, $f2;
        com.android.internal.widget.LockPatternView$DisplayMode $r2, $r3;
        android.graphics.Bitmap $r4, $r5;
        android.graphics.Paint $r6;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $z0 == 0 goto label1;

        $z0 = $r0.<com.android.internal.widget.LockPatternView: boolean mInStealthMode>;

        if $z0 == 0 goto label3;

        $r2 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $r3 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Wrong>;

        if $r2 == $r3 goto label3;

     label1:
        $r4 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapCircleDefault>;

        $r5 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapBtnDefault>;

     label2:
        $i3 = $r0.<com.android.internal.widget.LockPatternView: int mBitmapWidth>;

        $i2 = $r0.<com.android.internal.widget.LockPatternView: int mBitmapHeight>;

        $f1 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $f0 = $r0.<com.android.internal.widget.LockPatternView: float mSquareHeight>;

        $f2 = (float) $i3;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $i3 = (int) $f1;

        $f1 = (float) $i2;

        $f0 = $f0 - $f1;

        $f0 = $f0 / 2.0F;

        $i2 = (int) $f0;

        $i4 = $i0 + $i3;

        $f0 = (float) $i4;

        $i4 = $i1 + $i2;

        $f1 = (float) $i4;

        $r6 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r4, $f0, $f1, $r6);

        $i0 = $i0 + $i3;

        $f0 = (float) $i0;

        $i0 = $i1 + $i2;

        $f1 = (float) $i0;

        $r6 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r5, $f0, $f1, $r6);

        return;

     label3:
        $z0 = $r0.<com.android.internal.widget.LockPatternView: boolean mPatternInProgress>;

        if $z0 == 0 goto label4;

        $r4 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapCircleGreen>;

        $r5 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapBtnTouched>;

        goto label2;

     label4:
        $r2 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $r3 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Wrong>;

        if $r2 != $r3 goto label5;

        $r4 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapCircleRed>;

        $r5 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapBtnDefault>;

        goto label2;

     label5:
        $r2 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $r3 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Correct>;

        if $r2 == $r3 goto label6;

        $r2 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $r3 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Animate>;

        if $r2 != $r3 goto label7;

     label6:
        $r4 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapCircleGreen>;

        $r5 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Bitmap mBitmapBtnDefault>;

        goto label2;

     label7:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown display mode ");

        $r2 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r7;
    }

    private android.graphics.Bitmap getBitmapFor(int)
    {
        com.android.internal.widget.LockPatternView $r0;
        int $i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.graphics.Bitmap $r3;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r2, $i0);

        return $r3;
    }

    private float getCenterXForColumn(int)
    {
        com.android.internal.widget.LockPatternView $r0;
        int $i0, $i1;
        float $f0, $f1, $f2;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.view.View: int mPaddingLeft>;

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        $f2 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $f1 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 + $f1;

        return $f0;
    }

    private float getCenterYForRow(int)
    {
        com.android.internal.widget.LockPatternView $r0;
        int $i0, $i1;
        float $f0, $f1, $f2;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.view.View: int mPaddingTop>;

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        $f2 = $r0.<com.android.internal.widget.LockPatternView: float mSquareHeight>;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $f1 = $r0.<com.android.internal.widget.LockPatternView: float mSquareHeight>;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 + $f1;

        return $f0;
    }

    private int getColumnHit(float)
    {
        com.android.internal.widget.LockPatternView $r0;
        float $f0, $f1, $f2, $f3, $f4;
        int $i0;
        byte $b1;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $f0 := @parameter0: float;

        $f4 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $f2 = $r0.<com.android.internal.widget.LockPatternView: float mHitFactor>;

        $f2 = $f4 * $f2;

        $i0 = $r0.<android.view.View: int mPaddingLeft>;

        $f3 = (float) $i0;

        $f1 = $f4 - $f2;

        $f1 = $f1 / 2.0F;

        $f3 = $f3 + $f1;

        $i0 = 0;

     label1:
        if $i0 >= 3 goto label3;

        $f1 = (float) $i0;

        $f1 = $f1 * $f4;

        $f1 = $f3 + $f1;

        $b1 = $f0 cmpl $f1;

        if $b1 < 0 goto label2;

        $f1 = $f1 + $f2;

        $b1 = $f0 cmpg $f1;

        if $b1 > 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    private int getRowHit(float)
    {
        com.android.internal.widget.LockPatternView $r0;
        float $f0, $f1, $f2, $f3, $f4;
        int $i0;
        byte $b1;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $f0 := @parameter0: float;

        $f4 = $r0.<com.android.internal.widget.LockPatternView: float mSquareHeight>;

        $f1 = $r0.<com.android.internal.widget.LockPatternView: float mHitFactor>;

        $f1 = $f4 * $f1;

        $i0 = $r0.<android.view.View: int mPaddingTop>;

        $f3 = (float) $i0;

        $f2 = $f4 - $f1;

        $f2 = $f2 / 2.0F;

        $f3 = $f3 + $f2;

        $i0 = 0;

     label1:
        if $i0 >= 3 goto label3;

        $f2 = (float) $i0;

        $f2 = $f2 * $f4;

        $f2 = $f3 + $f2;

        $b1 = $f0 cmpl $f2;

        if $b1 < 0 goto label2;

        $f2 = $f2 + $f1;

        $b1 = $f0 cmpg $f2;

        if $b1 > 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    private void resetPattern()
    {
        com.android.internal.widget.LockPatternView $r0;
        java.util.ArrayList $r1;
        com.android.internal.widget.LockPatternView$DisplayMode $r2;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void clearPatternDrawLookup()>();

        $r2 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Correct>;

        $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode> = $r2;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void clearPattern()
    {
        com.android.internal.widget.LockPatternView $r0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void resetPattern()>();

        return;
    }

    public void disableInput()
    {
        com.android.internal.widget.LockPatternView $r0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r0.<com.android.internal.widget.LockPatternView: boolean mInputEnabled> = 0;

        return;
    }

    public void enableInput()
    {
        com.android.internal.widget.LockPatternView $r0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r0.<com.android.internal.widget.LockPatternView: boolean mInputEnabled> = 1;

        return;
    }

    public boolean isInStealthMode()
    {
        com.android.internal.widget.LockPatternView $r0;
        boolean z0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        z0 = $r0.<com.android.internal.widget.LockPatternView: boolean mInStealthMode>;

        return z0;
    }

    public boolean isTactileFeedbackEnabled()
    {
        com.android.internal.widget.LockPatternView $r0;
        boolean z0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        z0 = $r0.<com.android.internal.widget.LockPatternView: boolean mTactileFeedbackEnabled>;

        return z0;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.internal.widget.LockPatternView $r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2, $f3, $f4;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8;
        java.util.ArrayList $r2;
        boolean[][] $r3;
        com.android.internal.widget.LockPatternView$DisplayMode $r4, $r5;
        long $l3, $l4;
        java.lang.Object $r6;
        com.android.internal.widget.LockPatternView$Cell $r7, $r11;
        boolean[] $r8;
        boolean $z0, $z1, $z2;
        android.graphics.Paint $r9;
        android.graphics.Path $r10;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r3 = $r0.<com.android.internal.widget.LockPatternView: boolean[][] mPatternDrawLookup>;

        $r4 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $r5 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Animate>;

        if $r4 != $r5 goto label05;

        $i2 = $i1 + 1;

        $i2 = $i2 * 700;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = $r0.<com.android.internal.widget.LockPatternView: long mAnimatingPeriodStart>;

        $l3 = $l3 - $l4;

        $i0 = (int) $l3;

        $i0 = $i0 % $i2;

        $i2 = $i0 / 700;

        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void clearPatternDrawLookup()>();

        $i5 = 0;

     label01:
        if $i5 >= $i2 goto label02;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r7 = (com.android.internal.widget.LockPatternView$Cell) $r6;

        $i6 = virtualinvoke $r7.<com.android.internal.widget.LockPatternView$Cell: int getRow()>();

        $r8 = $r3[$i6];

        $i6 = virtualinvoke $r7.<com.android.internal.widget.LockPatternView$Cell: int getColumn()>();

        $r8[$i6] = 1;

        $i5 = $i5 + 1;

        goto label01;

     label02:
        if $i2 <= 0 goto label15;

        if $i2 >= $i1 goto label15;

        $z0 = 1;

     label03:
        if $z0 == 0 goto label04;

        $i0 = $i0 % 700;

        $f2 = (float) $i0;

        $f1 = $f2 / 700.0F;

        $i0 = $i2 - 1;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (com.android.internal.widget.LockPatternView$Cell) $r6;

        $i0 = $r7.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $f3 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterXForColumn(int)>($i0);

        $i0 = $r7.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $f2 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterYForRow(int)>($i0);

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (com.android.internal.widget.LockPatternView$Cell) $r6;

        $i2 = $r7.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $f0 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterXForColumn(int)>($i2);

        $f0 = $f0 - $f3;

        $f0 = $f1 * $f0;

        $i2 = $r7.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $f4 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterYForRow(int)>($i2);

        $f4 = $f4 - $f2;

        $f1 = $f1 * $f4;

        $f3 = $f3 + $f0;

        $r0.<com.android.internal.widget.LockPatternView: float mInProgressX> = $f3;

        $f2 = $f2 + $f1;

        $r0.<com.android.internal.widget.LockPatternView: float mInProgressY> = $f2;

     label04:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

     label05:
        $f2 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $f3 = $r0.<com.android.internal.widget.LockPatternView: float mSquareHeight>;

        $f1 = $r0.<com.android.internal.widget.LockPatternView: float mDiameterFactor>;

        $f1 = $f1 * $f2;

        $f1 = $f1 * 0.5F;

        $r9 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint>;

        virtualinvoke $r9.<android.graphics.Paint: void setStrokeWidth(float)>($f1);

        $r10 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Path mCurrentPath>;

        virtualinvoke $r10.<android.graphics.Path: void rewind()>();

        $z0 = $r0.<com.android.internal.widget.LockPatternView: boolean mInStealthMode>;

        if $z0 == 0 goto label06;

        $r4 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $r5 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Wrong>;

        if $r4 != $r5 goto label16;

     label06:
        $z0 = 1;

     label07:
        if $z0 == 0 goto label12;

        $z1 = 0;

        $i2 = 0;

     label08:
        if $i2 >= $i1 goto label09;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (com.android.internal.widget.LockPatternView$Cell) $r6;

        $i0 = $r7.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $r8 = $r3[$i0];

        $i0 = $r7.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $z2 = $r8[$i0];

        if $z2 != 0 goto label17;

     label09:
        $z2 = $r0.<com.android.internal.widget.LockPatternView: boolean mPatternInProgress>;

        if $z2 != 0 goto label10;

        $r4 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $r5 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Animate>;

        if $r4 != $r5 goto label11;

     label10:
        if $z1 == 0 goto label11;

        $f1 = $r0.<com.android.internal.widget.LockPatternView: float mInProgressX>;

        $f0 = $r0.<com.android.internal.widget.LockPatternView: float mInProgressY>;

        virtualinvoke $r10.<android.graphics.Path: void lineTo(float,float)>($f1, $f0);

     label11:
        $r9 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPathPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r10, $r9);

     label12:
        $i2 = $r0.<android.view.View: int mPaddingTop>;

        $i0 = $r0.<android.view.View: int mPaddingLeft>;

        $i5 = 0;

     label13:
        if $i5 >= 3 goto label21;

        $f1 = (float) $i2;

        $f0 = (float) $i5;

        $f0 = $f0 * $f3;

        $f1 = $f1 + $f0;

        $i6 = 0;

     label14:
        if $i6 >= 3 goto label20;

        $f0 = (float) $i0;

        $f4 = (float) $i6;

        $f4 = $f4 * $f2;

        $f0 = $f0 + $f4;

        $i7 = (int) $f0;

        $i8 = (int) $f1;

        $r8 = $r3[$i5];

        $z1 = $r8[$i6];

        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void drawCircle(android.graphics.Canvas,int,int,boolean)>($r1, $i7, $i8, $z1);

        $i6 = $i6 + 1;

        goto label14;

     label15:
        $z0 = 0;

        goto label03;

     label16:
        $z0 = 0;

        goto label07;

     label17:
        $z1 = 1;

        $i0 = $r7.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $f1 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterXForColumn(int)>($i0);

        $i0 = $r7.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $f0 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterYForRow(int)>($i0);

        if $i2 != 0 goto label19;

        virtualinvoke $r10.<android.graphics.Path: void moveTo(float,float)>($f1, $f0);

     label18:
        $i2 = $i2 + 1;

        goto label08;

     label19:
        virtualinvoke $r10.<android.graphics.Path: void lineTo(float,float)>($f1, $f0);

        goto label18;

     label20:
        $i5 = $i5 + 1;

        goto label13;

     label21:
        $r9 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPaint>;

        $i5 = virtualinvoke $r9.<android.graphics.Paint: int getFlags()>();

        $i5 = $i5 & 2;

        if $i5 == 0 goto label25;

        $z1 = 1;

     label22:
        $r9 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPaint>;

        virtualinvoke $r9.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        if $z0 == 0 goto label24;

        $i5 = 0;

     label23:
        $i6 = $i1 - 1;

        if $i5 >= $i6 goto label24;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r7 = (com.android.internal.widget.LockPatternView$Cell) $r6;

        $i6 = $i5 + 1;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        $r11 = (com.android.internal.widget.LockPatternView$Cell) $r6;

        $i6 = $r11.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $r8 = $r3[$i6];

        $i6 = $r11.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $z0 = $r8[$i6];

        if $z0 != 0 goto label26;

     label24:
        $r9 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Paint mPaint>;

        virtualinvoke $r9.<android.graphics.Paint: void setFilterBitmap(boolean)>($z1);

        return;

     label25:
        $z1 = 0;

        goto label22;

     label26:
        $f1 = (float) $i0;

        $i6 = $r7.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $f0 = (float) $i6;

        $f0 = $f0 * $f2;

        $f1 = $f1 + $f0;

        $f0 = (float) $i2;

        $i6 = $r7.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $f4 = (float) $i6;

        $f4 = $f4 * $f3;

        $f0 = $f0 + $f4;

        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void drawArrow(android.graphics.Canvas,float,float,com.android.internal.widget.LockPatternView$Cell,com.android.internal.widget.LockPatternView$Cell)>($r1, $f1, $f0, $r7, $r11);

        $i5 = $i5 + 1;

        goto label23;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.LockPatternView $r0;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.WindowManager $r3;
        android.view.Display $r4;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r4.<android.view.Display: int getWidth()>();

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i1 = virtualinvoke $r4.<android.view.Display: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i3 = $i2;

        if $i0 <= $i1 goto label1;

        $i3 = $i2 + -25;

     label1:
        virtualinvoke $r0.<android.view.View: void setMeasuredDimension(int,int)>($i3, $i3);

        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.widget.LockPatternView $r0;
        android.os.Parcelable $r1;
        com.android.internal.widget.LockPatternView$SavedState $r2;
        com.android.internal.widget.LockPatternView$DisplayMode $r3;
        java.lang.String $r4;
        java.util.List $r5;
        com.android.internal.widget.LockPatternView$DisplayMode[] $r6;
        int $i0;
        boolean $z0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: android.os.Parcelable;

        $r2 = (com.android.internal.widget.LockPatternView$SavedState) $r1;

        $r1 = virtualinvoke $r2.<android.view.AbsSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Correct>;

        $r4 = virtualinvoke $r2.<com.android.internal.widget.LockPatternView$SavedState: java.lang.String getSerializedPattern()>();

        $r5 = staticinvoke <com.android.internal.widget.LockPatternUtils: java.util.List stringToPattern(java.lang.String)>($r4);

        virtualinvoke $r0.<com.android.internal.widget.LockPatternView: void setPattern(com.android.internal.widget.LockPatternView$DisplayMode,java.util.List)>($r3, $r5);

        $r6 = staticinvoke <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode[] values()>();

        $i0 = virtualinvoke $r2.<com.android.internal.widget.LockPatternView$SavedState: int getDisplayMode()>();

        $r3 = $r6[$i0];

        $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode> = $r3;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.LockPatternView$SavedState: boolean isInputEnabled()>();

        $r0.<com.android.internal.widget.LockPatternView: boolean mInputEnabled> = $z0;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.LockPatternView$SavedState: boolean isInStealthMode()>();

        $r0.<com.android.internal.widget.LockPatternView: boolean mInStealthMode> = $z0;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.LockPatternView$SavedState: boolean isTactileFeedbackEnabled()>();

        $r0.<com.android.internal.widget.LockPatternView: boolean mTactileFeedbackEnabled> = $z0;

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        com.android.internal.widget.LockPatternView $r0;
        com.android.internal.widget.LockPatternView$SavedState $r1;
        boolean $z0, $z1, $z2;
        android.os.Parcelable $r2;
        java.util.ArrayList $r3;
        java.lang.String $r4;
        com.android.internal.widget.LockPatternView$DisplayMode $r5;
        int $i0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r2 = specialinvoke $r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new com.android.internal.widget.LockPatternView$SavedState;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        $r4 = staticinvoke <com.android.internal.widget.LockPatternUtils: java.lang.String patternToString(java.util.List)>($r3);

        $r5 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode>;

        $i0 = virtualinvoke $r5.<java.lang.Enum: int ordinal()>();

        $z0 = $r0.<com.android.internal.widget.LockPatternView: boolean mInputEnabled>;

        $z1 = $r0.<com.android.internal.widget.LockPatternView: boolean mInStealthMode>;

        $z2 = $r0.<com.android.internal.widget.LockPatternView: boolean mTactileFeedbackEnabled>;

        specialinvoke $r1.<com.android.internal.widget.LockPatternView$SavedState: void <init>(android.os.Parcelable,java.lang.String,int,boolean,boolean,boolean,com.android.internal.widget.LockPatternView$1)>($r2, $r4, $i0, $z0, $z1, $z2, null);

        return $r1;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        com.android.internal.widget.LockPatternView $r0;
        int $i0, $i1, $i2, $i3;
        float $f0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i2 = $r0.<android.view.View: int mPaddingLeft>;

        $i0 = $i0 - $i2;

        $i2 = $r0.<android.view.View: int mPaddingRight>;

        $i0 = $i0 - $i2;

        $f0 = (float) $i0;

        $f0 = $f0 / 3.0F;

        $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth> = $f0;

        $i0 = $r0.<android.view.View: int mPaddingTop>;

        $i0 = $i1 - $i0;

        $i1 = $r0.<android.view.View: int mPaddingBottom>;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $f0 = $f0 / 3.0F;

        $r0.<com.android.internal.widget.LockPatternView: float mSquareHeight> = $f0;

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.LockPatternView $r0;
        android.view.MotionEvent $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        com.android.internal.widget.LockPatternView$Cell $r2, $r7;
        com.android.internal.widget.LockPatternView$OnPatternListener $r3;
        com.android.internal.widget.LockPatternView$DisplayMode $r4;
        java.util.ArrayList $r5;
        byte $b4;
        java.lang.Object $r6;
        android.graphics.Rect $r8;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = $r0.<com.android.internal.widget.LockPatternView: boolean mInputEnabled>;

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isEnabled()>();

        if $z0 != 0 goto label02;

     label01:
        return 0;

     label02:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label08;
            case 2: goto label10;
            case 3: goto label28;
            default: goto label03;
        };

     label03:
        return 0;

     label04:
        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void resetPattern()>();

        $r2 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$Cell detectAndAddHit(float,float)>($f1, $f2);

        if $r2 == null goto label07;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        if $r3 == null goto label07;

        $r0.<com.android.internal.widget.LockPatternView: boolean mPatternInProgress> = 1;

        $r4 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Correct>;

        $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode> = $r4;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        interfaceinvoke $r3.<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternStart()>();

     label05:
        if $r2 == null goto label06;

        $i0 = $r2.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $f3 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterXForColumn(int)>($i0);

        $i0 = $r2.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $f0 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterYForRow(int)>($i0);

        $f4 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $f4 = $f4 / 2.0F;

        $f5 = $r0.<com.android.internal.widget.LockPatternView: float mSquareHeight>;

        $f5 = $f5 / 2.0F;

        $f6 = $f3 - $f4;

        $i0 = (int) $f6;

        $f6 = $f0 - $f5;

        $i1 = (int) $f6;

        $f3 = $f3 + $f4;

        $i2 = (int) $f3;

        $f0 = $f0 + $f5;

        $i3 = (int) $f0;

        virtualinvoke $r0.<android.view.View: void invalidate(int,int,int,int)>($i0, $i1, $i2, $i3);

     label06:
        $r0.<com.android.internal.widget.LockPatternView: float mInProgressX> = $f1;

        $r0.<com.android.internal.widget.LockPatternView: float mInProgressY> = $f2;

        return 1;

     label07:
        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        if $r3 == null goto label05;

        $r0.<com.android.internal.widget.LockPatternView: boolean mPatternInProgress> = 0;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        interfaceinvoke $r3.<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternCleared()>();

        goto label05;

     label08:
        $r5 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label09;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        if $r3 == null goto label09;

        $r0.<com.android.internal.widget.LockPatternView: boolean mPatternInProgress> = 0;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        $r5 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        interfaceinvoke $r3.<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternDetected(java.util.List)>($r5);

        virtualinvoke $r0.<android.view.View: void invalidate()>();

     label09:
        return 1;

     label10:
        $r5 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r2 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$Cell detectAndAddHit(float,float)>($f1, $f2);

        $r5 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $r2 == null goto label11;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        if $r3 == null goto label11;

        if $i1 != 1 goto label11;

        $r0.<com.android.internal.widget.LockPatternView: boolean mPatternInProgress> = 1;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        interfaceinvoke $r3.<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternStart()>();

     label11:
        $f0 = $r0.<com.android.internal.widget.LockPatternView: float mInProgressX>;

        $f0 = $f1 - $f0;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f3 = $r0.<com.android.internal.widget.LockPatternView: float mInProgressY>;

        $f3 = $f2 - $f3;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $f0 = $f0 + $f3;

        $f3 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $f3 = $f3 * 0.01F;

        $b4 = $f0 cmpl $f3;

        if $b4 <= 0 goto label19;

        $f4 = $r0.<com.android.internal.widget.LockPatternView: float mInProgressX>;

        $f3 = $r0.<com.android.internal.widget.LockPatternView: float mInProgressY>;

        $r0.<com.android.internal.widget.LockPatternView: float mInProgressX> = $f1;

        $r0.<com.android.internal.widget.LockPatternView: float mInProgressY> = $f2;

        $z0 = $r0.<com.android.internal.widget.LockPatternView: boolean mPatternInProgress>;

        if $z0 == 0 goto label27;

        $r5 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        $f0 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $f5 = $r0.<com.android.internal.widget.LockPatternView: float mDiameterFactor>;

        $f0 = $f0 * $f5;

        $f0 = $f0 * 0.5F;

        $i2 = $i1 - 1;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (com.android.internal.widget.LockPatternView$Cell) $r6;

        $i2 = $r7.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $f6 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterXForColumn(int)>($i2);

        $i2 = $r7.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $f5 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterYForRow(int)>($i2);

        $r8 = $r0.<com.android.internal.widget.LockPatternView: android.graphics.Rect mInvalidate>;

        $b4 = $f6 cmpg $f1;

        if $b4 >= 0 goto label20;

        $f7 = $f6;

     label12:
        $b4 = $f5 cmpg $f2;

        if $b4 >= 0 goto label21;

        $f8 = $f5;

     label13:
        $f7 = $f7 - $f0;

        $i2 = (int) $f7;

        $f7 = $f8 - $f0;

        $i3 = (int) $f7;

        $f1 = $f1 + $f0;

        $i5 = (int) $f1;

        $f2 = $f2 + $f0;

        $i6 = (int) $f2;

        virtualinvoke $r8.<android.graphics.Rect: void set(int,int,int,int)>($i2, $i3, $i5, $i6);

        $b4 = $f6 cmpg $f4;

        if $b4 >= 0 goto label22;

        $f2 = $f6;

        $f1 = $f4;

     label14:
        $b4 = $f5 cmpg $f3;

        if $b4 >= 0 goto label23;

        $f4 = $f5;

     label15:
        $f2 = $f2 - $f0;

        $i2 = (int) $f2;

        $f2 = $f4 - $f0;

        $i3 = (int) $f2;

        $f2 = $f1 + $f0;

        $i5 = (int) $f2;

        $f2 = $f3 + $f0;

        $i6 = (int) $f2;

        virtualinvoke $r8.<android.graphics.Rect: void union(int,int,int,int)>($i2, $i3, $i5, $i6);

        if $r2 == null goto label18;

        $i2 = $r2.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $f3 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterXForColumn(int)>($i2);

        $i2 = $r2.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $f4 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterYForRow(int)>($i2);

        if $i1 < 2 goto label26;

        $i2 = $i1 - 1;

        $i0 = $i1 - $i0;

        $i0 = $i2 - $i0;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r2 = (com.android.internal.widget.LockPatternView$Cell) $r6;

        $i0 = $r2.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $f2 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterXForColumn(int)>($i0);

        $i0 = $r2.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $f0 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterYForRow(int)>($i0);

        $b4 = $f3 cmpg $f2;

        if $b4 >= 0 goto label24;

        $f1 = $f3;

     label16:
        $b4 = $f4 cmpg $f0;

        if $b4 >= 0 goto label25;

        $f3 = $f4;

     label17:
        $f4 = $r0.<com.android.internal.widget.LockPatternView: float mSquareWidth>;

        $f4 = $f4 / 2.0F;

        $f5 = $r0.<com.android.internal.widget.LockPatternView: float mSquareHeight>;

        $f5 = $f5 / 2.0F;

        $f1 = $f1 - $f4;

        $i0 = (int) $f1;

        $f1 = $f3 - $f5;

        $i1 = (int) $f1;

        $f2 = $f2 + $f4;

        $i2 = (int) $f2;

        $f2 = $f0 + $f5;

        $i3 = (int) $f2;

        virtualinvoke $r8.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

     label18:
        virtualinvoke $r0.<android.view.View: void invalidate(android.graphics.Rect)>($r8);

     label19:
        return 1;

     label20:
        $f7 = $f1;

        $f1 = $f6;

        goto label12;

     label21:
        $f8 = $f2;

        $f2 = $f5;

        goto label13;

     label22:
        $f2 = $f4;

        $f1 = $f6;

        goto label14;

     label23:
        $f4 = $f3;

        $f3 = $f5;

        goto label15;

     label24:
        $f1 = $f2;

        $f2 = $f3;

        goto label16;

     label25:
        $f3 = $f0;

        $f0 = $f4;

        goto label17;

     label26:
        $f2 = $f3;

        $f1 = $f3;

        $f0 = $f4;

        $f3 = $f4;

        goto label17;

     label27:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

        goto label19;

     label28:
        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void resetPattern()>();

        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        if $r3 == null goto label29;

        $r0.<com.android.internal.widget.LockPatternView: boolean mPatternInProgress> = 0;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener>;

        interfaceinvoke $r3.<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternCleared()>();

     label29:
        return 1;
    }

    public void setDisplayMode(com.android.internal.widget.LockPatternView$DisplayMode)
    {
        com.android.internal.widget.LockPatternView $r0;
        com.android.internal.widget.LockPatternView$DisplayMode $r1, $r2;
        java.util.ArrayList $r3;
        int $i0;
        java.lang.IllegalStateException $r4;
        long $l1;
        java.lang.Object $r5;
        com.android.internal.widget.LockPatternView$Cell $r6;
        float $f0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: com.android.internal.widget.LockPatternView$DisplayMode;

        $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$DisplayMode mPatternDisplayMode> = $r1;

        $r2 = <com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode Animate>;

        if $r1 != $r2 goto label2;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("you must have a pattern to animate if you want to set the display mode to animate");

        throw $r4;

     label1:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r0.<com.android.internal.widget.LockPatternView: long mAnimatingPeriodStart> = $l1;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = (com.android.internal.widget.LockPatternView$Cell) $r5;

        $i0 = virtualinvoke $r6.<com.android.internal.widget.LockPatternView$Cell: int getColumn()>();

        $f0 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterXForColumn(int)>($i0);

        $r0.<com.android.internal.widget.LockPatternView: float mInProgressX> = $f0;

        $i0 = virtualinvoke $r6.<com.android.internal.widget.LockPatternView$Cell: int getRow()>();

        $f0 = specialinvoke $r0.<com.android.internal.widget.LockPatternView: float getCenterYForRow(int)>($i0);

        $r0.<com.android.internal.widget.LockPatternView: float mInProgressY> = $f0;

        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void clearPatternDrawLookup()>();

     label2:
        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setInStealthMode(boolean)
    {
        com.android.internal.widget.LockPatternView $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $z0 := @parameter0: boolean;

        $r0.<com.android.internal.widget.LockPatternView: boolean mInStealthMode> = $z0;

        return;
    }

    public void setOnPatternListener(com.android.internal.widget.LockPatternView$OnPatternListener)
    {
        com.android.internal.widget.LockPatternView $r0;
        com.android.internal.widget.LockPatternView$OnPatternListener $r1;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: com.android.internal.widget.LockPatternView$OnPatternListener;

        $r0.<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$OnPatternListener mOnPatternListener> = $r1;

        return;
    }

    public void setPattern(com.android.internal.widget.LockPatternView$DisplayMode, java.util.List)
    {
        com.android.internal.widget.LockPatternView $r0;
        com.android.internal.widget.LockPatternView$DisplayMode $r1;
        java.util.List $r2;
        java.util.ArrayList $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.android.internal.widget.LockPatternView$Cell $r6;
        boolean[][] $r7;
        int $i0;
        boolean[] $r8;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $r1 := @parameter0: com.android.internal.widget.LockPatternView$DisplayMode;

        $r2 := @parameter1: java.util.List;

        $r3 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r3 = $r0.<com.android.internal.widget.LockPatternView: java.util.ArrayList mPattern>;

        virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r2);

        specialinvoke $r0.<com.android.internal.widget.LockPatternView: void clearPatternDrawLookup()>();

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.internal.widget.LockPatternView$Cell) $r5;

        $r7 = $r0.<com.android.internal.widget.LockPatternView: boolean[][] mPatternDrawLookup>;

        $i0 = virtualinvoke $r6.<com.android.internal.widget.LockPatternView$Cell: int getRow()>();

        $r8 = $r7[$i0];

        $i0 = virtualinvoke $r6.<com.android.internal.widget.LockPatternView$Cell: int getColumn()>();

        $r8[$i0] = 1;

        goto label1;

     label2:
        virtualinvoke $r0.<com.android.internal.widget.LockPatternView: void setDisplayMode(com.android.internal.widget.LockPatternView$DisplayMode)>($r1);

        return;
    }

    public void setTactileFeedbackEnabled(boolean)
    {
        com.android.internal.widget.LockPatternView $r0;
        boolean $z0;

        $r0 := @this: com.android.internal.widget.LockPatternView;

        $z0 := @parameter0: boolean;

        $r0.<com.android.internal.widget.LockPatternView: boolean mTactileFeedbackEnabled> = $z0;

        return;
    }
}
