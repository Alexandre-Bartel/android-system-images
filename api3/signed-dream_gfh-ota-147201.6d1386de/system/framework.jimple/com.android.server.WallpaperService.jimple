class com.android.server.WallpaperService extends android.app.IWallpaperService$Stub
{
    private static final java.lang.String HINT_HEIGHT;
    private static final java.lang.String HINT_WIDTH;
    private static final java.lang.String PREFERENCES;
    private static final java.lang.String TAG;
    private static final java.lang.String WALLPAPER;
    private static final java.io.File WALLPAPER_DIR;
    private static final java.io.File WALLPAPER_FILE;
    private final android.os.RemoteCallbackList mCallbacks;
    private final android.content.Context mContext;
    private int mHeight;
    private final android.os.FileObserver mWallpaperObserver;
    private int mWidth;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        java.io.File $r2, $r3;

        <com.android.server.WallpaperService: java.lang.String WALLPAPER> = "wallpaper";

        <com.android.server.WallpaperService: java.lang.String PREFERENCES> = "wallpaper-hints";

        <com.android.server.WallpaperService: java.lang.String HINT_WIDTH> = "hintWidth";

        <com.android.server.WallpaperService: java.lang.String HINT_HEIGHT> = "hintHeight";

        $r1 = class "com/android/server/WallpaperService";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.WallpaperService: java.lang.String TAG> = $r0;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>("/data/data/com.android.settings/files");

        <com.android.server.WallpaperService: java.io.File WALLPAPER_DIR> = $r2;

        $r2 = new java.io.File;

        $r3 = <com.android.server.WallpaperService: java.io.File WALLPAPER_DIR>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "wallpaper");

        <com.android.server.WallpaperService: java.io.File WALLPAPER_FILE> = $r2;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.WallpaperService $r0;
        android.content.Context $r1;
        android.os.RemoteCallbackList $r2;
        com.android.server.WallpaperService$1 $r3;
        java.io.File $r4;
        java.lang.String $r5;
        android.os.FileObserver $r6;
        android.content.SharedPreferences $r7;
        int $i0;

        $r0 := @this: com.android.server.WallpaperService;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.app.IWallpaperService$Stub: void <init>()>();

        $r2 = new android.os.RemoteCallbackList;

        specialinvoke $r2.<android.os.RemoteCallbackList: void <init>()>();

        $r0.<com.android.server.WallpaperService: android.os.RemoteCallbackList mCallbacks> = $r2;

        $r3 = new com.android.server.WallpaperService$1;

        $r4 = <com.android.server.WallpaperService: java.io.File WALLPAPER_DIR>;

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r3.<com.android.server.WallpaperService$1: void <init>(com.android.server.WallpaperService,java.lang.String,int)>($r0, $r5, 264);

        $r0.<com.android.server.WallpaperService: android.os.FileObserver mWallpaperObserver> = $r3;

        $r0.<com.android.server.WallpaperService: int mWidth> = -1;

        $r0.<com.android.server.WallpaperService: int mHeight> = -1;

        $r5 = <com.android.server.WallpaperService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, "WallpaperService startup");

        $r0.<com.android.server.WallpaperService: android.content.Context mContext> = $r1;

        specialinvoke $r0.<com.android.server.WallpaperService: void createFilesDir()>();

        $r6 = $r0.<com.android.server.WallpaperService: android.os.FileObserver mWallpaperObserver>;

        virtualinvoke $r6.<android.os.FileObserver: void startWatching()>();

        $r1 = $r0.<com.android.server.WallpaperService: android.content.Context mContext>;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("wallpaper-hints", 0);

        $i0 = interfaceinvoke $r7.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("hintWidth", -1);

        $r0.<com.android.server.WallpaperService: int mWidth> = $i0;

        $i0 = interfaceinvoke $r7.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("hintHeight", -1);

        $r0.<com.android.server.WallpaperService: int mHeight> = $i0;

        return;
    }

    static java.io.File access$000()
    {
        java.io.File r0;

        r0 = <com.android.server.WallpaperService: java.io.File WALLPAPER_DIR>;

        return r0;
    }

    static java.io.File access$100()
    {
        java.io.File r0;

        r0 = <com.android.server.WallpaperService: java.io.File WALLPAPER_FILE>;

        return r0;
    }

    static void access$200(com.android.server.WallpaperService)
    {
        com.android.server.WallpaperService $r0;

        $r0 := @parameter0: com.android.server.WallpaperService;

        specialinvoke $r0.<com.android.server.WallpaperService: void notifyCallbacks()>();

        return;
    }

    private void checkPermission(java.lang.String)
    {
        com.android.server.WallpaperService $r0;
        java.lang.String $r1;
        android.content.Context $r2;
        int $i0;
        java.lang.SecurityException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.android.server.WallpaperService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.WallpaperService: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>($r1);

        if $i0 == 0 goto label1;

        $r3 = new java.lang.SecurityException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access denied to process: ");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", must have permission ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label1:
        return;
    }

    private void createFilesDir()
    {
        com.android.server.WallpaperService $r0;
        boolean $z0;
        java.io.File $r1;

        $r0 := @this: com.android.server.WallpaperService;

        $r1 = <com.android.server.WallpaperService: java.io.File WALLPAPER_DIR>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r1 = <com.android.server.WallpaperService: java.io.File WALLPAPER_DIR>;

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        return;

     label1:
        return;
    }

    private void notifyCallbacks()
    {
        com.android.server.WallpaperService $r0;
        android.content.Intent $r1;
        android.os.RemoteCallbackList $r2;
        int $i0, $i1;
        android.os.IInterface $r3;
        android.app.IWallpaperServiceCallback $r4;
        android.content.Context $r5;
        android.os.RemoteException $r6;

        $r0 := @this: com.android.server.WallpaperService;

        $r2 = $r0.<com.android.server.WallpaperService: android.os.RemoteCallbackList mCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r0.<com.android.server.WallpaperService: android.os.RemoteCallbackList mCallbacks>;

     label2:
        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i1);

        $r4 = (android.app.IWallpaperServiceCallback) $r3;

        interfaceinvoke $r4.<android.app.IWallpaperServiceCallback: void onWallpaperChanged()>();

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r2 = $r0.<com.android.server.WallpaperService: android.os.RemoteCallbackList mCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.WALLPAPER_CHANGED");

        $r5 = $r0.<com.android.server.WallpaperService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void sendBroadcast(android.content.Intent)>($r1);

        return;

     label5:
        $r6 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public void clearWallpaper()
    {
        com.android.server.WallpaperService $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: com.android.server.WallpaperService;

        $r1 = <com.android.server.WallpaperService: java.io.File WALLPAPER_FILE>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.server.WallpaperService $r0;
        android.os.FileObserver $r1;
        android.os.Binder r2;

        $r0 := @this: com.android.server.WallpaperService;

        r2 = (android.os.Binder) $r0;

        specialinvoke r2.<android.os.Binder: void finalize()>();

        $r1 = $r0.<com.android.server.WallpaperService: android.os.FileObserver mWallpaperObserver>;

        virtualinvoke $r1.<android.os.FileObserver: void stopWatching()>();

        return;
    }

    public int getHeightHint() throws android.os.RemoteException
    {
        com.android.server.WallpaperService $r0;
        int i0;

        $r0 := @this: com.android.server.WallpaperService;

        i0 = $r0.<com.android.server.WallpaperService: int mHeight>;

        return i0;
    }

    public android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperServiceCallback)
    {
        com.android.server.WallpaperService $r0;
        android.app.IWallpaperServiceCallback $r1;
        java.io.File $r2;
        android.os.RemoteCallbackList $r3;
        boolean $z0;
        android.os.ParcelFileDescriptor $r4;
        java.io.FileNotFoundException $r5;
        java.lang.String $r6;
        android.os.IInterface r7;

        $r0 := @this: com.android.server.WallpaperService;

        $r1 := @parameter0: android.app.IWallpaperServiceCallback;

        $r3 = $r0.<com.android.server.WallpaperService: android.os.RemoteCallbackList mCallbacks>;

        r7 = (android.os.IInterface) $r1;

     label1:
        virtualinvoke $r3.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r7);

        $r2 = <com.android.server.WallpaperService: java.io.File WALLPAPER_FILE>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

     label2:
        return null;

     label3:
        $r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r2, 268435456);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = <com.android.server.WallpaperService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Error getting wallpaper", $r5);

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label5;
    }

    public int getWidthHint() throws android.os.RemoteException
    {
        com.android.server.WallpaperService $r0;
        int i0;

        $r0 := @this: com.android.server.WallpaperService;

        i0 = $r0.<com.android.server.WallpaperService: int mWidth>;

        return i0;
    }

    public void setDimensionHints(int, int) throws android.os.RemoteException
    {
        com.android.server.WallpaperService $r0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;

        $r0 := @this: com.android.server.WallpaperService;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<com.android.server.WallpaperService: void checkPermission(java.lang.String)>("android.permission.SET_WALLPAPER_HINTS");

        if $i0 <= 0 goto label1;

        if $i1 > 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("width and height must be > 0");

        throw $r1;

     label2:
        $i2 = $r0.<com.android.server.WallpaperService: int mWidth>;

        if $i0 != $i2 goto label3;

        $i2 = $r0.<com.android.server.WallpaperService: int mHeight>;

        if $i1 == $i2 goto label4;

     label3:
        $r0.<com.android.server.WallpaperService: int mWidth> = $i0;

        $r0.<com.android.server.WallpaperService: int mHeight> = $i1;

        $r2 = $r0.<com.android.server.WallpaperService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("wallpaper-hints", 0);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("hintWidth", $i0);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("hintHeight", $i1);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;

     label4:
        return;
    }

    public android.os.ParcelFileDescriptor setWallpaper()
    {
        com.android.server.WallpaperService $r0;
        android.os.ParcelFileDescriptor $r1;
        java.io.File $r2;
        java.io.FileNotFoundException $r3;
        java.lang.String $r4;

        $r0 := @this: com.android.server.WallpaperService;

        specialinvoke $r0.<com.android.server.WallpaperService: void checkPermission(java.lang.String)>("android.permission.SET_WALLPAPER");

        $r2 = <com.android.server.WallpaperService: java.io.File WALLPAPER_FILE>;

     label1:
        $r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r2, 939524096);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = <com.android.server.WallpaperService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Error setting wallpaper", $r3);

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }
}
