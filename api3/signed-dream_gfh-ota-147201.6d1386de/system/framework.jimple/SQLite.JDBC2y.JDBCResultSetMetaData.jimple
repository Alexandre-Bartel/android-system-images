public class SQLite.JDBC2y.JDBCResultSetMetaData extends java.lang.Object implements java.sql.ResultSetMetaData
{
    private SQLite.JDBC2y.JDBCResultSet r;

    public void <init>(SQLite.JDBC2y.JDBCResultSet)
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        SQLite.JDBC2y.JDBCResultSet $r1;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $r1 := @parameter0: SQLite.JDBC2y.JDBCResultSet;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r> = $r1;

        return;
    }

    int findColByName(java.lang.String) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        java.lang.String $r1, $r5;
        SQLite.JDBC2y.JDBCResultSet $r2;
        SQLite.TableResult $r3;
        int $i0, $i1;
        java.lang.String[] $r4;
        java.sql.SQLException $r6;
        java.lang.StringBuilder $r7;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        if $r2 == null goto label4;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        if $r3 == null goto label4;

        $i0 = 0;

     label1:
        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $i1 = $r3.<SQLite.TableResult: int ncolumns>;

        if $i0 >= $i1 goto label4;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $r4 = $r3.<SQLite.TableResult: java.lang.String[] column>;

        $r5 = $r4[$i0];

        if $r5 == null goto label3;

        $i1 = virtualinvoke $r5.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r1);

        if $i1 != 0 goto label2;

        $i0 = $i0 + 1;

        return $i0;

     label2:
        $i1 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(46);

        if $i1 <= 0 goto label3;

        $i1 = $i1 + 1;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i1);

        $i1 = virtualinvoke $r5.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r1);

        if $i1 != 0 goto label3;

        $i0 = $i0 + 1;

        return $i0;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r6 = new java.sql.SQLException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("column ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.sql.SQLException: void <init>(java.lang.String)>($r1);

        throw $r6;
    }

    public java.lang.String getCatalogName(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getColumnClassName(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0, $i1;
        SQLite.JDBC2y.JDBCResultSet $r1;
        SQLite.TableResult $r2;
        boolean $z0;
        SQLite.JDBC2y.TableResultX $r3;
        int[] $r4;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        $i0 = $i0 + -1;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        if $r1 == null goto label13;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        if $r2 == null goto label13;

        if $i0 < 0 goto label01;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $i1 = $r2.<SQLite.TableResult: int ncolumns>;

        if $i0 < $i1 goto label02;

     label01:
        return null;

     label02:
        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $z0 = $r2 instanceof SQLite.JDBC2y.TableResultX;

        if $z0 == 0 goto label03;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $r3 = (SQLite.JDBC2y.TableResultX) $r2;

        $r4 = $r3.<SQLite.JDBC2y.TableResultX: int[] sql_type>;

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case -5: goto label08;
            case -3: goto label12;
            case -2: goto label12;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label07;
            case 8: goto label06;
            case 91: goto label09;
            case 92: goto label10;
            case 93: goto label11;
            default: goto label03;
        };

     label03:
        return "java.lang.String";

     label04:
        return "java.lang.Short";

     label05:
        return "java.lang.Integer";

     label06:
        return "java.lang.Double";

     label07:
        return "java.lang.Float";

     label08:
        return "java.lang.Long";

     label09:
        return "java.sql.Date";

     label10:
        return "java.sql.Time";

     label11:
        return "java.sql.Timestamp";

     label12:
        return "[B";

     label13:
        return null;
    }

    public int getColumnCount() throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        SQLite.JDBC2y.JDBCResultSet $r1;
        SQLite.TableResult $r2;
        int i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        if $r1 == null goto label1;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        if $r2 == null goto label1;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        i0 = $r2.<SQLite.TableResult: int ncolumns>;

        return i0;

     label1:
        return 0;
    }

    public int getColumnDisplaySize(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 0;
    }

    public java.lang.String getColumnLabel(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0, $i1;
        java.lang.String $r1;
        SQLite.JDBC2y.JDBCResultSet $r2;
        SQLite.TableResult $r3;
        java.lang.String[] $r4;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        $i0 = $i0 + -1;

        $r1 = null;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        if $r2 == null goto label3;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        if $r3 == null goto label3;

        if $i0 < 0 goto label1;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $i1 = $r3.<SQLite.TableResult: int ncolumns>;

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $r4 = $r3.<SQLite.TableResult: java.lang.String[] column>;

        $r1 = $r4[$i0];

     label3:
        return $r1;
    }

    public java.lang.String getColumnName(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0, $i1;
        java.lang.String $r1;
        SQLite.JDBC2y.JDBCResultSet $r2;
        SQLite.TableResult $r3;
        java.lang.String[] $r4;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        $i0 = $i0 + -1;

        $r1 = null;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        if $r2 == null goto label3;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        if $r3 == null goto label3;

        if $i0 < 0 goto label1;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $i1 = $r3.<SQLite.TableResult: int ncolumns>;

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $r4 = $r3.<SQLite.TableResult: java.lang.String[] column>;

        $r1 = $r4[$i0];

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(46);

        if $i0 <= 0 goto label3;

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r1;

     label3:
        return $r1;
    }

    public int getColumnType(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0, $i1;
        SQLite.JDBC2y.JDBCResultSet $r1;
        SQLite.TableResult $r2;
        boolean $z0;
        SQLite.JDBC2y.TableResultX $r3;
        int[] $r4;
        java.sql.SQLException $r5;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        $i0 = $i0 + -1;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        if $r1 == null goto label2;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        if $r2 == null goto label2;

        if $i0 < 0 goto label2;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $i1 = $r2.<SQLite.TableResult: int ncolumns>;

        if $i0 >= $i1 goto label2;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $z0 = $r2 instanceof SQLite.JDBC2y.TableResultX;

        if $z0 == 0 goto label1;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $r3 = (SQLite.JDBC2y.TableResultX) $r2;

        $r4 = $r3.<SQLite.JDBC2y.TableResultX: int[] sql_type>;

        $i0 = $r4[$i0];

        return $i0;

     label1:
        return 12;

     label2:
        $r5 = new java.sql.SQLException;

        specialinvoke $r5.<java.sql.SQLException: void <init>(java.lang.String)>("bad column index");

        throw $r5;
    }

    public java.lang.String getColumnTypeName(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0, $i1;
        SQLite.JDBC2y.JDBCResultSet $r1;
        SQLite.TableResult $r2;
        boolean $z0;
        SQLite.JDBC2y.TableResultX $r3;
        int[] $r4;
        java.sql.SQLException $r5;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        $i0 = $i0 + -1;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        if $r1 == null goto label12;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        if $r2 == null goto label12;

        if $i0 < 0 goto label12;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $i1 = $r2.<SQLite.TableResult: int ncolumns>;

        if $i0 >= $i1 goto label12;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $z0 = $r2 instanceof SQLite.JDBC2y.TableResultX;

        if $z0 == 0 goto label01;

        $r1 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r2 = $r1.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $r3 = (SQLite.JDBC2y.TableResultX) $r2;

        $r4 = $r3.<SQLite.JDBC2y.TableResultX: int[] sql_type>;

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case -5: goto label06;
            case -3: goto label11;
            case -2: goto label10;
            case 4: goto label03;
            case 5: goto label02;
            case 6: goto label05;
            case 8: goto label04;
            case 91: goto label07;
            case 92: goto label08;
            case 93: goto label09;
            default: goto label01;
        };

     label01:
        return "varchar";

     label02:
        return "smallint";

     label03:
        return "integer";

     label04:
        return "double";

     label05:
        return "float";

     label06:
        return "bigint";

     label07:
        return "date";

     label08:
        return "time";

     label09:
        return "timestamp";

     label10:
        return "binary";

     label11:
        return "varbinary";

     label12:
        $r5 = new java.sql.SQLException;

        specialinvoke $r5.<java.sql.SQLException: void <init>(java.lang.String)>("bad column index");

        throw $r5;
    }

    public int getPrecision(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 0;
    }

    public int getScale(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 0;
    }

    public java.lang.String getSchemaName(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getTableName(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0, $i1;
        java.lang.String $r1;
        SQLite.JDBC2y.JDBCResultSet $r2;
        SQLite.TableResult $r3;
        java.lang.String[] $r4;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        $i0 = $i0 + -1;

        $r1 = null;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        if $r2 == null goto label4;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        if $r3 == null goto label4;

        if $i0 < 0 goto label1;

        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $i1 = $r3.<SQLite.TableResult: int ncolumns>;

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = $r0.<SQLite.JDBC2y.JDBCResultSetMetaData: SQLite.JDBC2y.JDBCResultSet r>;

        $r3 = $r2.<SQLite.JDBC2y.JDBCResultSet: SQLite.TableResult tr>;

        $r4 = $r3.<SQLite.TableResult: java.lang.String[] column>;

        $r1 = $r4[$i0];

        if $r1 == null goto label4;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(46);

        if $i0 <= 0 goto label3;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;

     label3:
        $r1 = null;

     label4:
        return $r1;
    }

    public boolean isAutoIncrement(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 0;
    }

    public boolean isCaseSensitive(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 0;
    }

    public boolean isCurrency(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 0;
    }

    public boolean isDefinitelyWritable(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 1;
    }

    public int isNullable(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 2;
    }

    public boolean isReadOnly(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 0;
    }

    public boolean isSearchable(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 1;
    }

    public boolean isSigned(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 0;
    }

    public boolean isWritable(int) throws java.sql.SQLException
    {
        SQLite.JDBC2y.JDBCResultSetMetaData $r0;
        int $i0;

        $r0 := @this: SQLite.JDBC2y.JDBCResultSetMetaData;

        $i0 := @parameter0: int;

        return 1;
    }
}
