final class org.apache.harmony.nio.internal.PipeImpl extends java.nio.channels.Pipe
{
    private int serverPort;
    private org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl sink;
    private org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl source;

    public void <init>() throws java.io.IOException
    {
        org.apache.harmony.nio.internal.PipeImpl $r0;
        org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl $r1;
        java.nio.channels.spi.SelectorProvider $r2;
        org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl $r3;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: org.apache.harmony.nio.internal.PipeImpl;

        specialinvoke $r0.<java.nio.channels.Pipe: void <init>()>();

        $r1 = new org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl;

     label1:
        $r2 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>();

        specialinvoke $r1.<org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl: void <init>(org.apache.harmony.nio.internal.PipeImpl,java.nio.channels.spi.SelectorProvider)>($r0, $r2);

     label2:
        $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl sink> = $r1;

     label3:
        $r3 = new org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl;

        $r2 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>();

        specialinvoke $r3.<org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl: void <init>(org.apache.harmony.nio.internal.PipeImpl,java.nio.channels.spi.SelectorProvider)>($r0, $r2);

     label4:
        $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl source> = $r3;

     label5:
        $r1 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl sink>;

        virtualinvoke $r1.<org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl: boolean finishConnect()>();

        $r3 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl source>;

        virtualinvoke $r3.<org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl: void accept()>();

        $r3 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl source>;

        virtualinvoke $r3.<org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl: void closeServer()>();

     label6:
        return;

     label7:
        $r4 := @caughtexception;

        specialinvoke $r0.<org.apache.harmony.nio.internal.PipeImpl: void reset()>();

        throw $r4;

     label8:
        $r5 := @caughtexception;

        specialinvoke $r0.<org.apache.harmony.nio.internal.PipeImpl: void reset()>();

        throw $r5;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
        catch java.lang.RuntimeException from label1 to label6 with label8;
    }

    static int access$000(org.apache.harmony.nio.internal.PipeImpl)
    {
        org.apache.harmony.nio.internal.PipeImpl $r0;
        int i0;

        $r0 := @parameter0: org.apache.harmony.nio.internal.PipeImpl;

        i0 = $r0.<org.apache.harmony.nio.internal.PipeImpl: int serverPort>;

        return i0;
    }

    static int access$002(org.apache.harmony.nio.internal.PipeImpl, int)
    {
        org.apache.harmony.nio.internal.PipeImpl $r0;
        int $i0;

        $r0 := @parameter0: org.apache.harmony.nio.internal.PipeImpl;

        $i0 := @parameter1: int;

        $r0.<org.apache.harmony.nio.internal.PipeImpl: int serverPort> = $i0;

        return $i0;
    }

    private void reset()
    {
        org.apache.harmony.nio.internal.PipeImpl $r0;
        org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl $r1;
        org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl $r2;
        java.lang.Exception $r3, $r4, $r5;

        $r0 := @this: org.apache.harmony.nio.internal.PipeImpl;

        $r1 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl sink>;

        if $r1 == null goto label2;

     label1:
        $r1 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl sink>;

        virtualinvoke $r1.<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>();

     label2:
        $r2 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl source>;

        if $r2 == null goto label9;

     label3:
        $r2 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl source>;

        virtualinvoke $r2.<org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl: void closeServer()>();

     label4:
        $r2 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl source>;

        virtualinvoke $r2.<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>();

     label5:
        return;

     label6:
        $r3 := @caughtexception;

        return;

     label7:
        $r4 := @caughtexception;

        goto label4;

     label8:
        $r5 := @caughtexception;

        goto label2;

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public java.nio.channels.Pipe$SinkChannel sink()
    {
        org.apache.harmony.nio.internal.PipeImpl $r0;
        org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl r1;

        $r0 := @this: org.apache.harmony.nio.internal.PipeImpl;

        r1 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SinkChannelImpl sink>;

        return r1;
    }

    public java.nio.channels.Pipe$SourceChannel source()
    {
        org.apache.harmony.nio.internal.PipeImpl $r0;
        org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl r1;

        $r0 := @this: org.apache.harmony.nio.internal.PipeImpl;

        r1 = $r0.<org.apache.harmony.nio.internal.PipeImpl: org.apache.harmony.nio.internal.PipeImpl$SourceChannelImpl source>;

        return r1;
    }
}
