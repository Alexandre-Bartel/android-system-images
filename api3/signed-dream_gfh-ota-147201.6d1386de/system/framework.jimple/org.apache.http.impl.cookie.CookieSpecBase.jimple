public abstract class org.apache.http.impl.cookie.CookieSpecBase extends org.apache.http.impl.cookie.AbstractCookieSpec
{

    public void <init>()
    {
        org.apache.http.impl.cookie.CookieSpecBase $r0;

        $r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        specialinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()>();

        return;
    }

    protected static java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        $r1 = virtualinvoke $r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        return $r1;
    }

    protected static java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin $r0;
        java.lang.String $r1;
        int $i0, $i1;

        $r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        $r1 = virtualinvoke $r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(47);

        $i1 = $i0;

        if $i0 < 0 goto label2;

        if $i0 != 0 goto label1;

        $i1 = 1;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r1;

     label2:
        return $r1;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.CookieSpecBase $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.http.cookie.CookieAttributeHandler $r7;

        $r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $r4 = virtualinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.http.cookie.CookieAttributeHandler) $r6;

        $z0 = interfaceinvoke $r7.<org.apache.http.cookie.CookieAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>($r1, $r2);

        if $z0 != 0 goto label3;

        return 0;

     label4:
        return 1;
    }

    protected java.util.List parse(org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.CookieSpecBase $r0;
        org.apache.http.HeaderElement[] $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        org.apache.http.NameValuePair $r3;
        org.apache.http.impl.cookie.BasicClientCookie $r4;
        java.util.ArrayList $r5;
        org.apache.http.HeaderElement $r6;
        int $i0, $i1, $i2;
        java.lang.String $r7, $r8;
        org.apache.http.cookie.MalformedCookieException $r9;
        org.apache.http.NameValuePair[] $r10;
        java.util.Locale $r11;
        org.apache.http.cookie.CookieAttributeHandler $r12;

        $r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        $r1 := @parameter0: org.apache.http.HeaderElement[];

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        $r5 = new java.util.ArrayList;

        $i0 = lengthof $r1;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label7;

        $r6 = $r1[$i1];

        $r7 = interfaceinvoke $r6.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $r8 = interfaceinvoke $r6.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if $r7 == null goto label2;

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i2 != 0 goto label3;

     label2:
        $r9 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r9.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not be empty");

        throw $r9;

     label3:
        $r4 = new org.apache.http.impl.cookie.BasicClientCookie;

        specialinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        $r7 = staticinvoke <org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>($r2);

        virtualinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>($r7);

        $r7 = staticinvoke <org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>($r2);

        virtualinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>($r7);

        $r10 = interfaceinvoke $r6.<org.apache.http.HeaderElement: org.apache.http.NameValuePair[] getParameters()>();

        $i2 = lengthof $r10;

        $i2 = $i2 - 1;

     label4:
        if $i2 < 0 goto label6;

        $r3 = $r10[$i2];

        $r7 = interfaceinvoke $r3.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r11 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r11);

        $r8 = interfaceinvoke $r3.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke $r4.<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>($r7, $r8);

        $r12 = virtualinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>($r7);

        if $r12 == null goto label5;

        $r7 = interfaceinvoke $r3.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r12.<org.apache.http.cookie.CookieAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>($r4, $r7);

     label5:
        $i2 = $i2 + -1;

        goto label4;

     label6:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label7:
        return $r5;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.CookieSpecBase $r0;
        org.apache.http.cookie.Cookie $r1;
        org.apache.http.cookie.CookieOrigin $r2;
        java.lang.IllegalArgumentException $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.http.cookie.CookieAttributeHandler $r7;

        $r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        $r1 := @parameter0: org.apache.http.cookie.Cookie;

        $r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $r4 = virtualinvoke $r0.<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.http.cookie.CookieAttributeHandler) $r6;

        interfaceinvoke $r7.<org.apache.http.cookie.CookieAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>($r1, $r2);

        goto label3;

     label4:
        return;
    }
}
