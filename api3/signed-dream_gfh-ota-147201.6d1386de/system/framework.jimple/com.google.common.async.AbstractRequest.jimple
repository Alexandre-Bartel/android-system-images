public abstract class com.google.common.async.AbstractRequest extends java.lang.Object implements com.google.common.async.AsyncRequest
{
    private java.lang.Exception exception;
    private int state;
    private com.google.common.task.AbstractTask task;

    public void <init>()
    {
        com.google.common.async.AbstractRequest $r0;

        $r0 := @this: com.google.common.async.AbstractRequest;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.common.async.AbstractRequest: int state> = 0;

        return;
    }

    private void scheduleTask()
    {
        com.google.common.async.AbstractRequest $r0;
        com.google.common.task.AbstractTask $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.common.async.AbstractRequest: com.google.common.task.AbstractTask task>;

        if $r1 == null goto label2;

        $r1 = $r0.<com.google.common.async.AbstractRequest: com.google.common.task.AbstractTask task>;

        virtualinvoke $r1.<com.google.common.task.AbstractTask: void schedule()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void setException(java.lang.Exception)
    {
        com.google.common.async.AbstractRequest $r0;
        java.lang.Exception $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.async.AbstractRequest;

        $r1 := @parameter0: java.lang.Exception;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.async.AbstractRequest: java.lang.Exception exception> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void setState(int)
    {
        com.google.common.async.AbstractRequest $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.async.AbstractRequest;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.async.AbstractRequest: int state> = $i0;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void checkCompleted()
    {
        com.google.common.async.AbstractRequest $r0;
        int $i0;
        java.lang.IllegalStateException $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.async.AbstractRequest: int state>;

        if $i0 == 2 goto label3;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("state != STATE_COMPLETED");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

     label3:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public void close()
    {
        com.google.common.async.AbstractRequest $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.google.common.async.AbstractRequest: void notifyClosed()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Exception getException()
    {
        com.google.common.async.AbstractRequest $r0;
        java.lang.Throwable $r1;
        java.lang.Exception r2;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        r2 = $r0.<com.google.common.async.AbstractRequest: java.lang.Exception exception>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getState()
    {
        com.google.common.async.AbstractRequest $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        i0 = $r0.<com.google.common.async.AbstractRequest: int state>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean hasException()
    {
        com.google.common.async.AbstractRequest $r0;
        java.lang.Exception $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.google.common.async.AbstractRequest: java.lang.Exception exception>;

     label2:
        if $r1 == null goto label4;

        $z0 = 1;

     label3:
        exitmonitor $r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public boolean isCompletedOrException()
    {
        com.google.common.async.AbstractRequest $r0;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        $i0 = $r0.<com.google.common.async.AbstractRequest: int state>;

        if $i0 == 2 goto label3;

        $i0 = $r0.<com.google.common.async.AbstractRequest: int state>;

     label2:
        if $i0 != 3 goto label5;

     label3:
        $z0 = 1;

     label4:
        exitmonitor $r0;

        return $z0;

     label5:
        $z0 = 0;

        goto label4;

     label6:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label6;
    }

    protected void notifyClosed()
    {
        com.google.common.async.AbstractRequest $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<com.google.common.async.AbstractRequest: void setState(int)>(4);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void notifyCompleted()
    {
        com.google.common.async.AbstractRequest $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<com.google.common.async.AbstractRequest: void setState(int)>(2);

        specialinvoke $r0.<com.google.common.async.AbstractRequest: void scheduleTask()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void notifyException(java.lang.Exception)
    {
        com.google.common.async.AbstractRequest $r0;
        java.lang.Exception $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.async.AbstractRequest;

        $r1 := @parameter0: java.lang.Exception;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<com.google.common.async.AbstractRequest: void setState(int)>(3);

        specialinvoke $r0.<com.google.common.async.AbstractRequest: void setException(java.lang.Exception)>($r1);

        specialinvoke $r0.<com.google.common.async.AbstractRequest: void scheduleTask()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void notifyRunning()
    {
        com.google.common.async.AbstractRequest $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.common.async.AbstractRequest;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<com.google.common.async.AbstractRequest: void setState(int)>(1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void setTask(com.google.common.task.AbstractTask)
    {
        com.google.common.async.AbstractRequest $r0;
        com.google.common.task.AbstractTask $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.google.common.async.AbstractRequest;

        $r1 := @parameter0: com.google.common.task.AbstractTask;

        entermonitor $r0;

     label1:
        $r0.<com.google.common.async.AbstractRequest: com.google.common.task.AbstractTask task> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
