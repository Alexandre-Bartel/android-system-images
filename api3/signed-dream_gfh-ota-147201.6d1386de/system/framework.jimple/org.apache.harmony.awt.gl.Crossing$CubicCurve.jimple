public class org.apache.harmony.awt.gl.Crossing$CubicCurve extends java.lang.Object
{
    double Ax;
    double Ax3;
    double Ay;
    double Bx;
    double Bx2;
    double By;
    double Cx;
    double Cy;
    double ax;
    double ay;
    double bx;
    double by;
    double cx;
    double cy;

    public void <init>(double, double, double, double, double, double, double, double)
    {
        org.apache.harmony.awt.gl.Crossing$CubicCurve $r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        $r0 := @this: org.apache.harmony.awt.gl.Crossing$CubicCurve;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 := @parameter3: double;

        $d4 := @parameter4: double;

        $d5 := @parameter5: double;

        $d6 := @parameter6: double;

        $d7 := @parameter7: double;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $d6 = $d6 - $d0;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ax> = $d6;

        $d6 = $d7 - $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ay> = $d6;

        $d2 = $d2 - $d0;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx> = $d2;

        $d2 = $d3 - $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double by> = $d2;

        $d0 = $d4 - $d0;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx> = $d0;

        $d0 = $d5 - $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cy> = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

        $d0 = $d0 + $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

        $d0 = $d0 + $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cx> = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $d0 = $d0 + $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $d0 = $d0 + $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cx>;

        $d0 = $d0 - $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cx>;

        $d0 = $d0 - $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx> = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ax>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx>;

        $d0 = $d0 - $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cx>;

        $d0 = $d0 - $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax> = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double by>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double by>;

        $d0 = $d0 + $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double by>;

        $d0 = $d0 + $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cy> = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cy>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cy>;

        $d0 = $d0 + $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cy>;

        $d0 = $d0 + $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cy>;

        $d0 = $d0 - $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cy>;

        $d0 = $d0 - $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double By> = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ay>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double By>;

        $d0 = $d0 - $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cy>;

        $d0 = $d0 - $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ay> = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax>;

        $d0 = $d0 + $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax>;

        $d0 = $d0 + $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax3> = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx>;

        $d0 = $d0 + $d1;

        $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx2> = $d0;

        return;
    }

    int addBound(double[], int, double[], int, double, double, boolean, int)
    {
        org.apache.harmony.awt.gl.Crossing$CubicCurve $r0;
        double[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i5;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0;
        byte $b4;

        $r0 := @this: org.apache.harmony.awt.gl.Crossing$CubicCurve;

        $r1 := @parameter0: double[];

        $i1 := @parameter1: int;

        $r2 := @parameter2: double[];

        $i0 := @parameter3: int;

        $d0 := @parameter4: double;

        $d1 := @parameter5: double;

        $z0 := @parameter6: boolean;

        $i2 := @parameter7: int;

        $i3 = 0;

     label1:
        if $i3 >= $i0 goto label3;

        $d3 = $r2[$i3];

        $b4 = $d3 cmpl -1.0E-5;

        if $b4 <= 0 goto label4;

        $b4 = $d3 cmpg 1.00001;

        if $b4 >= 0 goto label4;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax>;

        $d2 = $d2 * $d3;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx>;

        $d2 = $d2 + $d4;

        $d2 = $d2 * $d3;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cx>;

        $d2 = $d2 + $d4;

        $d2 = $d3 * $d2;

        $b4 = $d0 cmpg $d2;

        if $b4 > 0 goto label4;

        $b4 = $d2 cmpg $d1;

        if $b4 > 0 goto label4;

        $i5 = $i1 + 1;

        $r1[$i1] = $d3;

        $i1 = $i5 + 1;

        $r1[$i5] = $d2;

        $i5 = $i1 + 1;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ay>;

        $d2 = $d2 * $d3;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double By>;

        $d2 = $d2 + $d4;

        $d2 = $d2 * $d3;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cy>;

        $d2 = $d2 + $d4;

        $d3 = $d2 * $d3;

        $r1[$i1] = $d3;

        $i1 = $i5 + 1;

        $d3 = (double) $i2;

        $r1[$i5] = $d3;

        if $z0 == 0 goto label4;

        $i2 = $i2 + 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return $i1;

     label4:
        goto label2;
    }

    int cross(double[], int, double, double)
    {
        org.apache.harmony.awt.gl.Crossing$CubicCurve $r0;
        double[] $r1;
        int $i0, $i1, $i2;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b3;

        $r0 := @this: org.apache.harmony.awt.gl.Crossing$CubicCurve;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $i1 = 0;

        $i2 = 0;

     label01:
        if $i2 >= $i0 goto label15;

        $d3 = $r1[$i2];

        $b3 = $d3 cmpg -1.0E-5;

        if $b3 < 0 goto label02;

        $b3 = $d3 cmpl 1.00001;

        if $b3 <= 0 goto label03;

     label02:
        $i2 = $i2 + 1;

        goto label01;

     label03:
        $b3 = $d3 cmpg 1.0E-5;

        if $b3 >= 0 goto label07;

        $b3 = $d0 cmpg 0.0;

        if $b3 >= 0 goto label02;

        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

        $b3 = $d3 cmpl 0.0;

        if $b3 == 0 goto label05;

        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

     label04:
        $b3 = $d3 cmpg 0.0;

        if $b3 >= 0 goto label02;

        $i1 = $i1 + -1;

        goto label02;

     label05:
        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

        $b3 = $d3 cmpl $d2;

        if $b3 == 0 goto label06;

        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

        $d3 = $d3 - $d2;

        goto label04;

     label06:
        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ax>;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $d3 = $d3 - $d2;

        goto label04;

     label07:
        $b3 = $d3 cmpl 0.99999;

        if $b3 <= 0 goto label11;

        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ay>;

        $b3 = $d0 cmpg $d3;

        if $b3 >= 0 goto label02;

        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ax>;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $b3 = $d3 cmpl $d2;

        if $b3 == 0 goto label09;

        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ax>;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $d3 = $d3 - $d2;

     label08:
        $b3 = $d3 cmpl 0.0;

        if $b3 <= 0 goto label02;

        $i1 = $i1 + 1;

        goto label02;

     label09:
        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

        $b3 = $d3 cmpl $d2;

        if $b3 == 0 goto label10;

        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double cx>;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

        $d3 = $d3 - $d2;

        goto label08;

     label10:
        $d3 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double bx>;

        goto label08;

     label11:
        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ay>;

        $d2 = $d2 * $d3;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double By>;

        $d2 = $d2 + $d4;

        $d2 = $d2 * $d3;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cy>;

        $d2 = $d2 + $d4;

        $d2 = $d3 * $d2;

        $b3 = $d2 cmpl $d1;

        if $b3 <= 0 goto label02;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax3>;

        $d2 = $d2 * $d3;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx2>;

        $d2 = $d2 + $d4;

        $d2 = $d2 * $d3;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cx>;

        $d2 = $d2 + $d4;

        $b3 = $d2 cmpl -1.0E-5;

        if $b3 <= 0 goto label12;

        $b3 = $d2 cmpg 1.0E-5;

        if $b3 >= 0 goto label12;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax3>;

        $d4 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax3>;

        $d2 = $d2 + $d4;

        $d3 = $d2 * $d3;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx2>;

        $d3 = $d3 + $d2;

        $b3 = $d3 cmpg -1.0E-5;

        if $b3 < 0 goto label02;

        $b3 = $d3 cmpl 1.0E-5;

        if $b3 > 0 goto label02;

        $d2 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double ax>;

     label12:
        $b3 = $d2 cmpl 0.0;

        if $b3 <= 0 goto label14;

        $b3 = 1;

     label13:
        $i1 = $i1 + $b3;

        goto label02;

     label14:
        $b3 = -1;

        goto label13;

     label15:
        return $i1;
    }

    int solveExtremX(double[])
    {
        org.apache.harmony.awt.gl.Crossing$CubicCurve $r0;
        double[] $r1, $r2;
        int $i0;
        double $d0;

        $r0 := @this: org.apache.harmony.awt.gl.Crossing$CubicCurve;

        $r1 := @parameter0: double[];

        $r2 = newarray (double)[3];

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cx>;

        $r2[0] = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx2>;

        $r2[1] = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax3>;

        $r2[2] = $d0;

        $i0 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int solveQuad(double[],double[])>($r2, $r1);

        return $i0;
    }

    int solveExtremY(double[])
    {
        org.apache.harmony.awt.gl.Crossing$CubicCurve $r0;
        double[] $r1, $r2;
        int $i0;
        double $d0, $d1;

        $r0 := @this: org.apache.harmony.awt.gl.Crossing$CubicCurve;

        $r1 := @parameter0: double[];

        $r2 = newarray (double)[3];

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cy>;

        $r2[0] = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double By>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double By>;

        $d0 = $d0 + $d1;

        $r2[1] = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ay>;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ay>;

        $d0 = $d0 + $d1;

        $d1 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ay>;

        $d0 = $d0 + $d1;

        $r2[2] = $d0;

        $i0 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int solveQuad(double[],double[])>($r2, $r1);

        return $i0;
    }

    int solvePoint(double[], double)
    {
        org.apache.harmony.awt.gl.Crossing$CubicCurve $r0;
        double[] $r1, $r2;
        double $d0;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.Crossing$CubicCurve;

        $r1 := @parameter0: double[];

        $d0 := @parameter1: double;

        $r2 = newarray (double)[4];

        $d0 = neg $d0;

        $r2[0] = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Cx>;

        $r2[1] = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Bx>;

        $r2[2] = $d0;

        $d0 = $r0.<org.apache.harmony.awt.gl.Crossing$CubicCurve: double Ax>;

        $r2[3] = $d0;

        $i0 = staticinvoke <org.apache.harmony.awt.gl.Crossing: int solveCubic(double[],double[])>($r2, $r1);

        return $i0;
    }
}
