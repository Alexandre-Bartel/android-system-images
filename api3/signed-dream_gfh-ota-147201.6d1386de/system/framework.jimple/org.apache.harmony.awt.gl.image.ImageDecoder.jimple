public abstract class org.apache.harmony.awt.gl.image.ImageDecoder extends java.lang.Object
{
    public static final int GENERIC_DECODER;
    public static final int GIF_DECODER;
    public static final int JPG_DECODER;
    private static final int MAX_BYTES_IN_SIGNATURE;
    public static final int PNG_DECODER;
    protected java.util.List consumers;
    protected java.io.InputStream inputStream;
    protected org.apache.harmony.awt.gl.image.DecodingImageSource src;
    protected boolean terminated;

    protected void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource, java.io.InputStream)
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r1;
        java.io.InputStream $r2;
        java.util.List $r3;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        $r1 := @parameter0: org.apache.harmony.awt.gl.image.DecodingImageSource;

        $r2 := @parameter1: java.io.InputStream;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.DecodingImageSource src> = $r1;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.DecodingImageSource src>;

        $r3 = $r1.<org.apache.harmony.awt.gl.image.DecodingImageSource: java.util.List consumers>;

        $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.util.List consumers> = $r3;

        $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.io.InputStream inputStream> = $r2;

        return;
    }

    static org.apache.harmony.awt.gl.image.ImageDecoder createDecoder(org.apache.harmony.awt.gl.image.DecodingImageSource, java.io.InputStream)
    {
        org.apache.harmony.awt.gl.image.DecodingImageSource $r0;
        java.io.InputStream $r1, $r3;
        byte[] $r2;
        boolean $z0;
        byte $b0;
        short $s1;
        org.apache.harmony.awt.gl.image.ImageDecoder $r4;
        java.io.IOException $r5;
        java.io.BufferedInputStream r6;

        $r0 := @parameter0: org.apache.harmony.awt.gl.image.DecodingImageSource;

        $r1 := @parameter1: java.io.InputStream;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label05;

        r6 = new java.io.BufferedInputStream;

        $r3 = r6;

        specialinvoke r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r1, 8192);

     label01:
        virtualinvoke $r3.<java.io.InputStream: void mark(int)>(8);

        $r2 = newarray (byte)[8];

        virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, 8);

        virtualinvoke $r3.<java.io.InputStream: void reset()>();

     label02:
        $b0 = $r2[0];

        $s1 = $b0 & 255;

        if $s1 != 255 goto label07;

        $b0 = $r2[1];

        $s1 = $b0 & 255;

        if $s1 != 216 goto label07;

        $b0 = $r2[2];

        $s1 = $b0 & 255;

     label03:
        if $s1 != 255 goto label07;

        $r4 = staticinvoke <org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.ImageDecoder loadDecoder(int,org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>(3, $r0, $r1);

     label04:
        return $r4;

     label05:
        $r3 = $r1;

     label06:
        goto label01;

     label07:
        $b0 = $r2[0];

        $s1 = $b0 & 255;

        if $s1 != 71 goto label10;

        $b0 = $r2[1];

        $s1 = $b0 & 255;

        if $s1 != 73 goto label10;

        $b0 = $r2[2];

        $s1 = $b0 & 255;

     label08:
        if $s1 != 70 goto label10;

        $r4 = staticinvoke <org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.ImageDecoder loadDecoder(int,org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>(2, $r0, $r1);

     label09:
        return $r4;

     label10:
        $b0 = $r2[0];

        $s1 = $b0 & 255;

     label11:
        if $s1 != 137 goto label27;

     label12:
        $b0 = $r2[1];

        $s1 = $b0 & 255;

     label13:
        if $s1 != 80 goto label27;

     label14:
        $b0 = $r2[2];

        $s1 = $b0 & 255;

     label15:
        if $s1 != 78 goto label27;

     label16:
        $b0 = $r2[3];

        $s1 = $b0 & 255;

     label17:
        if $s1 != 71 goto label27;

     label18:
        $b0 = $r2[4];

        $s1 = $b0 & 255;

     label19:
        if $s1 != 13 goto label27;

     label20:
        $b0 = $r2[5];

        $s1 = $b0 & 255;

     label21:
        if $s1 != 10 goto label27;

     label22:
        $b0 = $r2[6];

        $s1 = $b0 & 255;

     label23:
        if $s1 != 26 goto label27;

     label24:
        $b0 = $r2[7];

        $s1 = $b0 & 255;

     label25:
        if $s1 != 10 goto label27;

        $r4 = staticinvoke <org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.ImageDecoder loadDecoder(int,org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>(1, $r0, $r1);

     label26:
        return $r4;

     label27:
        $r4 = staticinvoke <org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.ImageDecoder loadDecoder(int,org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>(0, $r0, $r1);

     label28:
        return $r4;

     label29:
        $r5 := @caughtexception;

        return null;

        catch java.io.IOException from label01 to label02 with label29;
        catch java.io.IOException from label03 to label04 with label29;
        catch java.io.IOException from label06 to label07 with label29;
        catch java.io.IOException from label08 to label09 with label29;
        catch java.io.IOException from label11 to label12 with label29;
        catch java.io.IOException from label13 to label14 with label29;
        catch java.io.IOException from label15 to label16 with label29;
        catch java.io.IOException from label17 to label18 with label29;
        catch java.io.IOException from label19 to label20 with label29;
        catch java.io.IOException from label21 to label22 with label29;
        catch java.io.IOException from label23 to label24 with label29;
        catch java.io.IOException from label25 to label26 with label29;
        catch java.io.IOException from label27 to label28 with label29;
    }

    private static org.apache.harmony.awt.gl.image.ImageDecoder loadDecoder(int, org.apache.harmony.awt.gl.image.DecodingImageSource, java.io.InputStream)
    {
        int $i0;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r0;
        java.io.InputStream $r1;
        com.android.internal.awt.AndroidImageDecoder $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: org.apache.harmony.awt.gl.image.DecodingImageSource;

        $r1 := @parameter2: java.io.InputStream;

        $r2 = new com.android.internal.awt.AndroidImageDecoder;

        specialinvoke $r2.<com.android.internal.awt.AndroidImageDecoder: void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>($r0, $r1);

        return $r2;
    }

    public void closeStream()
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        java.io.InputStream $r1;
        java.lang.Throwable $r2;
        java.io.IOException $r3;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        entermonitor $r0;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.io.InputStream inputStream>;

     label2:
        if $r1 == null goto label5;

     label3:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.io.InputStream inputStream>;

     label4:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label5:
        exitmonitor $r0;

        return;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

     label7:
        $r3 := @caughtexception;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.io.IOException from label4 to label5 with label7;
        catch java.lang.Throwable from label3 to label5 with label6;
    }

    public abstract void decodeImage() throws java.io.IOException;

    protected void imageComplete(int)
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        int $i0;
        boolean $z0;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.awt.image.ImageConsumer $r5;
        java.util.ConcurrentModificationException $r6;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        $i0 := @parameter0: int;

        $z0 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: boolean terminated>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.DecodingImageSource src>;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.image.DecodingImageSource: void lockDecoder(org.apache.harmony.awt.gl.image.ImageDecoder)>($r0);

        $r2 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.util.List consumers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

     label3:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

     label4:
        $r5 = (java.awt.image.ImageConsumer) $r4;

        interfaceinvoke $r5.<java.awt.image.ImageConsumer: void imageComplete(int)>($i0);

        goto label2;

     label5:
        $r6 := @caughtexception;

        $r2 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.util.List consumers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label6:
        return;

        catch java.util.ConcurrentModificationException from label3 to label4 with label5;
    }

    protected void setColorModel(java.awt.image.ColorModel)
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        java.awt.image.ColorModel $r1;
        boolean $z0;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.awt.image.ImageConsumer $r5;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        $r1 := @parameter0: java.awt.image.ColorModel;

        $z0 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: boolean terminated>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.util.List consumers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.awt.image.ImageConsumer) $r4;

        interfaceinvoke $r5.<java.awt.image.ImageConsumer: void setColorModel(java.awt.image.ColorModel)>($r1);

        goto label2;

     label3:
        return;
    }

    protected void setDimensions(int, int)
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.awt.image.ImageConsumer $r4;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: boolean terminated>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.util.List consumers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.awt.image.ImageConsumer) $r3;

        interfaceinvoke $r4.<java.awt.image.ImageConsumer: void setDimensions(int,int)>($i0, $i1);

        goto label2;

     label3:
        return;
    }

    protected void setHints(int)
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.awt.image.ImageConsumer $r4;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        $i0 := @parameter0: int;

        $z0 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: boolean terminated>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.util.List consumers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.awt.image.ImageConsumer) $r3;

        interfaceinvoke $r4.<java.awt.image.ImageConsumer: void setHints(int)>($i0);

        goto label2;

     label3:
        return;
    }

    protected void setPixels(int, int, int, int, java.awt.image.ColorModel, byte[], int, int)
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.awt.image.ColorModel $r1;
        byte[] $r2;
        boolean $z0;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.awt.image.ImageConsumer $r7;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: java.awt.image.ColorModel;

        $r2 := @parameter5: byte[];

        $i4 := @parameter6: int;

        $i5 := @parameter7: int;

        $z0 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: boolean terminated>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.DecodingImageSource src>;

        virtualinvoke $r3.<org.apache.harmony.awt.gl.image.DecodingImageSource: void lockDecoder(org.apache.harmony.awt.gl.image.ImageDecoder)>($r0);

        $r4 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.util.List consumers>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.awt.image.ImageConsumer) $r6;

        interfaceinvoke $r7.<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>($i0, $i1, $i2, $i3, $r1, $r2, $i4, $i5);

        goto label2;

     label3:
        return;
    }

    protected void setPixels(int, int, int, int, java.awt.image.ColorModel, int[], int, int)
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.awt.image.ColorModel $r1;
        int[] $r2;
        boolean $z0;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.awt.image.ImageConsumer $r7;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: java.awt.image.ColorModel;

        $r2 := @parameter5: int[];

        $i4 := @parameter6: int;

        $i5 := @parameter7: int;

        $z0 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: boolean terminated>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.DecodingImageSource src>;

        virtualinvoke $r3.<org.apache.harmony.awt.gl.image.DecodingImageSource: void lockDecoder(org.apache.harmony.awt.gl.image.ImageDecoder)>($r0);

        $r4 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.util.List consumers>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.awt.image.ImageConsumer) $r6;

        interfaceinvoke $r7.<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>($i0, $i1, $i2, $i3, $r1, $r2, $i4, $i5);

        goto label2;

     label3:
        return;
    }

    protected void setProperties(java.util.Hashtable)
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        java.util.Hashtable $r1;
        boolean $z0;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.awt.image.ImageConsumer $r5;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        $r1 := @parameter0: java.util.Hashtable;

        $z0 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: boolean terminated>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.util.List consumers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.awt.image.ImageConsumer) $r4;

        interfaceinvoke $r5.<java.awt.image.ImageConsumer: void setProperties(java.util.Hashtable)>($r1);

        goto label2;

     label3:
        return;
    }

    public void terminate()
    {
        org.apache.harmony.awt.gl.image.ImageDecoder $r0;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r1;
        org.apache.harmony.awt.gl.image.ImageDecoder$1 $r2;

        $r0 := @this: org.apache.harmony.awt.gl.image.ImageDecoder;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: org.apache.harmony.awt.gl.image.DecodingImageSource src>;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.image.DecodingImageSource: void lockDecoder(org.apache.harmony.awt.gl.image.ImageDecoder)>($r0);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void closeStream()>();

        $r2 = new org.apache.harmony.awt.gl.image.ImageDecoder$1;

        specialinvoke $r2.<org.apache.harmony.awt.gl.image.ImageDecoder$1: void <init>(org.apache.harmony.awt.gl.image.ImageDecoder)>($r0);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);

        $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: boolean terminated> = 1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.awt.gl.image.ImageDecoder: int PNG_DECODER> = 3;

        <org.apache.harmony.awt.gl.image.ImageDecoder: int MAX_BYTES_IN_SIGNATURE> = 8;

        <org.apache.harmony.awt.gl.image.ImageDecoder: int JPG_DECODER> = 1;

        <org.apache.harmony.awt.gl.image.ImageDecoder: int GIF_DECODER> = 2;

        <org.apache.harmony.awt.gl.image.ImageDecoder: int GENERIC_DECODER> = 0;

        return;
    }
}
