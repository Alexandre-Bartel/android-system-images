public class org.apache.harmony.awt.gl.font.CaretManager extends java.lang.Object
{
    private org.apache.harmony.awt.gl.font.TextRunBreaker breaker;

    public void <init>(org.apache.harmony.awt.gl.font.TextRunBreaker)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: org.apache.harmony.awt.gl.font.TextRunBreaker;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker> = $r1;

        return;
    }

    private void checkHit(java.awt.font.TextHitInfo)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1;
        int $i0, $i1;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        $i0 = virtualinvoke $r1.<java.awt.font.TextHitInfo: int getInsertionIndex()>();

        if $i0 < 0 goto label1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        if $i0 <= $i1 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.42");

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        return;
    }

    private java.awt.font.TextHitInfo getHitInfoFromVisual(int)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        int $i0, $i1;
        boolean $z0;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r1;
        byte $b2;
        java.awt.font.TextHitInfo $r2;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 != 0 goto label4;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r1.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        if $i0 == $i1 goto label4;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>($i0);

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $b2 = virtualinvoke $r1.<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>($i0);

        $b2 = $b2 & 1;

        if $b2 != 0 goto label3;

        $r2 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo leading(int)>($i0);

        return $r2;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $r2 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo trailing(int)>($i0);

        return $r2;

     label4:
        if $z0 == 0 goto label6;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $z0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean isLTR()>();

        if $z0 == 0 goto label5;

        $r2 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo trailing(int)>(-1);

        return $r2;

     label5:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        $r2 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo leading(int)>($i0);

        return $r2;

     label6:
        $r1 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $z0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean isLTR()>();

        if $z0 == 0 goto label7;

        $r1 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r1.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        $r2 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo leading(int)>($i0);

        return $r2;

     label7:
        $r2 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo trailing(int)>(-1);

        return $r2;
    }

    private int getVisualFromHitInfo(java.awt.font.TextHitInfo)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1;
        int $i0, $i1, $i2;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r2;
        boolean $z0, $z1;
        byte $b3;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        $i0 = virtualinvoke $r1.<java.awt.font.TextHitInfo: int getCharIndex()>();

        if $i0 < 0 goto label4;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        if $i0 >= $i1 goto label4;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getVisualFromLogical(int)>($i0);

        $i2 = $i1;

        $z0 = virtualinvoke $r1.<java.awt.font.TextHitInfo: boolean isLeadingEdge()>();

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $b3 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>($i0);

        $b3 = $b3 & 1;

        if $b3 != 0 goto label3;

        $z1 = 1;

     label1:
        $z0 = $z0 ^ $z1;

        if $z0 == 0 goto label2;

        $i2 = $i1 + 1;

     label2:
        return $i2;

     label3:
        $z1 = 0;

        goto label1;

     label4:
        if $i0 >= 0 goto label6;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $z0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean isLTR()>();

        if $z0 == 0 goto label5;

        return 0;

     label5:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        return $i0;

     label6:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $z0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean isLTR()>();

        if $z0 == 0 goto label7;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        return $i0;

     label7:
        return 0;
    }

    java.awt.geom.GeneralPath connectCarets(java.awt.geom.Line2D, java.awt.geom.Line2D)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.geom.Line2D $r1, $r2;
        java.awt.geom.GeneralPath $r3;
        double $d0;
        float $f0, $f1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.geom.Line2D;

        $r2 := @parameter1: java.awt.geom.Line2D;

        $r3 = new java.awt.geom.GeneralPath;

        specialinvoke $r3.<java.awt.geom.GeneralPath: void <init>(int)>(1);

        $d0 = virtualinvoke $r1.<java.awt.geom.Line2D: double getX1()>();

        $f0 = (float) $d0;

        $d0 = virtualinvoke $r1.<java.awt.geom.Line2D: double getY1()>();

        $f1 = (float) $d0;

        virtualinvoke $r3.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f0, $f1);

        $d0 = virtualinvoke $r2.<java.awt.geom.Line2D: double getX1()>();

        $f0 = (float) $d0;

        $d0 = virtualinvoke $r2.<java.awt.geom.Line2D: double getY1()>();

        $f1 = (float) $d0;

        virtualinvoke $r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f0, $f1);

        $d0 = virtualinvoke $r2.<java.awt.geom.Line2D: double getX2()>();

        $f0 = (float) $d0;

        $d0 = virtualinvoke $r2.<java.awt.geom.Line2D: double getY2()>();

        $f1 = (float) $d0;

        virtualinvoke $r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f0, $f1);

        $d0 = virtualinvoke $r1.<java.awt.geom.Line2D: double getX2()>();

        $f0 = (float) $d0;

        $d0 = virtualinvoke $r1.<java.awt.geom.Line2D: double getY2()>();

        $f1 = (float) $d0;

        virtualinvoke $r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f0, $f1);

        virtualinvoke $r3.<java.awt.geom.GeneralPath: void closePath()>();

        return $r3;
    }

    public float[] getCaretInfo(java.awt.font.TextHitInfo)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1;
        float[] $r2;
        int $i0, $i1;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r3;
        int[] $r4;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        org.apache.harmony.awt.gl.font.TextRunSegment $r7;
        float $f0, $f1;
        org.apache.harmony.awt.gl.font.BasicMetrics $r8;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: void checkHit(java.awt.font.TextHitInfo)>($r1);

        $r2 = newarray (float)[2];

        $i0 = specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: int getVisualFromHitInfo(java.awt.font.TextHitInfo)>($r1);

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        if $i0 >= $i1 goto label2;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>($i0);

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i1 = $r4[$i0];

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r5 = $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: java.util.ArrayList runSegments>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (org.apache.harmony.awt.gl.font.TextRunSegment) $r6;

        $f0 = $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $i1 = virtualinvoke $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: int getStart()>();

        $f1 = virtualinvoke $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: float getAdvanceDelta(int,int)>($i1, $i0);

        $f0 = $f0 + $f1;

        $r8 = $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f1 = $r8.<org.apache.harmony.awt.gl.font.BasicMetrics: float italicAngle>;

     label1:
        $r8 = $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f1 = $r8.<org.apache.harmony.awt.gl.font.BasicMetrics: float italicAngle>;

        $r2[0] = $f0;

        $r2[1] = $f1;

        return $r2;

     label2:
        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = $i0 - 1;

        $i0 = virtualinvoke $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>($i0);

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i1 = $r4[$i0];

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r5 = $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: java.util.ArrayList runSegments>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (org.apache.harmony.awt.gl.font.TextRunSegment) $r6;

        $f0 = $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: float x>;

        $i1 = virtualinvoke $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: int getStart()>();

        $i0 = $i0 + 1;

        $f1 = virtualinvoke $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: float getAdvanceDelta(int,int)>($i1, $i0);

        $f0 = $f0 + $f1;

        goto label1;
    }

    public java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo, java.awt.font.TextLayout)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1;
        java.awt.font.TextLayout $r2;
        java.awt.geom.Line2D $r3;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        $r2 := @parameter1: java.awt.font.TextLayout;

        $r3 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo,java.awt.font.TextLayout,boolean,boolean,java.awt.geom.Rectangle2D)>($r1, $r2, 1, 0, null);

        return $r3;
    }

    public java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo, java.awt.font.TextLayout, boolean, boolean, java.awt.geom.Rectangle2D)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1;
        java.awt.font.TextLayout $r2;
        boolean $z0, $z1, $z2;
        java.awt.geom.Rectangle2D $r3;
        int $i0, $i1;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r4;
        java.util.ArrayList $r5;
        int[] $r6;
        java.lang.Object $r7;
        org.apache.harmony.awt.gl.font.TextRunSegment $r8;
        org.apache.harmony.awt.gl.font.BasicMetrics $r9;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1;
        byte $b2;
        java.awt.geom.Line2D$Float $r10;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        $r2 := @parameter1: java.awt.font.TextLayout;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r3 := @parameter4: java.awt.geom.Rectangle2D;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: void checkHit(java.awt.font.TextHitInfo)>($r1);

        $i0 = virtualinvoke $r1.<java.awt.font.TextHitInfo: int getCharIndex()>();

        if $i0 < 0 goto label06;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r4.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        if $i0 >= $i1 goto label06;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r5 = $r4.<org.apache.harmony.awt.gl.font.TextRunBreaker: java.util.ArrayList runSegments>;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r6 = $r4.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i1 = $r6[$i0];

        $r7 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r8 = (org.apache.harmony.awt.gl.font.TextRunSegment) $r7;

        $r9 = $r8.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f0 = $r9.<org.apache.harmony.awt.gl.font.BasicMetrics: float descent>;

        $r9 = $r8.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f1 = $r9.<org.apache.harmony.awt.gl.font.BasicMetrics: float ascent>;

        $f1 = neg $f1;

        $r9 = $r8.<org.apache.harmony.awt.gl.font.TextRunSegment: org.apache.harmony.awt.gl.font.BasicMetrics metrics>;

        $f2 = $r9.<org.apache.harmony.awt.gl.font.BasicMetrics: float leading>;

        $f1 = $f1 - $f2;

        $f2 = virtualinvoke $r8.<org.apache.harmony.awt.gl.font.TextRunSegment: float getCharPosition(int)>($i0);

        $z0 = virtualinvoke $r1.<java.awt.font.TextHitInfo: boolean isLeadingEdge()>();

        if $z0 == 0 goto label05;

        $f3 = 0.0F;

     label01:
        $f2 = $f2 + $f3;

        $f3 = $f2;

     label02:
        if $z1 == 0 goto label04;

        $d0 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMaxY()>();

        $f0 = (float) $d0;

        $d0 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMinY()>();

        $f1 = (float) $d0;

        $d0 = (double) $f2;

        $d1 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMaxX()>();

        $b2 = $d0 cmpl $d1;

        if $b2 <= 0 goto label03;

        $d0 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMaxX()>();

        $f2 = (float) $d0;

        $f3 = $f2;

     label03:
        $d0 = (double) $f3;

        $d1 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMinX()>();

        $b2 = $d0 cmpg $d1;

        if $b2 >= 0 goto label04;

        $d0 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMinX()>();

        $f2 = (float) $d0;

        $f3 = $f2;

     label04:
        $r10 = new java.awt.geom.Line2D$Float;

        specialinvoke $r10.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>($f3, $f0, $f2, $f1);

        return $r10;

     label05:
        $f3 = virtualinvoke $r8.<org.apache.harmony.awt.gl.font.TextRunSegment: float getCharAdvance(int)>($i0);

        goto label01;

     label06:
        $f0 = virtualinvoke $r2.<java.awt.font.TextLayout: float getDescent()>();

        $f1 = virtualinvoke $r2.<java.awt.font.TextLayout: float getAscent()>();

        $f1 = neg $f1;

        $f2 = virtualinvoke $r2.<java.awt.font.TextLayout: float getLeading()>();

        $f1 = $f1 - $f2;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r4.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getBaseLevel()>();

        $i1 = $i1 & 1;

        if $i1 != 0 goto label10;

        $z0 = 1;

     label07:
        if $i0 >= 0 goto label11;

        $z2 = 1;

     label08:
        $z0 = $z0 ^ $z2;

        if $z0 == 0 goto label12;

        $f2 = virtualinvoke $r2.<java.awt.font.TextLayout: float getAdvance()>();

     label09:
        $f3 = $f2;

        goto label02;

     label10:
        $z0 = 0;

        goto label07;

     label11:
        $z2 = 0;

        goto label08;

     label12:
        $f2 = 0.0F;

        goto label09;
    }

    public java.awt.Shape[] getCaretShapes(int, java.awt.geom.Rectangle2D, java.awt.font.TextLayout$CaretPolicy, java.awt.font.TextLayout)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        int $i0, $i1;
        java.awt.geom.Rectangle2D $r1;
        java.awt.font.TextLayout$CaretPolicy $r2;
        java.awt.font.TextLayout $r3;
        java.awt.font.TextHitInfo $r4, $r5;
        java.awt.geom.Line2D $r6, $r8;
        java.awt.Shape[] $r7;
        boolean $z0;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.awt.geom.Rectangle2D;

        $r2 := @parameter2: java.awt.font.TextLayout$CaretPolicy;

        $r3 := @parameter3: java.awt.font.TextLayout;

        $r4 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo afterOffset(int)>($i0);

        $r5 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.font.TextHitInfo getVisualOtherHit(java.awt.font.TextHitInfo)>($r4);

        $r6 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo,java.awt.font.TextLayout)>($r4, $r3);

        $i0 = specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: int getVisualFromHitInfo(java.awt.font.TextHitInfo)>($r4);

        $i1 = specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: int getVisualFromHitInfo(java.awt.font.TextHitInfo)>($r5);

        if $i0 != $i1 goto label1;

        $r7 = newarray (java.awt.Shape)[2];

        $r7[0] = $r6;

        $r7[1] = null;

        return $r7;

     label1:
        $r8 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo,java.awt.font.TextLayout)>($r5, $r3);

        $r5 = virtualinvoke $r2.<java.awt.font.TextLayout$CaretPolicy: java.awt.font.TextHitInfo getStrongCaret(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo,java.awt.font.TextLayout)>($r4, $r5, $r3);

        $z0 = virtualinvoke $r5.<java.awt.font.TextHitInfo: boolean equals(java.awt.font.TextHitInfo)>($r4);

        if $z0 == 0 goto label2;

        $r7 = newarray (java.awt.Shape)[2];

        $r7[0] = $r6;

        $r7[1] = $r8;

        return $r7;

     label2:
        $r7 = newarray (java.awt.Shape)[2];

        $r7[0] = $r8;

        $r7[1] = $r6;

        return $r7;
    }

    public java.awt.Shape getLogicalHighlightShape(int, int, java.awt.geom.Rectangle2D, java.awt.font.TextLayout)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        int $i0, $i1, $i2;
        java.awt.geom.Rectangle2D $r1;
        java.awt.font.TextLayout $r2;
        java.awt.geom.GeneralPath $r3, $r9;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r4;
        java.awt.font.TextHitInfo $r5, $r6;
        java.awt.geom.Line2D $r7, $r8;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.awt.geom.Rectangle2D;

        $r2 := @parameter3: java.awt.font.TextLayout;

        $r3 = new java.awt.geom.GeneralPath;

        specialinvoke $r3.<java.awt.geom.GeneralPath: void <init>()>();

        $i2 = $i0;

     label1:
        if $i2 > $i1 goto label2;

        $r4 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r4.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLevelRunLimit(int,int)>($i2, $i1);

        $r5 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo leading(int)>($i2);

        $i2 = $i0 - 1;

        $r6 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo trailing(int)>($i2);

        $r7 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo,java.awt.font.TextLayout,boolean,boolean,java.awt.geom.Rectangle2D)>($r5, $r2, 0, 1, $r1);

        $r8 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo,java.awt.font.TextLayout,boolean,boolean,java.awt.geom.Rectangle2D)>($r6, $r2, 0, 1, $r1);

        $r9 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.GeneralPath connectCarets(java.awt.geom.Line2D,java.awt.geom.Line2D)>($r7, $r8);

        virtualinvoke $r3.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r9, 0);

        $i2 = $i0 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public int[] getLogicalRangesForVisualSelection(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r3, $r4;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r5;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        $r2 := @parameter1: java.awt.font.TextHitInfo;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: void checkHit(java.awt.font.TextHitInfo)>($r1);

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: void checkHit(java.awt.font.TextHitInfo)>($r2);

        $i1 = specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: int getVisualFromHitInfo(java.awt.font.TextHitInfo)>($r1);

        $i2 = $i1;

        $i3 = specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: int getVisualFromHitInfo(java.awt.font.TextHitInfo)>($r2);

        $i4 = $i3;

        if $i1 <= $i3 goto label1;

        $i4 = $i1;

        $i2 = $i3;

     label1:
        $r3 = newarray (int)[512];

        $i1 = 0;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i5 = virtualinvoke $r5.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>($i2);

        $i6 = $i5;

        $i3 = $i5;

        $i2 = $i2 + 1;

     label2:
        if $i2 > $i4 goto label5;

        $r5 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i7 = virtualinvoke $r5.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>($i2);

        $i5 = $i7;

        $i0 = $i7 - $i6;

        if $i0 > 1 goto label3;

        if $i0 >= -1 goto label4;

     label3:
        $i0 = $i1 * 2;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i6);

        $r3[$i0] = $i8;

        $i0 = $i1 * 2;

        $i0 = $i0 + 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i6);

        $r3[$i0] = $i3;

        $i1 = $i1 + 1;

        $i3 = $i7;

     label4:
        $i6 = $i7;

        $i2 = $i2 + 1;

        goto label2;

     label5:
        $i4 = $i1 * 2;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i5);

        $r3[$i4] = $i6;

        $i4 = $i1 * 2;

        $i4 = $i4 + 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i5);

        $r3[$i4] = $i3;

        $i1 = $i1 + 1;

        $i3 = $i1 * 2;

        $r4 = newarray (int)[$i3];

        $i1 = $i1 * 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i1);

        return $r4;
    }

    public java.awt.font.TextHitInfo getNextLeftHit(java.awt.font.TextHitInfo)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1, $r2;
        int $i0, $i1, $i2;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r3;
        int[] $r4;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        org.apache.harmony.awt.gl.font.TextRunSegment $r7;
        boolean $z0;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: void checkHit(java.awt.font.TextHitInfo)>($r1);

        $i0 = specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: int getVisualFromHitInfo(java.awt.font.TextHitInfo)>($r1);

        $i1 = $i0;

        if $i0 != 0 goto label1;

        return null;

     label1:
        if $i1 < 0 goto label4;

        $i1 = $i1 + -1;

        $r2 = specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.font.TextHitInfo getHitInfoFromVisual(int)>($i1);

        $i0 = virtualinvoke $r2.<java.awt.font.TextHitInfo: int getCharIndex()>();

        if $i0 >= 0 goto label2;

        return $r2;

     label2:
        $i0 = virtualinvoke $r1.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i2 = lengthof $r4;

        if $i0 >= $i2 goto label3;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i0 = virtualinvoke $r2.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $i0 = $r4[$i0];

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i2 = virtualinvoke $r1.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $i2 = $r4[$i2];

        if $i0 == $i2 goto label3;

        return $r2;

     label3:
        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r5 = $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: java.util.ArrayList runSegments>;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i0 = virtualinvoke $r2.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $i0 = $r4[$i0];

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (org.apache.harmony.awt.gl.font.TextRunSegment) $r6;

        $i0 = virtualinvoke $r2.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $z0 = virtualinvoke $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: boolean charHasZeroAdvance(int)>($i0);

        if $z0 != 0 goto label1;

        return $r2;

     label4:
        return null;
    }

    public java.awt.font.TextHitInfo getNextRightHit(java.awt.font.TextHitInfo)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1, $r3;
        int $i0, $i1, $i2;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r2;
        int[] $r4;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        org.apache.harmony.awt.gl.font.TextRunSegment $r7;
        boolean $z0;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: void checkHit(java.awt.font.TextHitInfo)>($r1);

        $i0 = specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: int getVisualFromHitInfo(java.awt.font.TextHitInfo)>($r1);

        $i1 = $i0;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        if $i0 != $i2 goto label1;

        return null;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        if $i1 > $i0 goto label4;

        $i1 = $i1 + 1;

        $r3 = specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.font.TextHitInfo getHitInfoFromVisual(int)>($i1);

        $i0 = virtualinvoke $r3.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i2 = lengthof $r4;

        if $i0 < $i2 goto label2;

        return $r3;

     label2:
        $i0 = virtualinvoke $r1.<java.awt.font.TextHitInfo: int getCharIndex()>();

        if $i0 < 0 goto label3;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i0 = virtualinvoke $r3.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $i0 = $r4[$i0];

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i2 = virtualinvoke $r1.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $i2 = $r4[$i2];

        if $i0 == $i2 goto label3;

        return $r3;

     label3:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r5 = $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: java.util.ArrayList runSegments>;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r4 = $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int[] logical2segment>;

        $i0 = virtualinvoke $r3.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $i0 = $r4[$i0];

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (org.apache.harmony.awt.gl.font.TextRunSegment) $r6;

        $i0 = virtualinvoke $r3.<java.awt.font.TextHitInfo: int getCharIndex()>();

        $z0 = virtualinvoke $r7.<org.apache.harmony.awt.gl.font.TextRunSegment: boolean charHasZeroAdvance(int)>($i0);

        if $z0 != 0 goto label1;

        return $r3;

     label4:
        return null;
    }

    public java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D, java.awt.font.TextLayout)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1, $r2;
        java.awt.geom.Rectangle2D $r3;
        java.awt.font.TextLayout $r4;
        java.awt.geom.Line2D $r5, $r6;
        java.awt.geom.GeneralPath $r7;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        $r2 := @parameter1: java.awt.font.TextHitInfo;

        $r3 := @parameter2: java.awt.geom.Rectangle2D;

        $r4 := @parameter3: java.awt.font.TextLayout;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: void checkHit(java.awt.font.TextHitInfo)>($r1);

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: void checkHit(java.awt.font.TextHitInfo)>($r2);

        $r5 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo,java.awt.font.TextLayout,boolean,boolean,java.awt.geom.Rectangle2D)>($r1, $r4, 0, 1, $r3);

        $r6 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo,java.awt.font.TextLayout,boolean,boolean,java.awt.geom.Rectangle2D)>($r2, $r4, 0, 1, $r3);

        $r7 = virtualinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.GeneralPath connectCarets(java.awt.geom.Line2D,java.awt.geom.Line2D)>($r5, $r6);

        return $r7;
    }

    public java.awt.font.TextHitInfo getVisualOtherHit(java.awt.font.TextHitInfo)
    {
        org.apache.harmony.awt.gl.font.CaretManager $r0;
        java.awt.font.TextHitInfo $r1;
        int $i0, $i1;
        org.apache.harmony.awt.gl.font.TextRunBreaker $r2, $r3;
        byte $b2;
        boolean $z0, $z1;

        $r0 := @this: org.apache.harmony.awt.gl.font.CaretManager;

        $r1 := @parameter0: java.awt.font.TextHitInfo;

        specialinvoke $r0.<org.apache.harmony.awt.gl.font.CaretManager: void checkHit(java.awt.font.TextHitInfo)>($r1);

        $i0 = virtualinvoke $r1.<java.awt.font.TextHitInfo: int getCharIndex()>();

        if $i0 < 0 goto label11;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        if $i0 >= $i1 goto label11;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getVisualFromLogical(int)>($i0);

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $b2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>($i0);

        $b2 = $b2 & 1;

        if $b2 != 0 goto label03;

        $z0 = 1;

     label01:
        $z1 = virtualinvoke $r1.<java.awt.font.TextHitInfo: boolean isLeadingEdge()>();

        $z0 = $z0 ^ $z1;

        if $z0 == 0 goto label07;

        $i0 = $i1 + 1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        if $i0 != $i1 goto label05;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $z0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean isLTR()>();

        if $z0 == 0 goto label04;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        $z0 = 1;

     label02:
        if $z0 == 0 goto label23;

        $r1 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo leading(int)>($i0);

        return $r1;

     label03:
        $z0 = 0;

        goto label01;

     label04:
        $i0 = -1;

        $z0 = 0;

        goto label02;

     label05:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>($i0);

        $i0 = $i1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $b2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>($i1);

        $b2 = $b2 & 1;

        if $b2 != 0 goto label06;

        $z0 = 1;

        goto label02;

     label06:
        $z0 = 0;

        goto label02;

     label07:
        $i0 = $i1 + -1;

        if $i0 != -1 goto label09;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $z0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean isLTR()>();

        if $z0 == 0 goto label08;

        $i0 = -1;

        $z0 = 0;

        goto label02;

     label08:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        $z0 = 1;

        goto label02;

     label09:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>($i0);

        $i0 = $i1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $b2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>($i1);

        $b2 = $b2 & 1;

        if $b2 != 0 goto label10;

        $z0 = 0;

        goto label02;

     label10:
        $z0 = 1;

        goto label02;

     label11:
        if $i0 >= 0 goto label17;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $z0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean isLTR()>();

        if $z0 == 0 goto label14;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>(0);

        $i0 = $i1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $b2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>($i1);

        $b2 = $b2 & 1;

        if $b2 != 0 goto label13;

        $z0 = 1;

     label12:
        goto label02;

     label13:
        $z0 = 0;

        goto label12;

     label14:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        $i0 = $i0 - 1;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>($i0);

        $i0 = $i1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $b2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>($i1);

        $b2 = $b2 & 1;

        if $b2 == 0 goto label16;

        $z0 = 1;

     label15:
        goto label02;

     label16:
        $z0 = 0;

        goto label15;

     label17:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $z0 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean isLTR()>();

        if $z0 == 0 goto label20;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $r3 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i0 = virtualinvoke $r3.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>();

        $i0 = $i0 - 1;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>($i0);

        $i0 = $i1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $b2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>($i1);

        $b2 = $b2 & 1;

        if $b2 == 0 goto label19;

        $z0 = 1;

     label18:
        goto label02;

     label19:
        $z0 = 0;

        goto label18;

     label20:
        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $i1 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLogicalFromVisual(int)>(0);

        $i0 = $i1;

        $r2 = $r0.<org.apache.harmony.awt.gl.font.CaretManager: org.apache.harmony.awt.gl.font.TextRunBreaker breaker>;

        $b2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>($i1);

        $b2 = $b2 & 1;

        if $b2 != 0 goto label22;

        $z0 = 1;

     label21:
        goto label02;

     label22:
        $z0 = 0;

        goto label21;

     label23:
        $r1 = staticinvoke <java.awt.font.TextHitInfo: java.awt.font.TextHitInfo trailing(int)>($i0);

        return $r1;
    }
}
