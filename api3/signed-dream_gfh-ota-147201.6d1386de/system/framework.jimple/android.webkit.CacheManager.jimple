public final class android.webkit.CacheManager extends java.lang.Object
{
    private static long CACHE_THRESHOLD;
    private static long CACHE_TRIM_AMOUNT;
    static final java.lang.String HEADER_KEY_IFMODIFIEDSINCE;
    static final java.lang.String HEADER_KEY_IFNONEMATCH;
    private static final java.lang.String LOGTAG;
    private static final java.lang.String MAX_AGE;
    private static final java.lang.String NO_CACHE;
    private static final java.lang.String NO_STORE;
    private static final java.lang.String PRIVATE;
    private static final int TRIM_CACHE_INTERVAL;
    private static java.io.File mBaseDir;
    private static boolean mClearCacheOnInit;
    private static android.webkit.WebViewDatabase mDataBase;
    private static boolean mDisabled;
    private static int mRefCount;
    private static int mTrimCacheCount;

    static void <clinit>()
    {
        <android.webkit.CacheManager: int TRIM_CACHE_INTERVAL> = 5;

        <android.webkit.CacheManager: java.lang.String PRIVATE> = "private";

        <android.webkit.CacheManager: java.lang.String NO_STORE> = "no-store";

        <android.webkit.CacheManager: java.lang.String NO_CACHE> = "no-cache";

        <android.webkit.CacheManager: java.lang.String MAX_AGE> = "max-age";

        <android.webkit.CacheManager: java.lang.String LOGTAG> = "cache";

        <android.webkit.CacheManager: java.lang.String HEADER_KEY_IFNONEMATCH> = "if-none-match";

        <android.webkit.CacheManager: java.lang.String HEADER_KEY_IFMODIFIEDSINCE> = "if-modified-since";

        <android.webkit.CacheManager: long CACHE_THRESHOLD> = 6291456L;

        <android.webkit.CacheManager: long CACHE_TRIM_AMOUNT> = 2097152L;

        <android.webkit.CacheManager: int mTrimCacheCount> = 0;

        <android.webkit.CacheManager: boolean mClearCacheOnInit> = 0;

        return;
    }

    public void <init>()
    {
        android.webkit.CacheManager $r0;

        $r0 := @this: android.webkit.CacheManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.io.File access$000()
    {
        java.io.File r0;

        r0 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        return r0;
    }

    static android.webkit.WebViewDatabase access$100()
    {
        android.webkit.WebViewDatabase r0;

        r0 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        return r0;
    }

    private static void appendAsHex(int, java.lang.StringBuffer)
    {
        int $i0;
        java.lang.StringBuffer $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.StringBuffer;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            default: goto label1;
        };

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        return;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0000000");

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("000000");

        goto label1;

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("00000");

        goto label1;

     label5:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0000");

        goto label1;

     label6:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("000");

        goto label1;

     label7:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("00");

        goto label1;

     label8:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        goto label1;
    }

    public static boolean cacheDisabled()
    {
        boolean z0;

        z0 = <android.webkit.CacheManager: boolean mDisabled>;

        return z0;
    }

    static boolean cacheEmpty()
    {
        boolean $z0;
        android.webkit.WebViewDatabase $r0;

        $r0 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        $z0 = virtualinvoke $r0.<android.webkit.WebViewDatabase: boolean hasCache()>();

        return $z0;
    }

    private static boolean checkCacheRedirect(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 == 301 goto label1;

        if $i0 == 302 goto label1;

        if $i0 != 307 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean createCacheDirectory()
    {
        java.io.File $r0;
        boolean $z0;
        java.lang.String $r1;
        android.webkit.WebViewDatabase $r2;

        $r0 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $r0 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        $z0 = virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("cache", "Unable to create webviewCache directory");

        return 0;

     label1:
        $r0 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r1, 505, -1, -1);

        staticinvoke <android.webkit.WebViewCore: void endCacheTransaction()>();

        $r2 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r2.<android.webkit.WebViewDatabase: void clearCache()>();

        staticinvoke <android.webkit.WebViewCore: void startCacheTransaction()>();

        return 1;

     label2:
        return 0;
    }

    public static android.webkit.CacheManager$CacheResult createCacheFile(java.lang.String, int, android.net.http.Headers, java.lang.String, boolean)
    {
        java.lang.String $r0, $r2;
        int $i0;
        android.net.http.Headers $r1;
        boolean $z0;
        java.util.ArrayList $r3;
        android.webkit.CacheManager$CacheResult $r4;
        java.io.FileOutputStream $r5;
        java.io.File $r6;
        java.io.FileNotFoundException $r7, $r8;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.net.http.Headers;

        $r2 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        if $z0 != 0 goto label01;

        $z0 = <android.webkit.CacheManager: boolean mDisabled>;

        if $z0 == 0 goto label01;

        return null;

     label01:
        if $i0 != 303 goto label02;

        return null;

     label02:
        $z0 = staticinvoke <android.webkit.CacheManager: boolean checkCacheRedirect(int)>($i0);

        if $z0 == 0 goto label03;

        $r3 = virtualinvoke $r1.<android.net.http.Headers: java.util.ArrayList getSetCookie()>();

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label03;

        return null;

     label03:
        $r4 = staticinvoke <android.webkit.CacheManager: android.webkit.CacheManager$CacheResult parseHeaders(int,android.net.http.Headers,java.lang.String)>($i0, $r1, $r2);

        if $r4 == null goto label07;

        staticinvoke <android.webkit.CacheManager: void setupFiles(java.lang.String,android.webkit.CacheManager$CacheResult)>($r0, $r4);

        $r5 = new java.io.FileOutputStream;

        $r6 = $r4.<android.webkit.CacheManager$CacheResult: java.io.File outFile>;

     label04:
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r6);

     label05:
        $r4.<android.webkit.CacheManager$CacheResult: java.io.OutputStream outStream> = $r5;

     label06:
        $r4.<android.webkit.CacheManager$CacheResult: java.lang.String mimeType> = $r2;

     label07:
        return $r4;

     label08:
        $r7 := @caughtexception;

        $z0 = staticinvoke <android.webkit.CacheManager: boolean createCacheDirectory()>();

        if $z0 == 0 goto label12;

        $r5 = new java.io.FileOutputStream;

        $r6 = $r4.<android.webkit.CacheManager$CacheResult: java.io.File outFile>;

     label09:
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r6);

     label10:
        $r4.<android.webkit.CacheManager$CacheResult: java.io.OutputStream outStream> = $r5;

        goto label06;

     label11:
        $r8 := @caughtexception;

        return null;

     label12:
        return null;

        catch java.io.FileNotFoundException from label04 to label05 with label08;
        catch java.io.FileNotFoundException from label09 to label10 with label11;
    }

    static boolean disableTransaction()
    {
        int $i0;
        android.webkit.WebViewDatabase $r0;

        $i0 = <android.webkit.CacheManager: int mRefCount>;

        if $i0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("cache", "disableTransaction is out of sync");

     label1:
        $i0 = <android.webkit.CacheManager: int mRefCount>;

        $i0 = $i0 - 1;

        <android.webkit.CacheManager: int mRefCount> = $i0;

        if $i0 != 0 goto label2;

        $r0 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r0.<android.webkit.WebViewDatabase: boolean endCacheTransaction()>();

        return 1;

     label2:
        return 0;
    }

    static boolean enableTransaction()
    {
        int $i0;
        android.webkit.WebViewDatabase $r0;

        $i0 = <android.webkit.CacheManager: int mRefCount>;

        $i0 = $i0 + 1;

        <android.webkit.CacheManager: int mRefCount> = $i0;

        if $i0 != 1 goto label1;

        $r0 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r0.<android.webkit.WebViewDatabase: boolean startCacheTransaction()>();

        return 1;

     label1:
        return 0;
    }

    public static boolean endCacheTransaction()
    {
        boolean $z0;
        android.webkit.WebViewDatabase $r0;
        int $i0;

        $r0 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        $z0 = virtualinvoke $r0.<android.webkit.WebViewDatabase: boolean endCacheTransaction()>();

        $i0 = <android.webkit.CacheManager: int mTrimCacheCount>;

        $i0 = $i0 + 1;

        <android.webkit.CacheManager: int mTrimCacheCount> = $i0;

        if $i0 < 5 goto label1;

        <android.webkit.CacheManager: int mTrimCacheCount> = 0;

        staticinvoke <android.webkit.CacheManager: void trimCacheIfNeeded()>();

        return $z0;

     label1:
        return $z0;
    }

    public static android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String, java.util.Map)
    {
        java.lang.String $r0, $r6;
        java.util.Map $r1;
        java.io.File $r2, $r5;
        boolean $z0;
        android.webkit.WebViewDatabase $r3;
        android.webkit.CacheManager$CacheResult $r4;
        long $l0, $l3;
        byte $b1;
        int $i2;
        java.io.FileInputStream $r7;
        java.io.FileNotFoundException $r8;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        $z0 = <android.webkit.CacheManager: boolean mDisabled>;

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r3 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        $r4 = virtualinvoke $r3.<android.webkit.WebViewDatabase: android.webkit.CacheManager$CacheResult getCache(java.lang.String)>($r0);

        if $r4 == null goto label07;

        $l0 = $r4.<android.webkit.CacheManager$CacheResult: long contentLength>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label02;

        $i2 = $r4.<android.webkit.CacheManager$CacheResult: int httpStatusCode>;

        $z0 = staticinvoke <android.webkit.CacheManager: boolean checkCacheRedirect(int)>($i2);

        if $z0 != 0 goto label05;

        $r3 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r3.<android.webkit.WebViewDatabase: void removeCache(java.lang.String)>($r0);

        return null;

     label02:
        $r2 = new java.io.File;

        $r5 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        $r6 = $r4.<android.webkit.CacheManager$CacheResult: java.lang.String localPath>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r6);

        $r7 = new java.io.FileInputStream;

     label03:
        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label04:
        $r4.<android.webkit.CacheManager$CacheResult: java.io.InputStream inStream> = $r7;

     label05:
        if $r1 == null goto label10;

        $l0 = $r4.<android.webkit.CacheManager$CacheResult: long expires>;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label10;

        $l0 = $r4.<android.webkit.CacheManager$CacheResult: long expires>;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b1 = $l0 cmp $l3;

        if $b1 > 0 goto label10;

        $r0 = $r4.<android.webkit.CacheManager$CacheResult: java.lang.String lastModified>;

        if $r0 != null goto label08;

        $r0 = $r4.<android.webkit.CacheManager$CacheResult: java.lang.String etag>;

        if $r0 != null goto label08;

        return null;

     label06:
        $r8 := @caughtexception;

        $r3 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r3.<android.webkit.WebViewDatabase: void removeCache(java.lang.String)>($r0);

        return null;

     label07:
        return null;

     label08:
        $r0 = $r4.<android.webkit.CacheManager$CacheResult: java.lang.String etag>;

        if $r0 == null goto label09;

        $r0 = $r4.<android.webkit.CacheManager$CacheResult: java.lang.String etag>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("if-none-match", $r0);

     label09:
        $r0 = $r4.<android.webkit.CacheManager$CacheResult: java.lang.String lastModified>;

        if $r0 == null goto label10;

        $r0 = $r4.<android.webkit.CacheManager$CacheResult: java.lang.String lastModified>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("if-modified-since", $r0);

     label10:
        return $r4;

        catch java.io.FileNotFoundException from label03 to label04 with label06;
    }

    public static java.io.File getCacheFileBaseDir()
    {
        java.io.File r0;

        r0 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        return r0;
    }

    static void init(android.content.Context)
    {
        android.content.Context $r0;
        android.webkit.WebViewDatabase $r1;
        java.io.File $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>($r0);

        <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase> = $r1;

        $r2 = new java.io.File;

        $r3 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "webviewCache");

        <android.webkit.CacheManager: java.io.File mBaseDir> = $r2;

        $z0 = staticinvoke <android.webkit.CacheManager: boolean createCacheDirectory()>();

        if $z0 == 0 goto label1;

        $z0 = <android.webkit.CacheManager: boolean mClearCacheOnInit>;

        if $z0 == 0 goto label2;

        staticinvoke <android.webkit.CacheManager: boolean removeAllCacheFiles()>();

        <android.webkit.CacheManager: boolean mClearCacheOnInit> = 0;

        return;

     label1:
        return;

     label2:
        return;
    }

    private static android.webkit.CacheManager$CacheResult parseHeaders(int, android.net.http.Headers, java.lang.String)
    {
        android.webkit.CacheManager$CacheResult $r0;
        int $i0, $i2, $i3;
        android.net.http.Headers $r1;
        java.lang.String $r2, $r3, $r6;
        java.lang.Long $r4;
        long $l1, $l4;
        java.lang.String[] $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r7, $r10;
        java.lang.StringBuilder $r8;
        byte $b5;
        java.lang.NumberFormatException $r9;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.net.http.Headers;

        $r2 := @parameter2: java.lang.String;

        $r0 = new android.webkit.CacheManager$CacheResult;

        specialinvoke $r0.<android.webkit.CacheManager$CacheResult: void <init>()>();

        $r0.<android.webkit.CacheManager$CacheResult: int httpStatusCode> = $i0;

        $r3 = virtualinvoke $r1.<android.net.http.Headers: java.lang.String getLocation()>();

        if $r3 == null goto label01;

        $r0.<android.webkit.CacheManager$CacheResult: java.lang.String location> = $r3;

     label01:
        $r0.<android.webkit.CacheManager$CacheResult: long expires> = -1L;

        $r3 = virtualinvoke $r1.<android.net.http.Headers: java.lang.String getExpires()>();

        if $r3 == null goto label04;

     label02:
        $r4 = staticinvoke <android.webkit.HttpDateTime: java.lang.Long parse(java.lang.String)>($r3);

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

     label03:
        $r0.<android.webkit.CacheManager$CacheResult: long expires> = $l1;

     label04:
        $r3 = virtualinvoke $r1.<android.net.http.Headers: java.lang.String getLastModified()>();

        if $r3 == null goto label05;

        $r0.<android.webkit.CacheManager$CacheResult: java.lang.String lastModified> = $r3;

     label05:
        $r3 = virtualinvoke $r1.<android.net.http.Headers: java.lang.String getEtag()>();

        if $r3 == null goto label06;

        $r0.<android.webkit.CacheManager$CacheResult: java.lang.String etag> = $r3;

     label06:
        $r3 = virtualinvoke $r1.<android.net.http.Headers: java.lang.String getCacheControl()>();

        if $r3 == null goto label22;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ ,;]");

        $i0 = 0;

     label07:
        $i2 = lengthof $r5;

        if $i0 >= $i2 goto label22;

        $r3 = "no-store";

        $r6 = $r5[$i0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label11;

        return null;

     label08:
        $r7 := @caughtexception;

        $r6 = "-1";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label09;

        $r6 = "0";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label10;

     label09:
        $r0.<android.webkit.CacheManager$CacheResult: long expires> = 0L;

        goto label04;

     label10:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal expires: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("cache", $r3);

        goto label04;

     label11:
        $r3 = "no-cache";

        $r6 = $r5[$i0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label12;

        $r3 = "private";

        $r6 = $r5[$i0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label14;

     label12:
        $r0.<android.webkit.CacheManager$CacheResult: long expires> = 0L;

     label13:
        $i0 = $i0 + 1;

        goto label07;

     label14:
        $r3 = $r5[$i0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("max-age");

        if $z0 == 0 goto label13;

        $r3 = $r5[$i0];

        $i2 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(61);

        if $i2 >= 0 goto label34;

        $r3 = $r5[$i0];

        $i2 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(58);

     label15:
        if $i2 <= 0 goto label13;

        $r3 = $r5[$i0];

        $i3 = $i2 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i3);

     label16:
        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

     label17:
        $b5 = $l4 cmp 0L;

     label18:
        if $b5 < 0 goto label13;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label19:
        $l4 = $l4 * 1000L;

        $l1 = $l4 + $l1;

        $r0.<android.webkit.CacheManager$CacheResult: long expires> = $l1;

        goto label13;

     label20:
        $r9 := @caughtexception;

        $r6 = "1d";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label21;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l1 + 86400000L;

        $r0.<android.webkit.CacheManager$CacheResult: long expires> = $l1;

        goto label13;

     label21:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception in parseHeaders for max-age:");

        $r3 = $r5[$i0];

        $i2 = $i2 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("cache", $r3);

        $r0.<android.webkit.CacheManager$CacheResult: long expires> = 0L;

        goto label13;

     label22:
        $r3 = "no-cache";

        $r6 = virtualinvoke $r1.<android.net.http.Headers: java.lang.String getPragma()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label23;

        $r0.<android.webkit.CacheManager$CacheResult: long expires> = 0L;

     label23:
        $l1 = $r0.<android.webkit.CacheManager$CacheResult: long expires>;

        $b5 = $l1 cmp -1L;

        if $b5 != 0 goto label24;

        $i0 = $r0.<android.webkit.CacheManager$CacheResult: int httpStatusCode>;

        if $i0 != 301 goto label25;

        $r0.<android.webkit.CacheManager$CacheResult: long expires> = 9223372036854775807L;

     label24:
        return $r0;

     label25:
        $i0 = $r0.<android.webkit.CacheManager$CacheResult: int httpStatusCode>;

        if $i0 == 302 goto label26;

        $i0 = $r0.<android.webkit.CacheManager$CacheResult: int httpStatusCode>;

        if $i0 != 307 goto label27;

     label26:
        $r0.<android.webkit.CacheManager$CacheResult: long expires> = 0L;

        goto label24;

     label27:
        $r3 = $r0.<android.webkit.CacheManager$CacheResult: java.lang.String lastModified>;

        if $r3 != null goto label29;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("text/html");

        if $z0 != 0 goto label28;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l1 + 86400000L;

        $r0.<android.webkit.CacheManager$CacheResult: long expires> = $l1;

        goto label24;

     label28:
        $r0.<android.webkit.CacheManager$CacheResult: long expires> = 0L;

        goto label24;

     label29:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l1 + 86400000L;

        $r2 = $r0.<android.webkit.CacheManager$CacheResult: java.lang.String lastModified>;

     label30:
        $r4 = staticinvoke <android.webkit.HttpDateTime: java.lang.Long parse(java.lang.String)>($r2);

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

     label31:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l4 - $l1;

        $b5 = $l4 cmp 0L;

        if $b5 <= 0 goto label33;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l4 / 5L;

        $l1 = $l4 + $l1;

        $r0.<android.webkit.CacheManager$CacheResult: long expires> = $l1;

        goto label24;

     label32:
        $r10 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal lastModified: ");

        $r2 = $r0.<android.webkit.CacheManager$CacheResult: java.lang.String lastModified>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("cache", $r2);

        goto label31;

     label33:
        $r0.<android.webkit.CacheManager$CacheResult: long expires> = $l1;

        goto label24;

     label34:
        goto label15;

        catch java.lang.IllegalArgumentException from label02 to label03 with label08;
        catch java.lang.NumberFormatException from label16 to label17 with label20;
        catch java.lang.NumberFormatException from label18 to label19 with label20;
        catch java.lang.IllegalArgumentException from label30 to label31 with label32;
    }

    static boolean removeAllCacheFiles()
    {
        android.webkit.CacheManager$1 $r0;
        java.io.File $r1;
        java.lang.Thread $r2;

        $r1 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        if $r1 != null goto label1;

        <android.webkit.CacheManager: boolean mClearCacheOnInit> = 1;

        return 1;

     label1:
        $r0 = new android.webkit.CacheManager$1;

        specialinvoke $r0.<android.webkit.CacheManager$1: void <init>()>();

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r0);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return 1;
    }

    public static void saveCacheFile(java.lang.String, android.webkit.CacheManager$CacheResult)
    {
        java.lang.String $r0, $r5;
        android.webkit.CacheManager$CacheResult $r1;
        java.io.OutputStream $r2;
        java.io.File $r3;
        boolean $z0;
        java.io.IOException $r4;
        long $l0;
        int $i1;
        android.webkit.WebViewDatabase $r6;
        byte $b2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.webkit.CacheManager$CacheResult;

        $r2 = $r1.<android.webkit.CacheManager$CacheResult: java.io.OutputStream outStream>;

     label1:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label2:
        $r3 = $r1.<android.webkit.CacheManager$CacheResult: java.io.File outFile>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label4;

        return;

     label3:
        $r4 := @caughtexception;

        return;

     label4:
        $r3 = $r1.<android.webkit.CacheManager$CacheResult: java.io.File outFile>;

        $l0 = virtualinvoke $r3.<java.io.File: long length()>();

        $r1.<android.webkit.CacheManager$CacheResult: long contentLength> = $l0;

        $i1 = $r1.<android.webkit.CacheManager$CacheResult: int httpStatusCode>;

        $z0 = staticinvoke <android.webkit.CacheManager: boolean checkCacheRedirect(int)>($i1);

        if $z0 == 0 goto label6;

        $r1.<android.webkit.CacheManager$CacheResult: long contentLength> = 0L;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>()>();

        $r1.<android.webkit.CacheManager$CacheResult: java.lang.String localPath> = $r5;

        $r3 = $r1.<android.webkit.CacheManager$CacheResult: java.io.File outFile>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label5:
        $r6 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r6.<android.webkit.WebViewDatabase: void addCache(java.lang.String,android.webkit.CacheManager$CacheResult)>($r0, $r1);

        return;

     label6:
        $l0 = $r1.<android.webkit.CacheManager$CacheResult: long contentLength>;

        $b2 = $l0 cmp 0L;

        if $b2 != 0 goto label5;

        $r3 = $r1.<android.webkit.CacheManager$CacheResult: java.io.File outFile>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static void setCacheDisabled(boolean)
    {
        boolean $z0, $z1;

        $z0 := @parameter0: boolean;

        $z1 = <android.webkit.CacheManager: boolean mDisabled>;

        if $z0 != $z1 goto label1;

        return;

     label1:
        <android.webkit.CacheManager: boolean mDisabled> = $z0;

        $z0 = <android.webkit.CacheManager: boolean mDisabled>;

        if $z0 == 0 goto label2;

        staticinvoke <android.webkit.CacheManager: boolean removeAllCacheFiles()>();

        return;

     label2:
        return;
    }

    private static void setupFiles(java.lang.String, android.webkit.CacheManager$CacheResult)
    {
        java.lang.String $r0, $r3, $r4;
        android.webkit.CacheManager$CacheResult $r1, $r8;
        int $i0, $i1;
        java.lang.StringBuffer $r2;
        java.io.File $r5, $r6;
        boolean $z0, $z1;
        android.webkit.WebViewDatabase $r7;
        long $l2;
        byte $b3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.webkit.CacheManager$CacheResult;

        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

        $i1 = $i0;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>(8);

        staticinvoke <android.webkit.CacheManager: void appendAsHex(int,java.lang.StringBuffer)>($i0, $r2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = $r3;

        $r5 = new java.io.File;

        $r6 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r3);

        $z0 = 1;

     label1:
        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        if $z0 == 0 goto label5;

        staticinvoke <android.webkit.WebViewCore: void endCacheTransaction()>();

        $r7 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        $r8 = virtualinvoke $r7.<android.webkit.WebViewDatabase: android.webkit.CacheManager$CacheResult getCache(java.lang.String)>($r0);

        staticinvoke <android.webkit.WebViewCore: void startCacheTransaction()>();

        if $r8 == null goto label4;

        $l2 = $r8.<android.webkit.CacheManager$CacheResult: long contentLength>;

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label4;

        $r0 = $r8.<android.webkit.CacheManager$CacheResult: java.lang.String localPath>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        $r4 = $r8.<android.webkit.CacheManager$CacheResult: java.lang.String localPath>;

     label2:
        $r1.<android.webkit.CacheManager$CacheResult: java.lang.String localPath> = $r4;

        $r1.<android.webkit.CacheManager$CacheResult: java.io.File outFile> = $r5;

        return;

     label3:
        $r4 = $r8.<android.webkit.CacheManager$CacheResult: java.lang.String localPath>;

        $r5 = new java.io.File;

        $r6 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r4);

        goto label2;

     label4:
        $z0 = 0;

     label5:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>(8);

        $i1 = $i1 + 1;

        staticinvoke <android.webkit.CacheManager: void appendAsHex(int,java.lang.StringBuffer)>($i1, $r2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = $r3;

        $r5 = new java.io.File;

        $r6 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r3);

        goto label1;
    }

    public static boolean startCacheTransaction()
    {
        boolean $z0;
        android.webkit.WebViewDatabase $r0;

        $r0 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        $z0 = virtualinvoke $r0.<android.webkit.WebViewDatabase: boolean startCacheTransaction()>();

        return $z0;
    }

    static void trimCacheIfNeeded()
    {
        android.webkit.WebViewDatabase $r0;
        long $l0, $l1;
        byte $b2;
        java.util.ArrayList $r1;
        int $i3, $i4;
        java.io.File $r2, $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        $r0 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        $l0 = virtualinvoke $r0.<android.webkit.WebViewDatabase: long getCacheTotalSize()>();

        $l1 = <android.webkit.CacheManager: long CACHE_THRESHOLD>;

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label2;

        $r0 = <android.webkit.CacheManager: android.webkit.WebViewDatabase mDataBase>;

        $l0 = <android.webkit.CacheManager: long CACHE_TRIM_AMOUNT>;

        $r1 = virtualinvoke $r0.<android.webkit.WebViewDatabase: java.util.ArrayList trimCache(long)>($l0);

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label3;

        $r2 = new java.io.File;

        $r3 = <android.webkit.CacheManager: java.io.File mBaseDir>;

        $r4 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r5 = (java.lang.String) $r4;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;

     label3:
        return;
    }
}
