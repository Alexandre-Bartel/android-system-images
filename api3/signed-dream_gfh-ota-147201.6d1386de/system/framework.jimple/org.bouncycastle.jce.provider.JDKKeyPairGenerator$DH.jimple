public class org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH extends org.bouncycastle.jce.provider.JDKKeyPairGenerator
{
    int certainty;
    org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine;
    boolean initialised;
    org.bouncycastle.crypto.params.DHKeyGenerationParameters param;
    java.security.SecureRandom random;
    int strength;

    public void <init>()
    {
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH $r0;
        org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator $r1;
        java.security.SecureRandom $r2;

        $r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH;

        specialinvoke $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator: void <init>(java.lang.String)>("DH");

        $r1 = new org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator;

        specialinvoke $r1.<org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: void <init>()>();

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine> = $r1;

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int strength> = 1024;

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int certainty> = 20;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.SecureRandom random> = $r2;

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: boolean initialised> = 0;

        return;
    }

    public java.security.KeyPair generateKeyPair()
    {
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH $r0;
        org.bouncycastle.crypto.generators.DHParametersGenerator $r1;
        boolean $z0;
        int $i0, $i1;
        java.security.SecureRandom $r2;
        org.bouncycastle.crypto.params.DHKeyGenerationParameters $r3;
        org.bouncycastle.crypto.params.DHParameters $r4;
        org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator $r5;
        org.bouncycastle.crypto.AsymmetricCipherKeyPair $r6;
        org.bouncycastle.crypto.CipherParameters $r7;
        org.bouncycastle.crypto.params.DHPublicKeyParameters $r8;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters $r9;
        java.security.KeyPair $r10;
        org.bouncycastle.jce.provider.JCEDHPublicKey $r11;
        org.bouncycastle.jce.provider.JCEDHPrivateKey $r12;

        $r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH;

        $z0 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: boolean initialised>;

        if $z0 != 0 goto label1;

        $r1 = new org.bouncycastle.crypto.generators.DHParametersGenerator;

        specialinvoke $r1.<org.bouncycastle.crypto.generators.DHParametersGenerator: void <init>()>();

        $i0 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int strength>;

        $i1 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int certainty>;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.SecureRandom random>;

        virtualinvoke $r1.<org.bouncycastle.crypto.generators.DHParametersGenerator: void init(int,int,java.security.SecureRandom)>($i0, $i1, $r2);

        $r3 = new org.bouncycastle.crypto.params.DHKeyGenerationParameters;

        $r2 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.SecureRandom random>;

        $r4 = virtualinvoke $r1.<org.bouncycastle.crypto.generators.DHParametersGenerator: org.bouncycastle.crypto.params.DHParameters generateParameters()>();

        specialinvoke $r3.<org.bouncycastle.crypto.params.DHKeyGenerationParameters: void <init>(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters)>($r2, $r4);

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r3;

        $r5 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine>;

        $r3 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param>;

        virtualinvoke $r5.<org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r3);

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: boolean initialised> = 1;

     label1:
        $r5 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine>;

        $r6 = virtualinvoke $r5.<org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>();

        $r7 = virtualinvoke $r6.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPublic()>();

        $r8 = (org.bouncycastle.crypto.params.DHPublicKeyParameters) $r7;

        $r7 = virtualinvoke $r6.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPrivate()>();

        $r9 = (org.bouncycastle.crypto.params.DHPrivateKeyParameters) $r7;

        $r10 = new java.security.KeyPair;

        $r11 = new org.bouncycastle.jce.provider.JCEDHPublicKey;

        specialinvoke $r11.<org.bouncycastle.jce.provider.JCEDHPublicKey: void <init>(org.bouncycastle.crypto.params.DHPublicKeyParameters)>($r8);

        $r12 = new org.bouncycastle.jce.provider.JCEDHPrivateKey;

        specialinvoke $r12.<org.bouncycastle.jce.provider.JCEDHPrivateKey: void <init>(org.bouncycastle.crypto.params.DHPrivateKeyParameters)>($r9);

        specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12);

        return $r10;
    }

    public void initialize(int, java.security.SecureRandom)
    {
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH $r0;
        int $i0;
        java.security.SecureRandom $r1;

        $r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.SecureRandom;

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: int strength> = $i0;

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.SecureRandom random> = $r1;

        return;
    }

    public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH $r0;
        java.security.spec.AlgorithmParameterSpec $r1;
        java.security.SecureRandom $r2;
        boolean $z0;
        java.security.InvalidAlgorithmParameterException $r3;
        javax.crypto.spec.DHParameterSpec $r4;
        org.bouncycastle.crypto.params.DHKeyGenerationParameters $r5;
        org.bouncycastle.crypto.params.DHParameters $r6;
        java.math.BigInteger $r7, $r8;
        org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator $r9;

        $r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH;

        $r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $r2 := @parameter1: java.security.SecureRandom;

        $z0 = $r1 instanceof javax.crypto.spec.DHParameterSpec;

        if $z0 != 0 goto label1;

        $r3 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r3.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("parameter object not a DHParameterSpec");

        throw $r3;

     label1:
        $r4 = (javax.crypto.spec.DHParameterSpec) $r1;

        $r5 = new org.bouncycastle.crypto.params.DHKeyGenerationParameters;

        $r6 = new org.bouncycastle.crypto.params.DHParameters;

        $r7 = virtualinvoke $r4.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r8 = virtualinvoke $r4.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r6.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r7, $r8);

        specialinvoke $r5.<org.bouncycastle.crypto.params.DHKeyGenerationParameters: void <init>(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters)>($r2, $r6);

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r5;

        $r9 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine>;

        $r5 = $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: org.bouncycastle.crypto.params.DHKeyGenerationParameters param>;

        virtualinvoke $r9.<org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r5);

        $r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: boolean initialised> = 1;

        return;
    }
}
