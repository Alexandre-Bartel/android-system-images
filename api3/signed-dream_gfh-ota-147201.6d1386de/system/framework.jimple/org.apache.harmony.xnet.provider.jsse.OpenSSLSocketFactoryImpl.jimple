public class org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl extends javax.net.ssl.SSLSocketFactory
{
    private java.io.IOException instantiationException;
    private org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters;

    public void <init>()
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r0;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r1;
        java.security.KeyManagementException $r2;
        java.io.IOException $r3;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        specialinvoke $r0.<javax.net.ssl.SSLSocketFactory: void <init>()>();

     label1:
        $r1 = staticinvoke <org.apache.harmony.xnet.provider.jsse.SSLParameters: org.apache.harmony.xnet.provider.jsse.SSLParameters getDefault()>();

     label2:
        $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters> = $r1;

        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Delayed instantiation exception:");

        $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.io.IOException instantiationException> = $r3;

        $r3 = $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.io.IOException instantiationException>;

        virtualinvoke $r3.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        return;

        catch java.security.KeyManagementException from label1 to label2 with label3;
    }

    public void <init>(org.apache.harmony.xnet.provider.jsse.SSLParameters)
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r0;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        $r1 := @parameter0: org.apache.harmony.xnet.provider.jsse.SSLParameters;

        specialinvoke $r0.<javax.net.ssl.SSLSocketFactory: void <init>()>();

        $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters> = $r1;

        return;
    }

    public java.net.Socket createSocket() throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r0;
        java.lang.Object $r1;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r2;
        java.io.IOException $r3;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl $r4;

        $r2 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        $r3 = $r2.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.io.IOException instantiationException>;

        if $r3 == null goto label1;

        $r3 = $r2.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.io.IOException instantiationException>;

        throw $r3;

     label1:
        $r4 = new org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl;

        $r0 = $r2.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r1 = virtualinvoke $r0.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r0 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r1;

        specialinvoke $r4.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void <init>(org.apache.harmony.xnet.provider.jsse.SSLParameters)>($r0);

        return $r4;
    }

    public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        java.lang.String $r0;
        int $i0;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl $r1;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r2;
        java.lang.Object $r3;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r4;

        $r4 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = new org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl;

        $r2 = $r4.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r3 = virtualinvoke $r2.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r2 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r3;

        specialinvoke $r1.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void <init>(java.lang.String,int,org.apache.harmony.xnet.provider.jsse.SSLParameters)>($r0, $i0, $r2);

        return $r1;
    }

    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException, java.net.UnknownHostException
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.net.InetAddress $r2;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl $r3;
        java.lang.Object $r4;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r5;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 = new org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r4 = virtualinvoke $r5.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r5 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r4;

        specialinvoke $r3.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void <init>(java.lang.String,int,java.net.InetAddress,int,org.apache.harmony.xnet.provider.jsse.SSLParameters)>($r1, $i0, $r2, $i1, $r5);

        return $r3;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int) throws java.io.IOException
    {
        java.net.InetAddress $r0;
        int $i0;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl $r1;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r2;
        java.lang.Object $r3;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r4;

        $r4 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        $r0 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        $r1 = new org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl;

        $r2 = $r4.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r3 = virtualinvoke $r2.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r2 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r3;

        specialinvoke $r1.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void <init>(java.net.InetAddress,int,org.apache.harmony.xnet.provider.jsse.SSLParameters)>($r0, $i0, $r2);

        return $r1;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int) throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r0;
        java.net.InetAddress $r1, $r2;
        int $i0, $i1;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl $r3;
        java.lang.Object $r4;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r5;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        $r1 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 = new org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r4 = virtualinvoke $r5.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r5 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r4;

        specialinvoke $r3.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void <init>(java.net.InetAddress,int,java.net.InetAddress,int,org.apache.harmony.xnet.provider.jsse.SSLParameters)>($r1, $i0, $r2, $i1, $r5);

        return $r3;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper $r3;
        java.lang.Object $r4;
        org.apache.harmony.xnet.provider.jsse.SSLParameters $r5;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = new org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper;

        $r5 = $r0.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: org.apache.harmony.xnet.provider.jsse.SSLParameters sslParameters>;

        $r4 = virtualinvoke $r5.<org.apache.harmony.xnet.provider.jsse.SSLParameters: java.lang.Object clone()>();

        $r5 = (org.apache.harmony.xnet.provider.jsse.SSLParameters) $r4;

        specialinvoke $r3.<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void <init>(java.net.Socket,java.lang.String,int,boolean,org.apache.harmony.xnet.provider.jsse.SSLParameters)>($r1, $r2, $i0, $z0, $r5);

        return $r3;
    }

    public java.lang.String[] getDefaultCipherSuites()
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r0;
        java.lang.String[] $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        $r1 = staticinvoke <org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] nativegetsupportedciphersuites()>();

        return $r1;
    }

    public java.lang.String[] getSupportedCipherSuites()
    {
        org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl $r0;
        java.lang.String[] $r1;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl;

        $r1 = staticinvoke <org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] nativegetsupportedciphersuites()>();

        return $r1;
    }
}
