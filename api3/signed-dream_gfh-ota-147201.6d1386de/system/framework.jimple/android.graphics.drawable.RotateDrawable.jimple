public class android.graphics.drawable.RotateDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    private static final float MAX_LEVEL;
    private boolean mMutated;
    private android.graphics.drawable.RotateDrawable$RotateState mState;

    public void <init>()
    {
        android.graphics.drawable.RotateDrawable $r0;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        specialinvoke $r0.<android.graphics.drawable.RotateDrawable: void <init>(android.graphics.drawable.RotateDrawable$RotateState)>(null);

        return;
    }

    private void <init>(android.graphics.drawable.RotateDrawable$RotateState)
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.graphics.drawable.RotateDrawable$RotateState;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.drawable.RotateDrawable$RotateState;

        specialinvoke $r2.<android.graphics.drawable.RotateDrawable$RotateState: void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.graphics.drawable.RotateDrawable)>($r1, $r0);

        $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState> = $r2;

        return;
    }

    void <init>(android.graphics.drawable.RotateDrawable$RotateState, android.graphics.drawable.RotateDrawable$1)
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.RotateDrawable$1 $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.graphics.drawable.RotateDrawable$RotateState;

        $r2 := @parameter1: android.graphics.drawable.RotateDrawable$1;

        specialinvoke $r0.<android.graphics.drawable.RotateDrawable: void <init>(android.graphics.drawable.RotateDrawable$RotateState)>($r1);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;
        android.graphics.Rect $r4;
        boolean $z0;
        float $f0, $f1, $f2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r2 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i1 = $r4.<android.graphics.Rect: int right>;

        $i0 = $r4.<android.graphics.Rect: int left>;

        $i1 = $i1 - $i0;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        $i3 = $r4.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i3;

        $r2 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $z0 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotXRel>;

        if $z0 == 0 goto label3;

        $f0 = (float) $i1;

        $f1 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotX>;

        $f0 = $f0 * $f1;

     label1:
        $z0 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotYRel>;

        if $z0 == 0 goto label4;

        $f1 = (float) $i0;

        $f2 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotY>;

        $f1 = $f1 * $f2;

     label2:
        $f2 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mCurrentDegrees>;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>($f2, $f0, $f1);

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

        return;

     label3:
        $f0 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotX>;

        goto label1;

     label4:
        $f1 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotY>;

        goto label2;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.RotateDrawable $r0;
        int $i0, $i1;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $i1 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: int mChangingConfigurations>;

        $i0 = $i0 | $i1;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i0 = $i0 | $i1;

        return $i0;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.RotateDrawable$RotateState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.RotateDrawable$RotateState: int mChangingConfigurations> = $i0;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        return r2;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.RotateDrawable $r0;
        int $i0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.RotateDrawable $r0;
        int $i0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.RotateDrawable $r0;
        int $i0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.Rect $r1;
        boolean $z0;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        android.util.TypedValue $r6;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3;
        android.graphics.drawable.Drawable $r7, $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        android.graphics.drawable.RotateDrawable$RotateState $r11, $r12;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter2: android.util.AttributeSet;

        $r4 = <com.android.internal.R$styleable: int[] RotateDrawable>;

        $r5 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r3, $r4);

        specialinvoke $r0.<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>($r1, $r2, $r5, 0);

        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(4);

        $i0 = $r6.<android.util.TypedValue: int type>;

        if $i0 != 6 goto label08;

        $z0 = 1;

     label01:
        if $z0 == 0 goto label09;

        $f0 = virtualinvoke $r6.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

     label02:
        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(5);

        $i0 = $r6.<android.util.TypedValue: int type>;

        if $i0 != 6 goto label10;

        $z1 = 1;

     label03:
        if $z1 == 0 goto label11;

        $f1 = virtualinvoke $r6.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

     label04:
        $f2 = virtualinvoke $r5.<android.content.res.TypedArray: float getFloat(int,float)>(2, 0.0F);

        $f3 = virtualinvoke $r5.<android.content.res.TypedArray: float getFloat(int,float)>(3, 360.0F);

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>($f2, $f3);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        $r7 = null;

        if $i0 <= 0 goto label05;

        $r7 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label05:
        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label06:
        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label12;

        if $i1 != 3 goto label07;

        $i2 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label12;

     label07:
        if $i1 != 2 goto label06;

        $r8 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r1, $r2, $r3);

        $r7 = $r8;

        if $r8 != null goto label06;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad element under <rotate>: ");

        $r10 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", $r10);

        goto label06;

     label08:
        $z0 = 0;

        goto label01;

     label09:
        $f0 = virtualinvoke $r6.<android.util.TypedValue: float getFloat()>();

        goto label02;

     label10:
        $z1 = 0;

        goto label03;

     label11:
        $f1 = virtualinvoke $r6.<android.util.TypedValue: float getFloat()>();

        goto label04;

     label12:
        if $r7 != null goto label13;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", "No drawable specified for <rotate>");

     label13:
        $r11 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r11.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable> = $r7;

        $r11 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r11.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotXRel> = $z0;

        $r11 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r11.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotX> = $f0;

        $r11 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r11.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotYRel> = $z1;

        $r11 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r11.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotY> = $f1;

        $r11 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r12 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r12.<android.graphics.drawable.RotateDrawable$RotateState: float mCurrentDegrees> = $f2;

        $r11.<android.graphics.drawable.RotateDrawable$RotateState: float mFromDegrees> = $f2;

        $r11 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r11.<android.graphics.drawable.RotateDrawable$RotateState: float mToDegrees> = $f3;

        if $r7 == null goto label14;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

        return;

     label14:
        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.Drawable$Callback $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r2.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>($r0);

        return;

     label1:
        return;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.RotateDrawable $r0;
        boolean $z0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        return $z0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        android.graphics.drawable.RotateDrawable$RotateState $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $z0 = $r0.<android.graphics.drawable.RotateDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != $r0 goto label2;

        $r2 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r1 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r0.<android.graphics.drawable.RotateDrawable: boolean mMutated> = 1;

        return $r0;

     label1:
        return $r0;

     label2:
        return $r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $i2 = $r1.<android.graphics.Rect: int right>;

        $i3 = $r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.RotateDrawable $r0;
        int $i0;
        android.graphics.Rect $r1;
        android.graphics.drawable.RotateDrawable$RotateState $r2, $r4;
        android.graphics.drawable.Drawable $r3;
        float $f0, $f1, $f2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r0.<android.graphics.drawable.RotateDrawable: void onBoundsChange(android.graphics.Rect)>($r1);

        $r2 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r4 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f0 = $r4.<android.graphics.drawable.RotateDrawable$RotateState: float mFromDegrees>;

        $r4 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f1 = $r4.<android.graphics.drawable.RotateDrawable$RotateState: float mToDegrees>;

        $r4 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f2 = $r4.<android.graphics.drawable.RotateDrawable$RotateState: float mFromDegrees>;

        $f1 = $f1 - $f2;

        $f2 = (float) $i0;

        $f2 = $f2 / 10000.0F;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mCurrentDegrees> = $f0;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return 1;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.RotateDrawable $r0;
        int[] $r1;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;
        android.graphics.Rect $r4;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: int[];

        $r2 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        $r4 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r0.<android.graphics.drawable.RotateDrawable: void onBoundsChange(android.graphics.Rect)>($r4);

        return $z0;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;
        long $l0;
        android.graphics.drawable.Drawable$Callback $r3;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r3 == null goto label1;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r3.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>($r0, $r2, $l0);

        return;

     label1:
        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.RotateDrawable $r0;
        int $i0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.ColorFilter $r1;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.RotateDrawable $r0;
        boolean $z0, $z1;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = $r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        return $z0;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.RotateDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;
        android.graphics.drawable.Drawable$Callback $r3;

        $r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        if $r3 == null goto label1;

        $r3 = $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback mCallback>;

        interfaceinvoke $r3.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>($r0, $r2);

        return;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.RotateDrawable: float MAX_LEVEL> = 10000.0F;

        return;
    }
}
