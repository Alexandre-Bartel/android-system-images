class android.text.method.PasswordTransformationMethod$PasswordCharSequence extends java.lang.Object implements android.text.GetChars, java.lang.CharSequence
{
    private java.lang.CharSequence mSource;

    public void <init>(java.lang.CharSequence)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $r1 := @parameter0: java.lang.CharSequence;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource> = $r1;

        return;
    }

    public char charAt(int)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence $r0;
        int $i0, $i1, $i2, $i4;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.text.Spanned $r2;
        java.lang.Object $r3;
        char $c3;
        java.lang.Object[] $r4;
        android.text.method.PasswordTransformationMethod$Visible[] $r5;
        android.text.method.PasswordTransformationMethod$Visible $r6;
        android.text.method.PasswordTransformationMethod $r7;

        $r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $z0 = $r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label4;

        $r1 = $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $r2 = (android.text.Spanned) $r1;

        $r3 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        $i1 = interfaceinvoke $r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r3);

        $r3 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        $i2 = interfaceinvoke $r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r3);

        if $i0 < $i1 goto label1;

        if $i0 >= $i2 goto label1;

        $r1 = $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        return $c3;

     label1:
        $i1 = interfaceinvoke $r2.<android.text.Spanned: int length()>();

        $r4 = interfaceinvoke $r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "android/text/method/PasswordTransformationMethod$Visible");

        $r5 = (android.text.method.PasswordTransformationMethod$Visible[]) $r4;

        $i1 = 0;

     label2:
        $i2 = lengthof $r5;

        if $i1 >= $i2 goto label4;

        $r6 = $r5[$i1];

        $r7 = staticinvoke <android.text.method.PasswordTransformationMethod$Visible: android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible)>($r6);

        $i2 = interfaceinvoke $r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r7);

        if $i2 < 0 goto label3;

        $r6 = $r5[$i1];

        $i2 = interfaceinvoke $r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r6);

        $r6 = $r5[$i1];

        $i4 = interfaceinvoke $r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r6);

        if $i0 < $i2 goto label3;

        if $i0 >= $i4 goto label3;

        $r1 = $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        return $c3;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $c3 = staticinvoke <android.text.method.PasswordTransformationMethod: char access$100()>();

        return $c3;
    }

    public void getChars(int, int, char[], int)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] $r1;
        java.lang.CharSequence $r2;
        int[] $r3, $r4;
        boolean $z0;
        android.text.Spanned $r5;
        java.lang.Object $r6;
        java.lang.Object[] $r7;
        android.text.method.PasswordTransformationMethod$Visible[] $r8;
        android.text.method.PasswordTransformationMethod$Visible $r9;
        android.text.method.PasswordTransformationMethod $r10;
        char $c9;

        $r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: char[];

        $i2 := @parameter3: int;

        $r2 = $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r2, $i0, $i1, $r1, $i2);

        $i3 = -1;

        $i4 = -1;

        $i5 = 0;

        $r3 = null;

        $r4 = null;

        $r2 = $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $z0 = $r2 instanceof android.text.Spanned;

        if $z0 == 0 goto label03;

        $r2 = $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $r5 = (android.text.Spanned) $r2;

        $r6 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        $i3 = interfaceinvoke $r5.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r6);

        $r6 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        $i4 = interfaceinvoke $r5.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r6);

        $i5 = interfaceinvoke $r5.<android.text.Spanned: int length()>();

        $r7 = interfaceinvoke $r5.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i5, class "android/text/method/PasswordTransformationMethod$Visible");

        $r8 = (android.text.method.PasswordTransformationMethod$Visible[]) $r7;

        $i5 = lengthof $r8;

        $r3 = newarray (int)[$i5];

        $r4 = newarray (int)[$i5];

        $i6 = 0;

     label01:
        if $i6 >= $i5 goto label03;

        $r9 = $r8[$i6];

        $r10 = staticinvoke <android.text.method.PasswordTransformationMethod$Visible: android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible)>($r9);

        $i7 = interfaceinvoke $r5.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r10);

        if $i7 < 0 goto label02;

        $r9 = $r8[$i6];

        $i7 = interfaceinvoke $r5.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r9);

        $r3[$i6] = $i7;

        $r9 = $r8[$i6];

        $i7 = interfaceinvoke $r5.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r9);

        $r4[$i6] = $i7;

     label02:
        $i6 = $i6 + 1;

        goto label01;

     label03:
        $i6 = $i0;

     label04:
        if $i6 >= $i1 goto label10;

        if $i6 < $i3 goto label05;

        if $i6 < $i4 goto label08;

     label05:
        $z0 = 0;

        $i7 = 0;

     label06:
        if $i7 >= $i5 goto label07;

        $i8 = $r3[$i7];

        if $i6 < $i8 goto label09;

        $i8 = $r4[$i7];

        if $i6 >= $i8 goto label09;

        $z0 = 1;

     label07:
        if $z0 != 0 goto label08;

        $i7 = $i6 - $i0;

        $i7 = $i7 + $i2;

        $c9 = staticinvoke <android.text.method.PasswordTransformationMethod: char access$100()>();

        $r1[$i7] = $c9;

     label08:
        $i6 = $i6 + 1;

        goto label04;

     label09:
        $i7 = $i7 + 1;

        goto label06;

     label10:
        return;
    }

    public int length()
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence $r0;
        int $i0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $r1 = $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence $r0;
        int $i0, $i1, $i2;
        char[] $r1;
        java.lang.String $r2;

        $r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i1 - $i0;

        $r1 = newarray (char)[$i2];

        virtualinvoke $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: void getChars(int,int,char[],int)>($i0, $i1, $r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence $r0;
        int $i0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        $r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $i0 = virtualinvoke $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: int length()>();

        $r1 = virtualinvoke $r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
