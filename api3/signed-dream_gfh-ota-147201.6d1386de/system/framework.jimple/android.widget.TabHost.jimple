public class android.widget.TabHost extends android.widget.FrameLayout implements android.view.ViewTreeObserver$OnTouchModeChangeListener
{
    protected int mCurrentTab;
    private android.view.View mCurrentView;
    protected android.app.LocalActivityManager mLocalActivityManager;
    private android.widget.TabHost$OnTabChangeListener mOnTabChangeListener;
    private android.widget.FrameLayout mTabContent;
    private android.view.View$OnKeyListener mTabKeyListener;
    private java.util.List mTabSpecs;
    private android.widget.TabWidget mTabWidget;

    public void <init>(android.content.Context)
    {
        android.widget.TabHost $r0;
        android.content.Context $r1;
        java.util.ArrayList $r2;

        $r0 := @this: android.widget.TabHost;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.FrameLayout: void <init>(android.content.Context)>($r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(2);

        $r0.<android.widget.TabHost: java.util.List mTabSpecs> = $r2;

        $r0.<android.widget.TabHost: int mCurrentTab> = -1;

        $r0.<android.widget.TabHost: android.view.View mCurrentView> = null;

        $r0.<android.widget.TabHost: android.app.LocalActivityManager mLocalActivityManager> = null;

        specialinvoke $r0.<android.widget.TabHost: void initTabHost()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TabHost $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        java.util.ArrayList $r3;

        $r0 := @this: android.widget.TabHost;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(2);

        $r0.<android.widget.TabHost: java.util.List mTabSpecs> = $r3;

        $r0.<android.widget.TabHost: int mCurrentTab> = -1;

        $r0.<android.widget.TabHost: android.view.View mCurrentView> = null;

        $r0.<android.widget.TabHost: android.app.LocalActivityManager mLocalActivityManager> = null;

        specialinvoke $r0.<android.widget.TabHost: void initTabHost()>();

        return;
    }

    static android.widget.FrameLayout access$100(android.widget.TabHost)
    {
        android.widget.TabHost $r0;
        android.widget.FrameLayout r1;

        $r0 := @parameter0: android.widget.TabHost;

        r1 = $r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        return r1;
    }

    static android.widget.TabWidget access$800(android.widget.TabHost)
    {
        android.widget.TabHost $r0;
        android.widget.TabWidget r1;

        $r0 := @parameter0: android.widget.TabHost;

        r1 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        return r1;
    }

    private final void initTabHost()
    {
        android.widget.TabHost $r0;

        $r0 := @this: android.widget.TabHost;

        virtualinvoke $r0.<android.view.View: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke $r0.<android.view.ViewGroup: void setDescendantFocusability(int)>(262144);

        $r0.<android.widget.TabHost: int mCurrentTab> = -1;

        $r0.<android.widget.TabHost: android.view.View mCurrentView> = null;

        return;
    }

    private void invokeOnTabChangeListener()
    {
        android.widget.TabHost $r0;
        java.lang.String $r1;
        android.widget.TabHost$OnTabChangeListener $r2;

        $r0 := @this: android.widget.TabHost;

        $r2 = $r0.<android.widget.TabHost: android.widget.TabHost$OnTabChangeListener mOnTabChangeListener>;

        if $r2 == null goto label1;

        $r2 = $r0.<android.widget.TabHost: android.widget.TabHost$OnTabChangeListener mOnTabChangeListener>;

        $r1 = virtualinvoke $r0.<android.widget.TabHost: java.lang.String getCurrentTabTag()>();

        interfaceinvoke $r2.<android.widget.TabHost$OnTabChangeListener: void onTabChanged(java.lang.String)>($r1);

        return;

     label1:
        return;
    }

    public void addTab(android.widget.TabHost$TabSpec)
    {
        android.widget.TabHost $r0;
        android.widget.TabHost$TabSpec $r1;
        android.widget.TabHost$IndicatorStrategy $r2;
        java.lang.IllegalArgumentException $r3;
        android.widget.TabHost$ContentStrategy $r4;
        android.view.View $r5;
        android.view.View$OnKeyListener $r6;
        android.widget.TabWidget $r7;
        java.util.List $r8;
        int $i0;

        $r0 := @this: android.widget.TabHost;

        $r1 := @parameter0: android.widget.TabHost$TabSpec;

        $r2 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$IndicatorStrategy access$200(android.widget.TabHost$TabSpec)>($r1);

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("you must specify a way to create the tab indicator.");

        throw $r3;

     label1:
        $r4 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$ContentStrategy access$300(android.widget.TabHost$TabSpec)>($r1);

        if $r4 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("you must specify a way to create the tab content");

        throw $r3;

     label2:
        $r2 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$IndicatorStrategy access$200(android.widget.TabHost$TabSpec)>($r1);

        $r5 = interfaceinvoke $r2.<android.widget.TabHost$IndicatorStrategy: android.view.View createIndicatorView()>();

        $r6 = $r0.<android.widget.TabHost: android.view.View$OnKeyListener mTabKeyListener>;

        virtualinvoke $r5.<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>($r6);

        $r7 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        virtualinvoke $r7.<android.widget.TabWidget: void addView(android.view.View)>($r5);

        $r8 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        if $i0 != -1 goto label3;

        virtualinvoke $r0.<android.widget.TabHost: void setCurrentTab(int)>(0);

        return;

     label3:
        return;
    }

    public void clearAllTabs()
    {
        android.widget.TabHost $r0;
        android.widget.TabWidget $r1;
        android.widget.FrameLayout $r2;
        java.util.List $r3;

        $r0 := @this: android.widget.TabHost;

        $r1 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        virtualinvoke $r1.<android.view.ViewGroup: void removeAllViews()>();

        specialinvoke $r0.<android.widget.TabHost: void initTabHost()>();

        $r2 = $r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        virtualinvoke $r2.<android.view.ViewGroup: void removeAllViews()>();

        $r3 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        virtualinvoke $r0.<android.view.View: void requestLayout()>();

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.widget.TabHost $r0;
        android.view.KeyEvent $r1;
        boolean $z0, $z1;
        int $i0;
        android.view.View $r2;
        android.widget.TabWidget $r3;

        $r0 := @this: android.widget.TabHost;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 19 goto label1;

        $r2 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $z1 = virtualinvoke $r2.<android.view.View: boolean isRootNamespace()>();

        if $z1 == 0 goto label1;

        $r2 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $z1 = virtualinvoke $r2.<android.view.View: boolean hasFocus()>();

        if $z1 == 0 goto label1;

        $r2 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findFocus()>();

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View focusSearch(int)>(33);

        if $r2 != null goto label1;

        $r3 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        $r2 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        virtualinvoke $r2.<android.view.View: boolean requestFocus()>();

        virtualinvoke $r0.<android.view.View: void playSoundEffect(int)>(2);

        return 1;

     label1:
        return $z0;
    }

    public void dispatchWindowFocusChanged(boolean)
    {
        android.widget.TabHost $r0;
        boolean $z0;
        android.view.View $r1;

        $r0 := @this: android.widget.TabHost;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        virtualinvoke $r1.<android.view.View: void dispatchWindowFocusChanged(boolean)>($z0);

        return;
    }

    public int getCurrentTab()
    {
        android.widget.TabHost $r0;
        int i0;

        $r0 := @this: android.widget.TabHost;

        i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        return i0;
    }

    public java.lang.String getCurrentTabTag()
    {
        android.widget.TabHost $r0;
        int $i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;
        android.widget.TabHost$TabSpec $r3;
        java.lang.String $r4;

        $r0 := @this: android.widget.TabHost;

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        if $i0 < 0 goto label1;

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        $r1 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $r1 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (android.widget.TabHost$TabSpec) $r2;

        $r4 = virtualinvoke $r3.<android.widget.TabHost$TabSpec: java.lang.String getTag()>();

        return $r4;

     label1:
        return null;
    }

    public android.view.View getCurrentTabView()
    {
        android.widget.TabHost $r0;
        int $i0, $i1;
        java.util.List $r1;
        android.widget.TabWidget $r2;
        android.view.View $r3;

        $r0 := @this: android.widget.TabHost;

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        if $i0 < 0 goto label1;

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        $r1 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $r2 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        return $r3;

     label1:
        return null;
    }

    public android.view.View getCurrentView()
    {
        android.widget.TabHost $r0;
        android.view.View r1;

        $r0 := @this: android.widget.TabHost;

        r1 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        return r1;
    }

    public android.widget.FrameLayout getTabContentView()
    {
        android.widget.TabHost $r0;
        android.widget.FrameLayout r1;

        $r0 := @this: android.widget.TabHost;

        r1 = $r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        return r1;
    }

    public android.widget.TabWidget getTabWidget()
    {
        android.widget.TabHost $r0;
        android.widget.TabWidget r1;

        $r0 := @this: android.widget.TabHost;

        r1 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        return r1;
    }

    public android.widget.TabHost$TabSpec newTabSpec(java.lang.String)
    {
        android.widget.TabHost $r0;
        java.lang.String $r1;
        android.widget.TabHost$TabSpec $r2;

        $r0 := @this: android.widget.TabHost;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.widget.TabHost$TabSpec;

        specialinvoke $r2.<android.widget.TabHost$TabSpec: void <init>(android.widget.TabHost,java.lang.String,android.widget.TabHost$1)>($r0, $r1, null);

        return $r2;
    }

    protected void onAttachedToWindow()
    {
        android.widget.TabHost $r0;
        android.view.ViewTreeObserver $r1;

        $r0 := @this: android.widget.TabHost;

        specialinvoke $r0.<android.view.View: void onAttachedToWindow()>();

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r0);

        return;

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.TabHost $r0;
        android.view.ViewTreeObserver $r1;

        $r0 := @this: android.widget.TabHost;

        specialinvoke $r0.<android.view.View: void onDetachedFromWindow()>();

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r0);

        return;

     label1:
        return;
    }

    public void onTouchModeChanged(boolean)
    {
        android.widget.TabHost $r0;
        boolean $z0;
        int $i0;
        android.view.View $r1;
        android.widget.TabWidget $r2;

        $r0 := @this: android.widget.TabHost;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label2;

        $r1 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label3;

     label1:
        $r2 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        $r1 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

        return;

     label2:
        return;

     label3:
        return;
    }

    public void setCurrentTab(int)
    {
        android.widget.TabHost $r0;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.widget.TabHost$TabSpec $r4;
        android.widget.TabHost$ContentStrategy $r5;
        android.widget.TabWidget $r6;
        android.view.View $r7;
        android.view.ViewParent $r8;
        android.widget.FrameLayout $r9;
        boolean $z0;

        $r0 := @this: android.widget.TabHost;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label5;

        $r2 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < $i1 goto label1;

        return;

     label1:
        $i1 = $r0.<android.widget.TabHost: int mCurrentTab>;

        if $i0 == $i1 goto label6;

        $i1 = $r0.<android.widget.TabHost: int mCurrentTab>;

        if $i1 == -1 goto label2;

        $r2 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i1 = $r0.<android.widget.TabHost: int mCurrentTab>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (android.widget.TabHost$TabSpec) $r3;

        $r5 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$ContentStrategy access$300(android.widget.TabHost$TabSpec)>($r4);

        interfaceinvoke $r5.<android.widget.TabHost$ContentStrategy: void tabClosed()>();

     label2:
        $r0.<android.widget.TabHost: int mCurrentTab> = $i0;

        $r2 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (android.widget.TabHost$TabSpec) $r3;

        $r6 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i0 = $r0.<android.widget.TabHost: int mCurrentTab>;

        virtualinvoke $r6.<android.widget.TabWidget: void focusCurrentTab(int)>($i0);

        $r5 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$ContentStrategy access$300(android.widget.TabHost$TabSpec)>($r4);

        $r7 = interfaceinvoke $r5.<android.widget.TabHost$ContentStrategy: android.view.View getContentView()>();

        $r0.<android.widget.TabHost: android.view.View mCurrentView> = $r7;

        $r7 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.ViewParent getParent()>();

        if $r8 != null goto label3;

        $r9 = $r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        $r7 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $r1 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r1.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r9.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r7, $r1);

     label3:
        $r6 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $z0 = virtualinvoke $r6.<android.view.ViewGroup: boolean hasFocus()>();

        if $z0 != 0 goto label4;

        $r7 = $r0.<android.widget.TabHost: android.view.View mCurrentView>;

        virtualinvoke $r7.<android.view.View: boolean requestFocus()>();

     label4:
        specialinvoke $r0.<android.widget.TabHost: void invokeOnTabChangeListener()>();

        return;

     label5:
        return;

     label6:
        return;
    }

    public void setCurrentTabByTag(java.lang.String)
    {
        android.widget.TabHost $r0;
        java.lang.String $r1, $r5;
        int $i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.widget.TabHost$TabSpec $r4;
        boolean $z0;

        $r0 := @this: android.widget.TabHost;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r2 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (android.widget.TabHost$TabSpec) $r3;

        $r5 = virtualinvoke $r4.<android.widget.TabHost$TabSpec: java.lang.String getTag()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<android.widget.TabHost: void setCurrentTab(int)>($i0);

        return;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
    {
        android.widget.TabHost $r0;
        android.widget.TabHost$OnTabChangeListener $r1;

        $r0 := @this: android.widget.TabHost;

        $r1 := @parameter0: android.widget.TabHost$OnTabChangeListener;

        $r0.<android.widget.TabHost: android.widget.TabHost$OnTabChangeListener mOnTabChangeListener> = $r1;

        return;
    }

    public void setup()
    {
        android.widget.TabHost $r0;
        android.view.View $r1;
        android.widget.TabWidget $r2;
        java.lang.RuntimeException $r3;
        android.widget.TabHost$1 $r4;
        android.widget.TabHost$2 $r5;
        android.widget.FrameLayout $r6;

        $r0 := @this: android.widget.TabHost;

        $r1 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908307);

        $r2 = (android.widget.TabWidget) $r1;

        $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget> = $r2;

        $r2 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        if $r2 != null goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Your TabHost must have a TabWidget whose id attribute is \'android.R.id.tabs\'");

        throw $r3;

     label1:
        $r4 = new android.widget.TabHost$1;

        specialinvoke $r4.<android.widget.TabHost$1: void <init>(android.widget.TabHost)>($r0);

        $r0.<android.widget.TabHost: android.view.View$OnKeyListener mTabKeyListener> = $r4;

        $r2 = $r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $r5 = new android.widget.TabHost$2;

        specialinvoke $r5.<android.widget.TabHost$2: void <init>(android.widget.TabHost)>($r0);

        virtualinvoke $r2.<android.widget.TabWidget: void setTabSelectionListener(android.widget.TabWidget$OnTabSelectionChanged)>($r5);

        $r1 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>(16908305);

        $r6 = (android.widget.FrameLayout) $r1;

        $r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent> = $r6;

        $r6 = $r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        if $r6 != null goto label2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Your TabHost must have a FrameLayout whose id attribute is \'android.R.id.tabcontent\'");

        throw $r3;

     label2:
        return;
    }

    public void setup(android.app.LocalActivityManager)
    {
        android.widget.TabHost $r0;
        android.app.LocalActivityManager $r1;

        $r0 := @this: android.widget.TabHost;

        $r1 := @parameter0: android.app.LocalActivityManager;

        virtualinvoke $r0.<android.widget.TabHost: void setup()>();

        $r0.<android.widget.TabHost: android.app.LocalActivityManager mLocalActivityManager> = $r1;

        return;
    }
}
