class android.text.PackedObjectVector extends java.lang.Object
{
    private int mColumns;
    private int mRowGapLength;
    private int mRowGapStart;
    private int mRows;
    private java.lang.Object[] mValues;

    public void <init>(int)
    {
        android.text.PackedObjectVector $r0;
        int $i0, $i1;
        java.lang.Object[] $r1;

        $r0 := @this: android.text.PackedObjectVector;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.text.PackedObjectVector: int mColumns> = $i0;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>(0);

        $i1 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i0 = $i0 / $i1;

        $r0.<android.text.PackedObjectVector: int mRows> = $i0;

        $r0.<android.text.PackedObjectVector: int mRowGapStart> = 0;

        $i0 = $r0.<android.text.PackedObjectVector: int mRows>;

        $r0.<android.text.PackedObjectVector: int mRowGapLength> = $i0;

        $i0 = $r0.<android.text.PackedObjectVector: int mRows>;

        $i1 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i0 = $i0 * $i1;

        $r1 = newarray (java.lang.Object)[$i0];

        $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues> = $r1;

        return;
    }

    private void growBuffer()
    {
        android.text.PackedObjectVector $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r1, $r2;

        $r0 := @this: android.text.PackedObjectVector;

        $i1 = virtualinvoke $r0.<android.text.PackedObjectVector: int size()>();

        $i1 = $i1 + 1;

        $i0 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i1 = $i0 * $i1;

        $i1 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i1);

        $i0 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i1 = $i1 / $i0;

        $i0 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i0 = $i0 * $i1;

        $r1 = newarray (java.lang.Object)[$i0];

        $i0 = $r0.<android.text.PackedObjectVector: int mRows>;

        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i3 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i2 = $i2 + $i3;

        $i0 = $i0 - $i2;

        $r2 = $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues>;

        $i2 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i3 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i2 = $i2 * $i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i2);

        $r2 = $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues>;

        $i2 = $r0.<android.text.PackedObjectVector: int mRows>;

        $i2 = $i2 - $i0;

        $i3 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i2 = $i2 * $i3;

        $i3 = $i1 - $i0;

        $i4 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i3 = $i3 * $i4;

        $i4 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i0 = $i4 * $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i3, $i0);

        $i0 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i2 = $r0.<android.text.PackedObjectVector: int mRows>;

        $i2 = $i1 - $i2;

        $i0 = $i0 + $i2;

        $r0.<android.text.PackedObjectVector: int mRowGapLength> = $i0;

        $r0.<android.text.PackedObjectVector: int mRows> = $i1;

        $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues> = $r1;

        return;
    }

    private void moveRowGapTo(int)
    {
        android.text.PackedObjectVector $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        $r0 := @this: android.text.PackedObjectVector;

        $i0 := @parameter0: int;

        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        if $i0 != $i2 goto label1;

        return;

     label1:
        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        if $i0 <= $i2 goto label5;

        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i2 = $i2 + $i0;

        $i3 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i1 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i1 = $i3 + $i1;

        $i2 = $i2 - $i1;

        $i1 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i3 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i1 = $i1 + $i3;

     label2:
        $i3 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i4 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i3 = $i3 + $i4;

        $i3 = $i3 + $i2;

        if $i1 >= $i3 goto label9;

        $i3 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i4 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i3 = $i3 + $i4;

        $i3 = $i1 - $i3;

        $i4 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i3 = $i3 + $i4;

        $i4 = 0;

     label3:
        $i5 = $r0.<android.text.PackedObjectVector: int mColumns>;

        if $i4 >= $i5 goto label4;

        $r1 = $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues>;

        $i5 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i5 = $i5 * $i1;

        $i5 = $i5 + $i4;

        $r2 = $r1[$i5];

        $r1 = $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues>;

        $i5 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i5 = $i5 * $i3;

        $i5 = $i5 + $i4;

        $r1[$i5] = $r2;

        $i4 = $i4 + 1;

        goto label3;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i2 = $i2 - $i0;

        $i1 = $i0 + $i2;

        $i1 = $i1 - 1;

     label6:
        if $i1 < $i0 goto label9;

        $i3 = $i1 - $i0;

        $i4 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i3 = $i3 + $i4;

        $i4 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i3 = $i3 + $i4;

        $i3 = $i3 - $i2;

        $i4 = 0;

     label7:
        $i5 = $r0.<android.text.PackedObjectVector: int mColumns>;

        if $i4 >= $i5 goto label8;

        $r1 = $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues>;

        $i5 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i5 = $i5 * $i1;

        $i5 = $i5 + $i4;

        $r2 = $r1[$i5];

        $r1 = $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues>;

        $i5 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i5 = $i5 * $i3;

        $i5 = $i5 + $i4;

        $r1[$i5] = $r2;

        $i4 = $i4 + 1;

        goto label7;

     label8:
        $i1 = $i1 + -1;

        goto label6;

     label9:
        $r0.<android.text.PackedObjectVector: int mRowGapStart> = $i0;

        return;
    }

    public void deleteAt(int, int)
    {
        android.text.PackedObjectVector $r0;
        int $i0, $i1;

        $r0 := @this: android.text.PackedObjectVector;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 + $i1;

        specialinvoke $r0.<android.text.PackedObjectVector: void moveRowGapTo(int)>($i0);

        $i0 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i0 = $i0 - $i1;

        $r0.<android.text.PackedObjectVector: int mRowGapStart> = $i0;

        $i0 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i0 = $i0 + $i1;

        $r0.<android.text.PackedObjectVector: int mRowGapLength> = $i0;

        $i0 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i1 = virtualinvoke $r0.<android.text.PackedObjectVector: int size()>();

        $i1 = $i1 * 2;

        if $i0 <= $i1 goto label1;

        return;

     label1:
        return;
    }

    public void dump()
    {
        android.text.PackedObjectVector $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: android.text.PackedObjectVector;

        $i0 = 0;

     label1:
        $i1 = $r0.<android.text.PackedObjectVector: int mRows>;

        if $i0 >= $i1 goto label7;

        $i1 = 0;

     label2:
        $i2 = $r0.<android.text.PackedObjectVector: int mColumns>;

        if $i1 >= $i2 goto label6;

        $r2 = $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues>;

        $i2 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i2 = $i2 * $i0;

        $i2 = $i2 + $i1;

        $r1 = $r2[$i2];

        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        if $i0 < $i2 goto label3;

        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i3 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i2 = $i2 + $i3;

        if $i0 < $i2 goto label5;

     label3:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>($r5);

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>($r5);

        goto label4;

     label6:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(" << \n");

        $i0 = $i0 + 1;

        goto label1;

     label7:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("-----\n\n");

        return;
    }

    public java.lang.Object getValue(int, int)
    {
        android.text.PackedObjectVector $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        java.lang.Object[] $r2;

        $r0 := @this: android.text.PackedObjectVector;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        if $i1 < $i2 goto label1;

        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i1 = $i1 + $i2;

     label1:
        $r2 = $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues>;

        $i2 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i1 = $i2 * $i1;

        $i1 = $i1 + $i0;

        $r1 = $r2[$i1];

        return $r1;
    }

    public void insertAt(int, java.lang.Object[])
    {
        android.text.PackedObjectVector $r0;
        int $i0, $i1, $i2;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        $r0 := @this: android.text.PackedObjectVector;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object[];

        specialinvoke $r0.<android.text.PackedObjectVector: void moveRowGapTo(int)>($i0);

        $i1 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        if $i1 != 0 goto label1;

        specialinvoke $r0.<android.text.PackedObjectVector: void growBuffer()>();

     label1:
        $i1 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        $i1 = $i1 + 1;

        $r0.<android.text.PackedObjectVector: int mRowGapStart> = $i1;

        $i1 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i1 = $i1 - 1;

        $r0.<android.text.PackedObjectVector: int mRowGapLength> = $i1;

        if $r1 != null goto label3;

        $i1 = 0;

     label2:
        $i2 = $r0.<android.text.PackedObjectVector: int mColumns>;

        if $i1 >= $i2 goto label5;

        virtualinvoke $r0.<android.text.PackedObjectVector: void setValue(int,int,java.lang.Object)>($i0, $i1, null);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i1 = 0;

     label4:
        $i2 = $r0.<android.text.PackedObjectVector: int mColumns>;

        if $i1 >= $i2 goto label6;

        $r2 = $r1[$i1];

        virtualinvoke $r0.<android.text.PackedObjectVector: void setValue(int,int,java.lang.Object)>($i0, $i1, $r2);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;

     label6:
        return;
    }

    public void setValue(int, int, java.lang.Object)
    {
        android.text.PackedObjectVector $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        java.lang.Object[] $r2;

        $r0 := @this: android.text.PackedObjectVector;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapStart>;

        if $i1 < $i2 goto label1;

        $i2 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i1 = $i1 + $i2;

     label1:
        $r2 = $r0.<android.text.PackedObjectVector: java.lang.Object[] mValues>;

        $i2 = $r0.<android.text.PackedObjectVector: int mColumns>;

        $i1 = $i2 * $i1;

        $i1 = $i1 + $i0;

        $r2[$i1] = $r1;

        return;
    }

    public int size()
    {
        android.text.PackedObjectVector $r0;
        int $i0, $i1;

        $r0 := @this: android.text.PackedObjectVector;

        $i1 = $r0.<android.text.PackedObjectVector: int mRows>;

        $i0 = $r0.<android.text.PackedObjectVector: int mRowGapLength>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public int width()
    {
        android.text.PackedObjectVector $r0;
        int i0;

        $r0 := @this: android.text.PackedObjectVector;

        i0 = $r0.<android.text.PackedObjectVector: int mColumns>;

        return i0;
    }
}
