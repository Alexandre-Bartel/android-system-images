public abstract class android.text.LoginFilter extends java.lang.Object implements android.text.InputFilter
{
    private boolean mAppendInvalid;

    void <init>()
    {
        android.text.LoginFilter $r0;

        $r0 := @this: android.text.LoginFilter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.text.LoginFilter: boolean mAppendInvalid> = 0;

        return;
    }

    void <init>(boolean)
    {
        android.text.LoginFilter $r0;
        boolean $z0;

        $r0 := @this: android.text.LoginFilter;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.text.LoginFilter: boolean mAppendInvalid> = $z0;

        return;
    }

    public java.lang.CharSequence filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int)
    {
        android.text.LoginFilter $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        android.text.Spanned $r2;
        android.text.SpannableString $r3;
        char[] $r4;
        java.lang.String $r5;
        boolean $z0, $z1;
        char $c5;

        $r0 := @this: android.text.LoginFilter;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.text.Spanned;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $i4 = $i1 - $i0;

        $r4 = newarray (char)[$i4];

        $z0 = 0;

        virtualinvoke $r0.<android.text.LoginFilter: void onStart()>();

        $i4 = 0;

     label01:
        if $i4 >= $i2 goto label03;

        $c5 = interfaceinvoke $r2.<android.text.Spanned: char charAt(int)>($i4);

        $z1 = virtualinvoke $r0.<android.text.LoginFilter: boolean isAllowed(char)>($c5);

        if $z1 != 0 goto label02;

        virtualinvoke $r0.<android.text.LoginFilter: void onInvalidCharacter(char)>($c5);

     label02:
        $i4 = $i4 + 1;

        goto label01;

     label03:
        $i4 = $i0;

        $i2 = 0;

     label04:
        if $i4 >= $i1 goto label09;

        $c5 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i4);

        $z1 = virtualinvoke $r0.<android.text.LoginFilter: boolean isAllowed(char)>($c5);

        if $z1 == 0 goto label06;

        $i6 = $i2 + 1;

        $r4[$i2] = $c5;

     label05:
        $i4 = $i4 + 1;

        $i2 = $i6;

        goto label04;

     label06:
        $z1 = $r0.<android.text.LoginFilter: boolean mAppendInvalid>;

        if $z1 == 0 goto label08;

        $i6 = $i2 + 1;

        $r4[$i2] = $c5;

     label07:
        virtualinvoke $r0.<android.text.LoginFilter: void onInvalidCharacter(char)>($c5);

        goto label05;

     label08:
        $z0 = 1;

        $i6 = $i2;

        goto label07;

     label09:
        $i4 = interfaceinvoke $r2.<android.text.Spanned: int length()>();

        if $i3 >= $i4 goto label11;

        $c5 = interfaceinvoke $r2.<android.text.Spanned: char charAt(int)>($i3);

        $z1 = virtualinvoke $r0.<android.text.LoginFilter: boolean isAllowed(char)>($c5);

        if $z1 != 0 goto label10;

        virtualinvoke $r0.<android.text.LoginFilter: void onInvalidCharacter(char)>($c5);

     label10:
        $i3 = $i3 + 1;

        goto label09;

     label11:
        virtualinvoke $r0.<android.text.LoginFilter: void onStop()>();

        if $z0 != 0 goto label12;

        return null;

     label12:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>($r4, 0, $i2);

        $z0 = $r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label13;

        $r3 = new android.text.SpannableString;

        specialinvoke $r3.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r5);

        $r2 = (android.text.Spanned) $r1;

        staticinvoke <android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>($r2, $i0, $i1, null, $r3, 0);

        return $r3;

     label13:
        return $r5;
    }

    public abstract boolean isAllowed(char);

    public void onInvalidCharacter(char)
    {
        android.text.LoginFilter $r0;
        char $c0;

        $r0 := @this: android.text.LoginFilter;

        $c0 := @parameter0: char;

        return;
    }

    public void onStart()
    {
        android.text.LoginFilter $r0;

        $r0 := @this: android.text.LoginFilter;

        return;
    }

    public void onStop()
    {
        android.text.LoginFilter $r0;

        $r0 := @this: android.text.LoginFilter;

        return;
    }
}
