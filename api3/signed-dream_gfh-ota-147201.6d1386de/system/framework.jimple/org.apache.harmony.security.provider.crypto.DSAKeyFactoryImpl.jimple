public class org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl extends java.security.KeyFactorySpi
{

    public void <init>()
    {
        org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl $r0;

        $r0 := @this: org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl;

        specialinvoke $r0.<java.security.KeyFactorySpi: void <init>()>();

        return;
    }

    protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl $r0;
        java.lang.String $r1;
        java.security.spec.KeySpec $r2;
        boolean $z0;
        org.apache.harmony.security.provider.crypto.DSAPrivateKeyImpl $r3;
        java.security.spec.DSAPrivateKeySpec $r4;
        java.security.spec.PKCS8EncodedKeySpec $r5;
        java.security.spec.InvalidKeySpecException $r6;

        $r0 := @this: org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl;

        $r2 := @parameter0: java.security.spec.KeySpec;

        if $r2 == null goto label2;

        $z0 = $r2 instanceof java.security.spec.DSAPrivateKeySpec;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.harmony.security.provider.crypto.DSAPrivateKeyImpl;

        $r4 = (java.security.spec.DSAPrivateKeySpec) $r2;

        specialinvoke $r3.<org.apache.harmony.security.provider.crypto.DSAPrivateKeyImpl: void <init>(java.security.spec.DSAPrivateKeySpec)>($r4);

        return $r3;

     label1:
        $z0 = $r2 instanceof java.security.spec.PKCS8EncodedKeySpec;

        if $z0 == 0 goto label2;

        $r3 = new org.apache.harmony.security.provider.crypto.DSAPrivateKeyImpl;

        $r5 = (java.security.spec.PKCS8EncodedKeySpec) $r2;

        specialinvoke $r3.<org.apache.harmony.security.provider.crypto.DSAPrivateKeyImpl: void <init>(java.security.spec.PKCS8EncodedKeySpec)>($r5);

        return $r3;

     label2:
        $r6 = new java.security.spec.InvalidKeySpecException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.19C");

        specialinvoke $r6.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r1);

        throw $r6;
    }

    protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl $r0;
        java.lang.String $r1;
        java.security.spec.KeySpec $r2;
        boolean $z0;
        org.apache.harmony.security.provider.crypto.DSAPublicKeyImpl $r3;
        java.security.spec.DSAPublicKeySpec $r4;
        java.security.spec.X509EncodedKeySpec $r5;
        java.security.spec.InvalidKeySpecException $r6;

        $r0 := @this: org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl;

        $r2 := @parameter0: java.security.spec.KeySpec;

        if $r2 == null goto label2;

        $z0 = $r2 instanceof java.security.spec.DSAPublicKeySpec;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.harmony.security.provider.crypto.DSAPublicKeyImpl;

        $r4 = (java.security.spec.DSAPublicKeySpec) $r2;

        specialinvoke $r3.<org.apache.harmony.security.provider.crypto.DSAPublicKeyImpl: void <init>(java.security.spec.DSAPublicKeySpec)>($r4);

        return $r3;

     label1:
        $z0 = $r2 instanceof java.security.spec.X509EncodedKeySpec;

        if $z0 == 0 goto label2;

        $r3 = new org.apache.harmony.security.provider.crypto.DSAPublicKeyImpl;

        $r5 = (java.security.spec.X509EncodedKeySpec) $r2;

        specialinvoke $r3.<org.apache.harmony.security.provider.crypto.DSAPublicKeyImpl: void <init>(java.security.spec.X509EncodedKeySpec)>($r5);

        return $r3;

     label2:
        $r6 = new java.security.spec.InvalidKeySpecException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.19D");

        specialinvoke $r6.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r1);

        throw $r6;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl $r0;
        java.security.Key $r1;
        java.lang.Class $r2;
        java.lang.String $r4;
        boolean $z0;
        java.security.interfaces.DSAPrivateKey $r5;
        java.math.BigInteger $r6, $r8, $r9, $r10;
        java.security.interfaces.DSAParams $r7;
        byte[] $r12;
        java.security.interfaces.DSAPublicKey $r14;
        java.lang.NullPointerException r15;
        java.security.spec.DSAPrivateKeySpec r16;
        java.security.spec.PKCS8EncodedKeySpec r17;
        java.security.spec.InvalidKeySpecException r18;
        java.security.spec.DSAPublicKeySpec r19;
        java.security.spec.X509EncodedKeySpec r20;

        $r0 := @this: org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl;

        $r1 := @parameter0: java.security.Key;

        $r2 := @parameter1: java.lang.Class;

        if $r1 == null goto label7;

        if $r2 != null goto label1;

        r15 = new java.lang.NullPointerException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.19E");

        specialinvoke r15.<java.lang.NullPointerException: void <init>(java.lang.String)>($r4);

        throw r15;

     label1:
        $z0 = $r1 instanceof java.security.interfaces.DSAPrivateKey;

        if $z0 == 0 goto label4;

        $r5 = (java.security.interfaces.DSAPrivateKey) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/security/spec/DSAPrivateKeySpec");

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.security.interfaces.DSAPrivateKey: java.math.BigInteger getX()>();

        $r7 = interfaceinvoke $r5.<java.security.interfaces.DSAPrivateKey: java.security.interfaces.DSAParams getParams()>();

        $r8 = interfaceinvoke $r7.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r9 = interfaceinvoke $r7.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r10 = interfaceinvoke $r7.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        r16 = new java.security.spec.DSAPrivateKeySpec;

        specialinvoke r16.<java.security.spec.DSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r6, $r8, $r9, $r10);

        return r16;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/security/spec/PKCS8EncodedKeySpec");

        if $z0 == 0 goto label3;

        r17 = new java.security.spec.PKCS8EncodedKeySpec;

        $r12 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke r17.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r12);

        return r17;

     label3:
        r18 = new java.security.spec.InvalidKeySpecException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.19C");

        specialinvoke r18.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r4);

        throw r18;

     label4:
        $z0 = $r1 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 == 0 goto label7;

        $r14 = (java.security.interfaces.DSAPublicKey) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/security/spec/DSAPublicKeySpec");

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r14.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        $r7 = interfaceinvoke $r14.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r8 = interfaceinvoke $r7.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r9 = interfaceinvoke $r7.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r10 = interfaceinvoke $r7.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        r19 = new java.security.spec.DSAPublicKeySpec;

        specialinvoke r19.<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r6, $r8, $r9, $r10);

        return r19;

     label5:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/security/spec/X509EncodedKeySpec");

        if $z0 == 0 goto label6;

        r20 = new java.security.spec.X509EncodedKeySpec;

        $r12 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke r20.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r12);

        return r20;

     label6:
        r18 = new java.security.spec.InvalidKeySpecException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.19D");

        specialinvoke r18.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r4);

        throw r18;

     label7:
        r18 = new java.security.spec.InvalidKeySpecException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.19F");

        specialinvoke r18.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r4);

        throw r18;
    }

    protected java.security.Key engineTranslateKey(java.security.Key) throws java.security.InvalidKeyException
    {
        org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl $r0;
        java.security.Key $r1;
        boolean $z0;
        java.security.interfaces.DSAPrivateKey $r2;
        java.security.interfaces.DSAParams $r3;
        java.security.spec.DSAPrivateKeySpec $r4;
        java.math.BigInteger $r5, $r6, $r7, $r8;
        java.security.PrivateKey $r9;
        java.security.spec.InvalidKeySpecException $r10, $r16;
        java.security.InvalidKeyException $r11;
        java.lang.String $r12;
        java.security.interfaces.DSAPublicKey $r13;
        java.security.spec.DSAPublicKeySpec $r14;
        java.security.PublicKey $r15;

        $r0 := @this: org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl;

        $r1 := @parameter0: java.security.Key;

        if $r1 == null goto label8;

        $z0 = $r1 instanceof java.security.interfaces.DSAPrivateKey;

        if $z0 == 0 goto label4;

        $r2 = (java.security.interfaces.DSAPrivateKey) $r1;

        $r3 = interfaceinvoke $r2.<java.security.interfaces.DSAPrivateKey: java.security.interfaces.DSAParams getParams()>();

        $r4 = new java.security.spec.DSAPrivateKeySpec;

     label1:
        $r5 = interfaceinvoke $r2.<java.security.interfaces.DSAPrivateKey: java.math.BigInteger getX()>();

        $r6 = interfaceinvoke $r3.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r7 = interfaceinvoke $r3.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r8 = interfaceinvoke $r3.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        specialinvoke $r4.<java.security.spec.DSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r6, $r7, $r8);

        $r9 = virtualinvoke $r0.<org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl: java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)>($r4);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.security.InvalidKeyException;

        $r12 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.1A0", $r10);

        specialinvoke $r11.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label4:
        $z0 = $r1 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 == 0 goto label8;

        $r13 = (java.security.interfaces.DSAPublicKey) $r1;

        $r3 = interfaceinvoke $r13.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r14 = new java.security.spec.DSAPublicKeySpec;

     label5:
        $r5 = interfaceinvoke $r13.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        $r6 = interfaceinvoke $r3.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r7 = interfaceinvoke $r3.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r8 = interfaceinvoke $r3.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        specialinvoke $r14.<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r6, $r7, $r8);

        $r15 = virtualinvoke $r0.<org.apache.harmony.security.provider.crypto.DSAKeyFactoryImpl: java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)>($r14);

     label6:
        return $r15;

     label7:
        $r16 := @caughtexception;

        $r11 = new java.security.InvalidKeyException;

        $r12 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.1A1", $r16);

        specialinvoke $r11.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label8:
        $r11 = new java.security.InvalidKeyException;

        $r12 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.19F");

        specialinvoke $r11.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label3;
        catch java.security.spec.InvalidKeySpecException from label5 to label6 with label7;
    }
}
