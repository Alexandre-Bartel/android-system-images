public class android.text.BoringLayout extends android.text.Layout implements android.text.TextUtils$EllipsizeCallback
{
    private static final char FIRST_RIGHT_TO_LEFT;
    private static final android.text.TextPaint sTemp;
    int mBottom;
    private int mBottomPadding;
    int mDesc;
    private java.lang.String mDirect;
    private int mEllipsizedCount;
    private int mEllipsizedStart;
    private int mEllipsizedWidth;
    private float mMax;
    private android.graphics.Paint mPaint;
    private int mTopPadding;

    static void <clinit>()
    {
        android.text.TextPaint $r0;

        <android.text.BoringLayout: char FIRST_RIGHT_TO_LEFT> = 1424;

        $r0 = new android.text.TextPaint;

        specialinvoke $r0.<android.text.TextPaint: void <init>()>();

        <android.text.BoringLayout: android.text.TextPaint sTemp> = $r0;

        return;
    }

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, android.text.BoringLayout$Metrics, boolean)
    {
        android.text.BoringLayout $r0;
        java.lang.CharSequence $r1;
        android.text.TextPaint $r2;
        int $i0;
        android.text.Layout$Alignment $r3;
        float $f0, $f1;
        android.text.BoringLayout$Metrics $r4;
        boolean $z0;

        $r0 := @this: android.text.BoringLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $r4 := @parameter6: android.text.BoringLayout$Metrics;

        $z0 := @parameter7: boolean;

        specialinvoke $r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>($r1, $r2, $i0, $r3, $f0, $f1);

        $r0.<android.text.BoringLayout: int mEllipsizedWidth> = $i0;

        $r0.<android.text.BoringLayout: int mEllipsizedStart> = 0;

        $r0.<android.text.BoringLayout: int mEllipsizedCount> = 0;

        virtualinvoke $r0.<android.text.BoringLayout: void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean)>($r1, $r2, $i0, $r3, $f0, $f1, $r4, $z0, 1);

        return;
    }

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, android.text.BoringLayout$Metrics, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.BoringLayout $r0;
        java.lang.CharSequence $r1;
        android.text.TextPaint $r2;
        int $i0, $i1;
        android.text.Layout$Alignment $r3;
        float $f0, $f1, $f2;
        android.text.BoringLayout$Metrics $r4;
        boolean $z0, $z1;
        android.text.TextUtils$TruncateAt $r5, $r6;

        $r0 := @this: android.text.BoringLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $r4 := @parameter6: android.text.BoringLayout$Metrics;

        $z0 := @parameter7: boolean;

        $r5 := @parameter8: android.text.TextUtils$TruncateAt;

        $i1 := @parameter9: int;

        specialinvoke $r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>($r1, $r2, $i0, $r3, $f0, $f1);

        if $r5 == null goto label1;

        $r6 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r5 != $r6 goto label3;

     label1:
        $r0.<android.text.BoringLayout: int mEllipsizedWidth> = $i0;

        $r0.<android.text.BoringLayout: int mEllipsizedStart> = 0;

        $r0.<android.text.BoringLayout: int mEllipsizedCount> = 0;

        $z1 = 1;

     label2:
        $r1 = virtualinvoke $r0.<android.text.Layout: java.lang.CharSequence getText()>();

        virtualinvoke $r0.<android.text.BoringLayout: void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean)>($r1, $r2, $i0, $r3, $f0, $f1, $r4, $z0, $z1);

        return;

     label3:
        $f2 = (float) $i1;

        $r1 = staticinvoke <android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback)>($r1, $r2, $f2, $r5, 1, $r0);

        virtualinvoke $r0.<android.text.Layout: void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>($r1, $r2, $i0, $r3, $f0, $f1);

        $r0.<android.text.BoringLayout: int mEllipsizedWidth> = $i1;

        $z1 = 0;

        goto label2;
    }

    public static android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence, android.text.TextPaint)
    {
        java.lang.CharSequence $r0;
        android.text.TextPaint $r1;
        android.text.BoringLayout$Metrics $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: android.text.TextPaint;

        $r2 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout$Metrics)>($r0, $r1, null);

        return $r2;
    }

    public static android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence, android.text.TextPaint, android.text.BoringLayout$Metrics)
    {
        android.text.TextPaint $r0, $r5, $r6;
        java.lang.CharSequence $r1;
        android.text.BoringLayout$Metrics $r2, $r4;
        char[] $r3;
        int $i0, $i1, $i2, $i3;
        char $c4;
        boolean $z0;
        float $f0;
        java.lang.Throwable $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: android.text.TextPaint;

        $r2 := @parameter2: android.text.BoringLayout$Metrics;

        $r3 = staticinvoke <android.text.TextUtils: char[] obtain(int)>(500);

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label15;

        $i2 = $i1 + 500;

        if $i2 <= $i0 goto label02;

        $i2 = $i0;

     label02:
        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r1, $i1, $i2, $r3, 0);

        $i2 = $i2 - $i1;

        $i3 = 0;

     label03:
        if $i3 >= $i2 goto label10;

        $c4 = $r3[$i3];

        if $c4 == 10 goto label04;

        if $c4 == 9 goto label04;

        if $c4 < 1424 goto label09;

     label04:
        $z0 = 0;

     label05:
        staticinvoke <android.text.TextUtils: void recycle(char[])>($r3);

        if $z0 == 0 goto label14;

        $r4 = $r2;

        if $r2 != null goto label06;

        $r4 = new android.text.BoringLayout$Metrics;

        specialinvoke $r4.<android.text.BoringLayout$Metrics: void <init>()>();

     label06:
        $r5 = <android.text.BoringLayout: android.text.TextPaint sTemp>;

        entermonitor $r5;

     label07:
        $r6 = <android.text.BoringLayout: android.text.TextPaint sTemp>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $f0 = staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r0, $r6, $r1, 0, $i0, $r4);

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i0 = (int) $f0;

        exitmonitor $r5;

     label08:
        $r4.<android.text.BoringLayout$Metrics: int width> = $i0;

        return $r4;

     label09:
        $i3 = $i3 + 1;

        goto label03;

     label10:
        $i1 = $i1 + 500;

        goto label01;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor $r5;

     label13:
        throw $r7;

     label14:
        return null;

     label15:
        $z0 = 1;

        goto label05;

        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public static android.text.BoringLayout make(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, android.text.BoringLayout$Metrics, boolean)
    {
        java.lang.CharSequence $r0;
        android.text.TextPaint $r1;
        int $i0;
        android.text.Layout$Alignment $r2;
        float $f0, $f1;
        android.text.BoringLayout$Metrics $r3;
        boolean $z0;
        android.text.BoringLayout $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $r3 := @parameter6: android.text.BoringLayout$Metrics;

        $z0 := @parameter7: boolean;

        $r4 = new android.text.BoringLayout;

        specialinvoke $r4.<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r0, $r1, $i0, $r2, $f0, $f1, $r3, $z0);

        return $r4;
    }

    public static android.text.BoringLayout make(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, android.text.BoringLayout$Metrics, boolean, android.text.TextUtils$TruncateAt, int)
    {
        java.lang.CharSequence $r0;
        android.text.TextPaint $r1;
        int $i0, $i1;
        android.text.Layout$Alignment $r2;
        float $f0, $f1;
        android.text.BoringLayout$Metrics $r3;
        boolean $z0;
        android.text.TextUtils$TruncateAt $r4;
        android.text.BoringLayout $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $r3 := @parameter6: android.text.BoringLayout$Metrics;

        $z0 := @parameter7: boolean;

        $r4 := @parameter8: android.text.TextUtils$TruncateAt;

        $i1 := @parameter9: int;

        $r5 = new android.text.BoringLayout;

        specialinvoke $r5.<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r0, $r1, $i0, $r2, $f0, $f1, $r3, $z0, $r4, $i1);

        return $r5;
    }

    public void draw(android.graphics.Canvas, android.graphics.Path, android.graphics.Paint, int)
    {
        android.text.BoringLayout $r0;
        android.graphics.Canvas $r1;
        android.graphics.Path $r2;
        android.graphics.Paint $r3;
        int $i0, $i1;
        java.lang.String $r4;
        float $f0;

        $r0 := @this: android.text.BoringLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Path;

        $r3 := @parameter2: android.graphics.Paint;

        $i0 := @parameter3: int;

        $r4 = $r0.<android.text.BoringLayout: java.lang.String mDirect>;

        if $r4 == null goto label1;

        if $r2 != null goto label1;

        $r4 = $r0.<android.text.BoringLayout: java.lang.String mDirect>;

        $i0 = $r0.<android.text.BoringLayout: int mBottom>;

        $i1 = $r0.<android.text.BoringLayout: int mDesc>;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $r3 = $r0.<android.text.BoringLayout: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r4, 0.0F, $f0, $r3);

        return;

     label1:
        specialinvoke $r0.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>($r1, $r2, $r3, $i0);

        return;
    }

    public void ellipsized(int, int)
    {
        android.text.BoringLayout $r0;
        int $i0, $i1;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0.<android.text.BoringLayout: int mEllipsizedStart> = $i0;

        $i0 = $i1 - $i0;

        $r0.<android.text.BoringLayout: int mEllipsizedCount> = $i0;

        return;
    }

    public int getBottomPadding()
    {
        android.text.BoringLayout $r0;
        int i0;

        $r0 := @this: android.text.BoringLayout;

        i0 = $r0.<android.text.BoringLayout: int mBottomPadding>;

        return i0;
    }

    public int getEllipsisCount(int)
    {
        android.text.BoringLayout $r0;
        int $i0;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        $i0 = $r0.<android.text.BoringLayout: int mEllipsizedCount>;

        return $i0;
    }

    public int getEllipsisStart(int)
    {
        android.text.BoringLayout $r0;
        int $i0;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        $i0 = $r0.<android.text.BoringLayout: int mEllipsizedStart>;

        return $i0;
    }

    public int getEllipsizedWidth()
    {
        android.text.BoringLayout $r0;
        int i0;

        $r0 := @this: android.text.BoringLayout;

        i0 = $r0.<android.text.BoringLayout: int mEllipsizedWidth>;

        return i0;
    }

    public int getHeight()
    {
        android.text.BoringLayout $r0;
        int i0;

        $r0 := @this: android.text.BoringLayout;

        i0 = $r0.<android.text.BoringLayout: int mBottom>;

        return i0;
    }

    public boolean getLineContainsTab(int)
    {
        android.text.BoringLayout $r0;
        int $i0;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        return 0;
    }

    public int getLineCount()
    {
        android.text.BoringLayout $r0;

        $r0 := @this: android.text.BoringLayout;

        return 1;
    }

    public int getLineDescent(int)
    {
        android.text.BoringLayout $r0;
        int $i0;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        $i0 = $r0.<android.text.BoringLayout: int mDesc>;

        return $i0;
    }

    public final android.text.Layout$Directions getLineDirections(int)
    {
        android.text.BoringLayout $r0;
        int $i0;
        android.text.Layout$Directions r1;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        r1 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        return r1;
    }

    public float getLineMax(int)
    {
        android.text.BoringLayout $r0;
        int $i0;
        float f0;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        f0 = $r0.<android.text.BoringLayout: float mMax>;

        return f0;
    }

    public int getLineStart(int)
    {
        android.text.BoringLayout $r0;
        int $i0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<android.text.Layout: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public int getLineTop(int)
    {
        android.text.BoringLayout $r0;
        int $i0;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $i0 = $r0.<android.text.BoringLayout: int mBottom>;

        return $i0;
    }

    public int getParagraphDirection(int)
    {
        android.text.BoringLayout $r0;
        int $i0;

        $r0 := @this: android.text.BoringLayout;

        $i0 := @parameter0: int;

        return 1;
    }

    public int getTopPadding()
    {
        android.text.BoringLayout $r0;
        int i0;

        $r0 := @this: android.text.BoringLayout;

        i0 = $r0.<android.text.BoringLayout: int mTopPadding>;

        return i0;
    }

    void init(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, android.text.BoringLayout$Metrics, boolean, boolean)
    {
        android.text.BoringLayout $r0;
        java.lang.CharSequence $r1;
        android.text.TextPaint $r2, $r7, $r8;
        int $i0, $i1;
        android.text.Layout$Alignment $r3, $r5;
        float $f0, $f1, $f2;
        android.text.BoringLayout$Metrics $r4;
        boolean $z0, $z1, $z2;
        java.lang.String $r6;
        byte $b2;
        java.lang.Throwable $r9;

        $r0 := @this: android.text.BoringLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $r4 := @parameter6: android.text.BoringLayout$Metrics;

        $z0 := @parameter7: boolean;

        $z1 := @parameter8: boolean;

        $z2 = $r1 instanceof java.lang.String;

        if $z2 == 0 goto label07;

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if $r3 != $r5 goto label07;

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r0.<android.text.BoringLayout: java.lang.String mDirect> = $r6;

     label01:
        $r0.<android.text.BoringLayout: android.graphics.Paint mPaint> = $r2;

        if $z0 == 0 goto label08;

        $i0 = $r4.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i1 = $r4.<android.graphics.Paint$FontMetricsInt: int top>;

        $i0 = $i0 - $i1;

     label02:
        $b2 = $f0 cmpl 1.0F;

        if $b2 != 0 goto label03;

        $b2 = $f1 cmpl 0.0F;

        if $b2 == 0 goto label04;

     label03:
        $f2 = (float) $i0;

        $f0 = $f2 * $f0;

        $f0 = $f0 + $f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

     label04:
        $r0.<android.text.BoringLayout: int mBottom> = $i0;

        if $z0 == 0 goto label09;

        $i1 = $r4.<android.graphics.Paint$FontMetricsInt: int top>;

        $i0 = $i1 + $i0;

        $r0.<android.text.BoringLayout: int mDesc> = $i0;

     label05:
        if $z1 == 0 goto label10;

        $i0 = $r4.<android.text.BoringLayout$Metrics: int width>;

        $f0 = (float) $i0;

        $r0.<android.text.BoringLayout: float mMax> = $f0;

     label06:
        if $z0 == 0 goto label15;

        $i0 = $r4.<android.graphics.Paint$FontMetricsInt: int top>;

        $i1 = $r4.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i0 = $i0 - $i1;

        $r0.<android.text.BoringLayout: int mTopPadding> = $i0;

        $i0 = $r4.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i1 = $r4.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i0 = $i0 - $i1;

        $r0.<android.text.BoringLayout: int mBottomPadding> = $i0;

        return;

     label07:
        $r0.<android.text.BoringLayout: java.lang.String mDirect> = null;

        goto label01;

     label08:
        $i0 = $r4.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i1 = $r4.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i0 = $i0 - $i1;

        goto label02;

     label09:
        $i1 = $r4.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i0 = $i1 + $i0;

        $r0.<android.text.BoringLayout: int mDesc> = $i0;

        goto label05;

     label10:
        $r7 = <android.text.BoringLayout: android.text.TextPaint sTemp>;

        entermonitor $r7;

     label11:
        $r8 = <android.text.BoringLayout: android.text.TextPaint sTemp>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $f0 = staticinvoke <android.text.Styled: float measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>($r2, $r8, $r1, 0, $i0, null);

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        $i0 = (int) $f0;

        $f0 = (float) $i0;

        $r0.<android.text.BoringLayout: float mMax> = $f0;

        exitmonitor $r7;

     label12:
        goto label06;

     label13:
        $r9 := @caughtexception;

        exitmonitor $r7;

     label14:
        throw $r9;

     label15:
        return;

        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public android.text.BoringLayout replaceOrMake(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, android.text.BoringLayout$Metrics, boolean)
    {
        android.text.BoringLayout $r0;
        java.lang.CharSequence $r1;
        android.text.TextPaint $r2;
        int $i0;
        android.text.Layout$Alignment $r3;
        float $f0, $f1;
        android.text.BoringLayout$Metrics $r4;
        boolean $z0;

        $r0 := @this: android.text.BoringLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $r4 := @parameter6: android.text.BoringLayout$Metrics;

        $z0 := @parameter7: boolean;

        virtualinvoke $r0.<android.text.Layout: void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>($r1, $r2, $i0, $r3, $f0, $f1);

        $r0.<android.text.BoringLayout: int mEllipsizedWidth> = $i0;

        $r0.<android.text.BoringLayout: int mEllipsizedStart> = 0;

        $r0.<android.text.BoringLayout: int mEllipsizedCount> = 0;

        virtualinvoke $r0.<android.text.BoringLayout: void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean)>($r1, $r2, $i0, $r3, $f0, $f1, $r4, $z0, 1);

        return $r0;
    }

    public android.text.BoringLayout replaceOrMake(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, android.text.BoringLayout$Metrics, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.BoringLayout $r0;
        java.lang.CharSequence $r1;
        android.text.TextPaint $r2;
        int $i0, $i1;
        android.text.Layout$Alignment $r3;
        float $f0, $f1, $f2;
        android.text.BoringLayout$Metrics $r4;
        boolean $z0, $z1;
        android.text.TextUtils$TruncateAt $r5, $r6;

        $r0 := @this: android.text.BoringLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: android.text.TextPaint;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.text.Layout$Alignment;

        $f0 := @parameter4: float;

        $f1 := @parameter5: float;

        $r4 := @parameter6: android.text.BoringLayout$Metrics;

        $z0 := @parameter7: boolean;

        $r5 := @parameter8: android.text.TextUtils$TruncateAt;

        $i1 := @parameter9: int;

        if $r5 == null goto label1;

        $r6 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r5 != $r6 goto label3;

     label1:
        virtualinvoke $r0.<android.text.Layout: void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>($r1, $r2, $i0, $r3, $f0, $f1);

        $r0.<android.text.BoringLayout: int mEllipsizedWidth> = $i0;

        $r0.<android.text.BoringLayout: int mEllipsizedStart> = 0;

        $r0.<android.text.BoringLayout: int mEllipsizedCount> = 0;

        $z1 = 1;

     label2:
        $r1 = virtualinvoke $r0.<android.text.Layout: java.lang.CharSequence getText()>();

        virtualinvoke $r0.<android.text.BoringLayout: void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean)>($r1, $r2, $i0, $r3, $f0, $f1, $r4, $z0, $z1);

        return $r0;

     label3:
        $f2 = (float) $i1;

        $r1 = staticinvoke <android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback)>($r1, $r2, $f2, $r5, 1, $r0);

        virtualinvoke $r0.<android.text.Layout: void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>($r1, $r2, $i0, $r3, $f0, $f1);

        $r0.<android.text.BoringLayout: int mEllipsizedWidth> = $i1;

        $z1 = 0;

        goto label2;
    }
}
