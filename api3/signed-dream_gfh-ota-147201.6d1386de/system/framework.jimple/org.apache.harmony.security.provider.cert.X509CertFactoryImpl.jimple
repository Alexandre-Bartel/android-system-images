public class org.apache.harmony.security.provider.cert.X509CertFactoryImpl extends java.security.cert.CertificateFactorySpi
{
    private static byte[] CERT_BOUND_SUFFIX;
    private static org.apache.harmony.security.provider.cert.Cache CERT_CACHE;
    private static int CERT_CACHE_SEED_LENGTH;
    private static org.apache.harmony.security.provider.cert.Cache CRL_CACHE;
    private static int CRL_CACHE_SEED_LENGTH;
    private static byte[] FREE_BOUND_SUFFIX;
    private static byte[] pemBegin;
    private static byte[] pemClose;

    static void <clinit>()
    {
        org.apache.harmony.security.provider.cert.Cache $r0;
        int $i0;
        java.lang.String $r1;
        byte[] $r2;

        <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CERT_CACHE_SEED_LENGTH> = 28;

        $r0 = new org.apache.harmony.security.provider.cert.Cache;

        $i0 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CERT_CACHE_SEED_LENGTH>;

        specialinvoke $r0.<org.apache.harmony.security.provider.cert.Cache: void <init>(int)>($i0);

        <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE> = $r0;

        <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CRL_CACHE_SEED_LENGTH> = 24;

        $r0 = new org.apache.harmony.security.provider.cert.Cache;

        $i0 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CRL_CACHE_SEED_LENGTH>;

        specialinvoke $r0.<org.apache.harmony.security.provider.cert.Cache: void <init>(int)>($i0);

        <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE> = $r0;

        $r1 = "-----BEGIN";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] pemBegin> = $r2;

        $r1 = "-----END";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] pemClose> = $r2;

        <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] FREE_BOUND_SUFFIX> = null;

        $r1 = " CERTIFICATE-----";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] CERT_BOUND_SUFFIX> = $r2;

        return;
    }

    public void <init>()
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r0;

        $r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        specialinvoke $r0.<java.security.cert.CertificateFactorySpi: void <init>()>();

        return;
    }

    private byte[] decodePEM(java.io.InputStream, byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r0;
        java.io.InputStream $r1;
        byte[] $r2, $r3, $r4;
        int $i0, $i1, $i3, $i4;
        byte $b2;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: byte[];

        $i1 = 1;

     label01:
        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] pemBegin>;

        $i0 = lengthof $r4;

        if $i1 >= $i0 goto label05;

        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] pemBegin>;

        $b2 = $r4[$i1];

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $b2 == $i0 goto label04;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect PEM encoding: \'-----BEGIN");

        if $r2 != null goto label03;

        $r7 = "";

     label02:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is expected as opening delimiter boundary.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label03:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r2);

        goto label02;

     label04:
        $i1 = $i1 + 1;

        goto label01;

     label05:
        if $r2 != null goto label07;

     label06:
        $i1 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i1 == 10 goto label14;

        if $i1 != -1 goto label06;

        $r5 = new java.io.IOException;

        $r7 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.156");

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label07:
        $i1 = 0;

     label08:
        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label12;

        $b2 = $r2[$i1];

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $b2 == $i0 goto label11;

        $r5 = new java.io.IOException;

        if $r2 != null goto label10;

        $r7 = "";

     label09:
        $r7 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.15B", $r7);

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label10:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r2);

        goto label09;

     label11:
        $i1 = $i1 + 1;

        goto label08;

     label12:
        $i1 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i0 = $i1;

        if $i1 != 13 goto label13;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

     label13:
        if $i0 == 10 goto label14;

        $r5 = new java.io.IOException;

        $r7 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.15B2");

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label14:
        $i3 = 1024;

        $r4 = newarray (byte)[1024];

        $i1 = 0;

     label15:
        $i4 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i4 == 45 goto label17;

        if $i4 != -1 goto label16;

        $r5 = new java.io.IOException;

        $r7 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.157");

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label16:
        $i0 = $i1 + 1;

        $b2 = (byte) $i4;

        $r4[$i1] = $b2;

        if $i0 != $i3 goto label34;

        $i1 = $i3 + 1024;

        $r3 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i3);

        $r4 = $r3;

        $i3 = $i3 + 1024;

        $i1 = $i0;

        goto label15;

     label17:
        $i0 = $i1 - 1;

        $b2 = $r4[$i0];

        if $b2 == 10 goto label18;

        $r5 = new java.io.IOException;

        $r7 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.158");

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label18:
        $i0 = 1;

     label19:
        $r3 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] pemClose>;

        $i3 = lengthof $r3;

        if $i0 >= $i3 goto label23;

        $r3 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] pemClose>;

        $b2 = $r3[$i0];

        $i3 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $b2 == $i3 goto label22;

        $r5 = new java.io.IOException;

        if $r2 != null goto label21;

        $r7 = "";

     label20:
        $r7 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.15B1", $r7);

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label21:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r2);

        goto label20;

     label22:
        $i0 = $i0 + 1;

        goto label19;

     label23:
        if $r2 != null goto label28;

     label24:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 == -1 goto label25;

        if $i0 == 10 goto label25;

        if $i0 != 13 goto label24;

     label25:
        virtualinvoke $r1.<java.io.InputStream: void mark(int)>(1);

     label26:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 == -1 goto label33;

        if $i0 == 10 goto label27;

        if $i0 != 13 goto label33;

     label27:
        virtualinvoke $r1.<java.io.InputStream: void mark(int)>(1);

        goto label26;

     label28:
        $i0 = 0;

     label29:
        $i3 = lengthof $r2;

        if $i0 >= $i3 goto label25;

        $b2 = $r2[$i0];

        $i3 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $b2 == $i3 goto label32;

        $r5 = new java.io.IOException;

        if $r2 != null goto label31;

        $r7 = "";

     label30:
        $r7 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.15B1", $r7);

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label31:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r2);

        goto label30;

     label32:
        $i0 = $i0 + 1;

        goto label29;

     label33:
        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        $r2 = staticinvoke <org.apache.harmony.luni.util.Base64: byte[] decode(byte[],int)>($r4, $i1);

        if $r2 != null goto label35;

        $r5 = new java.io.IOException;

        $r7 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.159");

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label34:
        $i1 = $i0;

        goto label15;

     label35:
        return $r2;
    }

    private static java.security.cert.CRL getCRL(java.io.InputStream) throws java.security.cert.CRLException, java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        org.apache.harmony.security.provider.cert.Cache $r2, $r6;
        int $i0, $i2;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        long $l1;
        boolean $z0;
        java.lang.Object $r7;
        java.security.cert.CRL $r8;
        java.security.cert.CRLException r9;
        org.apache.harmony.security.provider.cert.X509CRLImpl r10;

        $r0 := @parameter0: java.io.InputStream;

        $r2 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        entermonitor $r2;

     label01:
        $i0 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CRL_CACHE_SEED_LENGTH>;

        virtualinvoke $r0.<java.io.InputStream: void mark(int)>($i0);

        $i0 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CRL_CACHE_SEED_LENGTH>;

        $r1 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] readBytes(java.io.InputStream,int)>($r0, $i0);

        virtualinvoke $r0.<java.io.InputStream: void reset()>();

        if $r1 != null goto label04;

        r9 = new java.security.cert.CRLException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.152");

        specialinvoke r9.<java.security.cert.CRLException: void <init>(java.lang.String)>($r4);

        throw r9;

     label02:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label03:
        throw $r5;

     label04:
        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        $l1 = virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: long getHash(byte[])>($r1);

        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        $z0 = virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: boolean contains(long)>($l1);

        if $z0 == 0 goto label09;

        $i0 = staticinvoke <org.apache.harmony.security.asn1.BerInputStream: int getLength(byte[])>($r1);

        $r1 = newarray (byte)[$i0];

        $i0 = lengthof $r1;

        $i2 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CRL_CACHE_SEED_LENGTH>;

        if $i0 >= $i2 goto label05;

        r9 = new java.security.cert.CRLException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.15B4");

        specialinvoke r9.<java.security.cert.CRLException: void <init>(java.lang.String)>($r4);

        throw r9;

     label05:
        virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1);

        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        $r7 = virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: java.lang.Object get(long,byte[])>($l1, $r1);

        $r8 = (java.security.cert.CRL) $r7;

        if $r8 == null goto label07;

        exitmonitor $r2;

     label06:
        return $r8;

     label07:
        r10 = new org.apache.harmony.security.provider.cert.X509CRLImpl;

        $r8 = r10;

        specialinvoke r10.<org.apache.harmony.security.provider.cert.X509CRLImpl: void <init>(byte[])>($r1);

        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: void put(long,byte[],java.lang.Object)>($l1, $r1, $r8);

        exitmonitor $r2;

     label08:
        return $r8;

     label09:
        r10 = new org.apache.harmony.security.provider.cert.X509CRLImpl;

        $r8 = r10;

        specialinvoke r10.<org.apache.harmony.security.provider.cert.X509CRLImpl: void <init>(java.io.InputStream)>($r0);

        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        r10 = (org.apache.harmony.security.provider.cert.X509CRLImpl) $r8;

        $r1 = virtualinvoke r10.<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getEncoded()>();

        virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: void put(long,byte[],java.lang.Object)>($l1, $r1, $r8);

        exitmonitor $r2;

     label10:
        return $r8;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label04 to label06 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
    }

    private static java.security.cert.CRL getCRL(byte[]) throws java.security.cert.CRLException, java.io.IOException
    {
        byte[] $r0;
        int $i0, $i1;
        java.security.cert.CRLException $r1;
        java.lang.String $r2;
        org.apache.harmony.security.provider.cert.Cache $r3, $r4;
        long $l2;
        boolean $z0;
        java.lang.Object $r5;
        java.security.cert.X509CRL $r6;
        org.apache.harmony.security.provider.cert.X509CRLImpl $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i1 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CRL_CACHE_SEED_LENGTH>;

        if $i0 >= $i1 goto label1;

        $r1 = new java.security.cert.CRLException;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.152");

        specialinvoke $r1.<java.security.cert.CRLException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        $r3 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        entermonitor $r3;

     label2:
        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        $l2 = virtualinvoke $r4.<org.apache.harmony.security.provider.cert.Cache: long getHash(byte[])>($r0);

        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        $z0 = virtualinvoke $r4.<org.apache.harmony.security.provider.cert.Cache: boolean contains(long)>($l2);

        if $z0 == 0 goto label4;

        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        $r5 = virtualinvoke $r4.<org.apache.harmony.security.provider.cert.Cache: java.lang.Object get(long,byte[])>($l2, $r0);

        $r6 = (java.security.cert.X509CRL) $r5;

        if $r6 == null goto label4;

        exitmonitor $r3;

     label3:
        return $r6;

     label4:
        $r7 = new org.apache.harmony.security.provider.cert.X509CRLImpl;

        specialinvoke $r7.<org.apache.harmony.security.provider.cert.X509CRLImpl: void <init>(byte[])>($r0);

        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CRL_CACHE>;

        virtualinvoke $r4.<org.apache.harmony.security.provider.cert.Cache: void put(long,byte[],java.lang.Object)>($l2, $r0, $r7);

        exitmonitor $r3;

     label5:
        return $r7;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private static java.security.cert.Certificate getCertificate(java.io.InputStream) throws java.security.cert.CertificateException, java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        org.apache.harmony.security.provider.cert.Cache $r2, $r6;
        int $i0, $i2;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        long $l1;
        boolean $z0;
        java.lang.Object $r7;
        java.security.cert.Certificate $r8;
        java.security.cert.CertificateException r9;
        org.apache.harmony.security.provider.cert.X509CertImpl r10;

        $r0 := @parameter0: java.io.InputStream;

        $r2 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        entermonitor $r2;

     label01:
        $i0 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CERT_CACHE_SEED_LENGTH>;

        virtualinvoke $r0.<java.io.InputStream: void mark(int)>($i0);

        $i0 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CERT_CACHE_SEED_LENGTH>;

        $r1 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] readBytes(java.io.InputStream,int)>($r0, $i0);

        virtualinvoke $r0.<java.io.InputStream: void reset()>();

        if $r1 != null goto label04;

        r9 = new java.security.cert.CertificateException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.152");

        specialinvoke r9.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r4);

        throw r9;

     label02:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label03:
        throw $r5;

     label04:
        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        $l1 = virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: long getHash(byte[])>($r1);

        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        $z0 = virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: boolean contains(long)>($l1);

        if $z0 == 0 goto label09;

        $i0 = staticinvoke <org.apache.harmony.security.asn1.BerInputStream: int getLength(byte[])>($r1);

        $r1 = newarray (byte)[$i0];

        $i0 = lengthof $r1;

        $i2 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CERT_CACHE_SEED_LENGTH>;

        if $i0 >= $i2 goto label05;

        r9 = new java.security.cert.CertificateException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.15B3");

        specialinvoke r9.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r4);

        throw r9;

     label05:
        virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1);

        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        $r7 = virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: java.lang.Object get(long,byte[])>($l1, $r1);

        $r8 = (java.security.cert.Certificate) $r7;

        if $r8 == null goto label07;

        exitmonitor $r2;

     label06:
        return $r8;

     label07:
        r10 = new org.apache.harmony.security.provider.cert.X509CertImpl;

        $r8 = r10;

        specialinvoke r10.<org.apache.harmony.security.provider.cert.X509CertImpl: void <init>(byte[])>($r1);

        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: void put(long,byte[],java.lang.Object)>($l1, $r1, $r8);

        exitmonitor $r2;

     label08:
        return $r8;

     label09:
        virtualinvoke $r0.<java.io.InputStream: void reset()>();

        r10 = new org.apache.harmony.security.provider.cert.X509CertImpl;

        $r8 = r10;

        specialinvoke r10.<org.apache.harmony.security.provider.cert.X509CertImpl: void <init>(java.io.InputStream)>($r0);

        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        r10 = (org.apache.harmony.security.provider.cert.X509CertImpl) $r8;

        $r1 = virtualinvoke r10.<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getEncoded()>();

        virtualinvoke $r6.<org.apache.harmony.security.provider.cert.Cache: void put(long,byte[],java.lang.Object)>($l1, $r1, $r8);

        exitmonitor $r2;

     label10:
        return $r8;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label04 to label06 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
    }

    private static java.security.cert.Certificate getCertificate(byte[]) throws java.security.cert.CertificateException, java.io.IOException
    {
        byte[] $r0;
        int $i0, $i1;
        java.security.cert.CertificateException $r1;
        java.lang.String $r2;
        org.apache.harmony.security.provider.cert.Cache $r3, $r4;
        long $l2;
        boolean $z0;
        java.lang.Object $r5;
        java.security.cert.Certificate $r6;
        org.apache.harmony.security.provider.cert.X509CertImpl $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i1 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CERT_CACHE_SEED_LENGTH>;

        if $i0 >= $i1 goto label1;

        $r1 = new java.security.cert.CertificateException;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.152");

        specialinvoke $r1.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        $r3 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        entermonitor $r3;

     label2:
        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        $l2 = virtualinvoke $r4.<org.apache.harmony.security.provider.cert.Cache: long getHash(byte[])>($r0);

        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        $z0 = virtualinvoke $r4.<org.apache.harmony.security.provider.cert.Cache: boolean contains(long)>($l2);

        if $z0 == 0 goto label4;

        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        $r5 = virtualinvoke $r4.<org.apache.harmony.security.provider.cert.Cache: java.lang.Object get(long,byte[])>($l2, $r0);

        $r6 = (java.security.cert.Certificate) $r5;

        if $r6 == null goto label4;

        exitmonitor $r3;

     label3:
        return $r6;

     label4:
        $r7 = new org.apache.harmony.security.provider.cert.X509CertImpl;

        specialinvoke $r7.<org.apache.harmony.security.provider.cert.X509CertImpl: void <init>(byte[])>($r0);

        $r4 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: org.apache.harmony.security.provider.cert.Cache CERT_CACHE>;

        virtualinvoke $r4.<org.apache.harmony.security.provider.cert.Cache: void put(long,byte[],java.lang.Object)>($l2, $r0, $r7);

        exitmonitor $r3;

     label5:
        return $r7;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private static byte[] readBytes(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $r1 = newarray (byte)[$i0];

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $i1 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        if $i1 != -1 goto label2;

        return null;

     label2:
        $b3 = (byte) $i1;

        $r1[$i2] = $b3;

        $i2 = $i2 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public java.security.cert.CRL engineGenerateCRL(java.io.InputStream) throws java.security.cert.CRLException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r0;
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream $r1;
        java.io.InputStream $r2;
        java.security.cert.CRLException $r3;
        java.lang.String $r4;
        boolean $z0;
        int $i0;
        byte[] $r5;
        java.security.cert.CRL $r6;
        java.io.IOException $r7;

        $r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        $r2 := @parameter0: java.io.InputStream;

        if $r2 != null goto label1;

        $r3 = new java.security.cert.CRLException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.153");

        specialinvoke $r3.<java.security.cert.CRLException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $z0 = virtualinvoke $r2.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label2;

        $r1 = new org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        specialinvoke $r1.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: void <init>(java.io.InputStream)>($r2);

        $r2 = $r1;

     label2:
        virtualinvoke $r2.<java.io.InputStream: void mark(int)>(1);

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        if $i0 != 45 goto label4;

        $r5 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] FREE_BOUND_SUFFIX>;

        $r5 = specialinvoke $r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] decodePEM(java.io.InputStream,byte[])>($r2, $r5);

        $r6 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.CRL getCRL(byte[])>($r5);

     label3:
        return $r6;

     label4:
        virtualinvoke $r2.<java.io.InputStream: void reset()>();

        $r6 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.CRL getCRL(java.io.InputStream)>($r2);

     label5:
        return $r6;

     label6:
        $r7 := @caughtexception;

        $r3 = new java.security.cert.CRLException;

        specialinvoke $r3.<java.security.cert.CRLException: void <init>(java.lang.Throwable)>($r7);

        throw $r3;

        catch java.io.IOException from label1 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public java.util.Collection engineGenerateCRLs(java.io.InputStream) throws java.security.cert.CRLException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream $r0;
        java.util.ArrayList $r1;
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r2;
        java.io.InputStream $r3;
        java.security.cert.CRLException $r4;
        java.lang.String $r5;
        boolean $z0;
        byte[] $r6;
        int $i0, $i1, $i2;
        org.apache.harmony.security.asn1.BerInputStream $r7;
        java.io.IOException $r8;
        java.security.cert.CRL $r9;
        org.apache.harmony.security.asn1.ASN1Sequence $r10;
        java.lang.Object $r11;
        org.apache.harmony.security.pkcs7.ContentInfo $r12;
        org.apache.harmony.security.pkcs7.SignedData $r13;
        java.util.List $r14;
        org.apache.harmony.security.provider.cert.X509CRLImpl $r15;
        org.apache.harmony.security.x509.CertificateList $r16;

        $r2 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        $r3 := @parameter0: java.io.InputStream;

        if $r3 != null goto label01;

        $r4 = new java.security.cert.CRLException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.153");

        specialinvoke $r4.<java.security.cert.CRLException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label01:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

     label02:
        $z0 = virtualinvoke $r3.<java.io.InputStream: boolean markSupported()>();

     label03:
        if $z0 != 0 goto label06;

     label04:
        $r0 = new org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        specialinvoke $r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: void <init>(java.io.InputStream)>($r3);

     label05:
        $r3 = $r0;

     label06:
        $r6 = null;

     label07:
        $i0 = -1;

        virtualinvoke $r3.<java.io.InputStream: void mark(int)>(1);

     label08:
        $i1 = virtualinvoke $r3.<java.io.InputStream: int read()>();

        if $i1 == -1 goto label17;

     label09:
        if $i1 != 45 goto label19;

     label10:
        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] FREE_BOUND_SUFFIX>;

        $r6 = specialinvoke $r2.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] decodePEM(java.io.InputStream,byte[])>($r3, $r6);

     label11:
        if $r6 != null goto label26;

     label12:
        $r7 = new org.apache.harmony.security.asn1.BerInputStream;

        specialinvoke $r7.<org.apache.harmony.security.asn1.BerInputStream: void <init>(java.io.InputStream)>($r3);

     label13:
        $i2 = virtualinvoke $r7.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

     label14:
        $i0 = $i2;

     label15:
        if $r6 != null goto label16;

        virtualinvoke $r3.<java.io.InputStream: void reset()>();

     label16:
        if $i2 == 48 goto label28;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label50;

     label17:
        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label18:
        if $i2 == 0 goto label31;

        return $r1;

     label19:
        if $i1 != 48 goto label22;

        $r6 = null;

        virtualinvoke $r3.<java.io.InputStream: void reset()>();

        $i0 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CRL_CACHE_SEED_LENGTH>;

        virtualinvoke $r3.<java.io.InputStream: void mark(int)>($i0);

     label20:
        goto label11;

     label21:
        $r8 := @caughtexception;

        $r4 = new java.security.cert.CRLException;

        specialinvoke $r4.<java.security.cert.CRLException: void <init>(java.lang.Throwable)>($r8);

        throw $r4;

     label22:
        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label24;

        $r4 = new java.security.cert.CRLException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.15F");

        specialinvoke $r4.<java.security.cert.CRLException: void <init>(java.lang.String)>($r5);

     label23:
        throw $r4;

     label24:
        virtualinvoke $r3.<java.io.InputStream: void reset()>();

     label25:
        return $r1;

     label26:
        $r7 = new org.apache.harmony.security.asn1.BerInputStream;

        specialinvoke $r7.<org.apache.harmony.security.asn1.BerInputStream: void <init>(byte[])>($r6);

     label27:
        goto label13;

     label28:
        if $r6 != null goto label30;

        $r9 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.CRL getCRL(java.io.InputStream)>($r3);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label29:
        virtualinvoke $r3.<java.io.InputStream: void mark(int)>(1);

        goto label08;

     label30:
        $r9 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.CRL getCRL(byte[])>($r6);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label29;

     label31:
        if $i1 != -1 goto label34;

     label32:
        $r4 = new java.security.cert.CRLException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.155");

        specialinvoke $r4.<java.security.cert.CRLException: void <init>(java.lang.String)>($r5);

     label33:
        throw $r4;

     label34:
        if $i0 != 6 goto label48;

        if $r6 == null goto label38;

     label35:
        $r10 = <org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r11 = virtualinvoke $r10.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>($r6);

     label36:
        $r12 = (org.apache.harmony.security.pkcs7.ContentInfo) $r11;

        $r13 = virtualinvoke $r12.<org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.pkcs7.SignedData getSignedData()>();

        if $r13 != null goto label40;

        $r4 = new java.security.cert.CRLException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.154");

        specialinvoke $r4.<java.security.cert.CRLException: void <init>(java.lang.String)>($r5);

     label37:
        throw $r4;

     label38:
        $r10 = <org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r11 = virtualinvoke $r10.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(java.io.InputStream)>($r3);

     label39:
        goto label36;

     label40:
        $r14 = virtualinvoke $r13.<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCRLs()>();

     label41:
        if $r14 == null goto label51;

     label42:
        $i1 = 0;

     label43:
        $i0 = interfaceinvoke $r14.<java.util.List: int size()>();

     label44:
        if $i1 >= $i0 goto label52;

     label45:
        $r15 = new org.apache.harmony.security.provider.cert.X509CRLImpl;

        $r11 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>($i1);

        $r16 = (org.apache.harmony.security.x509.CertificateList) $r11;

        specialinvoke $r15.<org.apache.harmony.security.provider.cert.X509CRLImpl: void <init>(org.apache.harmony.security.x509.CertificateList)>($r16);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label46:
        $i1 = $i1 + 1;

     label47:
        goto label43;

     label48:
        $r4 = new java.security.cert.CRLException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.15F");

        specialinvoke $r4.<java.security.cert.CRLException: void <init>(java.lang.String)>($r5);

     label49:
        throw $r4;

     label50:
        return $r1;

     label51:
        return $r1;

     label52:
        return $r1;

        catch java.io.IOException from label02 to label03 with label21;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.io.IOException from label07 to label09 with label21;
        catch java.io.IOException from label10 to label11 with label21;
        catch java.io.IOException from label12 to label14 with label21;
        catch java.io.IOException from label15 to label18 with label21;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label22 to label23 with label21;
        catch java.io.IOException from label24 to label25 with label21;
        catch java.io.IOException from label26 to label27 with label21;
        catch java.io.IOException from label27 to label31 with label21;
        catch java.io.IOException from label32 to label33 with label21;
        catch java.io.IOException from label35 to label36 with label21;
        catch java.io.IOException from label36 to label37 with label21;
        catch java.io.IOException from label38 to label39 with label21;
        catch java.io.IOException from label40 to label41 with label21;
        catch java.io.IOException from label42 to label44 with label21;
        catch java.io.IOException from label45 to label46 with label21;
        catch java.io.IOException from label47 to label49 with label21;
    }

    public java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream) throws java.security.cert.CertificateException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r0;
        java.io.InputStream $r1;
        java.security.cert.CertificateException $r2;
        java.lang.String $r3;
        java.security.cert.CertPath $r4;

        $r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        $r1 := @parameter0: java.io.InputStream;

        if $r1 != null goto label1;

        $r2 = new java.security.cert.CertificateException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.153");

        specialinvoke $r2.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $r4 = virtualinvoke $r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream,java.lang.String)>($r1, "PkiPath");

        return $r4;
    }

    public java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream, java.lang.String) throws java.security.cert.CertificateException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r0;
        java.lang.String $r1;
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream $r2;
        java.io.InputStream $r3;
        java.security.cert.CertificateException $r4;
        boolean $z0;
        int $i0;
        byte[] $r5;
        org.apache.harmony.security.provider.cert.X509CertPathImpl $r6;
        java.io.IOException $r7;

        $r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        $r3 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        if $r3 != null goto label01;

        $r4 = new java.security.cert.CertificateException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.153");

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label01:
        $z0 = virtualinvoke $r3.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label02;

        $r2 = new org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        specialinvoke $r2.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: void <init>(java.io.InputStream)>($r3);

        $r3 = $r2;

     label02:
        virtualinvoke $r3.<java.io.InputStream: void mark(int)>(1);

        $i0 = virtualinvoke $r3.<java.io.InputStream: int read()>();

     label03:
        if $i0 != 45 goto label06;

     label04:
        $r5 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] FREE_BOUND_SUFFIX>;

        $r5 = specialinvoke $r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] decodePEM(java.io.InputStream,byte[])>($r3, $r5);

        $r6 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(byte[],java.lang.String)>($r5, $r1);

     label05:
        return $r6;

     label06:
        if $i0 != 48 goto label08;

        virtualinvoke $r3.<java.io.InputStream: void reset()>();

        $r6 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(java.io.InputStream,java.lang.String)>($r3, $r1);

     label07:
        return $r6;

     label08:
        $r4 = new java.security.cert.CertificateException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.15F");

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r1);

     label09:
        throw $r4;

     label10:
        $r7 := @caughtexception;

        $r4 = new java.security.cert.CertificateException;

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>($r7);

        throw $r4;

        catch java.io.IOException from label02 to label03 with label10;
        catch java.io.IOException from label04 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public java.security.cert.CertPath engineGenerateCertPath(java.util.List) throws java.security.cert.CertificateException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r0;
        java.util.List $r1;
        org.apache.harmony.security.provider.cert.X509CertPathImpl $r2;

        $r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        $r1 := @parameter0: java.util.List;

        $r2 = new org.apache.harmony.security.provider.cert.X509CertPathImpl;

        specialinvoke $r2.<org.apache.harmony.security.provider.cert.X509CertPathImpl: void <init>(java.util.List)>($r1);

        return $r2;
    }

    public java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream) throws java.security.cert.CertificateException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r0;
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream $r1;
        java.io.InputStream $r2;
        java.security.cert.CertificateException $r3;
        java.lang.String $r4;
        boolean $z0;
        int $i0;
        byte[] $r5;
        java.security.cert.Certificate $r6;
        java.io.IOException $r7;

        $r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        $r2 := @parameter0: java.io.InputStream;

        if $r2 != null goto label1;

        $r3 = new java.security.cert.CertificateException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.153");

        specialinvoke $r3.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $z0 = virtualinvoke $r2.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label2;

        $r1 = new org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        specialinvoke $r1.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: void <init>(java.io.InputStream)>($r2);

        $r2 = $r1;

     label2:
        virtualinvoke $r2.<java.io.InputStream: void mark(int)>(1);

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        if $i0 != 45 goto label4;

        $r5 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] CERT_BOUND_SUFFIX>;

        $r5 = specialinvoke $r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] decodePEM(java.io.InputStream,byte[])>($r2, $r5);

        $r6 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.Certificate getCertificate(byte[])>($r5);

     label3:
        return $r6;

     label4:
        virtualinvoke $r2.<java.io.InputStream: void reset()>();

        $r6 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.Certificate getCertificate(java.io.InputStream)>($r2);

     label5:
        return $r6;

     label6:
        $r7 := @caughtexception;

        $r3 = new java.security.cert.CertificateException;

        specialinvoke $r3.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>($r7);

        throw $r3;

        catch java.io.IOException from label1 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public java.util.Collection engineGenerateCertificates(java.io.InputStream) throws java.security.cert.CertificateException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream $r0;
        java.util.ArrayList $r1;
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r2;
        java.io.InputStream $r3;
        java.security.cert.CertificateException $r4;
        java.lang.String $r5;
        boolean $z0;
        byte[] $r6;
        int $i0, $i1, $i2;
        org.apache.harmony.security.asn1.BerInputStream $r7;
        java.io.IOException $r8;
        java.security.cert.Certificate $r9;
        org.apache.harmony.security.asn1.ASN1Sequence $r10;
        java.lang.Object $r11;
        org.apache.harmony.security.pkcs7.ContentInfo $r12;
        org.apache.harmony.security.pkcs7.SignedData $r13;
        java.util.List $r14;
        org.apache.harmony.security.provider.cert.X509CertImpl $r15;
        org.apache.harmony.security.x509.Certificate $r16;

        $r2 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        $r3 := @parameter0: java.io.InputStream;

        if $r3 != null goto label01;

        $r4 = new java.security.cert.CertificateException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.153");

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label01:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

     label02:
        $z0 = virtualinvoke $r3.<java.io.InputStream: boolean markSupported()>();

     label03:
        if $z0 != 0 goto label06;

     label04:
        $r0 = new org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        specialinvoke $r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: void <init>(java.io.InputStream)>($r3);

     label05:
        $r3 = $r0;

     label06:
        $r6 = null;

     label07:
        $i0 = -1;

        virtualinvoke $r3.<java.io.InputStream: void mark(int)>(1);

     label08:
        $i1 = virtualinvoke $r3.<java.io.InputStream: int read()>();

        if $i1 == -1 goto label17;

     label09:
        if $i1 != 45 goto label19;

     label10:
        $r6 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] FREE_BOUND_SUFFIX>;

        $r6 = specialinvoke $r2.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] decodePEM(java.io.InputStream,byte[])>($r3, $r6);

     label11:
        if $r6 != null goto label26;

     label12:
        $r7 = new org.apache.harmony.security.asn1.BerInputStream;

        specialinvoke $r7.<org.apache.harmony.security.asn1.BerInputStream: void <init>(java.io.InputStream)>($r3);

     label13:
        $i2 = virtualinvoke $r7.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

     label14:
        $i0 = $i2;

     label15:
        if $r6 != null goto label16;

        virtualinvoke $r3.<java.io.InputStream: void reset()>();

     label16:
        if $i2 == 48 goto label28;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label50;

     label17:
        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label18:
        if $i2 == 0 goto label31;

        return $r1;

     label19:
        if $i1 != 48 goto label22;

        $r6 = null;

        virtualinvoke $r3.<java.io.InputStream: void reset()>();

        $i0 = <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: int CERT_CACHE_SEED_LENGTH>;

        virtualinvoke $r3.<java.io.InputStream: void mark(int)>($i0);

     label20:
        goto label11;

     label21:
        $r8 := @caughtexception;

        $r4 = new java.security.cert.CertificateException;

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>($r8);

        throw $r4;

     label22:
        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label24;

        $r4 = new java.security.cert.CertificateException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.15F");

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

     label23:
        throw $r4;

     label24:
        virtualinvoke $r3.<java.io.InputStream: void reset()>();

     label25:
        return $r1;

     label26:
        $r7 = new org.apache.harmony.security.asn1.BerInputStream;

        specialinvoke $r7.<org.apache.harmony.security.asn1.BerInputStream: void <init>(byte[])>($r6);

     label27:
        goto label13;

     label28:
        if $r6 != null goto label30;

        $r9 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.Certificate getCertificate(java.io.InputStream)>($r3);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label29:
        virtualinvoke $r3.<java.io.InputStream: void mark(int)>(1);

        goto label08;

     label30:
        $r9 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.Certificate getCertificate(byte[])>($r6);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label29;

     label31:
        if $i1 != -1 goto label34;

     label32:
        $r4 = new java.security.cert.CertificateException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.155");

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

     label33:
        throw $r4;

     label34:
        if $i0 != 6 goto label48;

        if $r6 == null goto label38;

     label35:
        $r10 = <org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r11 = virtualinvoke $r10.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>($r6);

     label36:
        $r12 = (org.apache.harmony.security.pkcs7.ContentInfo) $r11;

        $r13 = virtualinvoke $r12.<org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.pkcs7.SignedData getSignedData()>();

        if $r13 != null goto label40;

        $r4 = new java.security.cert.CertificateException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.154");

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

     label37:
        throw $r4;

     label38:
        $r10 = <org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r11 = virtualinvoke $r10.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(java.io.InputStream)>($r3);

     label39:
        goto label36;

     label40:
        $r14 = virtualinvoke $r13.<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCertificates()>();

     label41:
        if $r14 == null goto label51;

     label42:
        $i1 = 0;

     label43:
        $i0 = interfaceinvoke $r14.<java.util.List: int size()>();

     label44:
        if $i1 >= $i0 goto label52;

     label45:
        $r15 = new org.apache.harmony.security.provider.cert.X509CertImpl;

        $r11 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>($i1);

        $r16 = (org.apache.harmony.security.x509.Certificate) $r11;

        specialinvoke $r15.<org.apache.harmony.security.provider.cert.X509CertImpl: void <init>(org.apache.harmony.security.x509.Certificate)>($r16);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label46:
        $i1 = $i1 + 1;

     label47:
        goto label43;

     label48:
        $r4 = new java.security.cert.CertificateException;

        $r5 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.15F");

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r5);

     label49:
        throw $r4;

     label50:
        return $r1;

     label51:
        return $r1;

     label52:
        return $r1;

        catch java.io.IOException from label02 to label03 with label21;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.io.IOException from label07 to label09 with label21;
        catch java.io.IOException from label10 to label11 with label21;
        catch java.io.IOException from label12 to label14 with label21;
        catch java.io.IOException from label15 to label18 with label21;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label22 to label23 with label21;
        catch java.io.IOException from label24 to label25 with label21;
        catch java.io.IOException from label26 to label27 with label21;
        catch java.io.IOException from label27 to label31 with label21;
        catch java.io.IOException from label32 to label33 with label21;
        catch java.io.IOException from label35 to label36 with label21;
        catch java.io.IOException from label36 to label37 with label21;
        catch java.io.IOException from label38 to label39 with label21;
        catch java.io.IOException from label40 to label41 with label21;
        catch java.io.IOException from label42 to label44 with label21;
        catch java.io.IOException from label45 to label46 with label21;
        catch java.io.IOException from label47 to label49 with label21;
    }

    public java.util.Iterator engineGetCertPathEncodings()
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl $r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        $r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl;

        $r2 = <org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.List encodings>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }
}
