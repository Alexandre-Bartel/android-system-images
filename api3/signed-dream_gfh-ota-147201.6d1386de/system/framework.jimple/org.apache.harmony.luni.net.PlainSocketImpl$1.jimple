class org.apache.harmony.luni.net.PlainSocketImpl$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final org.apache.harmony.luni.net.PlainSocketImpl this$0;
    final java.lang.String val$fieldName;

    void <init>(org.apache.harmony.luni.net.PlainSocketImpl, java.lang.String)
    {
        org.apache.harmony.luni.net.PlainSocketImpl$1 $r0;
        org.apache.harmony.luni.net.PlainSocketImpl $r1;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.luni.net.PlainSocketImpl$1;

        $r1 := @parameter0: org.apache.harmony.luni.net.PlainSocketImpl;

        $r2 := @parameter1: java.lang.String;

        $r0.<org.apache.harmony.luni.net.PlainSocketImpl$1: org.apache.harmony.luni.net.PlainSocketImpl this$0> = $r1;

        $r0.<org.apache.harmony.luni.net.PlainSocketImpl$1: java.lang.String val$fieldName> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile java.lang.Object run()
    {
        org.apache.harmony.luni.net.PlainSocketImpl$1 $r0;
        java.lang.reflect.Field $r1;

        $r0 := @this: org.apache.harmony.luni.net.PlainSocketImpl$1;

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.net.PlainSocketImpl$1: java.lang.reflect.Field run()>();

        return $r1;
    }

    public java.lang.reflect.Field run()
    {
        org.apache.harmony.luni.net.PlainSocketImpl$1 $r0;
        java.lang.String $r1;
        java.lang.reflect.Field $r2;
        java.lang.Class $r3;
        java.lang.NoSuchFieldException $r4;
        java.lang.Error $r5;

        $r0 := @this: org.apache.harmony.luni.net.PlainSocketImpl$1;

        $r3 = class "java/net/SocketImpl";

        $r1 = $r0.<org.apache.harmony.luni.net.PlainSocketImpl$1: java.lang.String val$fieldName>;

     label1:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.Error;

        specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
    }
}
