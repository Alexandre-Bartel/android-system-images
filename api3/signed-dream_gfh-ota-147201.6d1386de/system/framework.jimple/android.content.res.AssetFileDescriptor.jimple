public class android.content.res.AssetFileDescriptor extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final long UNKNOWN_LENGTH;
    private final android.os.ParcelFileDescriptor mFd;
    private final long mLength;
    private final long mStartOffset;

    static void <clinit>()
    {
        android.content.res.AssetFileDescriptor$1 $r0;

        <android.content.res.AssetFileDescriptor: long UNKNOWN_LENGTH> = -1L;

        $r0 = new android.content.res.AssetFileDescriptor$1;

        specialinvoke $r0.<android.content.res.AssetFileDescriptor$1: void <init>()>();

        <android.content.res.AssetFileDescriptor: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.content.res.AssetFileDescriptor $r0;
        android.os.Parcel $r1;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        android.os.ParcelFileDescriptor $r4;
        long $l0;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r1);

        $r4 = (android.os.ParcelFileDescriptor) $r3;

        $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd> = $r4;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<android.content.res.AssetFileDescriptor: long mStartOffset> = $l0;

        $l0 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        $r0.<android.content.res.AssetFileDescriptor: long mLength> = $l0;

        return;
    }

    public void <init>(android.os.ParcelFileDescriptor, long, long)
    {
        android.content.res.AssetFileDescriptor $r0;
        android.os.ParcelFileDescriptor $r1;
        long $l0, $l1;
        byte $b2;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 := @parameter0: android.os.ParcelFileDescriptor;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label1;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("startOffset must be 0 when using UNKNOWN_LENGTH");

        throw $r2;

     label1:
        $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd> = $r1;

        $r0.<android.content.res.AssetFileDescriptor: long mStartOffset> = $l0;

        $r0.<android.content.res.AssetFileDescriptor: long mLength> = $l1;

        return;
    }

    public void close() throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor $r0;
        android.os.ParcelFileDescriptor $r1;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 = $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        virtualinvoke $r1.<android.os.ParcelFileDescriptor: void close()>();

        return;
    }

    public java.io.FileInputStream createInputStream() throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor $r0;
        android.os.ParcelFileDescriptor $r1;
        long $l0;
        byte $b1;
        android.os.ParcelFileDescriptor$AutoCloseInputStream r3;
        android.content.res.AssetFileDescriptor$AutoCloseInputStream r4;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $l0 = $r0.<android.content.res.AssetFileDescriptor: long mLength>;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        r3 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        $r1 = $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        specialinvoke r3.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>($r1);

        return r3;

     label1:
        r4 = new android.content.res.AssetFileDescriptor$AutoCloseInputStream;

        specialinvoke r4.<android.content.res.AssetFileDescriptor$AutoCloseInputStream: void <init>(android.content.res.AssetFileDescriptor)>($r0);

        return r4;
    }

    public java.io.FileOutputStream createOutputStream() throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor $r0;
        android.os.ParcelFileDescriptor $r1;
        long $l0;
        byte $b1;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream r3;
        android.content.res.AssetFileDescriptor$AutoCloseOutputStream r4;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $l0 = $r0.<android.content.res.AssetFileDescriptor: long mLength>;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        r3 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        $r1 = $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        specialinvoke r3.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>($r1);

        return r3;

     label1:
        r4 = new android.content.res.AssetFileDescriptor$AutoCloseOutputStream;

        specialinvoke r4.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void <init>(android.content.res.AssetFileDescriptor)>($r0);

        return r4;
    }

    public int describeContents()
    {
        android.content.res.AssetFileDescriptor $r0;
        int $i0;
        android.os.ParcelFileDescriptor $r1;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 = $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        $i0 = virtualinvoke $r1.<android.os.ParcelFileDescriptor: int describeContents()>();

        return $i0;
    }

    public long getDeclaredLength()
    {
        android.content.res.AssetFileDescriptor $r0;
        long l0;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        l0 = $r0.<android.content.res.AssetFileDescriptor: long mLength>;

        return l0;
    }

    public java.io.FileDescriptor getFileDescriptor()
    {
        android.content.res.AssetFileDescriptor $r0;
        java.io.FileDescriptor $r1;
        android.os.ParcelFileDescriptor $r2;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $r2 = $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        $r1 = virtualinvoke $r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        return $r1;
    }

    public long getLength()
    {
        android.content.res.AssetFileDescriptor $r0;
        long $l0;
        byte $b1;
        android.os.ParcelFileDescriptor $r1;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $l0 = $r0.<android.content.res.AssetFileDescriptor: long mLength>;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label1;

        $l0 = $r0.<android.content.res.AssetFileDescriptor: long mLength>;

        return $l0;

     label1:
        $r1 = $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        $l0 = virtualinvoke $r1.<android.os.ParcelFileDescriptor: long getStatSize()>();

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label2;

        return $l0;

     label2:
        return -1L;
    }

    public android.os.ParcelFileDescriptor getParcelFileDescriptor()
    {
        android.content.res.AssetFileDescriptor $r0;
        android.os.ParcelFileDescriptor r1;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        r1 = $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        return r1;
    }

    public long getStartOffset()
    {
        android.content.res.AssetFileDescriptor $r0;
        long l0;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        l0 = $r0.<android.content.res.AssetFileDescriptor: long mStartOffset>;

        return l0;
    }

    public java.lang.String toString()
    {
        android.content.res.AssetFileDescriptor $r0;
        java.lang.StringBuilder $r1;
        android.os.ParcelFileDescriptor $r2;
        long $l0;
        java.lang.String $r3;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{AssetFileDescriptor: ");

        $r2 = $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start=");

        $l0 = $r0.<android.content.res.AssetFileDescriptor: long mStartOffset>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len=");

        $l0 = $r0.<android.content.res.AssetFileDescriptor: long mLength>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.res.AssetFileDescriptor $r0;
        android.os.Parcel $r1;
        int $i0;
        android.os.ParcelFileDescriptor $r2;
        long $l1;

        $r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        virtualinvoke $r2.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>($r1, $i0);

        $l1 = $r0.<android.content.res.AssetFileDescriptor: long mStartOffset>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l1);

        $l1 = $r0.<android.content.res.AssetFileDescriptor: long mLength>;

        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l1);

        return;
    }
}
