class com.android.server.PackageManagerService extends android.content.pm.IPackageManager$Stub
{
    private static final int ADD_EVENTS;
    private static final boolean DEBUG_PREFERRED;
    private static final boolean DEBUG_SETTINGS;
    private static final int FIRST_APPLICATION_UID;
    private static final boolean GET_CERTIFICATES;
    static final int LOG_BOOT_PROGRESS_PMS_DATA_SCAN_START;
    static final int LOG_BOOT_PROGRESS_PMS_READY;
    static final int LOG_BOOT_PROGRESS_PMS_SCAN_END;
    static final int LOG_BOOT_PROGRESS_PMS_START;
    static final int LOG_BOOT_PROGRESS_PMS_SYSTEM_SCAN_START;
    private static final int MAX_APPLICATION_UIDS;
    private static final boolean MULTIPLE_APPLICATION_UIDS;
    private static final int OBSERVER_EVENTS;
    private static final int RADIO_UID;
    private static final int REMOVE_EVENTS;
    static final int SCAN_FORCE_DEX;
    static final int SCAN_FORWARD_LOCKED;
    static final int SCAN_MONITOR;
    static final int SCAN_NEW_INSTALL;
    static final int SCAN_NO_DEX;
    static final int SCAN_UPDATE_SIGNATURE;
    private static final boolean SHOW_INFO;
    private static final java.lang.String TAG;
    private static final java.util.Comparator mProviderInitOrderSorter;
    private static final java.util.Comparator mResolvePrioritySorter;
    final com.android.server.PackageManagerService$ActivityIntentResolver mActivities;
    android.content.pm.ApplicationInfo mAndroidApplication;
    final java.io.File mAppDataDir;
    final java.util.HashMap mAppDirs;
    final java.io.File mAppInstallDir;
    final android.os.FileObserver mAppInstallObserver;
    final android.content.Context mContext;
    final int mDefParseFlags;
    final android.os.FileObserver mDrmAppInstallObserver;
    final java.io.File mDrmAppPrivateInstallDir;
    final boolean mFactoryTest;
    final java.io.File mFrameworkDir;
    final android.os.FileObserver mFrameworkInstallObserver;
    int[] mGlobalGids;
    final android.os.Handler mHandler;
    final android.os.HandlerThread mHandlerThread;
    boolean mHasSystemUidErrors;
    final java.lang.Object mInstallLock;
    final com.android.server.Installer mInstaller;
    final java.util.HashMap mInstrumentation;
    int mLastScanError;
    final android.util.DisplayMetrics mMetrics;
    final int[] mOutPermissions;
    final java.util.HashMap mPackages;
    final java.util.HashMap mPermissionGroups;
    android.content.pm.PackageParser$Package mPlatformPackage;
    final java.util.HashMap mProviders;
    final java.util.HashMap mProvidersByComponent;
    final com.android.server.PackageManagerService$ActivityIntentResolver mReceivers;
    boolean mReportedUidError;
    final android.content.pm.ActivityInfo mResolveActivity;
    android.content.ComponentName mResolveComponentName;
    final android.content.pm.ResolveInfo mResolveInfo;
    boolean mRestoredSettings;
    boolean mSafeMode;
    java.io.File mScanningPath;
    final int mSdkVersion;
    final java.lang.String[] mSeparateProcesses;
    final com.android.server.PackageManagerService$ServiceIntentResolver mServices;
    final com.android.server.PackageManagerService$Settings mSettings;
    final java.util.HashMap mSharedLibraries;
    final java.io.File mSystemAppDir;
    final android.os.FileObserver mSystemInstallObserver;
    final android.util.SparseArray mSystemPermissions;
    boolean mSystemReady;

    static void <clinit>()
    {
        com.android.server.PackageManagerService$3 $r0;
        com.android.server.PackageManagerService$4 $r1;

        <com.android.server.PackageManagerService: java.lang.String TAG> = "PackageManager";

        <com.android.server.PackageManagerService: boolean SHOW_INFO> = 0;

        <com.android.server.PackageManagerService: int SCAN_UPDATE_SIGNATURE> = 8;

        <com.android.server.PackageManagerService: int SCAN_NO_DEX> = 2;

        <com.android.server.PackageManagerService: int SCAN_NEW_INSTALL> = 32;

        <com.android.server.PackageManagerService: int SCAN_MONITOR> = 1;

        <com.android.server.PackageManagerService: int SCAN_FORWARD_LOCKED> = 16;

        <com.android.server.PackageManagerService: int SCAN_FORCE_DEX> = 4;

        <com.android.server.PackageManagerService: int REMOVE_EVENTS> = 584;

        <com.android.server.PackageManagerService: int RADIO_UID> = 1001;

        <com.android.server.PackageManagerService: int OBSERVER_EVENTS> = 712;

        <com.android.server.PackageManagerService: boolean MULTIPLE_APPLICATION_UIDS> = 1;

        <com.android.server.PackageManagerService: int MAX_APPLICATION_UIDS> = 1000;

        <com.android.server.PackageManagerService: int LOG_BOOT_PROGRESS_PMS_SYSTEM_SCAN_START> = 3070;

        <com.android.server.PackageManagerService: int LOG_BOOT_PROGRESS_PMS_START> = 3060;

        <com.android.server.PackageManagerService: int LOG_BOOT_PROGRESS_PMS_SCAN_END> = 3090;

        <com.android.server.PackageManagerService: int LOG_BOOT_PROGRESS_PMS_READY> = 3100;

        <com.android.server.PackageManagerService: int LOG_BOOT_PROGRESS_PMS_DATA_SCAN_START> = 3080;

        <com.android.server.PackageManagerService: boolean GET_CERTIFICATES> = 1;

        <com.android.server.PackageManagerService: int FIRST_APPLICATION_UID> = 10000;

        <com.android.server.PackageManagerService: boolean DEBUG_SETTINGS> = 0;

        <com.android.server.PackageManagerService: boolean DEBUG_PREFERRED> = 0;

        <com.android.server.PackageManagerService: int ADD_EVENTS> = 136;

        $r0 = new com.android.server.PackageManagerService$3;

        specialinvoke $r0.<com.android.server.PackageManagerService$3: void <init>()>();

        <com.android.server.PackageManagerService: java.util.Comparator mResolvePrioritySorter> = $r0;

        $r1 = new com.android.server.PackageManagerService$4;

        specialinvoke $r1.<com.android.server.PackageManagerService$4: void <init>()>();

        <com.android.server.PackageManagerService: java.util.Comparator mProviderInitOrderSorter> = $r1;

        return;
    }

    public void <init>(android.content.Context, boolean)
    {
        com.android.server.PackageManagerService $r0;
        boolean $z0;
        com.android.server.Installer $r1;
        java.util.HashSet $r2;
        java.io.File $r3, $r22, $r23;
        android.content.Context $r4;
        android.os.HandlerThread $r5;
        int $i0, $i2;
        java.lang.Object $r6, $r33;
        java.util.HashMap $r7, $r30;
        int[] $r8;
        android.util.SparseArray $r9;
        com.android.server.PackageManagerService$ActivityIntentResolver $r10;
        com.android.server.PackageManagerService$ServiceIntentResolver $r11;
        android.content.pm.ActivityInfo $r12;
        android.content.pm.ResolveInfo $r13;
        long $l1, $l4;
        android.util.DisplayMetrics $r14;
        com.android.server.PackageManagerService$Settings $r15;
        java.lang.String $r16, $r17;
        android.view.WindowManager $r18;
        android.view.Display $r19;
        android.os.Handler $r20;
        android.os.Looper $r21;
        java.lang.String[] $r24;
        java.lang.StringBuilder $r25;
        java.io.FileNotFoundException $r26, $r34, $r36;
        java.lang.Throwable $r27, $r28;
        java.io.IOException $r29, $r35, $r37;
        java.util.Collection $r31;
        java.util.Iterator $r32;
        com.android.server.PackageManagerService$AppDirObserver $r38;
        android.os.FileObserver $r39;
        byte $b3;
        java.util.ArrayList $r40;
        float $f0;
        java.lang.Runtime $r41;

        $r0 := @this: com.android.server.PackageManagerService;

        $r4 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<android.content.pm.IPackageManager$Stub: void <init>()>();

        $r5 = new android.os.HandlerThread;

        specialinvoke $r5.<android.os.HandlerThread: void <init>(java.lang.String,int)>("PackageManager", 10);

        $r0.<com.android.server.PackageManagerService: android.os.HandlerThread mHandlerThread> = $r5;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.build.version.sdk", 0);

        $r0.<com.android.server.PackageManagerService: int mSdkVersion> = $i0;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        $r0.<com.android.server.PackageManagerService: java.lang.Object mInstallLock> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService: java.util.HashMap mAppDirs> = $r7;

        $r8 = newarray (int)[3];

        $r0.<com.android.server.PackageManagerService: int[] mOutPermissions> = $r8;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages> = $r7;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        $r0.<com.android.server.PackageManagerService: android.util.SparseArray mSystemPermissions> = $r9;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService: java.util.HashMap mSharedLibraries> = $r7;

        $r10 = new com.android.server.PackageManagerService$ActivityIntentResolver;

        specialinvoke $r10.<com.android.server.PackageManagerService$ActivityIntentResolver: void <init>(com.android.server.PackageManagerService,com.android.server.PackageManagerService$1)>($r0, null);

        $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mActivities> = $r10;

        $r10 = new com.android.server.PackageManagerService$ActivityIntentResolver;

        specialinvoke $r10.<com.android.server.PackageManagerService$ActivityIntentResolver: void <init>(com.android.server.PackageManagerService,com.android.server.PackageManagerService$1)>($r0, null);

        $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mReceivers> = $r10;

        $r11 = new com.android.server.PackageManagerService$ServiceIntentResolver;

        specialinvoke $r11.<com.android.server.PackageManagerService$ServiceIntentResolver: void <init>(com.android.server.PackageManagerService,com.android.server.PackageManagerService$1)>($r0, null);

        $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ServiceIntentResolver mServices> = $r11;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService: java.util.HashMap mProvidersByComponent> = $r7;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders> = $r7;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService: java.util.HashMap mInstrumentation> = $r7;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r0.<com.android.server.PackageManagerService: java.util.HashMap mPermissionGroups> = $r7;

        $r12 = new android.content.pm.ActivityInfo;

        specialinvoke $r12.<android.content.pm.ActivityInfo: void <init>()>();

        $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity> = $r12;

        $r13 = new android.content.pm.ResolveInfo;

        specialinvoke $r13.<android.content.pm.ResolveInfo: void <init>()>();

        $r0.<com.android.server.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo> = $r13;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3060, $l1);

        $i0 = $r0.<com.android.server.PackageManagerService: int mSdkVersion>;

        if $i0 > 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "**** ro.build.version.sdk not set!");

     label01:
        $r0.<com.android.server.PackageManagerService: android.content.Context mContext> = $r4;

        $r0.<com.android.server.PackageManagerService: boolean mFactoryTest> = $z0;

        $r14 = new android.util.DisplayMetrics;

        specialinvoke $r14.<android.util.DisplayMetrics: void <init>()>();

        $r0.<com.android.server.PackageManagerService: android.util.DisplayMetrics mMetrics> = $r14;

        $r15 = new com.android.server.PackageManagerService$Settings;

        specialinvoke $r15.<com.android.server.PackageManagerService$Settings: void <init>()>();

        $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings> = $r15;

        $r15 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r15.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$SharedUserSetting addSharedUserLP(java.lang.String,int,int)>("android.uid.system", 1000, 1);

        $r15 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r15.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$SharedUserSetting addSharedUserLP(java.lang.String,int,int)>("android.uid.phone", 1001, 1);

        $r16 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.separate_processes");

        if $r16 == null goto label17;

        $i0 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i0 <= 0 goto label17;

        $r17 = "*";

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 == 0 goto label16;

        $r0.<com.android.server.PackageManagerService: int mDefParseFlags> = 8;

        $r0.<com.android.server.PackageManagerService: java.lang.String[] mSeparateProcesses> = null;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "Running with debug.separate_processes: * (ALL)");

     label02:
        $r1 = new com.android.server.Installer;

        specialinvoke $r1.<com.android.server.Installer: void <init>()>();

        $z0 = virtualinvoke $r1.<com.android.server.Installer: boolean ping()>();

        if $z0 == 0 goto label18;

        $z0 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z0 == 0 goto label18;

        $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller> = $r1;

     label03:
        $r6 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r18 = (android.view.WindowManager) $r6;

        $r19 = interfaceinvoke $r18.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r14 = $r0.<com.android.server.PackageManagerService: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r19.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r14);

        $r6 = $r0.<com.android.server.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor $r6;

     label04:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label05:
        $r5 = $r0.<com.android.server.PackageManagerService: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r5.<java.lang.Thread: void start()>();

        $r20 = new android.os.Handler;

        $r5 = $r0.<com.android.server.PackageManagerService: android.os.HandlerThread mHandlerThread>;

        $r21 = virtualinvoke $r5.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r20.<android.os.Handler: void <init>(android.os.Looper)>($r21);

        $r0.<com.android.server.PackageManagerService: android.os.Handler mHandler> = $r20;

        $r22 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, "data");

        $r0.<com.android.server.PackageManagerService: java.io.File mAppDataDir> = $r3;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, "app-private");

        $r0.<com.android.server.PackageManagerService: java.io.File mDrmAppPrivateInstallDir> = $r3;

        $r1 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r1 != null goto label06;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, "misc");

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

        $r3 = $r0.<com.android.server.PackageManagerService: java.io.File mAppDataDir>;

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

        $r3 = $r0.<com.android.server.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

     label06:
        virtualinvoke $r0.<com.android.server.PackageManagerService: void readPermissions()>();

        $r15 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $z0 = virtualinvoke $r15.<com.android.server.PackageManagerService$Settings: boolean readLP()>();

        $r0.<com.android.server.PackageManagerService: boolean mRestoredSettings> = $z0;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3070, $l1);

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = new java.io.File;

        $r23 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r23, "framework");

        $r0.<com.android.server.PackageManagerService: java.io.File mFrameworkDir> = $r3;

        $r1 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r1 == null goto label47;

        $r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.boot.class.path");

        if $r16 == null goto label27;

        $r24 = staticinvoke <com.android.server.PackageManagerService: java.lang.String[] splitString(java.lang.String,char)>($r16, 58);

        $i0 = 0;

     label07:
        $i2 = lengthof $r24;

     label08:
        if $i0 >= $i2 goto label28;

     label09:
        $r16 = $r24[$i0];

     label10:
        $z0 = staticinvoke <dalvik.system.DexFile: boolean isDexOptNeeded(java.lang.String)>($r16);

     label11:
        if $z0 == 0 goto label15;

     label12:
        $r16 = $r24[$i0];

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r16);

     label13:
        $r1 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

     label14:
        $r16 = $r24[$i0];

        virtualinvoke $r1.<com.android.server.Installer: int dexopt(java.lang.String,int,boolean)>($r16, 1000, 1);

     label15:
        $i0 = $i0 + 1;

        goto label07;

     label16:
        $r0.<com.android.server.PackageManagerService: int mDefParseFlags> = 0;

        $r24 = virtualinvoke $r16.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r0.<com.android.server.PackageManagerService: java.lang.String[] mSeparateProcesses> = $r24;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running with debug.separate_processes: ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        goto label02;

     label17:
        $r0.<com.android.server.PackageManagerService: int mDefParseFlags> = 0;

        $r0.<com.android.server.PackageManagerService: java.lang.String[] mSeparateProcesses> = null;

        goto label02;

     label18:
        $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller> = null;

        goto label03;

     label19:
        $r26 := @caughtexception;

     label20:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Boot class path not found: ");

        $r16 = $r24[$i0];

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        goto label15;

     label21:
        $r27 := @caughtexception;

        exitmonitor $r7;

     label22:
        throw $r27;

     label23:
        $r28 := @caughtexception;

        exitmonitor $r6;

     label24:
        throw $r28;

     label25:
        $r29 := @caughtexception;

     label26:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception reading boot class path: ");

        $r16 = $r24[$i0];

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r16, $r29);

        goto label15;

     label27:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "No BOOTCLASSPATH found!");

     label28:
        $r30 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $i0 = virtualinvoke $r30.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label35;

        $r30 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r31 = virtualinvoke $r30.<java.util.HashMap: java.util.Collection values()>();

        $r32 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();

     label29:
        $z0 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label35;

        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.lang.String) $r33;

     label30:
        $z0 = staticinvoke <dalvik.system.DexFile: boolean isDexOptNeeded(java.lang.String)>($r16);

        if $z0 == 0 goto label29;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r16);

        $r1 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        virtualinvoke $r1.<com.android.server.Installer: int dexopt(java.lang.String,int,boolean)>($r16, 1000, 1);

     label31:
        goto label29;

     label32:
        $r34 := @caughtexception;

     label33:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Library not found: ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        goto label29;

     label34:
        $r35 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception reading library: ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r16, $r35);

        goto label29;

     label35:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r0.<com.android.server.PackageManagerService: java.io.File mFrameworkDir>;

        $r16 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/framework-res.apk");

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r16);

        $r3 = $r0.<com.android.server.PackageManagerService: java.io.File mFrameworkDir>;

        $r24 = virtualinvoke $r3.<java.io.File: java.lang.String[] list()>();

        if $r24 == null goto label47;

        $r1 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r1 == null goto label47;

        $i0 = 0;

     label36:
        $i2 = lengthof $r24;

        if $i0 >= $i2 goto label47;

        $r3 = new java.io.File;

        $r23 = $r0.<com.android.server.PackageManagerService: java.io.File mFrameworkDir>;

        $r16 = $r24[$i0];

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r23, $r16);

        $r16 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>($r16);

        if $z0 == 0 goto label38;

     label37:
        $i0 = $i0 + 1;

        goto label36;

     label38:
        $z0 = virtualinvoke $r16.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z0 != 0 goto label40;

        $z0 = virtualinvoke $r16.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");

     label39:
        if $z0 == 0 goto label37;

     label40:
        $z0 = staticinvoke <dalvik.system.DexFile: boolean isDexOptNeeded(java.lang.String)>($r16);

     label41:
        if $z0 == 0 goto label37;

     label42:
        $r1 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        virtualinvoke $r1.<com.android.server.Installer: int dexopt(java.lang.String,int,boolean)>($r16, 1000, 1);

     label43:
        goto label37;

     label44:
        $r36 := @caughtexception;

     label45:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Jar not found: ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        goto label37;

     label46:
        $r37 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception reading jar: ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r16, $r37);

        goto label37;

     label47:
        $r38 = new com.android.server.PackageManagerService$AppDirObserver;

        $r3 = $r0.<com.android.server.PackageManagerService: java.io.File mFrameworkDir>;

        $r16 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r38.<com.android.server.PackageManagerService$AppDirObserver: void <init>(com.android.server.PackageManagerService,java.lang.String,int,boolean)>($r0, $r16, 712, 1);

        $r0.<com.android.server.PackageManagerService: android.os.FileObserver mFrameworkInstallObserver> = $r38;

        $r39 = $r0.<com.android.server.PackageManagerService: android.os.FileObserver mFrameworkInstallObserver>;

        virtualinvoke $r39.<android.os.FileObserver: void startWatching()>();

        $r3 = $r0.<com.android.server.PackageManagerService: java.io.File mFrameworkDir>;

        $b3 = 1 | 2;

        specialinvoke $r0.<com.android.server.PackageManagerService: void scanDirLI(java.io.File,int,int)>($r3, 1, $b3);

        $r3 = new java.io.File;

        $r23 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r23, "app");

        $r0.<com.android.server.PackageManagerService: java.io.File mSystemAppDir> = $r3;

        $r38 = new com.android.server.PackageManagerService$AppDirObserver;

        $r3 = $r0.<com.android.server.PackageManagerService: java.io.File mSystemAppDir>;

        $r16 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r38.<com.android.server.PackageManagerService$AppDirObserver: void <init>(com.android.server.PackageManagerService,java.lang.String,int,boolean)>($r0, $r16, 712, 1);

        $r0.<com.android.server.PackageManagerService: android.os.FileObserver mSystemInstallObserver> = $r38;

        $r39 = $r0.<com.android.server.PackageManagerService: android.os.FileObserver mSystemInstallObserver>;

        virtualinvoke $r39.<android.os.FileObserver: void startWatching()>();

        $r3 = $r0.<com.android.server.PackageManagerService: java.io.File mSystemAppDir>;

        specialinvoke $r0.<com.android.server.PackageManagerService: void scanDirLI(java.io.File,int,int)>($r3, 1, 1);

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, "app");

        $r0.<com.android.server.PackageManagerService: java.io.File mAppInstallDir> = $r3;

        $r1 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r1 != null goto label48;

        $r22 = $r0.<com.android.server.PackageManagerService: java.io.File mAppInstallDir>;

        virtualinvoke $r22.<java.io.File: boolean mkdirs()>();

     label48:
        $r15 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r40 = virtualinvoke $r15.<com.android.server.PackageManagerService$Settings: java.util.ArrayList getListOfIncompleteInstallPackages()>();

        $i0 = 0;

     label49:
        $i2 = virtualinvoke $r40.<java.util.ArrayList: int size()>();

        if $i0 >= $i2 goto label50;

        $r33 = virtualinvoke $r40.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r16 = (java.lang.String) $r33;

        virtualinvoke $r0.<com.android.server.PackageManagerService: void cleanupInstallFailedPackage(java.lang.String)>($r16);

        $i0 = $i0 + 1;

        goto label49;

     label50:
        specialinvoke $r0.<com.android.server.PackageManagerService: void deleteTempPackageFiles()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3080, $l4);

        $r38 = new com.android.server.PackageManagerService$AppDirObserver;

        $r22 = $r0.<com.android.server.PackageManagerService: java.io.File mAppInstallDir>;

        $r16 = virtualinvoke $r22.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r38.<com.android.server.PackageManagerService$AppDirObserver: void <init>(com.android.server.PackageManagerService,java.lang.String,int,boolean)>($r0, $r16, 712, 0);

        $r0.<com.android.server.PackageManagerService: android.os.FileObserver mAppInstallObserver> = $r38;

        $r39 = $r0.<com.android.server.PackageManagerService: android.os.FileObserver mAppInstallObserver>;

        virtualinvoke $r39.<android.os.FileObserver: void startWatching()>();

        $r22 = $r0.<com.android.server.PackageManagerService: java.io.File mAppInstallDir>;

        specialinvoke $r0.<com.android.server.PackageManagerService: void scanDirLI(java.io.File,int,int)>($r22, 0, 1);

        $r38 = new com.android.server.PackageManagerService$AppDirObserver;

        $r22 = $r0.<com.android.server.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        $r16 = virtualinvoke $r22.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r38.<com.android.server.PackageManagerService$AppDirObserver: void <init>(com.android.server.PackageManagerService,java.lang.String,int,boolean)>($r0, $r16, 712, 0);

        $r0.<com.android.server.PackageManagerService: android.os.FileObserver mDrmAppInstallObserver> = $r38;

        $r39 = $r0.<com.android.server.PackageManagerService: android.os.FileObserver mDrmAppInstallObserver>;

        virtualinvoke $r39.<android.os.FileObserver: void startWatching()>();

        $r22 = $r0.<com.android.server.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        specialinvoke $r0.<com.android.server.PackageManagerService: void scanDirLI(java.io.File,int,int)>($r22, 0, 1);

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3090, $l4);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time to scan packages: ");

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = $l4 - $l1;

        $f0 = (float) $l1;

        $f0 = $f0 / 1000.0F;

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r16);

        specialinvoke $r0.<com.android.server.PackageManagerService: void updatePermissionsLP()>();

        $r15 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r15.<com.android.server.PackageManagerService$Settings: void writeLP()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3100, $l1);

        $r41 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r41.<java.lang.Runtime: void gc()>();

        exitmonitor $r7;

     label51:
        exitmonitor $r6;

     label52:
        return;

        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label05 to label08 with label21;
        catch java.io.FileNotFoundException from label10 to label11 with label19;
        catch java.io.FileNotFoundException from label12 to label13 with label19;
        catch java.io.FileNotFoundException from label14 to label15 with label19;
        catch java.io.IOException from label10 to label11 with label25;
        catch java.io.IOException from label12 to label13 with label25;
        catch java.io.IOException from label14 to label15 with label25;
        catch java.lang.Throwable from label09 to label15 with label21;
        catch java.lang.Throwable from label20 to label22 with label21;
        catch java.lang.Throwable from label22 to label24 with label23;
        catch java.lang.Throwable from label26 to label30 with label21;
        catch java.io.FileNotFoundException from label30 to label31 with label32;
        catch java.io.IOException from label30 to label31 with label34;
        catch java.lang.Throwable from label30 to label31 with label21;
        catch java.lang.Throwable from label33 to label39 with label21;
        catch java.io.FileNotFoundException from label40 to label41 with label44;
        catch java.io.FileNotFoundException from label42 to label43 with label44;
        catch java.io.IOException from label40 to label41 with label46;
        catch java.io.IOException from label42 to label43 with label46;
        catch java.lang.Throwable from label40 to label43 with label21;
        catch java.lang.Throwable from label45 to label51 with label21;
        catch java.lang.Throwable from label51 to label52 with label23;
    }

    static java.util.Comparator access$1000()
    {
        java.util.Comparator r0;

        r0 = <com.android.server.PackageManagerService: java.util.Comparator mResolvePrioritySorter>;

        return r0;
    }

    static boolean access$1100(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.server.PackageManagerService: boolean isPackageFilename(java.lang.String)>($r0);

        return $z0;
    }

    static android.content.pm.PackageParser$Package access$1200(com.android.server.PackageManagerService, java.io.File, java.io.File, java.io.File, int, int)
    {
        com.android.server.PackageManagerService $r0;
        java.io.File $r1, $r2, $r3;
        int $i0, $i1;
        android.content.pm.PackageParser$Package $r4;

        $r0 := @parameter0: com.android.server.PackageManagerService;

        $r1 := @parameter1: java.io.File;

        $r2 := @parameter2: java.io.File;

        $r3 := @parameter3: java.io.File;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $r4 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,java.io.File,java.io.File,int,int)>($r1, $r2, $r3, $i0, $i1);

        return $r4;
    }

    static void access$1300(com.android.server.PackageManagerService, android.content.pm.PackageParser$Package, boolean)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1;
        boolean $z0;

        $r0 := @parameter0: com.android.server.PackageManagerService;

        $r1 := @parameter1: android.content.pm.PackageParser$Package;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<com.android.server.PackageManagerService: void grantPermissionsLP(android.content.pm.PackageParser$Package,boolean)>($r1, $z0);

        return;
    }

    static void access$1400(java.lang.String, java.lang.String, android.os.Bundle)
    {
        java.lang.String $r0, $r1;
        android.os.Bundle $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.os.Bundle;

        staticinvoke <com.android.server.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle)>($r0, $r1, $r2);

        return;
    }

    static com.android.server.PackageManagerService$PackageInstalledInfo access$1500(com.android.server.PackageManagerService, android.net.Uri, int, boolean)
    {
        com.android.server.PackageManagerService $r0;
        android.net.Uri $r1;
        int $i0;
        boolean $z0;
        com.android.server.PackageManagerService$PackageInstalledInfo $r2;

        $r0 := @parameter0: com.android.server.PackageManagerService;

        $r1 := @parameter1: android.net.Uri;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r2 = specialinvoke $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$PackageInstalledInfo installPackageLI(android.net.Uri,int,boolean)>($r1, $i0, $z0);

        return $r2;
    }

    static boolean access$1600(com.android.server.PackageManagerService, java.lang.String, boolean, boolean, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        boolean $z0, $z1;
        int $i0;

        $r0 := @parameter0: com.android.server.PackageManagerService;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $i0 := @parameter4: int;

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean deletePackageX(java.lang.String,boolean,boolean,int)>($r1, $z0, $z1, $i0);

        return $z0;
    }

    static boolean access$1800(com.android.server.PackageManagerService, java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: com.android.server.PackageManagerService;

        $r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean clearApplicationUserDataLI(java.lang.String)>($r1);

        return $z0;
    }

    static boolean access$1900(com.android.server.PackageManagerService, java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: com.android.server.PackageManagerService;

        $r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean deleteApplicationCacheFilesLI(java.lang.String)>($r1);

        return $z0;
    }

    static boolean access$2000(com.android.server.PackageManagerService, java.lang.String, android.content.pm.PackageStats)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        android.content.pm.PackageStats $r2;
        boolean $z0;

        $r0 := @parameter0: com.android.server.PackageManagerService;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.pm.PackageStats;

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean getPackageSizeInfoLI(java.lang.String,android.content.pm.PackageStats)>($r1, $r2);

        return $z0;
    }

    static void access$2300(int, java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        staticinvoke <com.android.server.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>($i0, $r0);

        return;
    }

    static int[] appendInt(int[], int)
    {
        int[] $r0, $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        if $r0 != null goto label1;

        $r0 = newarray (int)[1];

        $r0[0] = $i0;

        return $r0;

     label1:
        $i1 = lengthof $r0;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label4;

        $i3 = $r0[$i2];

        if $i3 != $i0 goto label3;

        return $r0;

     label3:
        $i2 = $i2 + 1;

        goto label2;

     label4:
        $i2 = $i1 + 1;

        $r1 = newarray (int)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i1);

        $r1[$i1] = $i0;

        return $r1;
    }

    static int[] appendInts(int[], int[])
    {
        int[] $r0, $r1;
        int $i0, $i1, $i2;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: int[];

        if $r0 != null goto label1;

        return $r1;

     label1:
        if $r1 != null goto label2;

        return $r0;

     label2:
        $i0 = lengthof $r0;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $i2 = $r0[$i1];

        $r1 = staticinvoke <com.android.server.PackageManagerService: int[] appendInt(int[],int)>($r1, $i2);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r1;
    }

    static java.lang.String arrayToString(int[])
    {
        int[] $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;
        int $i0, $i1;

        $r0 := @parameter0: int[];

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(128);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        if $r0 == null goto label3;

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        if $i0 <= 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $i1 = $r0[$i0];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private void cachePackageSharedLibsLI(android.content.pm.PackageParser$Package, java.io.File, java.io.File) throws java.io.IOException
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1;
        java.io.File $r2, $r3, $r5;
        java.util.zip.ZipFile $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r11;
        boolean $z0, $z1;
        java.util.Enumeration $r8;
        java.lang.Object $r9;
        java.util.zip.ZipEntry $r10;
        int $i0;
        long $l1, $l2;
        byte $b3;
        com.android.server.Installer $r12;
        java.io.IOException $r13;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.io.File;

        $r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/lib");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r7);

        $z0 = 0;

        $r4 = new java.util.zip.ZipFile;

     label01:
        specialinvoke $r4.<java.util.zip.ZipFile: void <init>(java.io.File)>($r3);

        $r8 = virtualinvoke $r4.<java.util.zip.ZipFile: java.util.Enumeration entries()>();

     label02:
        $z1 = interfaceinvoke $r8.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label14;

        $r9 = interfaceinvoke $r8.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r10 = (java.util.zip.ZipEntry) $r9;

        $z1 = virtualinvoke $r10.<java.util.zip.ZipEntry: boolean isDirectory()>();

        if $z1 != 0 goto label02;

        $r7 = virtualinvoke $r10.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("lib/armeabi/lib");

        if $z1 == 0 goto label02;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>(".so");

        if $z1 == 0 goto label02;

        $r11 = "lib/armeabi/";

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i0);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z1 != 0 goto label02;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r7);

        $z1 = staticinvoke <android.os.FileUtils: boolean isFilenameSafe(java.io.File)>($r2);

        if $z1 == 0 goto label02;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r7);

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label07;

        $l1 = virtualinvoke $r2.<java.io.File: long length()>();

        $l2 = virtualinvoke $r10.<java.util.zip.ZipEntry: long getSize()>();

     label03:
        $b3 = $l1 cmp $l2;

     label04:
        if $b3 != 0 goto label07;

        $l1 = virtualinvoke $r2.<java.io.File: long lastModified()>();

        $l2 = virtualinvoke $r10.<java.util.zip.ZipEntry: long getTime()>();

     label05:
        $b3 = $l1 cmp $l2;

     label06:
        if $b3 == 0 goto label02;

     label07:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caching shared lib ");

        $r7 = virtualinvoke $r10.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r7);

     label08:
        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

     label09:
        if $r12 != null goto label10;

        virtualinvoke $r5.<java.io.File: boolean mkdir()>();

        $z0 = 1;

     label10:
        specialinvoke $r0.<com.android.server.PackageManagerService: void cacheSharedLibLI(android.content.pm.PackageParser$Package,java.util.zip.ZipFile,java.util.zip.ZipEntry,java.io.File,java.io.File)>($r1, $r4, $r10, $r5, $r2);

     label11:
        goto label02;

     label12:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Failed to cache package shared libs", $r13);

        if $z0 == 0 goto label13;

        virtualinvoke $r5.<java.io.File: boolean delete()>();

     label13:
        throw $r13;

     label14:
        return;

        catch java.io.IOException from label01 to label03 with label12;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.io.IOException from label06 to label08 with label12;
        catch java.io.IOException from label09 to label11 with label12;
    }

    private void cacheSharedLibLI(android.content.pm.PackageParser$Package, java.util.zip.ZipFile, java.util.zip.ZipEntry, java.io.File, java.io.File) throws java.io.IOException
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1;
        java.util.zip.ZipFile $r2;
        java.util.zip.ZipEntry $r3;
        java.io.File $r4, $r5, $r7;
        java.io.InputStream $r6;
        java.lang.String $r8;
        boolean $z0;
        long $l0;
        int $i1;
        java.io.IOException $r9;
        java.lang.StringBuilder $r10;
        java.lang.Throwable $r11;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 := @parameter1: java.util.zip.ZipFile;

        $r3 := @parameter2: java.util.zip.ZipEntry;

        $r4 := @parameter3: java.io.File;

        $r5 := @parameter4: java.io.File;

        $r6 = virtualinvoke $r2.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r3);

     label1:
        $r7 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("tmp", "tmp", $r4);

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getPath()>();

        $z0 = staticinvoke <android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)>($r6, $r7);

        if $z0 == 0 goto label2;

        $l0 = virtualinvoke $r3.<java.util.zip.ZipEntry: long getTime()>();

        $z0 = virtualinvoke $r7.<java.io.File: boolean setLastModified(long)>($l0);

        if $z0 == 0 goto label2;

        $i1 = staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r8, 420, -1, -1);

        if $i1 != 0 goto label2;

        $z0 = virtualinvoke $r7.<java.io.File: boolean renameTo(java.io.File)>($r5);

        if $z0 != 0 goto label4;

     label2:
        virtualinvoke $r7.<java.io.File: boolean delete()>();

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t create cached shared lib ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r9;

     label3:
        $r11 := @caughtexception;

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        throw $r11;

     label4:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label3;
    }

    private com.android.server.PackageManagerService$BasePermission checkPermissionTreeLP(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        com.android.server.PackageManagerService$BasePermission $r2;
        int $i0, $i1;
        java.lang.SecurityException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label2;

        $r2 = specialinvoke $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$BasePermission findPermissionTreeLP(java.lang.String)>($r1);

        if $r2 == null goto label2;

        $i0 = $r2.<com.android.server.PackageManagerService$BasePermission: int uid>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != $i1 goto label1;

        return $r2;

     label1:
        $r3 = new java.lang.SecurityException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to add to permission tree ");

        $r1 = $r2.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" owned by uid ");

        $i0 = $r2.<com.android.server.PackageManagerService$BasePermission: int uid>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label2:
        $r3 = new java.lang.SecurityException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission tree found for ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    private boolean clearApplicationUserDataLI(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r5;
        android.content.pm.PackageParser$Package $r6;
        com.android.server.PackageManagerService$Settings $r7;
        com.android.server.PackageManagerService$PackageSetting $r8;
        java.lang.StringBuilder $r9;
        java.lang.Throwable $r10;
        com.android.server.Installer $r11;
        int $i0;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return 0;

     label01:
        $z0 = 0;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label02:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.content.pm.PackageParser$Package) $r5;

        if $r6 != null goto label06;

        $z0 = 1;

        $r7 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r7);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r8 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        if $r8 == null goto label03;

        $r6 = $r8.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r6 != null goto label05;

     label03:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        exitmonitor $r3;

     label04:
        return 0;

     label05:
        $r6 = $r8.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label06:
        exitmonitor $r3;

     label07:
        if $z0 != 0 goto label12;

        if $r6 != null goto label11;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return 0;

     label08:
        $r10 := @caughtexception;

     label09:
        exitmonitor $r3;

     label10:
        throw $r10;

     label11:
        $r2 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r2 != null goto label12;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return 0;

     label12:
        $r11 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r11 == null goto label13;

        $r11 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $i0 = virtualinvoke $r11.<com.android.server.Installer: int clearUserData(java.lang.String)>($r1);

        if $i0 >= 0 goto label13;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove cache files for package: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return 0;

     label13:
        return 1;

        catch java.lang.Throwable from label02 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private boolean collectCertificatesLI(android.content.pm.PackageParser, com.android.server.PackageManagerService$PackageSetting, android.content.pm.PackageParser$Package, java.io.File, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser $r1;
        com.android.server.PackageManagerService$PackageSetting $r2;
        android.content.pm.PackageParser$Package $r3;
        java.io.File $r4, $r5;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        byte $b3;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser;

        $r2 := @parameter1: com.android.server.PackageManagerService$PackageSetting;

        $r3 := @parameter2: android.content.pm.PackageParser$Package;

        $r4 := @parameter3: java.io.File;

        $i0 := @parameter4: int;

        if $r2 == null goto label1;

        $r5 = $r2.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $z0 = virtualinvoke $r5.<java.io.File: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $l1 = virtualinvoke $r2.<com.android.server.PackageManagerService$PackageSettingBase: long getTimeStamp()>();

        $l2 = virtualinvoke $r4.<java.io.File: long lastModified()>();

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r4.<java.io.File: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changed; collecting certs");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r7);

        $z0 = virtualinvoke $r1.<android.content.pm.PackageParser: boolean collectCertificates(android.content.pm.PackageParser$Package,int)>($r3, $i0);

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke $r1.<android.content.pm.PackageParser: int getParseError()>();

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = $i0;

        return 0;

     label2:
        return 1;
    }

    private static void copyZipEntry(java.util.zip.ZipEntry, java.util.zip.ZipFile, java.util.zip.ZipOutputStream) throws java.io.IOException
    {
        java.util.zip.ZipEntry $r0, $r4;
        java.util.zip.ZipFile $r1;
        java.util.zip.ZipOutputStream $r2;
        byte[] $r3;
        int $i0;
        java.io.InputStream $r5;
        java.lang.String $r6;

        $r0 := @parameter0: java.util.zip.ZipEntry;

        $r1 := @parameter1: java.util.zip.ZipFile;

        $r2 := @parameter2: java.util.zip.ZipOutputStream;

        $r3 = newarray (byte)[4096];

        $i0 = virtualinvoke $r0.<java.util.zip.ZipEntry: int getMethod()>();

        if $i0 != 0 goto label3;

        $r4 = new java.util.zip.ZipEntry;

        specialinvoke $r4.<java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>($r0);

     label1:
        virtualinvoke $r2.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r4);

        $r5 = virtualinvoke $r1.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r0);

     label2:
        $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r3);

        if $i0 <= 0 goto label4;

        virtualinvoke $r2.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>($r3, 0, $i0);

        goto label2;

     label3:
        $r4 = new java.util.zip.ZipEntry;

        $r6 = virtualinvoke $r0.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r4.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r6);

        goto label1;

     label4:
        virtualinvoke $r2.<java.io.FilterOutputStream: void flush()>();

        return;
    }

    private java.io.File createTempPackageFile()
    {
        com.android.server.PackageManagerService $r0;
        java.io.File $r1;
        java.lang.String $r2;
        java.io.IOException $r3, $r4;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 = $r0.<com.android.server.PackageManagerService: java.io.File mAppInstallDir>;

     label1:
        $r1 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("vmdl", ".tmp", $r1);

     label2:
        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getCanonicalPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r2, 384, -1, -1);

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "Couldn\'t create temp file for downloaded package file.");

        return null;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "Trouble getting the canoncical path for a temp file.");

        return null;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    private boolean deleteApplicationCacheFilesLI(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        android.content.pm.ApplicationInfo $r2;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r5;
        android.content.pm.PackageParser$Package $r6;
        java.lang.StringBuilder $r7;
        java.lang.Throwable $r8;
        com.android.server.Installer $r9;
        int $i0;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return 0;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label2:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.content.pm.PackageParser$Package) $r5;

        exitmonitor $r3;

     label3:
        if $r6 != null goto label7;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return 0;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor $r3;

     label6:
        throw $r8;

     label7:
        $r2 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r2 != null goto label8;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return 0;

     label8:
        $r9 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r9 == null goto label9;

        $r9 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $i0 = virtualinvoke $r9.<com.android.server.Installer: int deleteCacheFiles(java.lang.String)>($r1);

        if $i0 >= 0 goto label9;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove cache files for package: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return 0;

     label9:
        return 1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private boolean deleteInstalledPackageLI(android.content.pm.PackageParser$Package, boolean, int, com.android.server.PackageManagerService$PackageRemovedInfo)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1;
        boolean $z0, $z1;
        int $i0, $i1;
        com.android.server.PackageManagerService$PackageRemovedInfo $r2;
        android.content.pm.ApplicationInfo $r3;
        java.io.File $r4, $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        com.android.server.Installer $r8;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $r2 := @parameter3: com.android.server.PackageManagerService$PackageRemovedInfo;

        $r3 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r3 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r7 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

        return 0;

     label1:
        $r5 = new java.io.File;

        $r7 = $r3.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r7);

        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package source ");

        $r7 = $r3.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

     label2:
        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r2.<com.android.server.PackageManagerService$PackageRemovedInfo: int uid> = $i1;

        specialinvoke $r0.<com.android.server.PackageManagerService: void removePackageDataLI(android.content.pm.PackageParser$Package,com.android.server.PackageManagerService$PackageRemovedInfo,int)>($r1, $r2, $i0);

        if $z0 == 0 goto label4;

        virtualinvoke $r5.<java.io.File: boolean delete()>();

        $r4 = new java.io.File;

        $r7 = $r3.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r7);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label3:
        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r8 == null goto label4;

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String toString()>();

        $i0 = virtualinvoke $r8.<com.android.server.Installer: int rmdex(java.lang.String)>($r7);

        if $i0 >= 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove dex file for package: ");

        $r7 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at location ");

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", retcode=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

     label4:
        return 1;
    }

    private boolean deletePackageLI(java.lang.String, boolean, int, com.android.server.PackageManagerService$PackageRemovedInfo)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        boolean $z0, $z1;
        int $i0, $i1;
        com.android.server.PackageManagerService$PackageRemovedInfo $r2;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r5;
        android.content.pm.PackageParser$Package $r6;
        com.android.server.PackageManagerService$Settings $r7;
        com.android.server.PackageManagerService$PackageSetting $r8;
        java.lang.StringBuilder $r9;
        java.lang.Throwable $r10;
        android.content.pm.ApplicationInfo $r11;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $r2 := @parameter3: com.android.server.PackageManagerService$PackageRemovedInfo;

        if $r1 != null goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return 0;

     label01:
        $z1 = 0;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label02:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.content.pm.PackageParser$Package) $r5;

        if $r6 != null goto label05;

        $z1 = 1;

        $r7 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r7);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r8 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        if $r8 != null goto label04;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        exitmonitor $r3;

     label03:
        return 0;

     label04:
        $r6 = $r8.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label05:
        exitmonitor $r3;

     label06:
        if $r6 != null goto label10;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return 0;

     label07:
        $r10 := @caughtexception;

     label08:
        exitmonitor $r3;

     label09:
        throw $r10;

     label10:
        if $z1 == 0 goto label11;

        specialinvoke $r0.<com.android.server.PackageManagerService: void removePackageDataLI(android.content.pm.PackageParser$Package,com.android.server.PackageManagerService$PackageRemovedInfo,int)>($r6, $r2, $i0);

        return 1;

     label11:
        $r11 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r11 != null goto label12;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r1 = $r6.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return 0;

     label12:
        $r11 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label13;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing system package:");

        $r1 = $r6.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r1);

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean deleteSystemPackageLI(android.content.pm.PackageParser$Package,boolean,int,com.android.server.PackageManagerService$PackageRemovedInfo)>($r6, 1, $i0, $r2);

        return $z0;

     label13:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing non-system package:");

        $r1 = $r6.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r1);

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean deleteInstalledPackageLI(android.content.pm.PackageParser$Package,boolean,int,com.android.server.PackageManagerService$PackageRemovedInfo)>($r6, $z0, $i0, $r2);

        return $z0;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    private boolean deletePackageX(java.lang.String, boolean, boolean, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;
        int $i0;
        android.os.Bundle $r2;
        com.android.server.PackageManagerService$PackageRemovedInfo $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r3 = new com.android.server.PackageManagerService$PackageRemovedInfo;

        specialinvoke $r3.<com.android.server.PackageManagerService$PackageRemovedInfo: void <init>()>();

        $r4 = $r0.<com.android.server.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor $r4;

     label01:
        $z2 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean deletePackageLI(java.lang.String,boolean,int,com.android.server.PackageManagerService$PackageRemovedInfo)>($r1, $z1, $i0, $r3);

        exitmonitor $r4;

     label02:
        if $z2 == 0 goto label08;

        if $z0 == 0 goto label09;

        $z0 = $r3.<com.android.server.PackageManagerService$PackageRemovedInfo: boolean isRemovedPackageSystemUpdate>;

        virtualinvoke $r3.<com.android.server.PackageManagerService$PackageRemovedInfo: void sendBroadcast(boolean,boolean)>($z1, $z0);

        if $z0 == 0 goto label10;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(int)>(1);

        $i0 = $r3.<com.android.server.PackageManagerService$PackageRemovedInfo: int removedUid>;

        if $i0 < 0 goto label07;

        $i0 = $r3.<com.android.server.PackageManagerService$PackageRemovedInfo: int removedUid>;

     label03:
        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.UID", $i0);

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.intent.extra.REPLACING", 1);

        staticinvoke <com.android.server.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle)>("android.intent.action.PACKAGE_ADDED", $r1, $r2);

        staticinvoke <com.android.server.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle)>("android.intent.action.PACKAGE_REPLACED", $r1, $r2);

        return $z2;

     label04:
        $r5 := @caughtexception;

     label05:
        exitmonitor $r4;

     label06:
        throw $r5;

     label07:
        $i0 = $r3.<com.android.server.PackageManagerService$PackageRemovedInfo: int uid>;

        goto label03;

     label08:
        return $z2;

     label09:
        return $z2;

     label10:
        return $z2;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
    }

    private boolean deleteSystemPackageLI(android.content.pm.PackageParser$Package, boolean, int, com.android.server.PackageManagerService$PackageRemovedInfo)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1, $r13;
        boolean $z0;
        int $i0;
        com.android.server.PackageManagerService$PackageRemovedInfo $r2;
        java.io.File $r3, $r11, $r12;
        android.content.pm.ApplicationInfo $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.util.HashMap $r7;
        com.android.server.PackageManagerService$Settings $r8;
        com.android.server.PackageManagerService$PackageSetting $r9;
        java.lang.Throwable $r10, $r14, $r15;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $r2 := @parameter3: com.android.server.PackageManagerService$PackageRemovedInfo;

        $r4 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r4 != null goto label01;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r6 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        return 0;

     label01:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label02:
        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r6 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r9 = virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting getDisabledSystemPkg(java.lang.String)>($r6);

        exitmonitor $r7;

     label03:
        if $r9 != null goto label07;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to delete system package ");

        $r6 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        return 0;

     label04:
        $r10 := @caughtexception;

     label05:
        exitmonitor $r7;

     label06:
        throw $r10;

     label07:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", "Deleting system pkg from data partition");

        $r2.<com.android.server.PackageManagerService$PackageRemovedInfo: boolean isRemovedPackageSystemUpdate> = 1;

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean deleteInstalledPackageLI(android.content.pm.PackageParser$Package,boolean,int,com.android.server.PackageManagerService$PackageRemovedInfo)>($r1, $z0, $i0, $r2);

        if $z0 != 0 goto label08;

        return 0;

     label08:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label09:
        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r6 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting enableSystemPackageLP(java.lang.String)>($r6);

        exitmonitor $r7;

     label10:
        $r11 = $r9.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r12 = $r9.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r3 = $r9.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File resourcePath>;

        $r13 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,java.io.File,java.io.File,int,int)>($r11, $r12, $r3, 5, 1);

        if $r13 != null goto label14;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to restore system package:");

        $r6 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with error:");

        $i0 = $r0.<com.android.server.PackageManagerService: int mLastScanError>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        return 0;

     label11:
        $r14 := @caughtexception;

     label12:
        exitmonitor $r7;

     label13:
        throw $r14;

     label14:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label15:
        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: void writeLP()>();

        exitmonitor $r7;

     label16:
        return 1;

     label17:
        $r15 := @caughtexception;

        exitmonitor $r7;

     label18:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void deleteTempPackageFiles()
    {
        com.android.server.PackageManagerService $r0;
        com.android.server.PackageManagerService$6 $r1;
        java.io.File $r2, $r5;
        java.lang.String $r3;
        java.lang.String[] $r4;
        int $i0, $i1;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 = new com.android.server.PackageManagerService$6;

        specialinvoke $r1.<com.android.server.PackageManagerService$6: void <init>(com.android.server.PackageManagerService)>($r0);

        $r2 = $r0.<com.android.server.PackageManagerService: java.io.File mAppInstallDir>;

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>($r1);

        if $r4 != null goto label1;

        return;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label3;

        $r2 = new java.io.File;

        $r5 = $r0.<com.android.server.PackageManagerService: java.io.File mAppInstallDir>;

        $r3 = $r4[$i0];

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r3);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    private void extractPublicFiles(android.content.pm.PackageParser$Package, java.io.File) throws java.io.IOException
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1;
        java.io.File $r2;
        java.io.IOException $r3;
        java.util.zip.ZipFile $r4;
        java.util.zip.ZipOutputStream $r5;
        java.io.FileOutputStream $r6;
        java.lang.String $r7, $r11;
        java.util.Enumeration $r8;
        boolean $z0;
        java.lang.Object $r9;
        java.util.zip.ZipEntry $r10;
        java.lang.Throwable $r12;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 := @parameter1: java.io.File;

        $r5 = new java.util.zip.ZipOutputStream;

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

        specialinvoke $r5.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r6);

        $r4 = new java.util.zip.ZipFile;

        $r7 = $r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        specialinvoke $r4.<java.util.zip.ZipFile: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r4.<java.util.zip.ZipFile: java.util.Enumeration entries()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke $r8.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r10 = (java.util.zip.ZipEntry) $r9;

        $r7 = virtualinvoke $r10.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r11 = "AndroidManifest.xml";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label2;

        $r11 = "resources.arsc";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("res/");

        if $z0 == 0 goto label1;

     label2:
        staticinvoke <com.android.server.PackageManagerService: void copyZipEntry(java.util.zip.ZipEntry,java.util.zip.ZipFile,java.util.zip.ZipOutputStream)>($r10, $r4, $r5);

     label3:
        goto label1;

     label4:
        $r3 := @caughtexception;

     label5:
        virtualinvoke $r5.<java.util.zip.ZipOutputStream: void close()>();

        throw $r3;

     label6:
        $r12 := @caughtexception;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        throw $r12;

     label7:
        virtualinvoke $r5.<java.util.zip.ZipOutputStream: void close()>();

        $r7 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r7, 420, -1, -1);

        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    private com.android.server.PackageManagerService$BasePermission findPermissionTreeLP(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r8;
        com.android.server.PackageManagerService$Settings $r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.android.server.PackageManagerService$BasePermission $r7;
        int $i0, $i1;
        char $c2;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r3 = $r2.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissionTrees>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.android.server.PackageManagerService$BasePermission) $r6;

        $r8 = $r7.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r8 = $r7.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label1;

        $r8 = $r7.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c2 != 46 goto label1;

        return $r7;

     label2:
        return null;
    }

    private static java.lang.String fixProcessName(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        if $r1 != null goto label1;

        return $r0;

     label1:
        return $r1;
    }

    private android.content.pm.ApplicationInfo generateApplicationInfoFromSettingsLP(java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        int $i0;
        com.android.server.PackageManagerService$Settings $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.android.server.PackageManagerService$PackageSetting $r5;
        android.content.pm.PackageParser$Package $r6;
        android.content.pm.PackageInfo $r7;
        android.content.pm.ApplicationInfo $r8;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r3 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r2);

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.android.server.PackageManagerService$PackageSetting) $r4;

        if $r5 == null goto label3;

        $r6 = $r5.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r6 != null goto label2;

        $r7 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLP(java.lang.String,int)>($r1, $i0);

        if $r7 == null goto label1;

        $r8 = $r7.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        return $r8;

     label1:
        return null;

     label2:
        $r6 = $r5.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r8 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int)>($r6, $i0);

        return $r8;

     label3:
        return null;
    }

    private android.content.pm.PackageInfo generatePackageInfoFromSettingsLP(java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        int $i0;
        com.android.server.PackageManagerService$Settings $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.android.server.PackageManagerService$PackageSetting $r5;
        android.content.pm.PackageParser$Package $r6;
        android.content.pm.ApplicationInfo $r7;
        android.content.pm.PackageInfo $r8;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r3 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r2);

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.android.server.PackageManagerService$PackageSetting) $r4;

        if $r5 == null goto label2;

        $r6 = $r5.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r6 != null goto label1;

        $r6 = new android.content.pm.PackageParser$Package;

        specialinvoke $r6.<android.content.pm.PackageParser$Package: void <init>(java.lang.String)>($r1);

        $r5.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg> = $r6;

        $r6 = $r5.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r7 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r7.<android.content.pm.PackageItemInfo: java.lang.String packageName> = $r1;

     label1:
        $r6 = $r5.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r8 = virtualinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int)>($r6, $i0);

        return $r8;

     label2:
        return null;
    }

    private boolean getPackageSizeInfoLI(java.lang.String, android.content.pm.PackageStats)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r11, $r14;
        android.content.pm.PackageStats $r2;
        android.content.pm.ApplicationInfo $r3;
        boolean $z0;
        java.util.HashMap $r4, $r5;
        java.lang.Object $r6;
        android.content.pm.PackageParser$Package $r7;
        com.android.server.PackageManagerService$Settings $r8;
        com.android.server.PackageManagerService$PackageSetting $r9;
        java.lang.StringBuilder $r10;
        java.lang.Throwable $r12;
        com.android.server.Installer $r13;
        int $i0;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.PackageStats;

        if $r1 != null goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to get size of null packageName.");

        return 0;

     label01:
        $z0 = 0;

        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r4;

     label02:
        $r5 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (android.content.pm.PackageParser$Package) $r6;

        if $r7 != null goto label06;

        $z0 = 1;

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r5 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r8);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r9 = (com.android.server.PackageManagerService$PackageSetting) $r6;

        if $r9 == null goto label03;

        $r7 = $r9.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r7 != null goto label05;

     label03:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        exitmonitor $r4;

     label04:
        return 0;

     label05:
        $r7 = $r9.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label06:
        exitmonitor $r4;

     label07:
        $r11 = null;

        if $z0 != 0 goto label12;

        $r3 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r3 != null goto label11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        return 0;

     label08:
        $r12 := @caughtexception;

     label09:
        exitmonitor $r4;

     label10:
        throw $r12;

     label11:
        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>($r7);

        if $z0 == 0 goto label13;

        $r11 = $r3.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

     label12:
        $r13 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r13 == null goto label15;

        $r13 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $r14 = $r7.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $i0 = virtualinvoke $r13.<com.android.server.Installer: int getSizeInfo(java.lang.String,java.lang.String,java.lang.String,android.content.pm.PackageStats)>($r1, $r14, $r11, $r2);

        if $i0 >= 0 goto label14;

        return 0;

     label13:
        $r11 = null;

        goto label12;

     label14:
        return 1;

     label15:
        return 1;

        catch java.lang.Throwable from label02 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void grantPermissionsLP(android.content.pm.PackageParser$Package, boolean)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r2, $r18;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$PackageSetting $r4, $r19;
        com.android.server.PackageManagerService$SharedUserSetting $r5;
        com.android.server.PackageManagerService$GrantedPermissions $r6;
        java.util.HashSet $r7, $r21;
        int[] $r8, $r15;
        java.util.ArrayList $r9;
        int $i0, $i1, $i2;
        com.android.server.PackageManagerService$Settings $r10;
        java.util.HashMap $r11;
        com.android.server.PackageManagerService$BasePermission $r12;
        android.content.pm.PackageParser$Permission $r13;
        android.content.pm.PermissionInfo $r14;
        android.content.pm.ApplicationInfo $r17;
        java.lang.StringBuilder $r20;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 := @parameter1: boolean;

        $r3 = $r1.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r4 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        if $r4 != null goto label01;

        return;

     label01:
        $r5 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r5 == null goto label11;

        $r6 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

     label02:
        $z1 = 0;

        if $z0 == 0 goto label03;

        $r4.<com.android.server.PackageManagerService$PackageSettingBase: boolean permissionsFixed> = 0;

        if $r6 != $r4 goto label03;

        $r7 = $r6.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        virtualinvoke $r7.<java.util.HashSet: void clear()>();

        $r8 = $r0.<com.android.server.PackageManagerService: int[] mGlobalGids>;

        $r6.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids> = $r8;

     label03:
        $r8 = $r6.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids>;

        if $r8 != null goto label04;

        $r8 = $r0.<com.android.server.PackageManagerService: int[] mGlobalGids>;

        $r6.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids> = $r8;

     label04:
        $r9 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label24;

        $r9 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r3 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r2 = (java.lang.String) $r3;

        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r11 = $r10.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r3 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r12 = (com.android.server.PackageManagerService$BasePermission) $r3;

        if $r12 == null goto label12;

        $r13 = $r12.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

     label06:
        if $r13 == null goto label23;

        $r14 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r2 = $r14.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r14 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i2 = $r14.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i2 == 0 goto label07;

        $r14 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i2 = $r14.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i2 != 1 goto label13;

     label07:
        $z2 = 1;

     label08:
        if $z2 == 0 goto label22;

        $i2 = $r4.<com.android.server.PackageManagerService$GrantedPermissions: int pkgFlags>;

        $i2 = $i2 & 1;

        if $i2 != 0 goto label09;

        $z3 = $r4.<com.android.server.PackageManagerService$PackageSettingBase: boolean permissionsFixed>;

        if $z3 == 0 goto label09;

        $r7 = $r6.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet loadedPermissions>;

        $z3 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r2);

        if $z3 != 0 goto label09;

        $z2 = 0;

     label09:
        if $z2 == 0 goto label21;

        $r7 = $r6.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z2 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r2);

        if $z2 != 0 goto label10;

        $z1 = 1;

        $r7 = $r6.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        $r8 = $r6.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids>;

        $r15 = $r12.<com.android.server.PackageManagerService$BasePermission: int[] gids>;

        $r8 = staticinvoke <com.android.server.PackageManagerService: int[] appendInts(int[],int[])>($r8, $r15);

        $r6.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids> = $r8;

     label10:
        $i1 = $i1 + 1;

        goto label05;

     label11:
        $r6 = $r4;

        goto label02;

     label12:
        $r13 = null;

        goto label06;

     label13:
        $r14 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i2 = $r14.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i2 == 2 goto label14;

        $r14 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i2 = $r14.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i2 != 3 goto label20;

     label14:
        $r16 = $r13.<android.content.pm.PackageParser$Component: android.content.pm.PackageParser$Package owner>;

        $i2 = virtualinvoke $r0.<com.android.server.PackageManagerService: int checkSignaturesLP(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>($r16, $r1);

        if $i2 == 0 goto label15;

        $r16 = $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage>;

        $i2 = virtualinvoke $r0.<com.android.server.PackageManagerService: int checkSignaturesLP(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>($r16, $r1);

        if $i2 != 0 goto label17;

     label15:
        $z2 = 1;

     label16:
        $r14 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i2 = $r14.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i2 != 3 goto label08;

        $r17 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r17.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i2 & 1;

        if $i2 == 0 goto label08;

        $r17 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r17.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i2 & 128;

        if $i2 == 0 goto label19;

        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r18 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r19 = virtualinvoke $r10.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting getDisabledSystemPkg(java.lang.String)>($r18);

        $r7 = $r19.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z2 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>($r2);

        if $z2 == 0 goto label18;

        $z2 = 1;

        goto label08;

     label17:
        $z2 = 0;

        goto label16;

     label18:
        $z2 = 0;

        goto label08;

     label19:
        $z2 = 1;

        goto label08;

     label20:
        $z2 = 0;

        goto label08;

     label21:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not granting permission ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to package ");

        $r2 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it was previously installed without");

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r2);

        goto label10;

     label22:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not granting permission ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to package ");

        $r2 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (protectionLevel=");

        $r14 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $i2 = $r14.<android.content.pm.PermissionInfo: int protectionLevel>;

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags=0x");

        $r17 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r17.<android.content.pm.ApplicationInfo: int flags>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r2);

        goto label10;

     label23:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown permission ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r2 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r2);

        goto label10;

     label24:
        if $z1 != 0 goto label25;

        if $z0 == 0 goto label26;

     label25:
        $z0 = $r4.<com.android.server.PackageManagerService$PackageSettingBase: boolean permissionsFixed>;

        if $z0 != 0 goto label27;

        $i0 = $r4.<com.android.server.PackageManagerService$GrantedPermissions: int pkgFlags>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label28;

        $r4.<com.android.server.PackageManagerService$PackageSettingBase: boolean permissionsFixed> = 1;

        $r7 = new java.util.HashSet;

        $r21 = $r6.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        specialinvoke $r7.<java.util.HashSet: void <init>(java.util.Collection)>($r21);

        $r6.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet loadedPermissions> = $r7;

        return;

     label26:
        return;

     label27:
        return;

     label28:
        return;
    }

    private void installNewPackageLI(java.lang.String, java.io.File, java.lang.String, java.io.File, java.io.File, android.content.pm.PackageParser$Package, boolean, boolean, com.android.server.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r3;
        java.io.File $r2, $r4, $r5, $r8, $r9;
        android.content.pm.PackageParser$Package $r6, $r13;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.PackageManagerService$PackageInstalledInfo $r7;
        java.util.HashMap $r10, $r11;
        java.lang.StringBuilder $r12;
        byte $b0, $b1;
        int $i2;
        java.lang.Throwable $r14;
        com.android.server.PackageManagerService$PackageRemovedInfo $r15;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.io.File;

        $r5 := @parameter4: java.io.File;

        $r6 := @parameter5: android.content.pm.PackageParser$Package;

        $z0 := @parameter6: boolean;

        $z1 := @parameter7: boolean;

        $r7 := @parameter8: com.android.server.PackageManagerService$PackageInstalledInfo;

        $r8 = new java.io.File;

        $r9 = $r0.<com.android.server.PackageManagerService: java.io.File mAppDataDir>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r1);

        $z2 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        $r7.<com.android.server.PackageManagerService$PackageInstalledInfo: java.lang.String name> = $r1;

        $r10 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r10;

     label01:
        $r11 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $z3 = virtualinvoke $r11.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z3 != 0 goto label02;

        $r11 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mAppDirs>;

        $z3 = virtualinvoke $r11.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3);

        if $z3 == 0 goto label04;

     label02:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to re-install ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without first uninstalling.");

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        $r7.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -1;

        exitmonitor $r10;

     label03:
        return;

     label04:
        exitmonitor $r10;

     label05:
        $z3 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label06;

        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label06:
        $r0.<com.android.server.PackageManagerService: int mLastScanError> = 1;

        if $z0 == 0 goto label12;

        $b0 = 16;

     label07:
        $b0 = $b0 | 13;

        if $z1 == 0 goto label13;

        $b1 = 32;

     label08:
        $b0 = $b0 | $b1;

        $r13 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,java.io.File,java.io.File,android.content.pm.PackageParser$Package,int,int)>($r2, $r4, $r5, $r6, 0, $b0);

        if $r13 != null goto label14;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package couldn\'t be installed in ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r1);

        $i2 = $r0.<com.android.server.PackageManagerService: int mLastScanError>;

        $r7.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = $i2;

        if $i2 != 1 goto label17;

        $r7.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -2;

        return;

     label09:
        $r14 := @caughtexception;

     label10:
        exitmonitor $r10;

     label11:
        throw $r14;

     label12:
        $b0 = 0;

        goto label07;

     label13:
        $b1 = 0;

        goto label08;

     label14:
        specialinvoke $r0.<com.android.server.PackageManagerService: void updateSettingsLI(java.lang.String,java.io.File,java.lang.String,java.io.File,java.io.File,android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,boolean,boolean,com.android.server.PackageManagerService$PackageInstalledInfo)>($r1, $r2, $r3, $r4, $r5, $r6, $r13, 1, $z0, $r7);

        $i2 = $r7.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i2 == 1 goto label18;

        if $z2 == 0 goto label16;

        $b0 = 1;

     label15:
        $r15 = $r7.<com.android.server.PackageManagerService$PackageInstalledInfo: com.android.server.PackageManagerService$PackageRemovedInfo removedInfo>;

        specialinvoke $r0.<com.android.server.PackageManagerService: boolean deletePackageLI(java.lang.String,boolean,int,com.android.server.PackageManagerService$PackageRemovedInfo)>($r1, 1, $b0, $r15);

        return;

     label16:
        $b0 = 0;

        goto label15;

     label17:
        return;

     label18:
        return;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private com.android.server.PackageManagerService$PackageInstalledInfo installPackageLI(android.net.Uri, int, boolean)
    {
        com.android.server.PackageManagerService $r0;
        android.net.Uri $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.PackageManagerService$PackageInstalledInfo $r2;
        android.os.ParcelFileDescriptor$AutoCloseInputStream $r3;
        android.content.pm.PackageParser $r4;
        java.io.File $r5, $r6, $r8, $r16, $r18;
        com.android.server.PackageManagerService$PackageRemovedInfo $r7;
        java.lang.String $r9, $r15, $r17;
        android.content.Context $r10;
        android.content.ContentResolver $r11;
        android.os.ParcelFileDescriptor $r12;
        java.io.FileNotFoundException $r13;
        java.lang.StringBuilder $r14;
        java.lang.String[] $r19;
        android.util.DisplayMetrics $r20;
        android.content.pm.PackageParser$Package $r21;
        java.util.HashMap $r22, $r23;
        java.lang.Throwable $r24, $r25;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.net.Uri;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r6 = null;

        $z1 = 0;

        $z2 = 0;

        $r2 = new com.android.server.PackageManagerService$PackageInstalledInfo;

        specialinvoke $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: void <init>(com.android.server.PackageManagerService)>($r0);

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = 1;

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int uid> = -1;

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: android.content.pm.PackageParser$Package pkg> = null;

        $r7 = new com.android.server.PackageManagerService$PackageRemovedInfo;

        specialinvoke $r7.<com.android.server.PackageManagerService$PackageRemovedInfo: void <init>()>();

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: com.android.server.PackageManagerService$PackageRemovedInfo removedInfo> = $r7;

     label01:
        $r8 = specialinvoke $r0.<com.android.server.PackageManagerService: java.io.File createTempPackageFile()>();

     label02:
        $r6 = $r8;

     label03:
        if $r8 != null goto label05;

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -4;

     label04:
        if $r8 == null goto label52;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label53;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label05:
        virtualinvoke $r8.<java.io.File: void deleteOnExit()>();

        $r9 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z3 == 0 goto label07;

        $r5 = new java.io.File;

        $r9 = virtualinvoke $r1.<android.net.Uri: java.lang.String getPath()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r9);

        $z3 = staticinvoke <android.os.FileUtils: boolean copyFile(java.io.File,java.io.File)>($r5, $r8);

        if $z3 != 0 goto label21;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "Couldn\'t copy package file to temp file.");

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -4;

     label06:
        if $r8 == null goto label54;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label55;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label07:
        $r9 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("content");

     label08:
        if $z3 == 0 goto label19;

     label09:
        $r10 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

     label10:
        $r11 = virtualinvoke $r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = virtualinvoke $r11.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>($r1, "r");

     label11:
        if $r12 != null goto label17;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "Couldn\'t open file descriptor from download service (null).");

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -4;

     label13:
        if $r8 == null goto label56;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label57;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label14:
        $r13 := @caughtexception;

     label15:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "Couldn\'t open file descriptor from download service.");

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -4;

     label16:
        if $r8 == null goto label58;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label59;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label17:
        $r3 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        specialinvoke $r3.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>($r12);

        $z3 = staticinvoke <android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)>($r3, $r8);

        if $z3 != 0 goto label21;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "Couldn\'t copy package stream to temp file.");

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -4;

     label18:
        if $r8 == null goto label60;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label61;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label19:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package URI is not \'file:\' or \'content:\' - ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r9);

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -3;

     label20:
        if $r8 == null goto label62;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label63;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label21:
        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = staticinvoke <android.content.pm.PackageParser: java.lang.String parsePackageName(java.lang.String,int)>($r9, 0);

        if $r9 != null goto label23;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find a package name in : ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r9);

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -2;

     label22:
        if $r8 == null goto label64;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label65;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label23:
        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: java.lang.String name> = $r9;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".apk");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        $i1 = $i0 & 1;

     label25:
        if $i1 == 0 goto label31;

        $r16 = $r0.<com.android.server.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

     label26:
        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, $r15);

        $r15 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

     label27:
        $i1 = $i0 & 1;

     label28:
        if $i1 == 0 goto label34;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".zip");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.io.File;

        $r18 = $r0.<com.android.server.PackageManagerService: java.io.File mAppInstallDir>;

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>($r18, $r17);

        $z1 = 1;

     label29:
        $i1 = $r0.<com.android.server.PackageManagerService: int mDefParseFlags>;

        $i1 = 2 | $i1;

        $r4 = new android.content.pm.PackageParser;

        $r17 = virtualinvoke $r8.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r4.<android.content.pm.PackageParser: void <init>(java.lang.String)>($r17);

        $r19 = $r0.<com.android.server.PackageManagerService: java.lang.String[] mSeparateProcesses>;

        virtualinvoke $r4.<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])>($r19);

        $i2 = $r0.<com.android.server.PackageManagerService: int mSdkVersion>;

        virtualinvoke $r4.<android.content.pm.PackageParser: void setSdkVersion(int)>($i2);

        $r17 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r20 = $r0.<com.android.server.PackageManagerService: android.util.DisplayMetrics mMetrics>;

        $r21 = virtualinvoke $r4.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,java.lang.String,android.util.DisplayMetrics,int)>($r8, $r17, $r20, $i1);

        if $r21 != null goto label36;

        $i0 = virtualinvoke $r4.<android.content.pm.PackageParser: int getParseError()>();

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = $i0;

     label30:
        if $r8 == null goto label66;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label67;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label31:
        $r5 = $r0.<com.android.server.PackageManagerService: java.io.File mAppInstallDir>;

     label32:
        $r16 = $r5;

     label33:
        goto label26;

     label34:
        $r16 = $r5;

     label35:
        goto label29;

     label36:
        $z3 = virtualinvoke $r4.<android.content.pm.PackageParser: boolean collectCertificates(android.content.pm.PackageParser$Package,int)>($r21, $i1);

        if $z3 != 0 goto label38;

        $i0 = virtualinvoke $r4.<android.content.pm.PackageParser: int getParseError()>();

        $r2.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = $i0;

     label37:
        if $r8 == null goto label68;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label69;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label38:
        $r22 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r22;

     label39:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label41;

     label40:
        $r23 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $z3 = virtualinvoke $r23.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r9);

        if $z3 == 0 goto label41;

        $z2 = 1;

     label41:
        exitmonitor $r22;

     label42:
        if $z2 == 0 goto label50;

     label43:
        specialinvoke $r0.<com.android.server.PackageManagerService: void replacePackageLI(java.lang.String,java.io.File,java.lang.String,java.io.File,java.io.File,android.content.pm.PackageParser$Package,boolean,boolean,com.android.server.PackageManagerService$PackageInstalledInfo)>($r9, $r8, $r15, $r5, $r16, $r21, $z1, $z0, $r2);

     label44:
        if $r8 == null goto label70;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label71;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        return $r2;

     label45:
        $r24 := @caughtexception;

     label46:
        exitmonitor $r22;

     label47:
        throw $r24;

     label48:
        $r25 := @caughtexception;

        if $r6 == null goto label49;

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label49;

        virtualinvoke $r6.<java.io.File: boolean delete()>();

     label49:
        throw $r25;

     label50:
        specialinvoke $r0.<com.android.server.PackageManagerService: void installNewPackageLI(java.lang.String,java.io.File,java.lang.String,java.io.File,java.io.File,android.content.pm.PackageParser$Package,boolean,boolean,com.android.server.PackageManagerService$PackageInstalledInfo)>($r9, $r8, $r15, $r5, $r16, $r21, $z1, $z0, $r2);

     label51:
        goto label44;

     label52:
        return $r2;

     label53:
        return $r2;

     label54:
        return $r2;

     label55:
        return $r2;

     label56:
        return $r2;

     label57:
        return $r2;

     label58:
        return $r2;

     label59:
        return $r2;

     label60:
        return $r2;

     label61:
        return $r2;

     label62:
        return $r2;

     label63:
        return $r2;

     label64:
        return $r2;

     label65:
        return $r2;

     label66:
        return $r2;

     label67:
        return $r2;

     label68:
        return $r2;

     label69:
        return $r2;

     label70:
        return $r2;

     label71:
        return $r2;

        catch java.lang.Throwable from label01 to label02 with label48;
        catch java.lang.Throwable from label03 to label04 with label48;
        catch java.lang.Throwable from label05 to label06 with label48;
        catch java.lang.Throwable from label07 to label08 with label48;
        catch java.io.FileNotFoundException from label10 to label11 with label14;
        catch java.lang.Throwable from label09 to label11 with label48;
        catch java.lang.Throwable from label12 to label13 with label48;
        catch java.lang.Throwable from label15 to label16 with label48;
        catch java.lang.Throwable from label17 to label18 with label48;
        catch java.lang.Throwable from label19 to label20 with label48;
        catch java.lang.Throwable from label21 to label22 with label48;
        catch java.lang.Throwable from label23 to label24 with label48;
        catch java.lang.Throwable from label25 to label27 with label48;
        catch java.lang.Throwable from label28 to label30 with label48;
        catch java.lang.Throwable from label31 to label32 with label48;
        catch java.lang.Throwable from label33 to label34 with label48;
        catch java.lang.Throwable from label35 to label37 with label48;
        catch java.lang.Throwable from label38 to label39 with label48;
        catch java.lang.Throwable from label40 to label42 with label45;
        catch java.lang.Throwable from label43 to label44 with label48;
        catch java.lang.Throwable from label46 to label47 with label45;
        catch java.lang.Throwable from label47 to label48 with label48;
        catch java.lang.Throwable from label50 to label51 with label48;
    }

    private boolean isForwardLocked(android.content.pm.PackageParser$Package)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1;
        android.content.pm.ApplicationInfo $r2;
        java.lang.String $r3, $r5;
        java.io.File $r4;
        boolean $z0;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r3 = $r2.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r4 = $r0.<com.android.server.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        return $z0;
    }

    private static final boolean isPackageFilename(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final android.content.pm.IPackageManager main(android.content.Context, boolean)
    {
        android.content.Context $r0;
        boolean $z0;
        com.android.server.PackageManagerService $r1, r2;
        android.os.IBinder r3;
        android.content.pm.IPackageManager r4;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        r2 = new com.android.server.PackageManagerService;

        $r1 = r2;

        specialinvoke r2.<com.android.server.PackageManagerService: void <init>(android.content.Context,boolean)>($r0, $z0);

        r3 = (android.os.IBinder) $r1;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("package", r3);

        r4 = (android.content.pm.IPackageManager) $r1;

        return r4;
    }

    private void readPermissionsFromXml(java.io.File)
    {
        com.android.server.PackageManagerService $r0;
        java.io.File $r1;
        java.io.FileReader $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        int $i0;
        java.io.FileNotFoundException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r7, $r14;
        boolean $z0;
        int[] $r8;
        org.xmlpull.v1.XmlPullParserException $r9;
        java.io.IOException $r10;
        android.util.SparseArray $r11;
        java.lang.Object $r12;
        java.util.HashSet $r13;
        java.util.HashMap $r15;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.io.File;

        $r2 = new java.io.FileReader;

     label01:
        specialinvoke $r2.<java.io.FileReader: void <init>(java.io.File)>($r1);

     label02:
        $r3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r2);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r3, "permissions");

     label03:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>($r3);

        $i0 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label04:
        if $i0 != 1 goto label06;

        return;

     label05:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find or open permissions file ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        return;

     label06:
        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "group";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label14;

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "gid");

        if $r6 == null goto label10;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r8 = $r0.<com.android.server.PackageManagerService: int[] mGlobalGids>;

        $r8 = staticinvoke <com.android.server.PackageManagerService: int[] appendInt(int[],int)>($r8, $i0);

        $r0.<com.android.server.PackageManagerService: int[] mGlobalGids> = $r8;

     label07:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r3);

     label08:
        goto label03;

     label09:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Got execption parsing permissions.", $r9);

        return;

     label10:
        $r5 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<group> without gid at ");

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label12:
        goto label07;

     label13:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Got execption parsing permissions.", $r10);

        return;

     label14:
        $r7 = "permission";

     label15:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label17;

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if $r6 != null goto label16;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<permission> without name at ");

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r3);

        goto label03;

     label16:
        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();

        virtualinvoke $r0.<com.android.server.PackageManagerService: void readPermission(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r3, $r6);

        goto label03;

     label17:
        $r7 = "assign-permission";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label24;

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if $r6 != null goto label18;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<assign-permission> without name at ");

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r3);

        goto label03;

     label18:
        $r7 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uid");

        if $r7 != null goto label19;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<assign-permission> without uid at ");

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r3);

        goto label03;

     label19:
        $i0 = staticinvoke <android.os.Process: int getUidForName(java.lang.String)>($r7);

        if $i0 >= 0 goto label20;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<assign-permission> with unknown uid \"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" at ");

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r3);

        goto label03;

     label20:
        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();

        $r11 = $r0.<com.android.server.PackageManagerService: android.util.SparseArray mSystemPermissions>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>($i0);

     label21:
        $r13 = (java.util.HashSet) $r12;

     label22:
        if $r13 != null goto label23;

        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        $r11 = $r0.<com.android.server.PackageManagerService: android.util.SparseArray mSystemPermissions>;

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r13);

     label23:
        virtualinvoke $r13.<java.util.HashSet: boolean add(java.lang.Object)>($r6);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r3);

        goto label03;

     label24:
        $r7 = "library";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label31;

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r7 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "file");

     label25:
        if $r6 != null goto label28;

     label26:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<library> without name at ");

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label27:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r3);

        goto label03;

     label28:
        if $r7 != null goto label30;

     label29:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<library> without file at ");

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        goto label27;

     label30:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got library ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r14);

        $r15 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mSharedLibraries>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label27;

     label31:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r3);

     label32:
        goto label03;

        catch java.io.FileNotFoundException from label01 to label02 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label04 with label09;
        catch java.io.IOException from label02 to label04 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label08 with label09;
        catch java.io.IOException from label06 to label08 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label09;
        catch java.io.IOException from label11 to label12 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label21 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label25 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label28 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label32 with label09;
        catch java.io.IOException from label15 to label21 with label13;
        catch java.io.IOException from label22 to label25 with label13;
        catch java.io.IOException from label26 to label28 with label13;
        catch java.io.IOException from label29 to label32 with label13;
    }

    private void removePackageDataLI(android.content.pm.PackageParser$Package, com.android.server.PackageManagerService$PackageRemovedInfo, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1;
        com.android.server.PackageManagerService$PackageRemovedInfo $r2;
        int $i0;
        java.io.File $r3;
        java.lang.String $r4, $r12;
        java.util.HashMap $r5, $r7;
        com.android.server.PackageManagerService$Settings $r6;
        java.lang.Object $r8;
        com.android.server.PackageManagerService$PackageSetting $r9;
        com.android.server.Installer $r10;
        java.lang.StringBuilder $r11;
        com.android.server.PackageManagerService$SharedUserSetting $r13;
        java.lang.Throwable $r14, $r16, $r17;
        android.content.pm.ApplicationInfo $r15;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 := @parameter1: com.android.server.PackageManagerService$PackageRemovedInfo;

        $i0 := @parameter2: int;

        $r4 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r2.<com.android.server.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = $r4;

        virtualinvoke $r0.<com.android.server.PackageManagerService: void removePackageLI(android.content.pm.PackageParser$Package,boolean)>($r1, 1);

        $r5 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r5;

     label01:
        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r7 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r6);

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r9 = (com.android.server.PackageManagerService$PackageSetting) $r8;

        exitmonitor $r5;

     label02:
        $i0 = $i0 & 1;

        if $i0 != 0 goto label05;

        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r10 == null goto label12;

        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $i0 = virtualinvoke $r10.<com.android.server.Installer: int remove(java.lang.String)>($r4);

        if $i0 >= 0 goto label03;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove app data or cache directory for package: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", retcode=");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r12);

     label03:
        $r5 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r5;

     label04:
        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $i0 = staticinvoke <com.android.server.PackageManagerService$Settings: int access$200(com.android.server.PackageManagerService$Settings,java.lang.String)>($r6, $r4);

        $r2.<com.android.server.PackageManagerService$PackageRemovedInfo: int removedUid> = $i0;

        exitmonitor $r5;

     label05:
        $r5 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r5;

        if $r9 == null goto label07;

     label06:
        $r13 = $r9.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r13 == null goto label07;

        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        staticinvoke <com.android.server.PackageManagerService$Settings: void access$1700(com.android.server.PackageManagerService$Settings,com.android.server.PackageManagerService$PackageSetting)>($r6, $r9);

     label07:
        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r6.<com.android.server.PackageManagerService$Settings: void writeLP()>();

        exitmonitor $r5;

     label08:
        return;

     label09:
        $r14 := @caughtexception;

     label10:
        exitmonitor $r5;

     label11:
        throw $r14;

     label12:
        $r5 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r1 = (android.content.pm.PackageParser$Package) $r8;

        $r3 = new java.io.File;

        $r15 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = $r15.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r12);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        goto label03;

     label13:
        $r16 := @caughtexception;

     label14:
        exitmonitor $r5;

     label15:
        throw $r16;

     label16:
        $r17 := @caughtexception;

     label17:
        exitmonitor $r5;

     label18:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label08 with label16;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private void replaceNonSystemPackageLI(android.content.pm.PackageParser$Package, java.io.File, java.lang.String, java.io.File, java.io.File, android.content.pm.PackageParser$Package, boolean, boolean, com.android.server.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.PackageManagerService $r0;
        java.io.File $r1, $r3, $r4;
        java.lang.String $r2, $r9, $r13;
        android.content.pm.PackageParser$Package $r5, $r7, $r8, $r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.PackageManagerService$PackageInstalledInfo $r6;
        com.android.server.PackageManagerService$PackageRemovedInfo $r10;
        int $i0;
        android.content.pm.ApplicationInfo $r11, $r12;
        java.util.HashMap $r14, $r16;
        com.android.server.PackageManagerService$Settings $r15;
        java.lang.Object $r17;
        com.android.server.PackageManagerService$PackageSetting $r18;
        byte $b1, $b2;
        java.lang.StringBuilder $r20;
        java.lang.Throwable $r21;
        android.net.Uri $r22;

        $r0 := @this: com.android.server.PackageManagerService;

        $r7 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 := @parameter1: java.io.File;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.io.File;

        $r4 := @parameter4: java.io.File;

        $r5 := @parameter5: android.content.pm.PackageParser$Package;

        $z0 := @parameter6: boolean;

        $z1 := @parameter7: boolean;

        $r6 := @parameter8: com.android.server.PackageManagerService$PackageInstalledInfo;

        $r8 = null;

        $r9 = $r7.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z2 = 1;

        $z3 = 0;

        $r10 = $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: com.android.server.PackageManagerService$PackageRemovedInfo removedInfo>;

        $z4 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean deletePackageLI(java.lang.String,boolean,int,com.android.server.PackageManagerService$PackageRemovedInfo)>($r9, 0, 1, $r10);

        if $z4 != 0 goto label06;

        $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -10;

        $z2 = 0;

     label01:
        $i0 = $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i0 != 1 goto label15;

        $r11 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = $r8.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r2 = $r11.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label02;

        $r1 = new java.io.File;

        $r2 = $r11.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label02:
        $r2 = $r11.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label03;

        $r1 = new java.io.File;

        $r2 = $r11.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label03:
        $r14 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r14;

     label04:
        $r15 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r16 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r15);

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        $r18 = (com.android.server.PackageManagerService$PackageSetting) $r17;

        specialinvoke $r0.<com.android.server.PackageManagerService: boolean verifySignaturesLP(com.android.server.PackageManagerService$PackageSetting,android.content.pm.PackageParser$Package,int,boolean)>($r18, $r5, 2, 1);

        exitmonitor $r14;

     label05:
        return;

     label06:
        $r0.<com.android.server.PackageManagerService: int mLastScanError> = 1;

        if $z0 == 0 goto label09;

        $b1 = 16;

     label07:
        $b1 = $b1 | 13;

        if $z1 == 0 goto label10;

        $b2 = 32;

     label08:
        $b1 = $b1 | $b2;

        $r19 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,java.io.File,java.io.File,android.content.pm.PackageParser$Package,int,int)>($r1, $r3, $r4, $r5, 2, $b1);

        $r8 = $r19;

        if $r19 != null goto label11;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package couldn\'t be installed in ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r2);

        $i0 = $r0.<com.android.server.PackageManagerService: int mLastScanError>;

        $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = $i0;

        if $i0 != 1 goto label01;

        $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -2;

        goto label01;

     label09:
        $b1 = 0;

        goto label07;

     label10:
        $b2 = 0;

        goto label08;

     label11:
        specialinvoke $r0.<com.android.server.PackageManagerService: void updateSettingsLI(java.lang.String,java.io.File,java.lang.String,java.io.File,java.io.File,android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,boolean,boolean,com.android.server.PackageManagerService$PackageInstalledInfo)>($r9, $r1, $r2, $r3, $r4, $r5, $r19, 1, $z0, $r6);

        $z3 = 1;

        goto label01;

     label12:
        $r21 := @caughtexception;

     label13:
        exitmonitor $r14;

     label14:
        throw $r21;

     label15:
        if $z3 == 0 goto label16;

        $r10 = $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: com.android.server.PackageManagerService$PackageRemovedInfo removedInfo>;

        specialinvoke $r0.<com.android.server.PackageManagerService: boolean deletePackageLI(java.lang.String,boolean,int,com.android.server.PackageManagerService$PackageRemovedInfo)>($r9, 1, 1, $r10);

     label16:
        if $z2 == 0 goto label19;

        $r1 = new java.io.File;

        $r2 = $r7.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $r22 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r1);

        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>($r7);

        if $z0 == 0 goto label18;

        $b1 = 1;

     label17:
        specialinvoke $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$PackageInstalledInfo installPackageLI(android.net.Uri,int,boolean)>($r22, $b1, 0);

        return;

     label18:
        $b1 = 0;

        goto label17;

     label19:
        return;

        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void replacePackageLI(java.lang.String, java.io.File, java.lang.String, java.io.File, java.io.File, android.content.pm.PackageParser$Package, boolean, boolean, com.android.server.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r3;
        java.io.File $r2, $r4, $r5;
        android.content.pm.PackageParser$Package $r6, $r11;
        boolean $z0, $z1, $z2;
        com.android.server.PackageManagerService$PackageInstalledInfo $r7;
        java.util.HashMap $r8, $r9;
        java.lang.Object $r10;
        int $i0;
        android.content.pm.ApplicationInfo $r12;
        java.lang.Throwable $r13;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.io.File;

        $r5 := @parameter4: java.io.File;

        $r6 := @parameter5: android.content.pm.PackageParser$Package;

        $z0 := @parameter6: boolean;

        $z1 := @parameter7: boolean;

        $r7 := @parameter8: com.android.server.PackageManagerService$PackageInstalledInfo;

        $r8 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r8;

     label01:
        $r9 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r11 = (android.content.pm.PackageParser$Package) $r10;

        $i0 = virtualinvoke $r0.<com.android.server.PackageManagerService: int checkSignaturesLP(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>($r6, $r11);

        if $i0 == 0 goto label03;

        $r7.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -104;

        exitmonitor $r8;

     label02:
        return;

     label03:
        exitmonitor $r8;

     label04:
        $r12 = $r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r12.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label09;

        $z2 = 1;

     label05:
        if $z2 == 0 goto label10;

        specialinvoke $r0.<com.android.server.PackageManagerService: void replaceSystemPackageLI(android.content.pm.PackageParser$Package,java.io.File,java.lang.String,java.io.File,java.io.File,android.content.pm.PackageParser$Package,boolean,boolean,com.android.server.PackageManagerService$PackageInstalledInfo)>($r11, $r2, $r3, $r4, $r5, $r6, $z0, $z1, $r7);

        return;

     label06:
        $r13 := @caughtexception;

     label07:
        exitmonitor $r8;

     label08:
        throw $r13;

     label09:
        $z2 = 0;

        goto label05;

     label10:
        specialinvoke $r0.<com.android.server.PackageManagerService: void replaceNonSystemPackageLI(android.content.pm.PackageParser$Package,java.io.File,java.lang.String,java.io.File,java.io.File,android.content.pm.PackageParser$Package,boolean,boolean,com.android.server.PackageManagerService$PackageInstalledInfo)>($r11, $r2, $r3, $r4, $r5, $r6, $z0, $z1, $r7);

        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    private void replaceSystemPackageLI(android.content.pm.PackageParser$Package, java.io.File, java.lang.String, java.io.File, java.io.File, android.content.pm.PackageParser$Package, boolean, boolean, com.android.server.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.PackageManagerService $r0;
        java.io.File $r1, $r3, $r4;
        java.lang.String $r2, $r8;
        android.content.pm.PackageParser$Package $r5, $r7, $r18;
        boolean $z0, $z1, $z2;
        com.android.server.PackageManagerService$PackageInstalledInfo $r6;
        java.util.HashMap $r9, $r10;
        java.lang.Object $r11;
        com.android.server.PackageManagerService$Settings $r12;
        com.android.server.PackageManagerService$PackageSetting $r13;
        android.content.pm.ApplicationInfo $r14;
        java.lang.StringBuilder $r15;
        java.lang.Throwable $r16, $r19, $r20, $r21;
        com.android.server.PackageManagerService$PackageRemovedInfo $r17;
        int $i0;
        byte $b1, $b2;

        $r0 := @this: com.android.server.PackageManagerService;

        $r7 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 := @parameter1: java.io.File;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.io.File;

        $r4 := @parameter4: java.io.File;

        $r5 := @parameter5: android.content.pm.PackageParser$Package;

        $z0 := @parameter6: boolean;

        $z1 := @parameter7: boolean;

        $r6 := @parameter8: com.android.server.PackageManagerService$PackageInstalledInfo;

        $z2 = 0;

        $r8 = $r7.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -10;

        if $r8 != null goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return;

     label01:
        $r9 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r9;

     label02:
        $r10 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        $r7 = (android.content.pm.PackageParser$Package) $r11;

        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r10 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r12);

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        $r13 = (com.android.server.PackageManagerService$PackageSetting) $r11;

        if $r7 == null goto label03;

        $r14 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r14 == null goto label03;

        if $r13 != null goto label07;

     label03:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could\'nt find package:");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" information");

        $r2 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r2);

        exitmonitor $r9;

     label04:
        return;

     label05:
        $r16 := @caughtexception;

        exitmonitor $r9;

     label06:
        throw $r16;

     label07:
        exitmonitor $r9;

     label08:
        $r17 = $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: com.android.server.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r14 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        $r17.<com.android.server.PackageManagerService$PackageRemovedInfo: int uid> = $i0;

        $r17 = $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: com.android.server.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r17.<com.android.server.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = $r8;

        virtualinvoke $r0.<com.android.server.PackageManagerService: void removePackageLI(android.content.pm.PackageParser$Package,boolean)>($r7, 1);

        $r9 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r9;

     label09:
        $r17 = $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: com.android.server.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $i0 = virtualinvoke $r12.<com.android.server.PackageManagerService$Settings: int disableSystemPackageLP(java.lang.String)>($r8);

        $r17.<com.android.server.PackageManagerService$PackageRemovedInfo: int removedUid> = $i0;

        exitmonitor $r9;

     label10:
        $r0.<com.android.server.PackageManagerService: int mLastScanError> = 1;

        $r14 = $r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r14.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 | 128;

        $r14.<android.content.pm.ApplicationInfo: int flags> = $i0;

        if $z0 == 0 goto label21;

        $b1 = 16;

     label11:
        $b1 = $b1 | 13;

        if $z1 == 0 goto label22;

        $b2 = 32;

     label12:
        $b1 = $b1 | $b2;

        $r18 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,java.io.File,java.io.File,android.content.pm.PackageParser$Package,int,int)>($r1, $r3, $r4, $r5, 3, $b1);

        if $r18 != null goto label23;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package couldn\'t be installed in ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r2);

        $i0 = $r0.<com.android.server.PackageManagerService: int mLastScanError>;

        $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = $i0;

        if $i0 != 1 goto label13;

        $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -2;

     label13:
        $i0 = $r6.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i0 != 1 goto label24;

        $r9 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r9;

     label14:
        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r10 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r12);

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        $r13 = (com.android.server.PackageManagerService$PackageSetting) $r11;

        specialinvoke $r0.<com.android.server.PackageManagerService: boolean verifySignaturesLP(com.android.server.PackageManagerService$PackageSetting,android.content.pm.PackageParser$Package,int,boolean)>($r13, $r5, 3, 1);

        exitmonitor $r9;

     label15:
        return;

     label16:
        $r19 := @caughtexception;

        exitmonitor $r9;

     label17:
        throw $r19;

     label18:
        $r20 := @caughtexception;

     label19:
        exitmonitor $r9;

     label20:
        throw $r20;

     label21:
        $b1 = 0;

        goto label11;

     label22:
        $b2 = 0;

        goto label12;

     label23:
        specialinvoke $r0.<com.android.server.PackageManagerService: void updateSettingsLI(java.lang.String,java.io.File,java.lang.String,java.io.File,java.io.File,android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,boolean,boolean,com.android.server.PackageManagerService$PackageInstalledInfo)>($r8, $r1, $r2, $r3, $r4, $r5, $r18, 1, $z0, $r6);

        $z2 = 1;

        goto label13;

     label24:
        virtualinvoke $r0.<com.android.server.PackageManagerService: void removePackageLI(android.content.pm.PackageParser$Package,boolean)>($r18, 1);

        $r1 = $r13.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r3 = $r13.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r4 = $r13.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File resourcePath>;

        specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,java.io.File,java.io.File,android.content.pm.PackageParser$Package,int,int)>($r1, $r3, $r4, $r7, 3, 9);

        $r9 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r9;

        if $z2 == 0 goto label26;

     label25:
        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r12.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting enableSystemPackageLP(java.lang.String)>($r8);

     label26:
        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r12.<com.android.server.PackageManagerService$Settings: void writeLP()>();

        exitmonitor $r9;

     label27:
        return;

     label28:
        $r21 := @caughtexception;

        exitmonitor $r9;

     label29:
        throw $r21;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label25 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    private static void reportSettingsProblem(int, java.lang.String)
    {
        int $i0;
        java.lang.String $r0, $r5;
        java.io.File $r1, $r4;
        java.io.FileOutputStream $r2;
        java.io.PrintWriter $r3;
        java.io.IOException $r6;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "system");

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "uiderrors.txt");

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r1, 1);

        $r3 = new java.io.PrintWriter;

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r2);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>($r0);

        virtualinvoke $r3.<java.io.PrintWriter: void close()>();

        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r5, 508, -1, -1);

     label2:
        staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, "PackageManager", $r0);

        return;

     label3:
        $r6 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void scanDirLI(java.io.File, int, int)
    {
        com.android.server.PackageManagerService $r0;
        java.io.File $r1, $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.String[] $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scanning app dir ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r4);

        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String[] list()>();

        $i3 = 0;

     label1:
        $i2 = lengthof $r5;

        if $i3 >= $i2 goto label2;

        $r2 = new java.io.File;

        $r4 = $r5[$i3];

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r4);

        $i2 = $i0 | 4;

        specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,java.io.File,java.io.File,int,int)>($r2, $r2, $r2, $i2, $i1);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return;
    }

    private android.content.pm.PackageParser$Package scanPackageLI(java.io.File, java.io.File, java.io.File, int, int)
    {
        com.android.server.PackageManagerService $r0;
        java.io.File $r1, $r2, $r3, $r18, $r19;
        int $i0, $i1, $i2;
        android.content.pm.PackageParser $r4;
        java.lang.String $r5, $r11;
        java.lang.String[] $r6;
        android.util.DisplayMetrics $r7;
        android.content.pm.PackageParser$Package $r8;
        java.util.HashMap $r9, $r13;
        com.android.server.PackageManagerService$Settings $r10;
        com.android.server.PackageManagerService$PackageSetting $r12, $r15;
        java.lang.Object $r14;
        java.lang.StringBuilder $r16;
        java.lang.Throwable $r17;
        boolean $z0;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.io.File;

        $i1 := @parameter3: int;

        $i0 := @parameter4: int;

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = 1;

        $i2 = $r0.<com.android.server.PackageManagerService: int mDefParseFlags>;

        $i1 = $i1 | $i2;

        $r4 = new android.content.pm.PackageParser;

        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r4.<android.content.pm.PackageParser: void <init>(java.lang.String)>($r5);

        $r6 = $r0.<com.android.server.PackageManagerService: java.lang.String[] mSeparateProcesses>;

        virtualinvoke $r4.<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])>($r6);

        $i2 = $r0.<com.android.server.PackageManagerService: int mSdkVersion>;

        virtualinvoke $r4.<android.content.pm.PackageParser: void setSdkVersion(int)>($i2);

        $r5 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = $r0.<com.android.server.PackageManagerService: android.util.DisplayMetrics mMetrics>;

        $r8 = virtualinvoke $r4.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,java.lang.String,android.util.DisplayMetrics,int)>($r1, $r5, $r7, $i1);

        if $r8 != null goto label01;

        $i1 = virtualinvoke $r4.<android.content.pm.PackageParser: int getParseError()>();

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = $i1;

        return null;

     label01:
        $r9 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r9;

     label02:
        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r5 = $r8.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r11 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting peekPackageLP(java.lang.String,java.lang.String)>($r5, $r11);

        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r13 = $r10.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        $r5 = $r8.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r15 = (com.android.server.PackageManagerService$PackageSetting) $r14;

        exitmonitor $r9;

     label03:
        if $r15 == null goto label04;

        $i1 = $i1 | 1;

     label04:
        $i2 = $i1 & 1;

        if $i2 == 0 goto label08;

        if $r15 == null goto label08;

        if $r12 != null goto label08;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package:");

        $r5 = $r8.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been updated. Ignoring the one from path:");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r5);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -5;

        return null;

     label05:
        $r17 := @caughtexception;

     label06:
        exitmonitor $r9;

     label07:
        throw $r17;

     label08:
        $z0 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean collectCertificatesLI(android.content.pm.PackageParser,com.android.server.PackageManagerService$PackageSetting,android.content.pm.PackageParser$Package,java.io.File,int)>($r4, $r12, $r8, $r1, $i1);

        if $z0 != 0 goto label09;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed verifying certificates for package:");

        $r5 = $r8.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r5);

        return null;

     label09:
        if $r12 == null goto label10;

        $r18 = $r12.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File codePath>;

        $r19 = $r12.<com.android.server.PackageManagerService$PackageSettingBase: java.io.File resourcePath>;

        $z0 = virtualinvoke $r18.<java.io.File: boolean equals(java.lang.Object)>($r19);

        if $z0 != 0 goto label10;

        $i0 = $i0 | 16;

     label10:
        $i0 = $i0 | 8;

        $r8 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,java.io.File,java.io.File,android.content.pm.PackageParser$Package,int,int)>($r1, $r2, $r3, $r8, $i1, $i0);

        return $r8;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
    }

    private android.content.pm.PackageParser$Package scanPackageLI(java.io.File, java.io.File, java.io.File, android.content.pm.PackageParser$Package, int, int)
    {
        com.android.server.PackageManagerService $r0;
        java.io.File $r1, $r2, $r4, $r33;
        android.content.pm.PackageParser$Package $r3, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.pm.ApplicationInfo $r5, $r31;
        java.lang.String $r6, $r11, $r14;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r7, $r18, $r54;
        java.lang.StringBuilder $r8, $r41;
        android.content.pm.ActivityInfo $r9, $r48;
        java.lang.Class $r10;
        android.content.pm.ResolveInfo $r12;
        android.content.ComponentName $r13;
        java.lang.Throwable $r15, $r20, $r35, $r42;
        com.android.server.PackageManagerService$SharedUserSetting $r16, $r22;
        java.lang.String[] $r17;
        java.lang.Object $r19;
        com.android.server.PackageManagerService$Settings $r21;
        java.util.HashSet $r23;
        com.android.server.PackageManagerService$PackageSetting $r24;
        com.android.server.PackageManagerService$PackageSignatures $r25;
        android.content.pm.Signature[] $r26;
        java.util.ArrayList $r27;
        android.content.pm.PackageParser$Provider $r28, $r40;
        android.content.pm.ProviderInfo $r29, $r39;
        com.android.server.Installer $r30;
        long $l6, $l7;
        byte $b8;
        int[] $r34;
        java.io.IOException $r36, $r38;
        java.io.FileNotFoundException $r37;
        android.content.pm.PackageParser$Service $r43;
        android.content.pm.ServiceInfo $r44, $r45;
        com.android.server.PackageManagerService$ServiceIntentResolver $r46;
        android.content.pm.PackageParser$Activity $r47;
        com.android.server.PackageManagerService$ActivityIntentResolver $r49;
        android.content.pm.PackageParser$PermissionGroup $r50, $r52;
        android.content.pm.PermissionGroupInfo $r51;
        android.content.pm.PackageParser$Permission $r53, $r57;
        android.content.pm.PermissionInfo $r55;
        com.android.server.PackageManagerService$BasePermission $r56, $r58;
        android.content.pm.PackageParser$Instrumentation $r59;
        android.content.pm.InstrumentationInfo $r60;

        $r0 := @this: com.android.server.PackageManagerService;

        $r4 := @parameter0: java.io.File;

        $r1 := @parameter1: java.io.File;

        $r2 := @parameter2: java.io.File;

        $r3 := @parameter3: android.content.pm.PackageParser$Package;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $r0.<com.android.server.PackageManagerService: java.io.File mScanningPath> = $r4;

        if $r3 != null goto label001;

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -106;

        return null;

     label001:
        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $i2 = $i0 & 1;

        if $i2 == 0 goto label002;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i2 | 1;

        $r5.<android.content.pm.ApplicationInfo: int flags> = $i2;

     label002:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z0 == 0 goto label006;

        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label003:
        $r5 = $r0.<com.android.server.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        if $r5 == null goto label005;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "*************************************************");

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "Core android package being redefined.  Skipping.");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file=");

        $r4 = $r0.<com.android.server.PackageManagerService: java.io.File mScanningPath>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "*************************************************");

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -5;

        exitmonitor $r7;

     label004:
        return null;

     label005:
        $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage> = $r3;

        $i2 = $r0.<com.android.server.PackageManagerService: int mSdkVersion>;

        $r3.<android.content.pm.PackageParser$Package: int mVersionCode> = $i2;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r0.<com.android.server.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication> = $r5;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r5 = $r0.<com.android.server.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r9.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo> = $r5;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r10 = class "com/android/internal/app/ResolverActivity";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r9.<android.content.pm.PackageItemInfo: java.lang.String name> = $r11;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r5 = $r0.<com.android.server.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r11 = $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r9.<android.content.pm.PackageItemInfo: java.lang.String packageName> = $r11;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r5 = $r0.<com.android.server.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r11 = $r5.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r9.<android.content.pm.ComponentInfo: java.lang.String processName> = $r11;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r9.<android.content.pm.ActivityInfo: int launchMode> = 0;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r9.<android.content.pm.ActivityInfo: int flags> = 32;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r9.<android.content.pm.ActivityInfo: int theme> = 16973948;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r9.<android.content.pm.ComponentInfo: boolean exported> = 1;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r9.<android.content.pm.ComponentInfo: boolean enabled> = 1;

        $r12 = $r0.<com.android.server.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r9;

        $r12 = $r0.<com.android.server.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r12.<android.content.pm.ResolveInfo: int priority> = 0;

        $r12 = $r0.<com.android.server.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r12.<android.content.pm.ResolveInfo: int preferredOrder> = 0;

        $r12 = $r0.<com.android.server.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r12.<android.content.pm.ResolveInfo: int match> = 0;

        $r13 = new android.content.ComponentName;

        $r5 = $r0.<com.android.server.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r11 = $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r9 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r14 = $r9.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r14);

        $r0.<com.android.server.PackageManagerService: android.content.ComponentName mResolveComponentName> = $r13;

        exitmonitor $r7;

     label006:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label007;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scanning package ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r11);

     label007:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $z0 = virtualinvoke $r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

        if $z0 != 0 goto label008;

        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $z0 = virtualinvoke $r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label012;

     label008:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "*************************************************");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application package ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already installed.  Skipping duplicate.");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "*************************************************");

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -5;

        return null;

     label009:
        $r15 := @caughtexception;

     label010:
        exitmonitor $r7;

     label011:
        throw $r15;

     label012:
        $r16 = null;

        $z0 = 0;

        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label013:
        $r17 = $r3.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        if $r17 == null goto label019;

        $i2 = 0;

     label014:
        $r17 = $r3.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $i3 = lengthof $r17;

        if $i2 >= $i3 goto label019;

        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r17 = $r3.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $r11 = $r17[$i2];

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        $r11 = (java.lang.String) $r19;

        if $r11 != null goto label018;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r6 = $r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires unavailable shared library ");

        $r17 = $r3.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $r6 = $r17[$i2];

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ignoring!");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -9;

        exitmonitor $r7;

     label015:
        return null;

     label016:
        $r20 := @caughtexception;

        exitmonitor $r7;

     label017:
        throw $r20;

     label018:
        $r17 = $r3.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        $r17[$i2] = $r11;

        $i2 = $i2 + 1;

        goto label014;

     label019:
        $r11 = $r3.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        if $r11 == null goto label022;

        $r21 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r11 = $r3.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int flags>;

        $r22 = virtualinvoke $r21.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$SharedUserSetting getSharedUserLP(java.lang.String,int,boolean)>($r11, $i2, 1);

        $r16 = $r22;

        if $r22 != null goto label021;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating application package ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for shared user failed");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -4;

        exitmonitor $r7;

     label020:
        return null;

     label021:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label022;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shared UserID ");

        $r11 = $r3.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid=");

        $i2 = $r22.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): packages=");

        $r23 = $r22.<com.android.server.PackageManagerService$SharedUserSetting: java.util.HashSet packages>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r11);

     label022:
        $r21 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int flags>;

        $r24 = virtualinvoke $r21.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$PackageSetting getPackageLP(android.content.pm.PackageParser$Package,com.android.server.PackageManagerService$SharedUserSetting,java.io.File,java.io.File,int,boolean,boolean)>($r3, $r16, $r1, $r2, $i2, 1, 0);

        if $r24 != null goto label024;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating application package ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -4;

        exitmonitor $r7;

     label023:
        return null;

     label024:
        $r21 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r18 = $r21.<com.android.server.PackageManagerService$Settings: java.util.HashMap mDisabledSysPackages>;

        $r11 = $r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        if $r19 == null goto label025;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i2 | 128;

        $r5.<android.content.pm.ApplicationInfo: int flags> = $i2;

     label025:
        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r24.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $r5.<android.content.pm.ApplicationInfo: int uid> = $i2;

        $r3.<android.content.pm.PackageParser$Package: java.lang.Object mExtras> = $r24;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label028;

        $z1 = 1;

     label026:
        $z1 = specialinvoke $r0.<com.android.server.PackageManagerService: boolean verifySignaturesLP(com.android.server.PackageManagerService$PackageSetting,android.content.pm.PackageParser$Package,int,boolean)>($r24, $r3, $i0, $z1);

        if $z1 != 0 goto label032;

        $i2 = $i0 & 1;

        if $i2 != 0 goto label029;

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -7;

        exitmonitor $r7;

     label027:
        return null;

     label028:
        $z1 = 0;

        goto label026;

     label029:
        $r25 = $r24.<com.android.server.PackageManagerService$PackageSettingBase: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r26 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        staticinvoke <com.android.server.PackageManagerService$PackageSignatures: android.content.pm.Signature[] access$702(com.android.server.PackageManagerService$PackageSignatures,android.content.pm.Signature[])>($r25, $r26);

        $r22 = $r24.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r22 == null goto label031;

        $r22 = $r24.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r25 = $r22.<com.android.server.PackageManagerService$SharedUserSetting: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r26 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $z0 = virtualinvoke $r25.<com.android.server.PackageManagerService$PackageSignatures: boolean mergeSignatures(android.content.pm.Signature[],boolean)>($r26, 0);

        if $z0 != 0 goto label031;

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -104;

        exitmonitor $r7;

     label030:
        return null;

     label031:
        $z0 = 1;

     label032:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label040;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $i2 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $i3 = 0;

     label033:
        if $i3 >= $i2 goto label040;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r19 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r28 = (android.content.pm.PackageParser$Provider) $r19;

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r11 = $r29.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r17 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i4 = 0;

     label034:
        $i5 = lengthof $r17;

        if $i4 >= $i5 goto label039;

        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders>;

        $r11 = $r17[$i4];

        $z1 = virtualinvoke $r18.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r11);

        if $z1 == 0 goto label038;

        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders>;

        $r6 = $r17[$i4];

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r28 = (android.content.pm.PackageParser$Provider) $r19;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t install because provider name ");

        $r6 = $r17[$i4];

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in package ");

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is already used by ");

        if $r28 == null goto label037;

        $r13 = $r28.<android.content.pm.PackageParser$Component: android.content.ComponentName component>;

        if $r13 == null goto label037;

        $r13 = $r28.<android.content.pm.PackageParser$Component: android.content.ComponentName component>;

        $r6 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String getPackageName()>();

     label035:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -13;

        exitmonitor $r7;

     label036:
        return null;

     label037:
        $r6 = "?";

        goto label035;

     label038:
        $i4 = $i4 + 1;

        goto label034;

     label039:
        $i3 = $i3 + 1;

        goto label033;

     label040:
        exitmonitor $r7;

     label041:
        if $z0 == 0 goto label043;

        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r30 == null goto label042;

        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $i2 = virtualinvoke $r30.<com.android.server.Installer: int remove(java.lang.String)>($r6);

        if $i2 == 0 goto label042;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System package ");

        $r6 = $r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not have data directory erased after signature change.");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r6);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -10;

        return null;

     label042:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System package ");

        $r11 = $r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" signature changed: existing data removed.");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r11);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = 1;

     label043:
        $l6 = virtualinvoke $r4.<java.io.File: long lastModified()>();

        $i2 = $i1 & 4;

        if $i2 == 0 goto label056;

        $z0 = 1;

     label044:
        if $z0 != 0 goto label045;

        $l7 = virtualinvoke $r24.<com.android.server.PackageManagerService$PackageSettingBase: long getTimeStamp()>();

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label057;

     label045:
        $z1 = 1;

     label046:
        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r31 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = $r31.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r31 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = $r31.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r31 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r31.<android.content.pm.ApplicationInfo: int uid>;

        $r11 = staticinvoke <com.android.server.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r11, $r14, $i2);

        $r5.<android.content.pm.ApplicationInfo: java.lang.String processName> = $r11;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = $r24.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String resourcePathString>;

        $r5.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir> = $r11;

        $r32 = $r0.<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage>;

        if $r32 != $r3 goto label058;

        $r2 = new java.io.File;

        $r33 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r33, "system");

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r5.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r11;

     label047:
        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r30 == null goto label080;

        $r11 = virtualinvoke $r4.<java.io.File: java.lang.String getPath()>();

        if $z1 == 0 goto label049;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changed; unpacking");

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r14);

     label048:
        specialinvoke $r0.<com.android.server.PackageManagerService: void cachePackageSharedLibsLI(android.content.pm.PackageParser$Package,java.io.File,java.io.File)>($r3, $r2, $r4);

     label049:
        $i2 = $i1 & 2;

        if $i2 != 0 goto label080;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i2 & 4;

        if $i2 == 0 goto label080;

        $i2 = 0;

        if $z0 != 0 goto label052;

     label050:
        $z0 = staticinvoke <dalvik.system.DexFile: boolean isDexOptNeeded(java.lang.String)>($r11);

     label051:
        if $z0 == 0 goto label055;

     label052:
        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $i3 = $i1 & 16;

        if $i3 != 0 goto label077;

     label053:
        $z0 = 1;

     label054:
        $i2 = virtualinvoke $r30.<com.android.server.Installer: int dexopt(java.lang.String,int,boolean)>($r11, $i2, $z0);

     label055:
        if $i2 >= 0 goto label080;

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -11;

        return null;

     label056:
        $z0 = 0;

        goto label044;

     label057:
        $z1 = 0;

        goto label046;

     label058:
        $r2 = new java.io.File;

        $r33 = $r0.<com.android.server.PackageManagerService: java.io.File mAppDataDir>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r33, $r6);

        $z2 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label069;

        $r34 = $r0.<com.android.server.PackageManagerService: int[] mOutPermissions>;

        $r34[1] = 0;

        $r11 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r34 = $r0.<com.android.server.PackageManagerService: int[] mOutPermissions>;

        staticinvoke <android.os.FileUtils: int getPermissions(java.lang.String,int[])>($r11, $r34);

        $r34 = $r0.<com.android.server.PackageManagerService: int[] mOutPermissions>;

        $i2 = $r34[1];

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        if $i2 == $i3 goto label059;

        $z2 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z2 != 0 goto label061;

     label059:
        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r5.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r11;

     label060:
        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r5.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r11;

        goto label047;

     label061:
        $z2 = 0;

        $i2 = $i0 & 1;

        if $i2 == 0 goto label063;

        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r30 == null goto label062;

        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $i2 = virtualinvoke $r30.<com.android.server.Installer: int remove(java.lang.String)>($r6);

        if $i2 < 0 goto label062;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System package ");

        $r11 = $r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has changed from uid: ");

        $r34 = $r0.<com.android.server.PackageManagerService: int[] mOutPermissions>;

        $i2 = $r34[1];

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; old data erased");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r11);

        $z2 = 1;

        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = virtualinvoke $r30.<com.android.server.Installer: int install(java.lang.String,int,int)>($r6, $i2, $i3);

        if $i2 != -1 goto label062;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System package ");

        $r6 = $r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not have data directory re-created after delete.");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r6);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -4;

        return null;

     label062:
        if $z2 != 0 goto label063;

        $r0.<com.android.server.PackageManagerService: boolean mHasSystemUidErrors> = 1;

     label063:
        if $z2 != 0 goto label060;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mismatched_uid/settings_");

        $r31 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r31.<android.content.pm.ApplicationInfo: int uid>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/fs_");

        $r34 = $r0.<com.android.server.PackageManagerService: int[] mOutPermissions>;

        $i2 = $r34[1];

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r11;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r11 = $r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has mismatched uid: ");

        $r34 = $r0.<com.android.server.PackageManagerService: int[] mOutPermissions>;

        $i2 = $r34[1];

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on disk, ");

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in settings");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = $r11;

        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label064:
        $z2 = $r0.<com.android.server.PackageManagerService: boolean mReportedUidError>;

        if $z2 != 0 goto label065;

        $r0.<com.android.server.PackageManagerService: boolean mReportedUidError> = 1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; read messages:\n");

        $r21 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r11 = virtualinvoke $r21.<com.android.server.PackageManagerService$Settings: java.lang.String getReadMessagesLP()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label065:
        staticinvoke <com.android.server.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, $r14);

        exitmonitor $r7;

     label066:
        goto label060;

     label067:
        $r35 := @caughtexception;

        exitmonitor $r7;

     label068:
        throw $r35;

     label069:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label070;

     label070:
        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r30 == null goto label071;

        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = virtualinvoke $r30.<com.android.server.Installer: int install(java.lang.String,int,int)>($r6, $i2, $i3);

        if $i2 >= 0 goto label072;

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -4;

        return null;

     label071:
        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        $z2 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label072;

        $r11 = virtualinvoke $r2.<java.io.File: java.lang.String toString()>();

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r11, 505, $i2, $i3);

     label072:
        $z2 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label073;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r5.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r11;

        goto label047;

     label073:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create data directory: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r11);

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r5.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = null;

        goto label047;

     label074:
        $r36 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Failure extracting shared libs", $r36);

        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r30 == null goto label076;

        $r30 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        virtualinvoke $r30.<com.android.server.Installer: int remove(java.lang.String)>($r6);

     label075:
        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -4;

        return null;

     label076:
        virtualinvoke $r2.<java.io.File: boolean delete()>();

        goto label075;

     label077:
        $z0 = 0;

        goto label054;

     label078:
        $r37 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Apk not found for dexopt: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $i2 = -1;

        goto label055;

     label079:
        $r38 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception reading apk: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r6, $r38);

        $i2 = -1;

        goto label055;

     label080:
        $z0 = $r0.<com.android.server.PackageManagerService: boolean mFactoryTest>;

        if $z0 == 0 goto label081;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $z0 = virtualinvoke $r27.<java.util.ArrayList: boolean contains(java.lang.Object)>("android.permission.FACTORY_TEST");

        if $z0 == 0 goto label081;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i2 | 16;

        $r5.<android.content.pm.ApplicationInfo: int flags> = $i2;

     label081:
        $i1 = $i1 & 1;

        if $i1 == 0 goto label082;

        $r6 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3.<android.content.pm.PackageParser$Package: java.lang.String mPath> = $r6;

        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mAppDirs>;

        $r6 = $r3.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r3);

     label082:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label083:
        $r21 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r6 = $r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        staticinvoke <com.android.server.PackageManagerService$Settings: void access$800(com.android.server.PackageManagerService$Settings,com.android.server.PackageManagerService$PackageSetting,java.lang.String,com.android.server.PackageManagerService$SharedUserSetting)>($r21, $r24, $r6, $r16);

        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r3);

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $i1 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r8 = null;

        $i2 = 0;

     label084:
        if $i2 >= $i1 goto label099;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r19 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r28 = (android.content.pm.PackageParser$Provider) $r19;

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r39 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r11 = $r39.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = staticinvoke <com.android.server.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r6, $r11, $i3);

        $r29.<android.content.pm.ComponentInfo: java.lang.String processName> = $r6;

        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProvidersByComponent>;

        $r13 = new android.content.ComponentName;

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r6 = $r29.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r11 = $r29.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r6, $r11);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r28);

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z0 = $r29.<android.content.pm.ProviderInfo: boolean isSyncable>;

        $r28.<android.content.pm.PackageParser$Provider: boolean syncable> = $z0;

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r6 = $r29.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r17 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r29.<android.content.pm.ProviderInfo: java.lang.String authority> = null;

        $i3 = 0;

        $r40 = $r28;

     label085:
        $i4 = lengthof $r17;

        if $i3 >= $i4 goto label095;

        if $i3 != 1 goto label153;

        $z0 = $r40.<android.content.pm.PackageParser$Provider: boolean syncable>;

        if $z0 == 0 goto label153;

        $r28 = new android.content.pm.PackageParser$Provider;

        specialinvoke $r28.<android.content.pm.PackageParser$Provider: void <init>(android.content.pm.PackageParser$Provider)>($r40);

        $r28.<android.content.pm.PackageParser$Provider: boolean syncable> = 0;

     label086:
        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders>;

        $r6 = $r17[$i3];

        $z0 = virtualinvoke $r18.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

        if $z0 != 0 goto label092;

        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders>;

        $r6 = $r17[$i3];

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r28);

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r6 = $r29.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r6 != null goto label089;

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r6 = $r17[$i3];

        $r29.<android.content.pm.ProviderInfo: java.lang.String authority> = $r6;

     label087:
        $i4 = $i0 & 2;

        if $i4 == 0 goto label088;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registered content provider: ");

        $r6 = $r17[$i3];

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", className = ");

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r6 = $r29.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isSyncable = ");

        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z0 = $r29.<android.content.pm.ProviderInfo: boolean isSyncable>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label088:
        $i3 = $i3 + 1;

        $r40 = $r28;

        goto label085;

     label089:
        $r29 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r39 = $r28.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r6 = $r39.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r6 = $r17[$i3];

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29.<android.content.pm.ProviderInfo: java.lang.String authority> = $r6;

        goto label087;

     label090:
        $r42 := @caughtexception;

        exitmonitor $r7;

     label091:
        throw $r42;

     label092:
        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders>;

        $r6 = $r17[$i3];

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r40 = (android.content.pm.PackageParser$Provider) $r19;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping provider name ");

        $r6 = $r17[$i3];

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in package ");

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): name already used by ");

        if $r40 == null goto label094;

        $r13 = $r40.<android.content.pm.PackageParser$Component: android.content.ComponentName component>;

        if $r13 == null goto label094;

        $r13 = $r40.<android.content.pm.PackageParser$Component: android.content.ComponentName component>;

        $r6 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String getPackageName()>();

     label093:
        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        goto label088;

     label094:
        $r6 = "?";

        goto label093;

     label095:
        $i3 = $i0 & 2;

        if $i3 == 0 goto label097;

        if $r8 != null goto label098;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(256);

     label096:
        $r29 = $r40.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r6 = $r29.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label097:
        $i2 = $i2 + 1;

        goto label084;

     label098:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label096;

     label099:
        if $r8 == null goto label100;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Providers: ");

        $r8 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label100:
        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $i1 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r8 = null;

        $i2 = 0;

     label101:
        if $i2 >= $i1 goto label105;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $r19 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r43 = (android.content.pm.PackageParser$Service) $r19;

        $r44 = $r43.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r45 = $r43.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r11 = $r45.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = staticinvoke <com.android.server.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r6, $r11, $i3);

        $r44.<android.content.pm.ComponentInfo: java.lang.String processName> = $r6;

        $r46 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ServiceIntentResolver mServices>;

        virtualinvoke $r46.<com.android.server.PackageManagerService$ServiceIntentResolver: void addService(android.content.pm.PackageParser$Service)>($r43);

        $i3 = $i0 & 2;

        if $i3 == 0 goto label103;

        if $r8 != null goto label104;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(256);

     label102:
        $r44 = $r43.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r6 = $r44.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label103:
        $i2 = $i2 + 1;

        goto label101;

     label104:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label102;

     label105:
        if $r8 == null goto label106;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Services: ");

        $r8 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label106:
        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $i1 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r8 = null;

        $i2 = 0;

     label107:
        if $i2 >= $i1 goto label111;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $r19 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r47 = (android.content.pm.PackageParser$Activity) $r19;

        $r9 = $r47.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r48 = $r47.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r11 = $r48.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = staticinvoke <com.android.server.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r6, $r11, $i3);

        $r9.<android.content.pm.ComponentInfo: java.lang.String processName> = $r6;

        $r49 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mReceivers>;

        virtualinvoke $r49.<com.android.server.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)>($r47, "receiver");

        $i3 = $i0 & 2;

        if $i3 == 0 goto label109;

        if $r8 != null goto label110;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(256);

     label108:
        $r9 = $r47.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r6 = $r9.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label109:
        $i2 = $i2 + 1;

        goto label107;

     label110:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label108;

     label111:
        if $r8 == null goto label112;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Receivers: ");

        $r8 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label112:
        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $i1 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r8 = null;

        $i2 = 0;

     label113:
        if $i2 >= $i1 goto label117;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r19 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r47 = (android.content.pm.PackageParser$Activity) $r19;

        $r9 = $r47.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r48 = $r47.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r11 = $r48.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = staticinvoke <com.android.server.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r6, $r11, $i3);

        $r9.<android.content.pm.ComponentInfo: java.lang.String processName> = $r6;

        $r49 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mActivities>;

        virtualinvoke $r49.<com.android.server.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)>($r47, "activity");

        $i3 = $i0 & 2;

        if $i3 == 0 goto label115;

        if $r8 != null goto label116;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(256);

     label114:
        $r9 = $r47.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r6 = $r9.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label115:
        $i2 = $i2 + 1;

        goto label113;

     label116:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label114;

     label117:
        if $r8 == null goto label118;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Activities: ");

        $r8 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label118:
        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList permissionGroups>;

        $i1 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r8 = null;

        $i2 = 0;

     label119:
        if $i2 >= $i1 goto label126;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList permissionGroups>;

        $r19 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r50 = (android.content.pm.PackageParser$PermissionGroup) $r19;

        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r51 = $r50.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r6 = $r51.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r52 = (android.content.pm.PackageParser$PermissionGroup) $r19;

        if $r52 != null goto label123;

        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r51 = $r50.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r6 = $r51.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r50);

        $i3 = $i0 & 2;

        if $i3 == 0 goto label121;

        if $r8 != null goto label122;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(256);

     label120:
        $r51 = $r50.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r6 = $r51.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label121:
        $i2 = $i2 + 1;

        goto label119;

     label122:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label120;

     label123:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission group ");

        $r51 = $r50.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r6 = $r51.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r51 = $r50.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r6 = $r51.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: original from ");

        $r51 = $r52.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r6 = $r51.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $i3 = $i0 & 2;

        if $i3 == 0 goto label121;

        if $r8 != null goto label125;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(256);

     label124:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUP:");

        $r51 = $r50.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r6 = $r51.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        goto label121;

     label125:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label124;

     label126:
        if $r8 == null goto label127;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Permission Groups: ");

        $r8 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label127:
        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $i1 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r8 = null;

        $i2 = 0;

     label128:
        if $i2 >= $i1 goto label144;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r19 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r53 = (android.content.pm.PackageParser$Permission) $r19;

        $z0 = $r53.<android.content.pm.PackageParser$Permission: boolean tree>;

        if $z0 == 0 goto label136;

        $r21 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r18 = $r21.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissionTrees>;

     label129:
        $r54 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PermissionInfo: java.lang.String group>;

        $r19 = virtualinvoke $r54.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r50 = (android.content.pm.PackageParser$PermissionGroup) $r19;

        $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$PermissionGroup group> = $r50;

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r6 == null goto label130;

        $r50 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$PermissionGroup group>;

        if $r50 == null goto label143;

     label130:
        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r56 = (com.android.server.PackageManagerService$BasePermission) $r19;

        if $r56 != null goto label131;

        $r56 = new com.android.server.PackageManagerService$BasePermission;

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r11 = $r55.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        specialinvoke $r56.<com.android.server.PackageManagerService$BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r6, $r11, 0);

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r56);

     label131:
        $r57 = $r56.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r57 != null goto label140;

        $r6 = $r56.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        if $r6 == null goto label132;

        $r6 = $r56.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r11 = $r55.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label139;

     label132:
        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r58 = specialinvoke $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$BasePermission findPermissionTreeLP(java.lang.String)>($r6);

        if $r58 == null goto label133;

        $r6 = $r58.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r11 = $r55.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label138;

     label133:
        $r56.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm> = $r53;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r56.<com.android.server.PackageManagerService$BasePermission: int uid> = $i3;

        $i3 = $i0 & 2;

        if $i3 == 0 goto label135;

        if $r8 != null goto label137;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(256);

     label134:
        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label135:
        $i2 = $i2 + 1;

        goto label128;

     label136:
        $r21 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r18 = $r21.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        goto label129;

     label137:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label134;

     label138:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: base tree ");

        $r6 = $r58.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is from package ");

        $r6 = $r58.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        goto label135;

     label139:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: original from ");

        $r6 = $r56.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        goto label135;

     label140:
        $i3 = $i0 & 2;

        if $i3 == 0 goto label135;

        if $r8 != null goto label142;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(256);

     label141:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUP:");

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        goto label135;

     label142:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label141;

     label143:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r55 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r55.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: no group ");

        $r50 = $r53.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$PermissionGroup group>;

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        $r6 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        goto label135;

     label144:
        if $r8 == null goto label145;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Permissions: ");

        $r8 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label145:
        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $i1 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r8 = null;

        $i2 = 0;

     label146:
        if $i2 >= $i1 goto label150;

        $r27 = $r3.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $r19 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r59 = (android.content.pm.PackageParser$Instrumentation) $r19;

        $r60 = $r59.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r60.<android.content.pm.PackageItemInfo: java.lang.String packageName> = $r6;

        $r60 = $r59.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r60.<android.content.pm.InstrumentationInfo: java.lang.String sourceDir> = $r6;

        $r60 = $r59.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r60.<android.content.pm.InstrumentationInfo: java.lang.String publicSourceDir> = $r6;

        $r60 = $r59.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r5 = $r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r60.<android.content.pm.InstrumentationInfo: java.lang.String dataDir> = $r6;

        $r18 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r13 = $r59.<android.content.pm.PackageParser$Component: android.content.ComponentName component>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r59);

        $i3 = $i0 & 2;

        if $i3 == 0 goto label148;

        if $r8 != null goto label149;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(256);

     label147:
        $r60 = $r59.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r6 = $r60.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label148:
        $i2 = $i2 + 1;

        goto label146;

     label149:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label147;

     label150:
        if $r8 == null goto label151;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Instrumentation: ");

        $r8 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r6);

     label151:
        virtualinvoke $r24.<com.android.server.PackageManagerService$PackageSettingBase: void setTimeStamp(long)>($l6);

        exitmonitor $r7;

     label152:
        return $r3;

     label153:
        $r28 = $r40;

        goto label086;

        catch java.lang.Throwable from label003 to label004 with label009;
        catch java.lang.Throwable from label005 to label006 with label009;
        catch java.lang.Throwable from label010 to label011 with label009;
        catch java.lang.Throwable from label013 to label015 with label016;
        catch java.lang.Throwable from label016 to label017 with label016;
        catch java.lang.Throwable from label018 to label020 with label016;
        catch java.lang.Throwable from label021 to label023 with label016;
        catch java.lang.Throwable from label024 to label027 with label016;
        catch java.lang.Throwable from label028 to label030 with label016;
        catch java.lang.Throwable from label031 to label036 with label016;
        catch java.lang.Throwable from label037 to label041 with label016;
        catch java.io.IOException from label048 to label049 with label074;
        catch java.io.FileNotFoundException from label050 to label051 with label078;
        catch java.io.FileNotFoundException from label053 to label055 with label078;
        catch java.io.IOException from label050 to label051 with label079;
        catch java.io.IOException from label053 to label055 with label079;
        catch java.lang.Throwable from label064 to label066 with label067;
        catch java.lang.Throwable from label067 to label068 with label067;
        catch java.lang.Throwable from label083 to label091 with label090;
        catch java.lang.Throwable from label092 to label152 with label090;
    }

    private static final void sendPackageBroadcast(java.lang.String, java.lang.String, android.os.Bundle)
    {
        java.lang.String $r0, $r1;
        android.os.Bundle $r2;
        android.content.Intent $r3;
        android.net.Uri $r4;
        android.app.IActivityManager $r5;
        android.os.RemoteException $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.os.Bundle;

        $r4 = null;

        $r5 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if $r5 == null goto label6;

        $r3 = new android.content.Intent;

        if $r1 == null goto label2;

     label1:
        $r4 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", $r1, null);

     label2:
        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>($r0, $r4);

        if $r2 == null goto label3;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r2);

     label3:
        interfaceinvoke $r5.<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.app.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean)>(null, $r3, null, null, 0, null, null, null, 0, 0);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        return;

     label6:
        return;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    private void setEnabledSetting(java.lang.String, java.lang.String, int, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2, $i3;
        android.os.Bundle $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        android.content.Context $r6;
        boolean $z0;
        java.util.HashMap $r7, $r9;
        com.android.server.PackageManagerService$Settings $r8;
        java.lang.Object $r10;
        com.android.server.PackageManagerService$PackageSetting $r11;
        java.lang.Throwable $r12, $r14;
        java.lang.SecurityException $r13;
        long $l4;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        if $i0 == 0 goto label01;

        if $i0 == 1 goto label01;

        if $i0 == 2 goto label01;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid new component state: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r6 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        $i3 = virtualinvoke $r6.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.CHANGE_COMPONENT_ENABLED_STATE");

        if $i3 != 0 goto label06;

        $z0 = 1;

     label02:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label03:
        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r9 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r11 = (com.android.server.PackageManagerService$PackageSetting) $r10;

        if $r11 != null goto label08;

        if $r2 != null goto label07;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label04:
        $r12 := @caughtexception;

        exitmonitor $r7;

     label05:
        throw $r12;

     label06:
        $z0 = 0;

        goto label02;

     label07:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown component: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label08:
        if $z0 != 0 goto label09;

        $i3 = $r11.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        if $i2 == $i3 goto label09;

        $r13 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: attempt to change component state from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", package uid=");

        $i0 = $r11.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r13;

     label09:
        $i2 = $r11.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        if $r2 != null goto label17;

        $r11.<com.android.server.PackageManagerService$PackageSettingBase: int enabled> = $i0;

     label10:
        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: void writeLP()>();

        exitmonitor $r7;

     label11:
        $l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label12:
        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>(int)>(2);

     label13:
        $i0 = $i1 & 1;

        if $i0 == 0 goto label23;

     label14:
        $z0 = 1;

     label15:
        virtualinvoke $r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.intent.extra.DONT_KILL_APP", $z0);

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.UID", $i2);

        staticinvoke <com.android.server.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle)>("android.intent.action.PACKAGE_CHANGED", $r1, $r3);

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l4);

        return;

     label17:
        lookupswitch($i0)
        {
            case 0: goto label21;
            case 1: goto label19;
            case 2: goto label20;
            default: goto label18;
        };

     label18:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid new component state: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r2);

        goto label10;

     label19:
        virtualinvoke $r11.<com.android.server.PackageManagerService$PackageSettingBase: void enableComponentLP(java.lang.String)>($r2);

        goto label10;

     label20:
        virtualinvoke $r11.<com.android.server.PackageManagerService$PackageSettingBase: void disableComponentLP(java.lang.String)>($r2);

        goto label10;

     label21:
        virtualinvoke $r11.<com.android.server.PackageManagerService$PackageSettingBase: void restoreComponentLP(java.lang.String)>($r2);

     label22:
        goto label10;

     label23:
        $z0 = 0;

        goto label15;

     label24:
        $r14 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l4);

        throw $r14;

        catch java.lang.Throwable from label03 to label05 with label04;
        catch java.lang.Throwable from label07 to label11 with label04;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label14 to label16 with label24;
        catch java.lang.Throwable from label18 to label22 with label04;
    }

    private int setPermissionsLI(java.lang.String, android.content.pm.PackageParser$Package, java.lang.String, java.io.File, boolean)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r3;
        android.content.pm.PackageParser$Package $r2;
        java.io.File $r4;
        boolean $z0;
        java.io.IOException $r5;
        com.android.server.Installer $r6;
        android.content.pm.ApplicationInfo $r7;
        int $i0;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.PackageParser$Package;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.io.File;

        $z0 := @parameter4: boolean;

        if $z0 == 0 goto label10;

     label01:
        specialinvoke $r0.<com.android.server.PackageManagerService: void extractPublicFiles(android.content.pm.PackageParser$Package,java.io.File)>($r2, $r4);

     label02:
        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r6 == null goto label09;

        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $r7 = $r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        $i0 = virtualinvoke $r6.<com.android.server.Installer: int setForwardLockPerm(java.lang.String,int)>($r1, $i0);

     label03:
        if $i0 == 0 goto label04;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t set new package file permissions for ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". The return code was: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r1);

     label04:
        return 1;

     label05:
        $r5 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", "Couldn\'t create a new zip file for the public parts of a forward-locked app.");

     label07:
        return -4;

     label08:
        $r9 := @caughtexception;

        throw $r9;

     label09:
        $r7 = $r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        $i0 = staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r3, 416, -1, $i0);

        goto label03;

     label10:
        $i0 = staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r3, 420, -1, -1);

        goto label03;

        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    static java.lang.String[] splitString(java.lang.String, char)
    {
        java.lang.String $r0, $r2;
        char $c0;
        java.lang.String[] $r1;
        int $i1, $i2, $i3;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $i1 = 1;

        $i2 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>($c0, $i2);

        if $i2 < 0 goto label2;

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r1 = newarray (java.lang.String)[$i1];

        $i3 = 0;

        $i1 = 0;

        $i2 = 0;

     label3:
        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>($c0, $i3);

        if $i3 < 0 goto label4;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

        $i3 = $i3 + 1;

        $i2 = $i3;

        goto label3;

     label4:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $r1[$i1] = $r0;

        return $r1;
    }

    private void updatePermissionsLP()
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PermissionInfo $r1, $r2;
        com.android.server.PackageManagerService$Settings $r3;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.android.server.PackageManagerService$BasePermission $r8, $r12;
        android.content.pm.PackageParser$Permission $r9, $r13;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        int $i0;
        android.content.pm.PackageParser$Package $r14;

        $r0 := @this: com.android.server.PackageManagerService;

        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = $r3.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissionTrees>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.PackageManagerService$BasePermission) $r7;

        $r9 = $r8.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r9 != null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling permission tree: ");

        $r11 = $r8.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r11 = $r8.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r11);

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = $r3.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.PackageManagerService$BasePermission) $r7;

        $i0 = $r8.<com.android.server.PackageManagerService$BasePermission: int type>;

        if $i0 != 2 goto label4;

        $r9 = $r8.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r9 != null goto label4;

        $r1 = $r8.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        if $r1 == null goto label4;

        $r11 = $r8.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $r12 = specialinvoke $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$BasePermission findPermissionTreeLP(java.lang.String)>($r11);

        if $r12 == null goto label4;

        $r9 = new android.content.pm.PackageParser$Permission;

        $r13 = $r12.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r14 = $r13.<android.content.pm.PackageParser$Component: android.content.pm.PackageParser$Package owner>;

        $r1 = new android.content.pm.PermissionInfo;

        $r2 = $r8.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        specialinvoke $r1.<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>($r2);

        specialinvoke $r9.<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package,android.content.pm.PermissionInfo)>($r14, $r1);

        $r8.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm> = $r9;

        $r9 = $r8.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r1 = $r9.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r9 = $r12.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r2 = $r9.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r11 = $r2.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r1.<android.content.pm.PackageItemInfo: java.lang.String packageName> = $r11;

        $r9 = $r8.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r1 = $r9.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r11 = $r8.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $r1.<android.content.pm.PackageItemInfo: java.lang.String name> = $r11;

        $i0 = $r12.<com.android.server.PackageManagerService$BasePermission: int uid>;

        $r8.<com.android.server.PackageManagerService$BasePermission: int uid> = $i0;

     label4:
        $r9 = $r8.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r9 != null goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling permission: ");

        $r11 = $r8.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r11 = $r8.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r11);

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        goto label3;

     label5:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (android.content.pm.PackageParser$Package) $r7;

        specialinvoke $r0.<com.android.server.PackageManagerService: void grantPermissionsLP(android.content.pm.PackageParser$Package,boolean)>($r14, 0);

        goto label6;

     label7:
        return;
    }

    private void updatePreferredIndicesLP()
    {
        int $i0, $i1, $i2;
        com.android.server.PackageManagerService $r0;
        com.android.server.PackageManagerService$Settings $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$PackageSetting $r4;
        android.content.pm.PackageParser$Package $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r2 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.ArrayList access$900(com.android.server.PackageManagerService$Settings)>($r1);

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        $r5 = $r4.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $i0 = $i1 - $i2;

        $r5.<android.content.pm.PackageParser$Package: int mPreferredOrder> = $i0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void updateSettingsLI(java.lang.String, java.io.File, java.lang.String, java.io.File, java.io.File, android.content.pm.PackageParser$Package, android.content.pm.PackageParser$Package, boolean, boolean, com.android.server.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r3, $r13, $r14;
        java.io.File $r2, $r4, $r5;
        android.content.pm.PackageParser$Package $r6, $r7;
        boolean $z0, $z1;
        com.android.server.PackageManagerService$PackageInstalledInfo $r8;
        java.util.HashMap $r9;
        com.android.server.PackageManagerService$Settings $r10;
        android.content.pm.ApplicationInfo $r11;
        int $i0;
        com.android.server.Installer $r12;
        java.lang.StringBuilder $r15;
        java.lang.Throwable $r16, $r17;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.io.File;

        $r5 := @parameter4: java.io.File;

        $r6 := @parameter5: android.content.pm.PackageParser$Package;

        $r7 := @parameter6: android.content.pm.PackageParser$Package;

        $z0 := @parameter7: boolean;

        $z1 := @parameter8: boolean;

        $r8 := @parameter9: com.android.server.PackageManagerService$PackageInstalledInfo;

        $r9 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r9;

     label01:
        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r10.<com.android.server.PackageManagerService$Settings: void setInstallStatus(java.lang.String,int)>($r1, 0);

        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r10.<com.android.server.PackageManagerService$Settings: void writeLP()>();

        exitmonitor $r9;

     label02:
        $r11 = $r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label06;

        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $r13 = virtualinvoke $r2.<java.io.File: java.lang.String toString()>();

        $r14 = virtualinvoke $r4.<java.io.File: java.lang.String toString()>();

        $i0 = virtualinvoke $r12.<com.android.server.Installer: int movedex(java.lang.String,java.lang.String)>($r13, $r14);

        if $i0 == 0 goto label06;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t rename dex file: ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r1);

        $r8.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -4;

        return;

     label03:
        $r16 := @caughtexception;

     label04:
        exitmonitor $r9;

     label05:
        throw $r16;

     label06:
        $z0 = virtualinvoke $r2.<java.io.File: boolean renameTo(java.io.File)>($r4);

        if $z0 != 0 goto label13;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t move package file to: ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r3);

        $r8.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = -4;

     label07:
        $i0 = $r8.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i0 == 1 goto label08;

        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r12 == null goto label08;

        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r12.<com.android.server.Installer: int rmdex(java.lang.String)>($r3);

     label08:
        $r9 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r9;

     label09:
        specialinvoke $r0.<com.android.server.PackageManagerService: void grantPermissionsLP(android.content.pm.PackageParser$Package,boolean)>($r7, 1);

        $r8.<com.android.server.PackageManagerService$PackageInstalledInfo: java.lang.String name> = $r1;

        $r11 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        $r8.<com.android.server.PackageManagerService$PackageInstalledInfo: int uid> = $i0;

        $r8.<com.android.server.PackageManagerService$PackageInstalledInfo: android.content.pm.PackageParser$Package pkg> = $r7;

        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r10.<com.android.server.PackageManagerService$Settings: void setInstallStatus(java.lang.String,int)>($r1, 1);

        $r8.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = 1;

        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r10.<com.android.server.PackageManagerService$Settings: void writeLP()>();

        exitmonitor $r9;

     label10:
        return;

     label11:
        $r17 := @caughtexception;

        exitmonitor $r9;

     label12:
        throw $r17;

     label13:
        $i0 = specialinvoke $r0.<com.android.server.PackageManagerService: int setPermissionsLI(java.lang.String,android.content.pm.PackageParser$Package,java.lang.String,java.io.File,boolean)>($r1, $r7, $r3, $r5, $z1);

        $r8.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode> = $i0;

        $i0 = $r8.<com.android.server.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i0 != 1 goto label14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New package installed in ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r3);

        goto label07;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private boolean verifySignaturesLP(com.android.server.PackageManagerService$PackageSetting, android.content.pm.PackageParser$Package, int, boolean)
    {
        com.android.server.PackageManagerService $r0;
        com.android.server.PackageManagerService$PackageSetting $r1;
        android.content.pm.PackageParser$Package $r2;
        int $i0;
        boolean $z0, $z1;
        android.content.pm.Signature[] $r3;
        com.android.server.PackageManagerService$PackageSignatures $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.android.server.PackageManagerService$SharedUserSetting $r7;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: com.android.server.PackageManagerService$PackageSetting;

        $r2 := @parameter1: android.content.pm.PackageParser$Package;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        if $r3 == null goto label2;

        $r4 = $r1.<com.android.server.PackageManagerService$PackageSettingBase: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r3 = $r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $z1 = virtualinvoke $r4.<com.android.server.PackageManagerService$PackageSignatures: boolean updateSignatures(android.content.pm.Signature[],boolean)>($r3, $z0);

        if $z1 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r6 = $r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" signatures do not match the previously installed version; ignoring!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -7;

        return 0;

     label1:
        $r7 = $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r7 == null goto label3;

        $r7 = $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r4 = $r7.<com.android.server.PackageManagerService$SharedUserSetting: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r3 = $r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $z0 = virtualinvoke $r4.<com.android.server.PackageManagerService$PackageSignatures: boolean mergeSignatures(android.content.pm.Signature[],boolean)>($r3, $z0);

        if $z0 != 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r6 = $r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no signatures that match those in shared user ");

        $r7 = $r1.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r6 = $r7.<com.android.server.PackageManagerService$SharedUserSetting: java.lang.String name>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ignoring!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $r0.<com.android.server.PackageManagerService: int mLastScanError> = -8;

        return 0;

     label2:
        $r4 = $r1.<com.android.server.PackageManagerService$PackageSettingBase: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r3 = staticinvoke <com.android.server.PackageManagerService$PackageSignatures: android.content.pm.Signature[] access$700(com.android.server.PackageManagerService$PackageSignatures)>($r4);

        $r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures> = $r3;

     label3:
        return 1;
    }

    public void addPackageToPreferred(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        android.content.Context $r2;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r5;
        android.content.pm.PackageParser$Package $r6;
        com.android.server.PackageManagerService$PackageSetting $r7;
        com.android.server.PackageManagerService$Settings $r8;
        java.util.ArrayList $r9;
        java.lang.Throwable $r10;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.content.pm.PackageParser$Package) $r5;

        if $r6 != null goto label3;

        exitmonitor $r3;

     label2:
        return;

     label3:
        $r5 = $r6.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r7 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        if $r7 == null goto label4;

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r9 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.ArrayList access$900(com.android.server.PackageManagerService$Settings)>($r8);

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>($r7);

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r9 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.ArrayList access$900(com.android.server.PackageManagerService$Settings)>($r8);

        virtualinvoke $r9.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r7);

        specialinvoke $r0.<com.android.server.PackageManagerService: void updatePreferredIndicesLP()>();

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: void writeLP()>();

     label4:
        exitmonitor $r3;

     label5:
        return;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean addPermission(android.content.pm.PermissionInfo)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PermissionInfo $r1, $r16, $r17;
        java.util.HashMap $r2, $r9;
        int $i0;
        java.lang.CharSequence $r3;
        java.lang.SecurityException $r4;
        java.lang.Throwable $r5;
        java.lang.String $r6, $r12;
        com.android.server.PackageManagerService$BasePermission $r7, $r11;
        com.android.server.PackageManagerService$Settings $r8;
        java.lang.Object $r10;
        boolean $z0;
        android.content.pm.PackageParser$Permission $r13, $r14;
        android.content.pm.PackageParser$Package $r15;
        java.lang.StringBuilder $r18;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PermissionInfo;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label01:
        $i0 = $r1.<android.content.pm.PackageItemInfo: int labelRes>;

        if $i0 != 0 goto label04;

        $r3 = $r1.<android.content.pm.PackageItemInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r3 != null goto label04;

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Label must be specified in permission");

        throw $r4;

     label02:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label03:
        throw $r5;

     label04:
        $r6 = $r1.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r7 = specialinvoke $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$BasePermission checkPermissionTreeLP(java.lang.String)>($r6);

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r9 = $r8.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r6 = $r1.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r11 = (com.android.server.PackageManagerService$BasePermission) $r10;

        if $r11 != null goto label09;

        $z0 = 1;

     label05:
        if $z0 == 0 goto label10;

        $r11 = new com.android.server.PackageManagerService$BasePermission;

        $r6 = $r1.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r12 = $r7.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        specialinvoke $r11.<com.android.server.PackageManagerService$BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r6, $r12, 2);

     label06:
        $r13 = new android.content.pm.PackageParser$Permission;

        $r14 = $r7.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r15 = $r14.<android.content.pm.PackageParser$Component: android.content.pm.PackageParser$Package owner>;

        $r16 = new android.content.pm.PermissionInfo;

        specialinvoke $r16.<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>($r1);

        specialinvoke $r13.<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package,android.content.pm.PermissionInfo)>($r15, $r16);

        $r11.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm> = $r13;

        $r13 = $r11.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r16 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r13 = $r7.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r17 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r6 = $r17.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r16.<android.content.pm.PackageItemInfo: java.lang.String packageName> = $r6;

        $i0 = $r7.<com.android.server.PackageManagerService$BasePermission: int uid>;

        $r11.<com.android.server.PackageManagerService$BasePermission: int uid> = $i0;

        if $z0 == 0 goto label07;

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r9 = $r8.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r6 = $r1.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11);

     label07:
        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: void writeLP()>();

        exitmonitor $r2;

     label08:
        return $z0;

     label09:
        $z0 = 0;

        goto label05;

     label10:
        $i0 = $r11.<com.android.server.PackageManagerService$BasePermission: int type>;

        if $i0 == 2 goto label06;

        $r4 = new java.lang.SecurityException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not allowed to modify non-dynamic permission ");

        $r6 = $r1.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label11:
        nop;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label04 to label08 with label02;
        catch java.lang.Throwable from label09 to label11 with label02;
    }

    public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)
    {
        com.android.server.PackageManagerService $r0;
        android.content.IntentFilter $r1;
        int $i0;
        android.content.ComponentName[] $r2;
        android.content.ComponentName $r3;
        android.content.Context $r4;
        java.util.HashMap $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        android.util.LogPrinter $r8;
        com.android.server.PackageManagerService$Settings $r9;
        com.android.server.IntentResolver $r10;
        com.android.server.PackageManagerService$PreferredActivity $r11;
        java.lang.Throwable $r12;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.IntentFilter;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.ComponentName[];

        $r3 := @parameter3: android.content.ComponentName;

        $r4 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

        $r5 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r5;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding preferred activity ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r7);

        $r8 = new android.util.LogPrinter;

        specialinvoke $r8.<android.util.LogPrinter: void <init>(int,java.lang.String)>(4, "PackageManager");

        virtualinvoke $r1.<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>($r8, "  ");

        $r9 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r10 = staticinvoke <com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver access$600(com.android.server.PackageManagerService$Settings)>($r9);

        $r11 = new com.android.server.PackageManagerService$PreferredActivity;

        specialinvoke $r11.<com.android.server.PackageManagerService$PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>($r1, $i0, $r2, $r3);

        virtualinvoke $r10.<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)>($r11);

        $r9 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r9.<com.android.server.PackageManagerService$Settings: void writeLP()>();

        exitmonitor $r5;

     label2:
        return;

     label3:
        $r12 := @caughtexception;

        exitmonitor $r5;

     label4:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int checkPermission(java.lang.String, java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r2;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r5;
        android.content.pm.PackageParser$Package $r6;
        com.android.server.PackageManagerService$PackageSetting $r7;
        com.android.server.PackageManagerService$SharedUserSetting $r8;
        java.util.HashSet $r9;
        boolean $z0;
        java.lang.Throwable $r10;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (android.content.pm.PackageParser$Package) $r5;

        if $r6 == null goto label5;

        $r5 = $r6.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r5 == null goto label5;

        $r5 = $r6.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r7 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        $r8 = $r7.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r8 == null goto label3;

        $r8 = $r7.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r9 = $r8.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r9.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label5;

        exitmonitor $r3;

     label2:
        return 0;

     label3:
        $r9 = $r7.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r9.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label5;

        exitmonitor $r3;

     label4:
        return 0;

     label5:
        exitmonitor $r3;

     label6:
        return -1;

     label7:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label8:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int checkSignatures(java.lang.String, java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r2;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r5;
        android.content.pm.PackageParser$Package $r6, $r7;
        int $i0;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.content.pm.PackageParser$Package) $r5;

        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r7 = (android.content.pm.PackageParser$Package) $r5;

        if $r6 == null goto label2;

        $r5 = $r6.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r5 == null goto label2;

        if $r7 == null goto label2;

        $r5 = $r7.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r5 != null goto label4;

     label2:
        exitmonitor $r3;

     label3:
        return -4;

     label4:
        $i0 = virtualinvoke $r0.<com.android.server.PackageManagerService: int checkSignaturesLP(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>($r6, $r7);

        exitmonitor $r3;

     label5:
        return $i0;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    int checkSignaturesLP(android.content.pm.PackageParser$Package, android.content.pm.PackageParser$Package)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1, $r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        android.content.pm.Signature[] $r3;
        android.content.pm.Signature $r4, $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 := @parameter1: android.content.pm.PackageParser$Package;

        $r3 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        if $r3 != null goto label2;

        $r3 = $r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        if $r3 != null goto label1;

        return 1;

     label1:
        return -1;

     label2:
        $r3 = $r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        if $r3 != null goto label3;

        return -2;

     label3:
        $r3 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i0 = lengthof $r3;

        $r3 = $r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i1 = lengthof $r3;

        $i2 = 0;

     label4:
        if $i2 >= $i0 goto label9;

        $z1 = 0;

        $i3 = 0;

     label5:
        if $i3 >= $i1 goto label6;

        $r3 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r4 = $r3[$i2];

        $r3 = $r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r5 = $r3[$i3];

        $z0 = virtualinvoke $r4.<android.content.pm.Signature: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label7;

        $z1 = 1;

     label6:
        if $z1 != 0 goto label8;

        return -3;

     label7:
        $i3 = $i3 + 1;

        goto label5;

     label8:
        $i2 = $i2 + 1;

        goto label4;

     label9:
        return 0;
    }

    public int checkUidPermission(java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        int $i0;
        java.util.HashMap $r2;
        com.android.server.PackageManagerService$Settings $r3;
        java.lang.Object $r4;
        boolean $z0;
        com.android.server.PackageManagerService$SharedUserSetting $r5;
        java.util.HashSet $r6;
        com.android.server.PackageManagerService$PackageSetting $r7;
        android.util.SparseArray $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label01:
        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = virtualinvoke $r3.<com.android.server.PackageManagerService$Settings: java.lang.Object getUserIdLP(int)>($i0);

        if $r4 == null goto label05;

        $z0 = $r4 instanceof com.android.server.PackageManagerService$SharedUserSetting;

        if $z0 == 0 goto label03;

        $r5 = (com.android.server.PackageManagerService$SharedUserSetting) $r4;

        $r6 = $r5.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label07;

        exitmonitor $r2;

     label02:
        return 0;

     label03:
        $z0 = $r4 instanceof com.android.server.PackageManagerService$PackageSetting;

        if $z0 == 0 goto label07;

        $r7 = (com.android.server.PackageManagerService$PackageSetting) $r4;

        $r6 = $r7.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label07;

        exitmonitor $r2;

     label04:
        return 0;

     label05:
        $r8 = $r0.<com.android.server.PackageManagerService: android.util.SparseArray mSystemPermissions>;

        $r4 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r6 = (java.util.HashSet) $r4;

        if $r6 == null goto label07;

        $z0 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label07;

        exitmonitor $r2;

     label06:
        return 0;

     label07:
        exitmonitor $r2;

     label08:
        return -1;

     label09:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void cleanupInstallFailedPackage(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r5;
        java.io.File $r2;
        com.android.server.Installer $r3;
        int $i0;
        java.lang.StringBuilder $r4;
        com.android.server.PackageManagerService$Settings $r6;
        java.util.HashMap $r7;
        java.lang.Object $r8;
        android.content.pm.PackageParser$Package $r9;
        android.content.pm.ApplicationInfo $r10;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        if $r3 == null goto label2;

        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.Installer mInstaller>;

        $i0 = virtualinvoke $r3.<com.android.server.Installer: int remove(java.lang.String)>($r1);

        if $i0 >= 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove app data directory for package: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", retcode=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r5);

     label1:
        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        staticinvoke <com.android.server.PackageManagerService$Settings: int access$200(com.android.server.PackageManagerService$Settings,java.lang.String)>($r6, $r1);

        return;

     label2:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r9 = (android.content.pm.PackageParser$Package) $r8;

        $r2 = new java.io.File;

        $r10 = $r9.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r5 = $r10.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r5);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        goto label1;
    }

    public void clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        android.content.pm.IPackageDataObserver $r2;
        android.content.Context $r3;
        android.os.Handler $r4;
        com.android.server.PackageManagerService$8 $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageDataObserver;

        $r3 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_USER_DATA", null);

        $r4 = $r0.<com.android.server.PackageManagerService: android.os.Handler mHandler>;

        $r5 = new com.android.server.PackageManagerService$8;

        specialinvoke $r5.<com.android.server.PackageManagerService$8: void <init>(com.android.server.PackageManagerService,java.lang.String,android.content.pm.IPackageDataObserver)>($r0, $r1, $r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public void clearPackagePreferredActivities(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        boolean $z0;
        android.content.Context $r2;
        java.util.HashMap $r3;
        com.android.server.PackageManagerService$Settings $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $z0 = virtualinvoke $r0.<com.android.server.PackageManagerService: boolean clearPackagePreferredActivitiesLP(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r4 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r4.<com.android.server.PackageManagerService$Settings: void writeLP()>();

     label2:
        exitmonitor $r3;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    boolean clearPackagePreferredActivitiesLP(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r8;
        boolean $z0, $z1;
        com.android.server.PackageManagerService$Settings $r2;
        com.android.server.IntentResolver $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        com.android.server.PackageManagerService$PreferredActivity $r6;
        android.content.ComponentName $r7;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $z0 = 0;

        $r2 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r3 = staticinvoke <com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver access$600(com.android.server.PackageManagerService$Settings)>($r2);

        $r4 = virtualinvoke $r3.<com.android.server.IntentResolver: java.util.Iterator filterIterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.PackageManagerService$PreferredActivity) $r5;

        $r7 = $r6.<com.android.server.PackageManagerService$PreferredActivity: android.content.ComponentName mActivity>;

        $r8 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        $z0 = 1;

        goto label1;

     label2:
        return $z0;
    }

    public void deleteApplicationCacheFiles(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        android.content.pm.IPackageDataObserver $r2;
        android.content.Context $r3;
        android.os.Handler $r4;
        com.android.server.PackageManagerService$9 $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageDataObserver;

        $r3 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DELETE_CACHE_FILES", null);

        $r4 = $r0.<com.android.server.PackageManagerService: android.os.Handler mHandler>;

        $r5 = new com.android.server.PackageManagerService$9;

        specialinvoke $r5.<com.android.server.PackageManagerService$9: void <init>(com.android.server.PackageManagerService,java.lang.String,android.content.pm.IPackageDataObserver)>($r0, $r1, $r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public void deletePackage(java.lang.String, android.content.pm.IPackageDeleteObserver, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        android.content.pm.IPackageDeleteObserver $r2;
        int $i0;
        android.content.Context $r3;
        android.os.Handler $r4;
        com.android.server.PackageManagerService$7 $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageDeleteObserver;

        $i0 := @parameter2: int;

        $r3 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DELETE_PACKAGES", null);

        $r4 = $r0.<com.android.server.PackageManagerService: android.os.Handler mHandler>;

        $r5 = new com.android.server.PackageManagerService$7;

        specialinvoke $r5.<com.android.server.PackageManagerService$7: void <init>(com.android.server.PackageManagerService,java.lang.String,int,android.content.pm.IPackageDeleteObserver)>($r0, $r1, $i0, $r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.PackageManagerService $r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2;
        java.lang.String[] $r3;
        android.util.PrintWriterPrinter $r4;
        android.content.Context $r5;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.util.HashMap $r8, $r18;
        com.android.server.PackageManagerService$ActivityIntentResolver $r9;
        com.android.server.PackageManagerService$ServiceIntentResolver $r10;
        com.android.server.PackageManagerService$Settings $r11;
        com.android.server.IntentResolver $r12;
        java.util.ArrayList $r13;
        java.util.Iterator $r14, $r27;
        boolean $z0;
        java.lang.Object $r15;
        com.android.server.PackageManagerService$PackageSetting $r16;
        java.lang.Throwable $r17;
        java.util.Collection $r19;
        com.android.server.PackageManagerService$BasePermission $r20;
        int[] $r21;
        com.android.server.PackageManagerService$SharedUserSetting $r22;
        android.content.pm.PackageParser$Package $r23;
        android.content.pm.ApplicationInfo $r24;
        com.android.server.PackageManagerService$PackageSignatures $r25;
        java.util.HashSet $r26;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.io.FileDescriptor;

        $r2 := @parameter1: java.io.PrintWriter;

        $r3 := @parameter2: java.lang.String[];

        $r5 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        $i0 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label01;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return;

     label01:
        $r4 = new android.util.PrintWriterPrinter;

        specialinvoke $r4.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>($r2);

        $r8 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r8;

     label02:
        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Activity Resolver Table:");

        $r9 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mActivities>;

        virtualinvoke $r9.<com.android.server.IntentResolver: void dump(android.util.Printer,java.lang.String)>($r4, "  ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Receiver Resolver Table:");

        $r9 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mReceivers>;

        virtualinvoke $r9.<com.android.server.IntentResolver: void dump(android.util.Printer,java.lang.String)>($r4, "  ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Service Resolver Table:");

        $r10 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ServiceIntentResolver mServices>;

        virtualinvoke $r10.<com.android.server.IntentResolver: void dump(android.util.Printer,java.lang.String)>($r4, "  ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Preferred Activities:");

        $r11 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r12 = staticinvoke <com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver access$600(com.android.server.PackageManagerService$Settings)>($r11);

        virtualinvoke $r12.<com.android.server.IntentResolver: void dump(android.util.Printer,java.lang.String)>($r4, "  ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Preferred Packages:");

        $r11 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r13 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.ArrayList access$900(com.android.server.PackageManagerService$Settings)>($r11);

        $r14 = virtualinvoke $r13.<java.util.AbstractList: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (com.android.server.PackageManagerService$PackageSetting) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r7 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label03;

     label04:
        $r17 := @caughtexception;

        exitmonitor $r8;

     label05:
        throw $r17;

     label06:
        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Permissions:");

        $r11 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r18 = $r11.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.util.Collection values()>();

        $r14 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (com.android.server.PackageManagerService$BasePermission) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Permission [");

        $r7 = $r20.<com.android.server.PackageManagerService$BasePermission: java.lang.String name>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r20);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    sourcePackage=");

        $r7 = $r20.<com.android.server.PackageManagerService$BasePermission: java.lang.String sourcePackage>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    uid=");

        $i0 = $r20.<com.android.server.PackageManagerService$BasePermission: int uid>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gids=");

        $r21 = $r20.<com.android.server.PackageManagerService$BasePermission: int[] gids>;

        $r7 = staticinvoke <com.android.server.PackageManagerService: java.lang.String arrayToString(int[])>($r21);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=");

        $i0 = $r20.<com.android.server.PackageManagerService$BasePermission: int type>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label07;

     label08:
        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Packages:");

        $r11 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r18 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r11);

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.util.Collection values()>();

        $r14 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (com.android.server.PackageManagerService$PackageSetting) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Package [");

        $r7 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r16);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    userId=");

        $i0 = $r16.<com.android.server.PackageManagerService$PackageSetting: int userId>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gids=");

        $r21 = $r16.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids>;

        $r7 = staticinvoke <com.android.server.PackageManagerService: java.lang.String arrayToString(int[])>($r21);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    sharedUser=");

        $r22 = $r16.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    pkg=");

        $r23 = $r16.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    codePath=");

        $r7 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String codePathString>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    resourcePath=");

        $r7 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String resourcePathString>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r23 = $r16.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r23 == null goto label10;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    dataDir=");

        $r23 = $r16.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r24 = $r23.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = $r24.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label10:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    timeStamp=");

        $r7 = virtualinvoke $r16.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String getTimeStampStr()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    signatures=");

        $r25 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: com.android.server.PackageManagerService$PackageSignatures signatures>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    permissionsFixed=");

        $z0 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: boolean permissionsFixed>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkgFlags=0x");

        $i0 = $r16.<com.android.server.PackageManagerService$GrantedPermissions: int pkgFlags>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" installStatus=");

        $i0 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: int installStatus>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enabled=");

        $i0 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: int enabled>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r26 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet disabledComponents>;

        $i0 = virtualinvoke $r26.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label12;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("    disabledComponents:");

        $r26 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet disabledComponents>;

        $r27 = virtualinvoke $r26.<java.util.HashSet: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r15 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label11;

     label12:
        $r26 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet enabledComponents>;

        $i0 = virtualinvoke $r26.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label14;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("    enabledComponents:");

        $r26 = $r16.<com.android.server.PackageManagerService$PackageSettingBase: java.util.HashSet enabledComponents>;

        $r27 = virtualinvoke $r26.<java.util.HashSet: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r15 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label13;

     label14:
        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("    grantedPermissions:");

        $r26 = $r16.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $r27 = virtualinvoke $r26.<java.util.HashSet: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r15 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label15;

     label16:
        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("    loadedPermissions:");

        $r26 = $r16.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet loadedPermissions>;

        $r27 = virtualinvoke $r26.<java.util.HashSet: java.util.Iterator iterator()>();

     label17:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r15 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label17;

     label18:
        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Shared Users:");

        $r11 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r18 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$2100(com.android.server.PackageManagerService$Settings)>($r11);

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.util.Collection values()>();

        $r14 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r22 = (com.android.server.PackageManagerService$SharedUserSetting) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  SharedUser [");

        $r7 = $r22.<com.android.server.PackageManagerService$SharedUserSetting: java.lang.String name>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] (");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r22);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    userId=");

        $i0 = $r22.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gids=");

        $r21 = $r22.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids>;

        $r7 = staticinvoke <com.android.server.PackageManagerService: java.lang.String arrayToString(int[])>($r21);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("    grantedPermissions:");

        $r26 = $r22.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet grantedPermissions>;

        $r27 = virtualinvoke $r26.<java.util.HashSet: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label21;

        $r15 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label20;

     label21:
        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("    loadedPermissions:");

        $r26 = $r22.<com.android.server.PackageManagerService$GrantedPermissions: java.util.HashSet loadedPermissions>;

        $r27 = virtualinvoke $r26.<java.util.HashSet: java.util.Iterator iterator()>();

     label22:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r15 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        goto label22;

     label23:
        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Settings parse messages:");

        $r11 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r6 = staticinvoke <com.android.server.PackageManagerService$Settings: java.lang.StringBuilder access$2200(com.android.server.PackageManagerService$Settings)>($r11);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        exitmonitor $r8;

     label24:
        return;

        catch java.lang.Throwable from label02 to label05 with label04;
        catch java.lang.Throwable from label06 to label24 with label04;
    }

    public void enterSafeMode()
    {
        com.android.server.PackageManagerService $r0;
        boolean $z0;

        $r0 := @this: com.android.server.PackageManagerService;

        $z0 = $r0.<com.android.server.PackageManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label1;

        $r0.<com.android.server.PackageManagerService: boolean mSafeMode> = 1;

        return;

     label1:
        return;
    }

    android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent, java.lang.String, int, java.util.List, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.Intent $r1;
        java.lang.String $r2, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.List $r3, $r7;
        java.util.HashMap $r4;
        com.android.server.PackageManagerService$Settings $r5;
        com.android.server.IntentResolver $r6;
        boolean $z0;
        java.lang.Object $r8;
        android.content.pm.ResolveInfo $r9;
        com.android.server.PackageManagerService$PreferredActivity $r10;
        android.content.ComponentName $r11;
        android.content.pm.ActivityInfo $r12, $r13;
        android.content.pm.ApplicationInfo $r14;
        java.lang.StringBuilder $r17;
        java.lang.Throwable $r18;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.util.List;

        $i1 := @parameter4: int;

        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r4;

     label01:
        $r5 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r6 = staticinvoke <com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver access$600(com.android.server.PackageManagerService$Settings)>($r5);

        $i2 = 65536 & $i0;

        if $i2 == 0 goto label05;

        $z0 = 1;

     label02:
        $r7 = virtualinvoke $r6.<com.android.server.IntentResolver: java.util.List queryIntent(android.content.ContentResolver,android.content.Intent,java.lang.String,boolean)>(null, $r1, $r2, $z0);

        if $r7 == null goto label16;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i2 <= 0 goto label16;

        $i3 = 0;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i4 = 0;

     label03:
        if $i4 >= $i2 goto label06;

        $r8 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i4);

        $r9 = (android.content.pm.ResolveInfo) $r8;

        $i5 = $r9.<android.content.pm.ResolveInfo: int match>;

        if $i5 <= $i3 goto label04;

        $i3 = $r9.<android.content.pm.ResolveInfo: int match>;

     label04:
        $i4 = $i4 + 1;

        goto label03;

     label05:
        $z0 = 0;

        goto label02;

     label06:
        $i3 = $i3 & 268369920;

        $i4 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i5 = 0;

     label07:
        if $i5 >= $i4 goto label16;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i5);

        $r10 = (com.android.server.PackageManagerService$PreferredActivity) $r8;

        $i6 = $r10.<com.android.server.PackageManagerService$PreferredActivity: int mMatch>;

        if $i6 == $i3 goto label09;

     label08:
        $i5 = $i5 + 1;

        goto label07;

     label09:
        $r11 = $r10.<com.android.server.PackageManagerService$PreferredActivity: android.content.ComponentName mActivity>;

        $r12 = virtualinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r11, $i0);

        if $r12 == null goto label08;

        $i6 = 0;

     label10:
        if $i6 >= $i2 goto label08;

        $r8 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i6);

        $r9 = (android.content.pm.ResolveInfo) $r8;

        $r13 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r14 = $r13.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r15 = $r14.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r14 = $r12.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r16 = $r14.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 != 0 goto label12;

     label11:
        $i6 = $i6 + 1;

        goto label10;

     label12:
        $r13 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r15 = $r13.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r16 = $r12.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 == 0 goto label11;

        $z0 = virtualinvoke $r10.<com.android.server.PackageManagerService$PreferredActivity: boolean sameSet(java.util.List,int)>($r3, $i1);

        if $z0 != 0 goto label14;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Result set changed, dropping preferred activity for ");

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type ");

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r2);

        $r5 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r6 = staticinvoke <com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver access$600(com.android.server.PackageManagerService$Settings)>($r5);

        virtualinvoke $r6.<com.android.server.IntentResolver: void removeFilter(android.content.IntentFilter)>($r10);

        exitmonitor $r4;

     label13:
        return null;

     label14:
        exitmonitor $r4;

     label15:
        return $r9;

     label16:
        exitmonitor $r4;

     label17:
        return null;

     label18:
        $r18 := @caughtexception;

        exitmonitor $r4;

     label19:
        throw $r18;

        catch java.lang.Throwable from label01 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public void freeStorage(long, android.app.PendingIntent)
    {
        com.android.server.PackageManagerService $r0;
        long $l0;
        android.app.PendingIntent $r1;
        android.content.Context $r2;
        android.os.Handler $r3;
        com.android.server.PackageManagerService$2 $r4;

        $r0 := @this: com.android.server.PackageManagerService;

        $l0 := @parameter0: long;

        $r1 := @parameter1: android.app.PendingIntent;

        $r2 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_CACHE", null);

        $r3 = $r0.<com.android.server.PackageManagerService: android.os.Handler mHandler>;

        $r4 = new com.android.server.PackageManagerService$2;

        specialinvoke $r4.<com.android.server.PackageManagerService$2: void <init>(com.android.server.PackageManagerService,long,android.app.PendingIntent)>($r0, $l0, $r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)
    {
        com.android.server.PackageManagerService $r0;
        long $l0;
        android.content.pm.IPackageDataObserver $r1;
        android.content.Context $r2;
        android.os.Handler $r3;
        com.android.server.PackageManagerService$1 $r4;

        $r0 := @this: com.android.server.PackageManagerService;

        $l0 := @parameter0: long;

        $r1 := @parameter1: android.content.pm.IPackageDataObserver;

        $r2 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_CACHE", null);

        $r3 = $r0.<com.android.server.PackageManagerService: android.os.Handler mHandler>;

        $r4 = new com.android.server.PackageManagerService$1;

        specialinvoke $r4.<com.android.server.PackageManagerService$1: void <init>(com.android.server.PackageManagerService,long,android.content.pm.IPackageDataObserver)>($r0, $l0, $r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1;
        int $i0;
        android.content.pm.PackageInfo $r2;
        java.lang.Object $r3;
        com.android.server.PackageManagerService$PackageSetting $r4;
        com.android.server.PackageManagerService$SharedUserSetting $r5;
        com.android.server.PackageManagerService$GrantedPermissions $r6;
        int[] $r7;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $i0 := @parameter1: int;

        $r3 = $r1.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r4 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r5 == null goto label3;

        $r6 = $r4.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

     label2:
        $r7 = $r6.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids>;

        $r2 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int[],int)>($r1, $r7, $i0);

        return $r2;

     label3:
        $r6 = $r4;

        goto label2;
    }

    public android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.ComponentName $r1, $r9;
        int $i0;
        android.content.pm.ActivityInfo $r2;
        java.util.HashMap $r3, $r5;
        com.android.server.PackageManagerService$ActivityIntentResolver $r4;
        java.lang.Object $r6;
        android.content.pm.PackageParser$Activity $r7;
        com.android.server.PackageManagerService$Settings $r8;
        boolean $z0;
        java.lang.Throwable $r10;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mActivities>;

        $r5 = staticinvoke <com.android.server.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$400(com.android.server.PackageManagerService$ActivityIntentResolver)>($r4);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (android.content.pm.PackageParser$Activity) $r6;

        if $r7 == null goto label3;

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r2 = $r7.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z0 = virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: boolean isEnabledLP(android.content.pm.ComponentInfo,int)>($r2, $i0);

        if $z0 == 0 goto label3;

        $r2 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity,int)>($r7, $i0);

        exitmonitor $r3;

     label2:
        return $r2;

     label3:
        $r9 = $r0.<com.android.server.PackageManagerService: android.content.ComponentName mResolveComponentName>;

        $z0 = virtualinvoke $r9.<android.content.ComponentName: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label5;

        $r2 = $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        exitmonitor $r3;

     label4:
        return $r2;

     label5:
        exitmonitor $r3;

     label6:
        return null;

     label7:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label8:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.util.List getAllPermissionGroups(int)
    {
        com.android.server.PackageManagerService $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.util.HashMap $r2, $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.content.pm.PackageParser$PermissionGroup $r7;
        android.content.pm.PermissionGroupInfo $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $i0 := @parameter0: int;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $i1 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i1);

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.content.pm.PackageParser$PermissionGroup) $r6;

        $r8 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionGroupInfo generatePermissionGroupInfo(android.content.pm.PackageParser$PermissionGroup,int)>($r7, $i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r9;

     label5:
        exitmonitor $r2;

     label6:
        return $r1;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public int getApplicationEnabledSetting(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        java.util.HashMap $r2, $r4;
        com.android.server.PackageManagerService$Settings $r3;
        java.lang.Object $r5;
        com.android.server.PackageManagerService$PackageSetting $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r9;
        int i0;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        if $r6 != null goto label4;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label2:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label3:
        throw $r9;

     label4:
        i0 = $r6.<com.android.server.PackageManagerService$PackageSettingBase: int enabled>;

        exitmonitor $r2;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r7;
        int $i0, $i1;
        java.util.HashMap $r2, $r3;
        java.lang.Object $r4;
        android.content.pm.PackageParser$Package $r5;
        android.content.pm.ApplicationInfo $r6;
        boolean $z0;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label01:
        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (android.content.pm.PackageParser$Package) $r4;

        if $r5 == null goto label03;

        $r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int)>($r5, $i0);

        exitmonitor $r2;

     label02:
        return $r6;

     label03:
        $r7 = "android";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label04;

        $r7 = "system";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label06;

     label04:
        $r6 = $r0.<com.android.server.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        exitmonitor $r2;

     label05:
        return $r6;

     label06:
        $i1 = $i0 & 8192;

        if $i1 == 0 goto label08;

        $r6 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.ApplicationInfo generateApplicationInfoFromSettingsLP(java.lang.String,int)>($r1, $i0);

        exitmonitor $r2;

     label07:
        return $r6;

     label08:
        exitmonitor $r2;

     label09:
        return null;

     label10:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label11:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public int getComponentEnabledSetting(android.content.ComponentName)
    {
        com.android.server.PackageManagerService $r0;
        android.content.ComponentName $r1;
        java.util.HashMap $r2, $r5;
        java.lang.String $r3;
        com.android.server.PackageManagerService$Settings $r4;
        java.lang.Object $r6;
        com.android.server.PackageManagerService$PackageSetting $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9;
        java.lang.Throwable $r10;
        int $i0;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r3 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r4 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r5 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r4);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r7 = (com.android.server.PackageManagerService$PackageSetting) $r6;

        if $r7 != null goto label4;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown component: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r8;

     label2:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label3:
        throw $r10;

     label4:
        $r3 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $i0 = virtualinvoke $r7.<com.android.server.PackageManagerService$PackageSettingBase: int currentEnabledStateLP(java.lang.String)>($r3);

        exitmonitor $r2;

     label5:
        return $i0;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }

    public java.util.List getInstalledApplications(int)
    {
        com.android.server.PackageManagerService $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.util.HashMap $r2, $r4;
        com.android.server.PackageManagerService$Settings $r3;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.android.server.PackageManagerService$PackageSetting $r8;
        java.lang.String $r9;
        android.content.pm.ApplicationInfo $r10;
        java.lang.Throwable $r11;
        android.content.pm.PackageParser$Package $r12;

        $r0 := @this: com.android.server.PackageManagerService;

        $i0 := @parameter0: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

        $i1 = $i0 & 8192;

        if $i1 == 0 goto label5;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.PackageManagerService$PackageSetting) $r7;

        $r9 = $r8.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r10 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.ApplicationInfo generateApplicationInfoFromSettingsLP(java.lang.String,int)>($r9, $i0);

        if $r10 == null goto label2;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        $r11 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r11;

     label5:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (android.content.pm.PackageParser$Package) $r7;

        $r10 = $r12.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r10 == null goto label6;

        $r10 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int)>($r12, $i0);

        if $r10 == null goto label6;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label6;

     label7:
        exitmonitor $r2;

     label8:
        return $r1;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label8 with label3;
    }

    public java.util.List getInstalledPackages(int)
    {
        com.android.server.PackageManagerService $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.util.HashMap $r2, $r4;
        com.android.server.PackageManagerService$Settings $r3;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.android.server.PackageManagerService$PackageSetting $r8;
        java.lang.String $r9;
        android.content.pm.PackageInfo $r10;
        java.lang.Throwable $r11;
        android.content.pm.PackageParser$Package $r12;
        android.content.pm.ApplicationInfo $r13;

        $r0 := @this: com.android.server.PackageManagerService;

        $i0 := @parameter0: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

        $i1 = $i0 & 8192;

        if $i1 == 0 goto label5;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.PackageManagerService$PackageSetting) $r7;

        $r9 = $r8.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r10 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLP(java.lang.String,int)>($r9, $i0);

        if $r10 == null goto label2;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        $r11 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r11;

     label5:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (android.content.pm.PackageParser$Package) $r7;

        $r13 = $r12.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r13 == null goto label6;

        $r10 = virtualinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int)>($r12, $i0);

        if $r10 == null goto label6;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label6;

     label7:
        exitmonitor $r2;

     label8:
        return $r1;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label8 with label3;
    }

    public android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.ComponentName $r1;
        int $i0;
        java.util.HashMap $r2, $r3;
        java.lang.Object $r4;
        android.content.pm.PackageParser$Instrumentation $r5;
        android.content.pm.InstrumentationInfo $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (android.content.pm.PackageParser$Instrumentation) $r4;

        $r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser$Instrumentation,int)>($r5, $i0);

        exitmonitor $r2;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getNameForUid(int)
    {
        com.android.server.PackageManagerService $r0;
        int $i0;
        java.util.HashMap $r1;
        com.android.server.PackageManagerService$Settings $r2;
        java.lang.Object $r3;
        boolean $z0;
        com.android.server.PackageManagerService$SharedUserSetting $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.android.server.PackageManagerService$PackageSetting $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.server.PackageManagerService;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r3 = virtualinvoke $r2.<com.android.server.PackageManagerService$Settings: java.lang.Object getUserIdLP(int)>($i0);

        $z0 = $r3 instanceof com.android.server.PackageManagerService$SharedUserSetting;

        if $z0 == 0 goto label3;

        $r4 = (com.android.server.PackageManagerService$SharedUserSetting) $r3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = $r4.<com.android.server.PackageManagerService$SharedUserSetting: java.lang.String name>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = $r4.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor $r1;

     label2:
        return $r6;

     label3:
        $z0 = $r3 instanceof com.android.server.PackageManagerService$PackageSetting;

        if $z0 == 0 goto label5;

        $r7 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        $r6 = $r7.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        exitmonitor $r1;

     label4:
        return $r6;

     label5:
        exitmonitor $r1;

     label6:
        return null;

     label7:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int[] getPackageGids(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        com.android.server.PackageManagerService$SharedUserSetting $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4, $r5;
        android.content.pm.PackageParser$Package $r6;
        com.android.server.PackageManagerService$PackageSetting $r7;
        int[] $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r4;

     label1:
        $r5 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r3 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.content.pm.PackageParser$Package) $r3;

        if $r6 == null goto label5;

        $r3 = $r6.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r7 = (com.android.server.PackageManagerService$PackageSetting) $r3;

        $r2 = $r7.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r2 == null goto label4;

        $r8 = $r2.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids>;

     label2:
        exitmonitor $r4;

     label3:
        return $r8;

     label4:
        $r8 = $r7.<com.android.server.PackageManagerService$GrantedPermissions: int[] gids>;

        goto label2;

     label5:
        exitmonitor $r4;

     label6:
        $r8 = newarray (int)[0];

        return $r8;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor $r4;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.util.HashMap $r2, $r3;
        java.lang.Object $r4;
        android.content.pm.PackageParser$Package $r5;
        android.content.pm.PackageInfo $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (android.content.pm.PackageParser$Package) $r4;

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int)>($r5, $i0);

        exitmonitor $r2;

     label2:
        return $r6;

     label3:
        $i1 = $i0 & 8192;

        if $i1 == 0 goto label5;

        $r6 = specialinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLP(java.lang.String,int)>($r1, $i0);

        exitmonitor $r2;

     label4:
        return $r6;

     label5:
        exitmonitor $r2;

     label6:
        return null;

     label7:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void getPackageSizeInfo(java.lang.String, android.content.pm.IPackageStatsObserver)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        android.content.pm.IPackageStatsObserver $r2;
        android.content.Context $r3;
        android.os.Handler $r4;
        com.android.server.PackageManagerService$10 $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.pm.IPackageStatsObserver;

        $r3 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.GET_PACKAGE_SIZE", null);

        $r4 = $r0.<com.android.server.PackageManagerService: android.os.Handler mHandler>;

        $r5 = new com.android.server.PackageManagerService$10;

        specialinvoke $r5.<com.android.server.PackageManagerService$10: void <init>(com.android.server.PackageManagerService,java.lang.String,android.content.pm.IPackageStatsObserver)>($r0, $r1, $r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public int getPackageUid(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        java.util.HashMap $r2, $r3;
        java.lang.Object $r4;
        android.content.pm.PackageParser$Package $r5;
        android.content.pm.ApplicationInfo $r6;
        int $i0;
        com.android.server.PackageManagerService$Settings $r7;
        com.android.server.PackageManagerService$PackageSetting $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label01:
        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (android.content.pm.PackageParser$Package) $r4;

        if $r5 == null goto label03;

        $r6 = $r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        exitmonitor $r2;

     label02:
        return $i0;

     label03:
        $r7 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r3 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.HashMap access$300(com.android.server.PackageManagerService$Settings)>($r7);

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r8 = (com.android.server.PackageManagerService$PackageSetting) $r4;

        if $r8 == null goto label04;

        $r5 = $r8.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r5 == null goto label04;

        $r5 = $r8.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r6 = $r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r6 != null goto label06;

     label04:
        exitmonitor $r2;

     label05:
        return -1;

     label06:
        $r5 = $r8.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r5 == null goto label09;

        $r6 = $r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r6.<android.content.pm.ApplicationInfo: int uid>;

     label07:
        exitmonitor $r2;

     label08:
        return $i0;

     label09:
        $i0 = -1;

        goto label07;

     label10:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label05 with label10;
        catch java.lang.Throwable from label06 to label08 with label10;
        catch java.lang.Throwable from label09 to label11 with label10;
    }

    public java.lang.String[] getPackagesForUid(int)
    {
        int $i0;
        java.lang.String[] $r0;
        java.lang.String $r1;
        com.android.server.PackageManagerService $r2;
        java.util.HashMap $r3;
        com.android.server.PackageManagerService$Settings $r4;
        java.lang.Object $r5;
        boolean $z0;
        com.android.server.PackageManagerService$SharedUserSetting $r6;
        java.util.HashSet $r7;
        java.util.Iterator $r8;
        com.android.server.PackageManagerService$PackageSetting $r9;
        java.lang.Throwable $r10;

        $r2 := @this: com.android.server.PackageManagerService;

        $i0 := @parameter0: int;

        $r3 = $r2.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label01:
        $r4 = $r2.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r5 = virtualinvoke $r4.<com.android.server.PackageManagerService$Settings: java.lang.Object getUserIdLP(int)>($i0);

        $z0 = $r5 instanceof com.android.server.PackageManagerService$SharedUserSetting;

        if $z0 == 0 goto label05;

        $r6 = (com.android.server.PackageManagerService$SharedUserSetting) $r5;

        $r7 = $r6.<com.android.server.PackageManagerService$SharedUserSetting: java.util.HashSet packages>;

        $i0 = virtualinvoke $r7.<java.util.HashSet: int size()>();

        $r0 = newarray (java.lang.String)[$i0];

        $r7 = $r6.<com.android.server.PackageManagerService$SharedUserSetting: java.util.HashSet packages>;

        $r8 = virtualinvoke $r7.<java.util.HashSet: java.util.Iterator iterator()>();

        $i0 = 0;

     label02:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        $r1 = $r9.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r0[$i0] = $r1;

        $i0 = $i0 + 1;

        goto label02;

     label03:
        exitmonitor $r3;

     label04:
        return $r0;

     label05:
        $z0 = $r5 instanceof com.android.server.PackageManagerService$PackageSetting;

        if $z0 == 0 goto label07;

        $r9 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        $r0 = newarray (java.lang.String)[1];

        $r1 = $r9.<com.android.server.PackageManagerService$PackageSettingBase: java.lang.String name>;

        $r0[0] = $r1;

        exitmonitor $r3;

     label06:
        return $r0;

     label07:
        exitmonitor $r3;

     label08:
        return null;

     label09:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r10;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        java.util.HashMap $r1, $r3;
        com.android.server.PackageManagerService $r2;
        java.lang.Object $r4;
        android.content.pm.PackageParser$PermissionGroup $r5;
        android.content.pm.PermissionGroupInfo $r6;
        java.lang.Throwable $r7;

        $r2 := @this: com.android.server.PackageManagerService;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = $r2.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r1;

     label1:
        $r3 = $r2.<com.android.server.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r5 = (android.content.pm.PackageParser$PermissionGroup) $r4;

        $r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionGroupInfo generatePermissionGroupInfo(android.content.pm.PackageParser$PermissionGroup,int)>($r5, $i0);

        exitmonitor $r1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        int $i0;
        java.util.HashMap $r2, $r4;
        com.android.server.PackageManagerService$Settings $r3;
        java.lang.Object $r5;
        com.android.server.PackageManagerService$BasePermission $r6;
        android.content.pm.PackageParser$Permission $r7;
        android.content.pm.PermissionInfo $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = $r3.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.android.server.PackageManagerService$BasePermission) $r5;

        if $r6 == null goto label3;

        $r7 = $r6.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r7 == null goto label3;

        $r7 = $r6.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r8 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission,int)>($r7, $i0);

        exitmonitor $r2;

     label2:
        return $r8;

     label3:
        exitmonitor $r2;

     label4:
        return null;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getPersistentApplications(int)
    {
        com.android.server.PackageManagerService $r0;
        int $i0;
        java.util.ArrayList $r1;
        java.util.HashMap $r2, $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.content.pm.PackageParser$Package $r7;
        android.content.pm.ApplicationInfo $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $i0 := @parameter0: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.content.pm.PackageParser$Package) $r6;

        $r8 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r8 == null goto label2;

        $r8 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 8;

        if $i0 == 0 goto label2;

        $z0 = $r0.<com.android.server.PackageManagerService: boolean mSafeMode>;

        if $z0 == 0 goto label3;

        $r8 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label2;

     label3:
        $r8 = $r7.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label2;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r9;

     label6:
        exitmonitor $r2;

     label7:
        return $r1;

        catch java.lang.Throwable from label1 to label5 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    public int getPreferredActivities(java.util.List, java.util.List, java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.util.List $r1, $r2;
        java.lang.String $r3, $r11;
        java.util.HashMap $r4;
        com.android.server.PackageManagerService$Settings $r5;
        com.android.server.IntentResolver $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        com.android.server.PackageManagerService$PreferredActivity $r9;
        android.content.ComponentName $r10;
        android.content.IntentFilter $r12;
        java.lang.Throwable $r13;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.lang.String;

        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r4;

     label1:
        $r5 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r6 = staticinvoke <com.android.server.PackageManagerService$Settings: com.android.server.IntentResolver access$600(com.android.server.PackageManagerService$Settings)>($r5);

        $r7 = virtualinvoke $r6.<com.android.server.IntentResolver: java.util.Iterator filterIterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.android.server.PackageManagerService$PreferredActivity) $r8;

        if $r3 == null goto label3;

        $r10 = $r9.<com.android.server.PackageManagerService$PreferredActivity: android.content.ComponentName mActivity>;

        $r11 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

     label3:
        if $r1 == null goto label4;

        $r12 = new android.content.IntentFilter;

        specialinvoke $r12.<android.content.IntentFilter: void <init>(android.content.IntentFilter)>($r9);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12);

     label4:
        if $r2 == null goto label2;

        $r10 = $r9.<com.android.server.PackageManagerService$PreferredActivity: android.content.ComponentName mActivity>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label2;

     label5:
        $r13 := @caughtexception;

        exitmonitor $r4;

     label6:
        throw $r13;

     label7:
        exitmonitor $r4;

     label8:
        return 0;

        catch java.lang.Throwable from label1 to label6 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    public java.util.List getPreferredPackages(int)
    {
        com.android.server.PackageManagerService $r0;
        int $i0, $i1, $i2;
        java.util.ArrayList $r1, $r4;
        java.util.HashMap $r2;
        com.android.server.PackageManagerService$Settings $r3;
        java.lang.Object $r5;
        com.android.server.PackageManagerService$PackageSetting $r6;
        android.content.pm.PackageParser$Package $r7;
        android.content.pm.PackageInfo $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $i0 := @parameter0: int;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.ArrayList access$900(com.android.server.PackageManagerService$Settings)>($r3);

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label3;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r6 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        $r7 = $r6.<com.android.server.PackageManagerService$PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r8 = virtualinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int)>($r7, $i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        exitmonitor $r2;

     label4:
        return $r1;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.ComponentName $r1;
        int $i0;
        android.content.pm.ActivityInfo $r2;
        java.util.HashMap $r3, $r5;
        com.android.server.PackageManagerService$ActivityIntentResolver $r4;
        java.lang.Object $r6;
        android.content.pm.PackageParser$Activity $r7;
        com.android.server.PackageManagerService$Settings $r8;
        boolean $z0;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mReceivers>;

        $r5 = staticinvoke <com.android.server.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$400(com.android.server.PackageManagerService$ActivityIntentResolver)>($r4);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (android.content.pm.PackageParser$Activity) $r6;

        if $r7 == null goto label3;

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r2 = $r7.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z0 = virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: boolean isEnabledLP(android.content.pm.ComponentInfo,int)>($r2, $i0);

        if $z0 == 0 goto label3;

        $r2 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity,int)>($r7, $i0);

        exitmonitor $r3;

     label2:
        return $r2;

     label3:
        exitmonitor $r3;

     label4:
        return null;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.ComponentName $r1;
        int $i0;
        android.content.pm.ServiceInfo $r2;
        java.util.HashMap $r3, $r5;
        com.android.server.PackageManagerService$ServiceIntentResolver $r4;
        java.lang.Object $r6;
        android.content.pm.PackageParser$Service $r7;
        com.android.server.PackageManagerService$Settings $r8;
        boolean $z0;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ServiceIntentResolver mServices>;

        $r5 = staticinvoke <com.android.server.PackageManagerService$ServiceIntentResolver: java.util.HashMap access$500(com.android.server.PackageManagerService$ServiceIntentResolver)>($r4);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (android.content.pm.PackageParser$Service) $r6;

        if $r7 == null goto label3;

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r2 = $r7.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $z0 = virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: boolean isEnabledLP(android.content.pm.ComponentInfo,int)>($r2, $i0);

        if $z0 == 0 goto label3;

        $r2 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ServiceInfo generateServiceInfo(android.content.pm.PackageParser$Service,int)>($r7, $i0);

        exitmonitor $r3;

     label2:
        return $r2;

     label3:
        exitmonitor $r3;

     label4:
        return null;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String[] getSystemSharedLibraryNames()
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String[] $r1;
        java.util.HashMap $r2, $r3;
        java.util.Set $r4;
        int $i0;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        exitmonitor $r2;

     label2:
        $i0 = interfaceinvoke $r4.<java.util.Set: int size()>();

        if $i0 <= 0 goto label6;

        $r1 = newarray (java.lang.String)[$i0];

        interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r1;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor $r2;

     label5:
        throw $r5;

     label6:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getUidForSharedUser(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        com.android.server.PackageManagerService$SharedUserSetting $r2;
        java.util.HashMap $r3;
        com.android.server.PackageManagerService$Settings $r4;
        int $i0;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return -1;

     label1:
        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label2:
        $r4 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r2 = virtualinvoke $r4.<com.android.server.PackageManagerService$Settings: com.android.server.PackageManagerService$SharedUserSetting getSharedUserLP(java.lang.String,int,boolean)>($r1, 0, 0);

        if $r2 != null goto label4;

        exitmonitor $r3;

     label3:
        return -1;

     label4:
        $i0 = $r2.<com.android.server.PackageManagerService$SharedUserSetting: int userId>;

        exitmonitor $r3;

     label5:
        return $i0;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean hasSystemUidErrors()
    {
        com.android.server.PackageManagerService $r0;
        boolean z0;

        $r0 := @this: com.android.server.PackageManagerService;

        z0 = $r0.<com.android.server.PackageManagerService: boolean mHasSystemUidErrors>;

        return z0;
    }

    public void installPackage(android.net.Uri, android.content.pm.IPackageInstallObserver, int)
    {
        com.android.server.PackageManagerService $r0;
        android.net.Uri $r1;
        android.content.pm.IPackageInstallObserver $r2;
        int $i0;
        android.content.Context $r3;
        android.os.Handler $r4;
        com.android.server.PackageManagerService$5 $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        $i0 := @parameter2: int;

        $r3 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INSTALL_PACKAGES", null);

        $r4 = $r0.<com.android.server.PackageManagerService: android.os.Handler mHandler>;

        $r5 = new com.android.server.PackageManagerService$5;

        specialinvoke $r5.<com.android.server.PackageManagerService$5: void <init>(com.android.server.PackageManagerService,android.net.Uri,int,android.content.pm.IPackageInstallObserver)>($r0, $r1, $i0, $r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public boolean isSafeMode()
    {
        com.android.server.PackageManagerService $r0;
        boolean z0;

        $r0 := @this: com.android.server.PackageManagerService;

        z0 = $r0.<com.android.server.PackageManagerService: boolean mSafeMode>;

        return z0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.PackageManagerService $r0;
        int $i0, $i1;
        android.os.Parcel $r1, $r2;
        java.lang.RuntimeException $r3;
        boolean $z0;

        $r0 := @this: com.android.server.PackageManagerService;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Parcel;

        $r2 := @parameter2: android.os.Parcel;

        $i1 := @parameter3: int;

     label1:
        $z0 = specialinvoke $r0.<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>($i0, $r1, $r2, $i1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $z0 = $r3 instanceof java.lang.SecurityException;

        if $z0 != 0 goto label4;

        $z0 = $r3 instanceof java.lang.IllegalArgumentException;

        if $z0 != 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Package Manager Crash", $r3);

     label4:
        throw $r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public java.util.List queryContentProviders(java.lang.String, int, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r10;
        int $i0, $i1, $i2;
        android.content.pm.ProviderInfo $r2;
        java.util.HashMap $r3, $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        java.util.ArrayList $r7;
        boolean $z0;
        java.lang.Object $r8;
        android.content.pm.PackageParser$Provider $r9;
        android.content.pm.ApplicationInfo $r11;
        com.android.server.PackageManagerService$Settings $r12;
        java.util.Comparator $r13;
        java.lang.Throwable $r14;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label01:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProvidersByComponent>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $r7 = null;

     label03:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.content.pm.PackageParser$Provider) $r8;

        $r2 = $r9.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r10 = $r2.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r10 == null goto label15;

        if $r1 == null goto label04;

        $r2 = $r9.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r10 = $r2.<android.content.pm.ComponentInfo: java.lang.String processName>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label15;

        $r2 = $r9.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r11 = $r2.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        if $i2 != $i0 goto label15;

     label04:
        $r12 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r2 = $r9.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z0 = virtualinvoke $r12.<com.android.server.PackageManagerService$Settings: boolean isEnabledLP(android.content.pm.ComponentInfo,int)>($r2, $i1);

        if $z0 == 0 goto label15;

        $z0 = $r0.<com.android.server.PackageManagerService: boolean mSafeMode>;

        if $z0 == 0 goto label05;

        $r2 = $r9.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r11 = $r2.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i2 & 1;

        if $i2 == 0 goto label15;

     label05:
        if $r7 != null goto label14;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(3);

     label06:
        $r2 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int)>($r9, $i1);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label07:
        goto label03;

     label08:
        exitmonitor $r3;

     label09:
        if $r7 == null goto label16;

        $r13 = <com.android.server.PackageManagerService: java.util.Comparator mProviderInitOrderSorter>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r7, $r13);

        return $r7;

     label10:
        $r14 := @caughtexception;

     label11:
        exitmonitor $r3;

     label12:
        throw $r14;

     label13:
        $r14 := @caughtexception;

        goto label11;

     label14:
        goto label06;

     label15:
        goto label07;

     label16:
        return $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public java.util.List queryInstrumentation(java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r10;
        int $i0;
        java.util.ArrayList $r2;
        java.util.HashMap $r3, $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.content.pm.PackageParser$Instrumentation $r8;
        android.content.pm.InstrumentationInfo $r9;
        java.lang.Throwable $r11;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.content.pm.PackageParser$Instrumentation) $r7;

        if $r1 == null goto label3;

        $r9 = $r8.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r10 = $r9.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label2;

     label3:
        $r9 = staticinvoke <android.content.pm.PackageParser: android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser$Instrumentation,int)>($r8, $i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label2;

     label4:
        $r11 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r11;

     label6:
        exitmonitor $r3;

     label7:
        return $r2;

        catch java.lang.Throwable from label1 to label5 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    public java.util.List queryIntentActivities(android.content.Intent, java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.Intent $r1;
        java.lang.String $r2;
        int $i0;
        java.util.ArrayList $r3;
        android.content.pm.ResolveInfo $r4;
        android.content.ComponentName $r5;
        android.content.pm.ActivityInfo $r6;
        java.util.HashMap $r7;
        com.android.server.PackageManagerService$ActivityIntentResolver $r8;
        java.util.List $r9;
        java.lang.Throwable $r10;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r5 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r5 == null goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(1);

        $r6 = virtualinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r5, $i0);

        if $r6 == null goto label1;

        $r4 = new android.content.pm.ResolveInfo;

        specialinvoke $r4.<android.content.pm.ResolveInfo: void <init>()>();

        $r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r6;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return $r3;

     label2:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label3:
        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mActivities>;

        $r9 = virtualinvoke $r8.<com.android.server.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.ContentResolver,android.content.Intent,java.lang.String,int)>(null, $r1, $r2, $i0);

        exitmonitor $r7;

     label4:
        return $r9;

     label5:
        $r10 := @caughtexception;

        exitmonitor $r7;

     label6:
        throw $r10;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], java.lang.String[], android.content.Intent, java.lang.String, int)
    {
        android.content.ComponentName $r0, $r9, $r10;
        android.content.Intent[] $r1;
        java.lang.String[] $r2;
        android.content.Intent $r3;
        java.lang.String $r4, $r6, $r8, $r16;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.PackageManagerService $r5;
        java.util.List $r7;
        boolean $z0;
        android.content.pm.ResolveInfo $r11, $r12, $r13;
        android.content.pm.ActivityInfo $r14, $r18;
        android.content.pm.ApplicationInfo $r15;
        java.lang.Object $r17;
        android.content.IntentFilter $r19;
        java.util.Iterator $r20;

        $r5 := @this: com.android.server.PackageManagerService;

        $r0 := @parameter0: android.content.ComponentName;

        $r1 := @parameter1: android.content.Intent[];

        $r2 := @parameter2: java.lang.String[];

        $r3 := @parameter3: android.content.Intent;

        $r4 := @parameter4: java.lang.String;

        $i0 := @parameter5: int;

        $r6 = virtualinvoke $r3.<android.content.Intent: java.lang.String getAction()>();

        $i1 = $i0 | 64;

        $r7 = virtualinvoke $r5.<com.android.server.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int)>($r3, $r4, $i1);

        $i1 = 0;

        if $r1 == null goto label17;

        $i2 = 0;

     label01:
        $i3 = lengthof $r1;

        if $i2 >= $i3 goto label17;

        $r3 = $r1[$i2];

        if $r3 != null goto label03;

     label02:
        $i2 = $i2 + 1;

        goto label01;

     label03:
        $r8 = virtualinvoke $r3.<android.content.Intent: java.lang.String getAction()>();

        $r4 = $r8;

        if $r6 == null goto label04;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label04;

        $r4 = null;

     label04:
        $r9 = virtualinvoke $r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r10 = $r9;

        $r11 = null;

        if $r9 != null goto label14;

        if $r2 == null goto label13;

        $r8 = $r2[$i2];

     label05:
        $r12 = virtualinvoke $r5.<com.android.server.PackageManagerService: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int)>($r3, $r8, $i0);

        $r11 = $r12;

        if $r12 == null goto label02;

        $r13 = $r5.<com.android.server.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        if $r12 != $r13 goto label06;

     label06:
        $r14 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = new android.content.ComponentName;

        $r15 = $r14.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = $r15.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r16 = $r14.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r8, $r16);

     label07:
        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i4 = $i1;

     label08:
        if $i4 >= $i3 goto label15;

        $r17 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i4);

        $r12 = (android.content.pm.ResolveInfo) $r17;

        $r18 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r18.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r16 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String getClassName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 == 0 goto label09;

        $r18 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r15 = $r18.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = $r15.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r16 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 != 0 goto label10;

     label09:
        if $r4 == null goto label12;

        $r19 = $r12.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        $z0 = virtualinvoke $r19.<android.content.IntentFilter: boolean matchAction(java.lang.String)>($r4);

        if $z0 == 0 goto label12;

     label10:
        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i4);

        if $r11 != null goto label11;

        $r11 = $r12;

     label11:
        $i4 = $i4 + -1;

        $i3 = $i3 + -1;

     label12:
        $i4 = $i4 + 1;

        goto label08;

     label13:
        $r8 = null;

        goto label05;

     label14:
        $r18 = virtualinvoke $r5.<com.android.server.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r9, $i0);

        $r14 = $r18;

        if $r18 != null goto label07;

        goto label02;

     label15:
        if $r11 != null goto label16;

        $r11 = new android.content.pm.ResolveInfo;

        specialinvoke $r11.<android.content.pm.ResolveInfo: void <init>()>();

        $r11.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r14;

     label16:
        interfaceinvoke $r7.<java.util.List: void add(int,java.lang.Object)>($i1, $r11);

        $r11.<android.content.pm.ResolveInfo: int specificIndex> = $i2;

        $i1 = $i1 + 1;

        goto label02;

     label17:
        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

     label18:
        $i3 = $i2 - 1;

        if $i1 >= $i3 goto label26;

        $r17 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i1);

        $r11 = (android.content.pm.ResolveInfo) $r17;

        $r19 = $r11.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        if $r19 != null goto label20;

     label19:
        $i1 = $i1 + 1;

        goto label18;

     label20:
        $r19 = $r11.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        $r20 = virtualinvoke $r19.<android.content.IntentFilter: java.util.Iterator actionsIterator()>();

        if $r20 == null goto label19;

     label21:
        $z0 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label25;

        $r17 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r17;

        if $r6 == null goto label22;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label21;

     label22:
        $i3 = $i1 + 1;

     label23:
        if $i3 >= $i2 goto label21;

        $r17 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i3);

        $r12 = (android.content.pm.ResolveInfo) $r17;

        $r19 = $r12.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        if $r19 == null goto label24;

        $r19 = $r12.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        $z0 = virtualinvoke $r19.<android.content.IntentFilter: boolean hasAction(java.lang.String)>($r4);

        if $z0 == 0 goto label24;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i3);

        $i3 = $i3 + -1;

        $i2 = $i2 + -1;

     label24:
        $i3 = $i3 + 1;

        goto label23;

     label25:
        $i3 = $i0 & 64;

        if $i3 != 0 goto label19;

        $r11.<android.content.pm.ResolveInfo: android.content.IntentFilter filter> = null;

        goto label19;

     label26:
        if $r0 == null goto label28;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i2 = 0;

     label27:
        if $i2 >= $i1 goto label28;

        $r17 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2);

        $r11 = (android.content.pm.ResolveInfo) $r17;

        $r14 = $r11.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r4 = virtualinvoke $r0.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r15 = $r14.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r6 = $r15.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label30;

        $r4 = virtualinvoke $r0.<android.content.ComponentName: java.lang.String getClassName()>();

        $r6 = $r14.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label30;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i2);

     label28:
        $i0 = $i0 & 64;

        if $i0 != 0 goto label31;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i1 = 0;

     label29:
        if $i1 >= $i0 goto label32;

        $r17 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i1);

        $r11 = (android.content.pm.ResolveInfo) $r17;

        $r11.<android.content.pm.ResolveInfo: android.content.IntentFilter filter> = null;

        $i1 = $i1 + 1;

        goto label29;

     label30:
        $i2 = $i2 + 1;

        goto label27;

     label31:
        return $r7;

     label32:
        return $r7;
    }

    public java.util.List queryIntentReceivers(android.content.Intent, java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.Intent $r1;
        java.lang.String $r2;
        int $i0;
        java.util.HashMap $r3;
        java.util.List $r4;
        com.android.server.PackageManagerService$ActivityIntentResolver $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r5 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mReceivers>;

        $r4 = virtualinvoke $r5.<com.android.server.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.ContentResolver,android.content.Intent,java.lang.String,int)>(null, $r1, $r2, $i0);

        exitmonitor $r3;

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List queryIntentServices(android.content.Intent, java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.Intent $r1;
        java.lang.String $r2;
        int $i0;
        java.util.ArrayList $r3;
        android.content.pm.ResolveInfo $r4;
        android.content.ComponentName $r5;
        android.content.pm.ServiceInfo $r6;
        java.util.HashMap $r7;
        com.android.server.PackageManagerService$ServiceIntentResolver $r8;
        java.util.List $r9;
        java.lang.Throwable $r10;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r5 = virtualinvoke $r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r5 == null goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(1);

        $r6 = virtualinvoke $r0.<com.android.server.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>($r5, $i0);

        if $r6 == null goto label1;

        $r4 = new android.content.pm.ResolveInfo;

        specialinvoke $r4.<android.content.pm.ResolveInfo: void <init>()>();

        $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo> = $r6;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return $r3;

     label2:
        $r7 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r7;

     label3:
        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ServiceIntentResolver mServices>;

        $r9 = virtualinvoke $r8.<com.android.server.PackageManagerService$ServiceIntentResolver: java.util.List queryIntent(android.content.ContentResolver,android.content.Intent,java.lang.String,int)>(null, $r1, $r2, $i0);

        exitmonitor $r7;

     label4:
        return $r9;

     label5:
        $r10 := @caughtexception;

        exitmonitor $r7;

     label6:
        throw $r10;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List queryPermissionsByGroup(java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1, $r12;
        int $i0;
        java.util.ArrayList $r2;
        java.util.HashMap $r3, $r5;
        com.android.server.PackageManagerService$Settings $r4;
        java.util.Collection $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        com.android.server.PackageManagerService$BasePermission $r9;
        android.content.pm.PackageParser$Permission $r10;
        android.content.pm.PermissionInfo $r11;
        java.lang.Throwable $r13;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label01:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(10);

        $r4 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r5 = $r4.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.android.server.PackageManagerService$BasePermission) $r8;

        if $r1 != null goto label05;

        $r10 = $r9.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r11 = $r10.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r12 = $r11.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r12 != null goto label02;

        $r10 = $r9.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r11 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission,int)>($r10, $i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label02;

     label03:
        $r13 := @caughtexception;

        exitmonitor $r3;

     label04:
        throw $r13;

     label05:
        $r10 = $r9.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r11 = $r10.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r12 = $r11.<android.content.pm.PermissionInfo: java.lang.String group>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label02;

        $r10 = $r9.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r11 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission,int)>($r10, $i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label02;

     label06:
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label08;

        exitmonitor $r3;

     label07:
        return $r2;

     label08:
        $r5 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label11;

     label09:
        exitmonitor $r3;

     label10:
        return $r2;

     label11:
        $r2 = null;

        goto label09;

        catch java.lang.Throwable from label01 to label04 with label03;
        catch java.lang.Throwable from label05 to label07 with label03;
        catch java.lang.Throwable from label08 to label10 with label03;
    }

    public void querySyncProviders(java.util.List, java.util.List)
    {
        com.android.server.PackageManagerService $r0;
        java.util.List $r1, $r2;
        java.util.HashMap $r3, $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.Map$Entry $r8;
        android.content.pm.PackageParser$Provider $r9;
        android.content.pm.ProviderInfo $r10;
        android.content.pm.ApplicationInfo $r11;
        int $i0;
        java.lang.Throwable $r12;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (android.content.pm.PackageParser$Provider) $r7;

        $z0 = $r9.<android.content.pm.PackageParser$Provider: boolean syncable>;

        if $z0 == 0 goto label2;

        $z0 = $r0.<com.android.server.PackageManagerService: boolean mSafeMode>;

        if $z0 == 0 goto label3;

        $r10 = $r9.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r11 = $r10.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label2;

     label3:
        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r10 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int)>($r9, 0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label2;

     label4:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r12;

     label6:
        exitmonitor $r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    void readPermission(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.PackageManagerService $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2, $r7;
        com.android.server.PackageManagerService$Settings $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        com.android.server.PackageManagerService$BasePermission $r6;
        int $i0, $i1, $i2;
        boolean $z0;
        int[] $r8;
        java.lang.StringBuilder $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String intern()>();

        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = $r3.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (com.android.server.PackageManagerService$BasePermission) $r5;

        if $r6 != null goto label1;

        $r6 = new com.android.server.PackageManagerService$BasePermission;

        specialinvoke $r6.<com.android.server.PackageManagerService$BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r2, null, 1);

        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = $r3.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

     label1:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label2:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label6;

        if $i1 != 3 goto label3;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label7;

     label3:
        if $i1 == 3 goto label2;

        if $i1 == 4 goto label2;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "group";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "gid");

        if $r2 == null goto label5;

        $i1 = staticinvoke <android.os.Process: int getGidForName(java.lang.String)>($r2);

        $r8 = $r6.<com.android.server.PackageManagerService$BasePermission: int[] gids>;

        $r8 = staticinvoke <com.android.server.PackageManagerService: int[] appendInt(int[],int)>($r8, $i1);

        $r6.<com.android.server.PackageManagerService$BasePermission: int[] gids> = $r8;

     label4:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label2;

     label5:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<group> without gid at ");

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r2);

        goto label4;

     label6:
        return;

     label7:
        return;
    }

    void readPermissions()
    {
        com.android.server.PackageManagerService $r0;
        java.io.File $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.io.File[] $r5;

        $r0 := @this: com.android.server.PackageManagerService;

        $r2 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "etc/permissions");

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No directory ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skipping");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r4);

        return;

     label2:
        $z0 = virtualinvoke $r2.<java.io.File: boolean canRead()>();

        if $z0 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Directory ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r4);

        return;

     label3:
        $r5 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r5;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label9;

        $r1 = $r5[$i1];

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("etc/permissions/platform.xml");

        if $z0 == 0 goto label6;

     label5:
        $i1 = $i1 + 1;

        goto label4;

     label6:
        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 != 0 goto label7;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-xml file ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" directory, ignoring");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r4);

        goto label5;

     label7:
        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        if $z0 != 0 goto label8;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permissions library file ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r4);

        goto label5;

     label8:
        specialinvoke $r0.<com.android.server.PackageManagerService: void readPermissionsFromXml(java.io.File)>($r1);

        goto label5;

     label9:
        $r2 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "etc/permissions/platform.xml");

        specialinvoke $r0.<com.android.server.PackageManagerService: void readPermissionsFromXml(java.io.File)>($r2);

        return;
    }

    public void removePackageFromPreferred(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        android.content.Context $r2;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r5;
        android.content.pm.PackageParser$Package $r6;
        int $i0;
        com.android.server.PackageManagerService$PackageSetting $r7;
        com.android.server.PackageManagerService$Settings $r8;
        java.util.ArrayList $r9;
        java.lang.Throwable $r10;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

        $r3 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r3;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.content.pm.PackageParser$Package) $r5;

        if $r6 != null goto label3;

        exitmonitor $r3;

     label2:
        return;

     label3:
        $i0 = $r6.<android.content.pm.PackageParser$Package: int mPreferredOrder>;

        if $i0 <= 0 goto label4;

        $r5 = $r6.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r7 = (com.android.server.PackageManagerService$PackageSetting) $r5;

        if $r7 == null goto label4;

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r9 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.ArrayList access$900(com.android.server.PackageManagerService$Settings)>($r8);

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>($r7);

        $r6.<android.content.pm.PackageParser$Package: int mPreferredOrder> = 0;

        specialinvoke $r0.<com.android.server.PackageManagerService: void updatePreferredIndicesLP()>();

        $r8 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r8.<com.android.server.PackageManagerService$Settings: void writeLP()>();

     label4:
        exitmonitor $r3;

     label5:
        return;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void removePackageLI(android.content.pm.PackageParser$Package, boolean)
    {
        com.android.server.PackageManagerService $r0;
        android.content.pm.PackageParser$Package $r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r17;
        android.content.pm.ApplicationInfo $r3;
        java.lang.String $r4, $r15;
        java.util.HashMap $r5, $r8;
        int $i0, $i1, $i2, $i3;
        com.android.server.PackageManagerService$Settings $r6;
        java.util.ArrayList $r7;
        java.lang.Object $r9;
        com.android.server.PackageManagerService$PackageSetting $r10;
        com.android.server.PackageManagerService$SharedUserSetting $r11;
        android.content.pm.PackageParser$Provider $r12;
        android.content.ComponentName $r13;
        android.content.pm.ProviderInfo $r14;
        java.lang.String[] $r16;
        java.lang.Throwable $r18;
        android.content.pm.PackageParser$Service $r19;
        com.android.server.PackageManagerService$ServiceIntentResolver $r20;
        android.content.pm.ServiceInfo $r21;
        android.content.pm.PackageParser$Activity $r22;
        com.android.server.PackageManagerService$ActivityIntentResolver $r23;
        android.content.pm.ActivityInfo $r24;
        android.content.pm.PackageParser$Permission $r25, $r28;
        android.content.pm.PermissionInfo $r26;
        com.android.server.PackageManagerService$BasePermission $r27;
        android.content.pm.PackageParser$Instrumentation $r29;
        android.content.pm.InstrumentationInfo $r30;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label01;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing package ");

        $r3 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = $r3.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r4);

     label01:
        $r5 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r5;

     label02:
        $i0 = $r1.<android.content.pm.PackageParser$Package: int mPreferredOrder>;

        if $i0 <= 0 goto label03;

        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r7 = staticinvoke <com.android.server.PackageManagerService$Settings: java.util.ArrayList access$900(com.android.server.PackageManagerService$Settings)>($r6);

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r1.<android.content.pm.PackageParser$Package: int mPreferredOrder> = 0;

        specialinvoke $r0.<com.android.server.PackageManagerService: void updatePreferredIndicesLP()>();

     label03:
        $r4 = $r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r0.<com.android.server.PackageManagerService: boolean clearPackagePreferredActivitiesLP(java.lang.String)>($r4);

        $r8 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        $r3 = $r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = $r3.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        $r4 = $r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        if $r4 == null goto label04;

        $r8 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mAppDirs>;

        $r4 = $r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

     label04:
        $r9 = $r1.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r10 = (com.android.server.PackageManagerService$PackageSetting) $r9;

        if $r10 == null goto label05;

        $r11 = $r10.<com.android.server.PackageManagerService$PackageSetting: com.android.server.PackageManagerService$SharedUserSetting sharedUser>;

        if $r11 == null goto label05;

     label05:
        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r2 = null;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label16;

        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r12 = (android.content.pm.PackageParser$Provider) $r9;

        $r8 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProvidersByComponent>;

        $r13 = new android.content.ComponentName;

        $r14 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r4 = $r14.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r14 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r15 = $r14.<android.content.pm.PackageItemInfo: java.lang.String name>;

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r4, $r15);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r13);

        $r14 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r4 = $r14.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r4 != null goto label08;

     label07:
        $i1 = $i1 + 1;

        goto label06;

     label08:
        $r14 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r4 = $r14.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r16 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i2 = 0;

     label09:
        $i3 = lengthof $r16;

        if $i2 >= $i3 goto label11;

        $r8 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders>;

        $r4 = $r16[$i2];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        if $r9 != $r12 goto label10;

        $r8 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders>;

        $r4 = $r16[$i2];

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        if $z0 == 0 goto label10;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unregistered content provider: ");

        $r4 = $r16[$i2];

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", className = ");

        $r14 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r4 = $r14.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isSyncable = ");

        $r14 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z1 = $r14.<android.content.pm.ProviderInfo: boolean isSyncable>;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r4 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r4);

     label10:
        $i2 = $i2 + 1;

        goto label09;

     label11:
        if $z0 == 0 goto label07;

        if $r2 != null goto label15;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(256);

     label12:
        $r14 = $r12.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r4 = $r14.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label07;

     label13:
        $r18 := @caughtexception;

        exitmonitor $r5;

     label14:
        throw $r18;

     label15:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label12;

     label16:
        if $r2 == null goto label17;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Providers: ");

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r4);

     label17:
        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r2 = null;

        $i1 = 0;

     label18:
        if $i1 >= $i0 goto label22;

        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r19 = (android.content.pm.PackageParser$Service) $r9;

        $r20 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ServiceIntentResolver mServices>;

        virtualinvoke $r20.<com.android.server.PackageManagerService$ServiceIntentResolver: void removeService(android.content.pm.PackageParser$Service)>($r19);

        if $z0 == 0 goto label20;

        if $r2 != null goto label21;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(256);

     label19:
        $r21 = $r19.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r4 = $r21.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label20:
        $i1 = $i1 + 1;

        goto label18;

     label21:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label19;

     label22:
        if $r2 == null goto label23;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Services: ");

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r4);

     label23:
        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r2 = null;

        $i1 = 0;

     label24:
        if $i1 >= $i0 goto label28;

        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r22 = (android.content.pm.PackageParser$Activity) $r9;

        $r23 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mReceivers>;

        virtualinvoke $r23.<com.android.server.PackageManagerService$ActivityIntentResolver: void removeActivity(android.content.pm.PackageParser$Activity,java.lang.String)>($r22, "receiver");

        if $z0 == 0 goto label26;

        if $r2 != null goto label27;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(256);

     label25:
        $r24 = $r22.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r4 = $r24.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label26:
        $i1 = $i1 + 1;

        goto label24;

     label27:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label25;

     label28:
        if $r2 == null goto label29;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Receivers: ");

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r4);

     label29:
        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r2 = null;

        $i1 = 0;

     label30:
        if $i1 >= $i0 goto label34;

        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r22 = (android.content.pm.PackageParser$Activity) $r9;

        $r23 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$ActivityIntentResolver mActivities>;

        virtualinvoke $r23.<com.android.server.PackageManagerService$ActivityIntentResolver: void removeActivity(android.content.pm.PackageParser$Activity,java.lang.String)>($r22, "activity");

        if $z0 == 0 goto label32;

        if $r2 != null goto label33;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(256);

     label31:
        $r24 = $r22.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r4 = $r24.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label32:
        $i1 = $i1 + 1;

        goto label30;

     label33:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label31;

     label34:
        if $r2 == null goto label35;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Activities: ");

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r4);

     label35:
        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r2 = null;

        $i1 = 0;

     label36:
        if $i1 >= $i0 goto label44;

        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r25 = (android.content.pm.PackageParser$Permission) $r9;

        $z1 = 0;

        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r8 = $r6.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r26 = $r25.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r4 = $r26.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r27 = (com.android.server.PackageManagerService$BasePermission) $r9;

        if $r27 != null goto label37;

        $z1 = 1;

        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r8 = $r6.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissionTrees>;

        $r26 = $r25.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r4 = $r26.<android.content.pm.PackageItemInfo: java.lang.String name>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r27 = (com.android.server.PackageManagerService$BasePermission) $r9;

     label37:
        if $r27 == null goto label40;

        $r28 = $r27.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r28 != $r25 goto label40;

        $i2 = $r27.<com.android.server.PackageManagerService$BasePermission: int type>;

        if $i2 == 1 goto label42;

        if $z1 == 0 goto label41;

        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r8 = $r6.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissionTrees>;

        $r26 = $r25.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r4 = $r26.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

     label38:
        if $z0 == 0 goto label40;

        if $r2 != null goto label43;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(256);

     label39:
        $r26 = $r25.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r4 = $r26.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label40:
        $i1 = $i1 + 1;

        goto label36;

     label41:
        $r6 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r8 = $r6.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r26 = $r25.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r4 = $r26.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        goto label38;

     label42:
        $r27.<com.android.server.PackageManagerService$BasePermission: android.content.pm.PackageParser$Permission perm> = null;

        goto label38;

     label43:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label39;

     label44:
        if $r2 == null goto label45;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Permissions: ");

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r4);

     label45:
        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r2 = null;

        $i1 = 0;

     label46:
        if $i1 >= $i0 goto label50;

        $r7 = $r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r29 = (android.content.pm.PackageParser$Instrumentation) $r9;

        $r8 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r13 = $r29.<android.content.pm.PackageParser$Component: android.content.ComponentName component>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r13);

        if $z0 == 0 goto label48;

        if $r2 != null goto label49;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(256);

     label47:
        $r30 = $r29.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r4 = $r30.<android.content.pm.PackageItemInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label48:
        $i1 = $i1 + 1;

        goto label46;

     label49:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label47;

     label50:
        if $r2 == null goto label51;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Instrumentation: ");

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r4);

     label51:
        exitmonitor $r5;

     label52:
        return;

        catch java.lang.Throwable from label02 to label14 with label13;
        catch java.lang.Throwable from label15 to label52 with label13;
    }

    public void removePermission(java.lang.String)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        java.util.HashMap $r2, $r4;
        com.android.server.PackageManagerService$Settings $r3;
        java.lang.Object $r5;
        com.android.server.PackageManagerService$BasePermission $r6;
        int $i0;
        java.lang.SecurityException $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        specialinvoke $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$BasePermission checkPermissionTreeLP(java.lang.String)>($r1);

        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = $r3.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.android.server.PackageManagerService$BasePermission) $r5;

        if $r6 == null goto label5;

        $i0 = $r6.<com.android.server.PackageManagerService$BasePermission: int type>;

        if $i0 == 2 goto label4;

        $r7 = new java.lang.SecurityException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not allowed to modify non-dynamic permission ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label2:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label3:
        throw $r9;

     label4:
        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r4 = $r3.<com.android.server.PackageManagerService$Settings: java.util.HashMap mPermissions>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r3 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        virtualinvoke $r3.<com.android.server.PackageManagerService$Settings: void writeLP()>();

     label5:
        exitmonitor $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label6 with label2;
    }

    public android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.util.HashMap $r2, $r4;
        android.content.pm.ProviderInfo $r3;
        java.lang.Object $r5;
        android.content.pm.PackageParser$Provider $r6;
        com.android.server.PackageManagerService$Settings $r7;
        boolean $z0;
        android.content.pm.ApplicationInfo $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.server.PackageManagerService: java.util.HashMap mProviders>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.content.pm.PackageParser$Provider) $r5;

        if $r6 == null goto label5;

        $r7 = $r0.<com.android.server.PackageManagerService: com.android.server.PackageManagerService$Settings mSettings>;

        $r3 = $r6.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z0 = virtualinvoke $r7.<com.android.server.PackageManagerService$Settings: boolean isEnabledLP(android.content.pm.ComponentInfo,int)>($r3, $i0);

        if $z0 == 0 goto label5;

        $z0 = $r0.<com.android.server.PackageManagerService: boolean mSafeMode>;

        if $z0 == 0 goto label2;

        $r3 = $r6.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r8 = $r3.<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label5;

     label2:
        $r3 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int)>($r6, $i0);

     label3:
        exitmonitor $r2;

     label4:
        return $r3;

     label5:
        $r3 = null;

        goto label3;

     label6:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public android.content.pm.ResolveInfo resolveIntent(android.content.Intent, java.lang.String, int)
    {
        android.content.Intent $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        com.android.server.PackageManagerService $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        android.content.pm.ResolveInfo $r5, $r6;
        boolean $z0, $z1;

        $r2 := @this: com.android.server.PackageManagerService;

        $r0 := @parameter0: android.content.Intent;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r2.<com.android.server.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int)>($r0, $r1, $i0);

        if $r3 == null goto label5;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 != 1 goto label1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        return $r5;

     label1:
        if $i1 <= 1 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(1);

        $r6 = (android.content.pm.ResolveInfo) $r4;

        $i1 = $r5.<android.content.pm.ResolveInfo: int priority>;

        $i2 = $r6.<android.content.pm.ResolveInfo: int priority>;

        if $i1 != $i2 goto label2;

        $i1 = $r5.<android.content.pm.ResolveInfo: int preferredOrder>;

        $i2 = $r6.<android.content.pm.ResolveInfo: int preferredOrder>;

        if $i1 != $i2 goto label2;

        $z0 = $r5.<android.content.pm.ResolveInfo: boolean isDefault>;

        $z1 = $r6.<android.content.pm.ResolveInfo: boolean isDefault>;

        if $z0 == $z1 goto label3;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        return $r5;

     label3:
        $i1 = $r5.<android.content.pm.ResolveInfo: int priority>;

        $r5 = virtualinvoke $r2.<com.android.server.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int)>($r0, $r1, $i0, $r3, $i1);

        if $r5 == null goto label4;

        return $r5;

     label4:
        $r5 = $r2.<com.android.server.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        return $r5;

     label5:
        return null;
    }

    public android.content.pm.ResolveInfo resolveService(android.content.Intent, java.lang.String, int)
    {
        android.content.Intent $r0;
        java.lang.String $r1;
        int $i0;
        com.android.server.PackageManagerService $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        android.content.pm.ResolveInfo $r5;

        $r2 := @this: com.android.server.PackageManagerService;

        $r0 := @parameter0: android.content.Intent;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r2.<com.android.server.PackageManagerService: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int)>($r0, $r1, $i0);

        if $r3 == null goto label1;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 < 1 goto label1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        return $r5;

     label1:
        return null;
    }

    public void setApplicationEnabledSetting(java.lang.String, int, int)
    {
        com.android.server.PackageManagerService $r0;
        java.lang.String $r1;
        int $i0, $i1;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<com.android.server.PackageManagerService: void setEnabledSetting(java.lang.String,java.lang.String,int,int)>($r1, null, $i0, $i1);

        return;
    }

    public void setComponentEnabledSetting(android.content.ComponentName, int, int)
    {
        com.android.server.PackageManagerService $r0;
        android.content.ComponentName $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;

        $r0 := @this: com.android.server.PackageManagerService;

        $r1 := @parameter0: android.content.ComponentName;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String getClassName()>();

        specialinvoke $r0.<com.android.server.PackageManagerService: void setEnabledSetting(java.lang.String,java.lang.String,int,int)>($r2, $r3, $i0, $i1);

        return;
    }

    public void systemReady()
    {
        com.android.server.PackageManagerService $r0;

        $r0 := @this: com.android.server.PackageManagerService;

        $r0.<com.android.server.PackageManagerService: boolean mSystemReady> = 1;

        return;
    }
}
