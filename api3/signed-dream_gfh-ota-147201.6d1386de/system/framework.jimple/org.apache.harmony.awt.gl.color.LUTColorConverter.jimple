public class org.apache.harmony.awt.gl.color.LUTColorConverter extends java.lang.Object
{
    public static java.awt.color.ColorSpace LINEAR_GRAY_CS;
    public static java.awt.color.ColorSpace LINEAR_RGB_CS;
    private static byte[] from16lRGBtosRGB_LUT;
    private static byte[] from8lRGBtosRGB_LUT;
    private static short[] fromsRGBto16lRGB_LUT;
    private static byte[] fromsRGBto8lRGB_LUT;
    private static byte[][] fromsRGBto8sRGB_LUTs;
    public static java.awt.color.ColorSpace sRGB_CS;

    public void <init>()
    {
        org.apache.harmony.awt.gl.color.LUTColorConverter $r0;

        $r0 := @this: org.apache.harmony.awt.gl.color.LUTColorConverter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static byte[] createLUT(int)
    {
        int $i0, $i1, $i2;
        byte[] $r0;
        float $f0;
        byte $b3;

        $i0 := @parameter0: int;

        $i0 = 1 << $i0;

        $r0 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $i0 - 1;

        $f0 = (float) $i2;

        $f0 = 255.0F / $f0;

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

        $b3 = (byte) $i2;

        $r0[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static byte[] getFrom16lRGBtosRGB_LUT()
    {
        byte[] $r0;
        int $i0, $i2;
        float $f0;
        byte $b1;
        double $d0;

        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] from16lRGBtosRGB_LUT>;

        if $r0 != null goto label4;

        $r0 = newarray (byte)[65536];

        <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] from16lRGBtosRGB_LUT> = $r0;

        $i0 = 0;

     label1:
        if $i0 >= 65536 goto label4;

        $f0 = (float) $i0;

        $f0 = $f0 / 65535.0F;

        $b1 = $f0 cmpg 0.04045F;

        if $b1 > 0 goto label3;

        $f0 = $f0 / 12.92F;

     label2:
        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] from16lRGBtosRGB_LUT>;

        $f0 = 255.0F * $f0;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $b1 = (byte) $i2;

        $r0[$i0] = $b1;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $d0 = (double) $f0;

        $d0 = $d0 + 0.055;

        $d0 = $d0 / 1.055;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.4);

        $f0 = (float) $d0;

        goto label2;

     label4:
        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] from16lRGBtosRGB_LUT>;

        return $r0;
    }

    public static byte[] getFrom8lRGBtosRGB_LUT()
    {
        byte[] $r0;
        int $i0, $i2;
        float $f0;
        byte $b1;
        double $d0;

        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] from8lRGBtosRGB_LUT>;

        if $r0 != null goto label4;

        $r0 = newarray (byte)[256];

        <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] from8lRGBtosRGB_LUT> = $r0;

        $i0 = 0;

     label1:
        if $i0 >= 256 goto label4;

        $f0 = (float) $i0;

        $f0 = $f0 / 255.0F;

        $b1 = $f0 cmpg 0.04045F;

        if $b1 > 0 goto label3;

        $f0 = $f0 / 12.92F;

     label2:
        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] from8lRGBtosRGB_LUT>;

        $f0 = $f0 * 255.0F;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $b1 = (byte) $i2;

        $r0[$i0] = $b1;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $d0 = (double) $f0;

        $d0 = $d0 + 0.055;

        $d0 = $d0 / 1.055;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.4);

        $f0 = (float) $d0;

        goto label2;

     label4:
        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] from8lRGBtosRGB_LUT>;

        return $r0;
    }

    public static short[] getFromsRGBto16lRGB_LUT()
    {
        short[] $r0;
        int $i0, $i2;
        float $f0;
        byte $b1;
        short $s3;
        double $d0;

        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: short[] fromsRGBto16lRGB_LUT>;

        if $r0 != null goto label4;

        $r0 = newarray (short)[256];

        <org.apache.harmony.awt.gl.color.LUTColorConverter: short[] fromsRGBto16lRGB_LUT> = $r0;

        $i0 = 0;

     label1:
        if $i0 >= 256 goto label4;

        $f0 = (float) $i0;

        $f0 = $f0 / 255.0F;

        $b1 = $f0 cmpg 0.0031308F;

        if $b1 > 0 goto label3;

        $f0 = 12.92F * $f0;

     label2:
        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: short[] fromsRGBto16lRGB_LUT>;

        $f0 = 65535.0F * $f0;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $s3 = (short) $i2;

        $r0[$i0] = $s3;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.4166666666666667);

        $f0 = (float) $d0;

        $f0 = $f0 * 1.055F;

        $f0 = $f0 - 0.055F;

        goto label2;

     label4:
        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: short[] fromsRGBto16lRGB_LUT>;

        return $r0;
    }

    public static byte[] getFromsRGBto8lRGB_LUT()
    {
        byte[] $r0;
        int $i0, $i2;
        float $f0;
        byte $b1;
        double $d0;

        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] fromsRGBto8lRGB_LUT>;

        if $r0 != null goto label4;

        $r0 = newarray (byte)[256];

        <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] fromsRGBto8lRGB_LUT> = $r0;

        $i0 = 0;

     label1:
        if $i0 >= 256 goto label4;

        $f0 = (float) $i0;

        $f0 = $f0 / 255.0F;

        $b1 = $f0 cmpg 0.0031308F;

        if $b1 > 0 goto label3;

        $f0 = 12.92F * $f0;

     label2:
        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] fromsRGBto8lRGB_LUT>;

        $f0 = $f0 * 255.0F;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $b1 = (byte) $i2;

        $r0[$i0] = $b1;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.4166666666666667);

        $f0 = (float) $d0;

        $f0 = $f0 * 1.055F;

        $f0 = $f0 - 0.055F;

        goto label2;

     label4:
        $r0 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] fromsRGBto8lRGB_LUT>;

        return $r0;
    }

    public static byte[] getsRGBLUT(int)
    {
        int $i0, $i1;
        byte[] $r0;
        byte[][] $r1;

        $i0 := @parameter0: int;

        if $i0 >= 1 goto label1;

        return null;

     label1:
        $i1 = $i0 - 1;

        $r1 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[][] fromsRGBto8sRGB_LUTs>;

        if $r1 != null goto label2;

        $r1 = newarray (byte[])[16];

        <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[][] fromsRGBto8sRGB_LUTs> = $r1;

     label2:
        $r1 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[][] fromsRGBto8sRGB_LUTs>;

        $r0 = $r1[$i1];

        if $r0 != null goto label3;

        $r1 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[][] fromsRGBto8sRGB_LUTs>;

        $r0 = staticinvoke <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] createLUT(int)>($i0);

        $r1[$i1] = $r0;

     label3:
        $r1 = <org.apache.harmony.awt.gl.color.LUTColorConverter: byte[][] fromsRGBto8sRGB_LUTs>;

        $r0 = $r1[$i1];

        return $r0;
    }

    public static boolean is_LINEAR_GRAY_CS(java.awt.color.ColorSpace)
    {
        java.awt.color.ColorSpace $r0, $r1;

        $r0 := @parameter0: java.awt.color.ColorSpace;

        $r1 = <org.apache.harmony.awt.gl.color.LUTColorConverter: java.awt.color.ColorSpace LINEAR_GRAY_CS>;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean is_LINEAR_RGB_CS(java.awt.color.ColorSpace)
    {
        java.awt.color.ColorSpace $r0, $r1;

        $r0 := @parameter0: java.awt.color.ColorSpace;

        $r1 = <org.apache.harmony.awt.gl.color.LUTColorConverter: java.awt.color.ColorSpace LINEAR_RGB_CS>;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean is_sRGB_CS(java.awt.color.ColorSpace)
    {
        java.awt.color.ColorSpace $r0, $r1;

        $r0 := @parameter0: java.awt.color.ColorSpace;

        $r1 = <org.apache.harmony.awt.gl.color.LUTColorConverter: java.awt.color.ColorSpace sRGB_CS>;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
