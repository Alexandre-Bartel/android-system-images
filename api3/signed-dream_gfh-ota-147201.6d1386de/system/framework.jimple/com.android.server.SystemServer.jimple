public class com.android.server.SystemServer extends java.lang.Object
{
    public static final int FACTORY_TEST_HIGH_LEVEL;
    public static final int FACTORY_TEST_LOW_LEVEL;
    public static final int FACTORY_TEST_OFF;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.server.SystemServer $r0;

        $r0 := @this: com.android.server.SystemServer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native void init1(java.lang.String[]);

    public static final void init2()
    {
        com.android.server.ServerThread $r0;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SystemServer", "Entered the Android system server!");

        $r0 = new com.android.server.ServerThread;

        specialinvoke $r0.<com.android.server.ServerThread: void <init>()>();

        virtualinvoke $r0.<java.lang.Thread: void setName(java.lang.String)>("android.server.ServerThread");

        virtualinvoke $r0.<java.lang.Thread: void start()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] $r0;
        dalvik.system.VMRuntime $r1;

        $r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r1.<dalvik.system.VMRuntime: float setTargetHeapUtilization(float)>(0.8F);

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("android_servers");

        staticinvoke <com.android.server.SystemServer: void init1(java.lang.String[])>($r0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.SystemServer: java.lang.String TAG> = "SystemServer";

        <com.android.server.SystemServer: int FACTORY_TEST_OFF> = 0;

        <com.android.server.SystemServer: int FACTORY_TEST_LOW_LEVEL> = 1;

        <com.android.server.SystemServer: int FACTORY_TEST_HIGH_LEVEL> = 2;

        return;
    }
}
