public final class com.android.internal.telephony.gsm.GsmSimCard extends android.os.Handler implements com.android.internal.telephony.SimCard
{
    private static final boolean DBG;
    static final int EVENT_CHANGE_FACILITY_FDN_DONE;
    static final int EVENT_CHANGE_FACILITY_LOCK_DONE;
    static final int EVENT_CHANGE_SIM_PASSWORD_DONE;
    static final int EVENT_GET_SIM_STATUS_DONE;
    static final int EVENT_PINPUK_DONE;
    static final int EVENT_QUERY_FACILITY_FDN_DONE;
    static final int EVENT_QUERY_FACILITY_LOCK_DONE;
    static final int EVENT_RADIO_OFF_OR_NOT_AVAILABLE;
    static final int EVENT_REPOLL_STATUS_DONE;
    static final int EVENT_SIM_LOCKED_OR_ABSENT;
    static final int EVENT_SIM_READY;
    static final java.lang.String LOG_TAG;
    static final int NOTIFICATION_ID_SIM_STATUS;
    private android.os.RegistrantList absentRegistrants;
    private boolean mDesiredFdnEnabled;
    private boolean mDesiredPinLocked;
    private boolean mSimFdnEnabled;
    private boolean mSimPinLocked;
    private android.os.RegistrantList networkLockedRegistrants;
    private com.android.internal.telephony.gsm.GSMPhone phone;
    private android.os.RegistrantList pinLockedRegistrants;
    private com.android.internal.telephony.gsm.CommandsInterface$SimStatus status;

    void <init>(com.android.internal.telephony.gsm.GSMPhone)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        com.android.internal.telephony.gsm.GSMPhone $r1;
        android.os.RegistrantList $r2;
        com.android.internal.telephony.gsm.CommandsInterface $r3;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: com.android.internal.telephony.gsm.GSMPhone;

        specialinvoke $r0.<android.os.Handler: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.CommandsInterface$SimStatus status> = null;

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimPinLocked> = 1;

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimFdnEnabled> = 0;

        $r2 = new android.os.RegistrantList;

        specialinvoke $r2.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList absentRegistrants> = $r2;

        $r2 = new android.os.RegistrantList;

        specialinvoke $r2.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList pinLockedRegistrants> = $r2;

        $r2 = new android.os.RegistrantList;

        specialinvoke $r2.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList networkLockedRegistrants> = $r2;

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone> = $r1;

        $r3 = $r1.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        interfaceinvoke $r3.<com.android.internal.telephony.gsm.CommandsInterface: void registerForSIMLockedOrAbsent(android.os.Handler,int,java.lang.Object)>($r0, 1, null);

        $r3 = $r1.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        interfaceinvoke $r3.<com.android.internal.telephony.gsm.CommandsInterface: void registerForOffOrNotAvailable(android.os.Handler,int,java.lang.Object)>($r0, 3, null);

        $r3 = $r1.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        interfaceinvoke $r3.<com.android.internal.telephony.gsm.CommandsInterface: void registerForSIMReady(android.os.Handler,int,java.lang.Object)>($r0, 6, null);

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void updateStateProperty()>();

        return;
    }

    private void getSimStatusDone(android.os.AsyncResult)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        android.os.AsyncResult $r1;
        java.lang.Throwable $r2;
        java.lang.Object $r3;
        com.android.internal.telephony.gsm.CommandsInterface$SimStatus $r4;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: android.os.AsyncResult;

        $r2 = $r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r2 == null goto label1;

        $r2 = $r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GSM", "Error getting SIM status. RIL_REQUEST_GET_SIM_STATUS should never return an error", $r2);

        return;

     label1:
        $r3 = $r1.<android.os.AsyncResult: java.lang.Object result>;

        $r4 = (com.android.internal.telephony.gsm.CommandsInterface$SimStatus) $r3;

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void handleSimStatus(com.android.internal.telephony.gsm.CommandsInterface$SimStatus)>($r4);

        return;
    }

    private void handleSimStatus(com.android.internal.telephony.gsm.CommandsInterface$SimStatus)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        com.android.internal.telephony.gsm.CommandsInterface$SimStatus $r1;
        com.android.internal.telephony.SimCard$State $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        android.os.RegistrantList $r5;
        java.lang.String $r6;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: com.android.internal.telephony.gsm.CommandsInterface$SimStatus;

        $r2 = virtualinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.SimCard$State getState()>();

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.CommandsInterface$SimStatus status> = $r1;

        $r3 = virtualinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.SimCard$State getState()>();

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void updateStateProperty()>();

        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State PIN_REQUIRED>;

        if $r2 == $r4 goto label01;

        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State PIN_REQUIRED>;

        if $r3 == $r4 goto label02;

     label01:
        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State PUK_REQUIRED>;

        if $r2 == $r4 goto label07;

        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State PUK_REQUIRED>;

        if $r3 != $r4 goto label07;

     label02:
        $z0 = 1;

     label03:
        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State ABSENT>;

        if $r2 == $r4 goto label08;

        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State ABSENT>;

        if $r3 != $r4 goto label08;

        $z1 = 1;

     label04:
        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State NETWORK_LOCKED>;

        if $r2 == $r4 goto label09;

        $r2 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State NETWORK_LOCKED>;

        if $r3 != $r2 goto label09;

        $z2 = 1;

     label05:
        if $z0 == 0 goto label11;

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>("Notify SIM pin or puk locked.");

        $r5 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList pinLockedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void notifyRegistrants()>();

        $r2 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State PIN_REQUIRED>;

        if $r3 != $r2 goto label10;

        $r6 = "PIN";

     label06:
        virtualinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void broadcastSimStateChangedIntent(java.lang.String,java.lang.String)>("LOCKED", $r6);

        return;

     label07:
        $z0 = 0;

        goto label03;

     label08:
        $z1 = 0;

        goto label04;

     label09:
        $z2 = 0;

        goto label05;

     label10:
        $r6 = "PUK";

        goto label06;

     label11:
        if $z1 == 0 goto label12;

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>("Notify SIM missing.");

        $r5 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList absentRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void notifyRegistrants()>();

        virtualinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void broadcastSimStateChangedIntent(java.lang.String,java.lang.String)>("ABSENT", null);

        return;

     label12:
        if $z2 == 0 goto label13;

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>("Notify SIM network locked.");

        $r5 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList networkLockedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void notifyRegistrants()>();

        virtualinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void broadcastSimStateChangedIntent(java.lang.String,java.lang.String)>("LOCKED", "NETWORK");

        return;

     label13:
        return;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[GsmSimCard] ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GSM", $r1);

        return;
    }

    private void onQueryFacilityLock(android.os.AsyncResult)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        android.os.AsyncResult $r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object $r5;
        int[] $r6;
        int $i0;
        boolean $z0;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: android.os.AsyncResult;

        $r2 = $r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in querying facility lock:");

        $r2 = $r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r4);

        return;

     label1:
        $r5 = $r1.<android.os.AsyncResult: java.lang.Object result>;

        $r6 = (int[]) $r5;

        $r6 = (int[]) $r6;

        $i0 = lengthof $r6;

        if $i0 == 0 goto label4;

        $i0 = $r6[0];

        if $i0 == 0 goto label3;

        $z0 = 1;

     label2:
        $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimPinLocked> = $z0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Query facility lock : ");

        $z0 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimPinLocked>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r4);

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", "[GsmSimCard] Bogus facility lock response");

        return;
    }

    private void onQueryFdnEnabled(android.os.AsyncResult)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        android.os.AsyncResult $r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object $r5;
        int[] $r6;
        int $i0;
        boolean $z0;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: android.os.AsyncResult;

        $r2 = $r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in querying facility lock:");

        $r2 = $r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r4);

        return;

     label1:
        $r5 = $r1.<android.os.AsyncResult: java.lang.Object result>;

        $r6 = (int[]) $r5;

        $r6 = (int[]) $r6;

        $i0 = lengthof $r6;

        if $i0 == 0 goto label4;

        $i0 = $r6[0];

        if $i0 == 0 goto label3;

        $z0 = 1;

     label2:
        $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimFdnEnabled> = $z0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Query facility lock : ");

        $z0 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimFdnEnabled>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r4);

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", "[GsmSimCard] Bogus facility lock response");

        return;
    }

    private void updateStateProperty()
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        com.android.internal.telephony.gsm.GSMPhone $r1;
        com.android.internal.telephony.SimCard$State $r2;
        java.lang.String $r3;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r2 = virtualinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.SimCard$State getState()>();

        $r3 = virtualinvoke $r2.<java.lang.Enum: java.lang.String toString()>();

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GSMPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.sim.state", $r3);

        return;
    }

    public void broadcastSimStateChangedIntent(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1, $r2, $r5;
        android.content.Intent $r3;
        com.android.internal.telephony.gsm.GSMPhone $r4;
        java.lang.StringBuilder $r6;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SIM_STATE_CHANGED");

        $r4 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getPhoneName()>();

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("phoneName", $r5);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("ss", $r1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", $r2);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcasting intent SIM_STATE_CHANGED_ACTION ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r1);

        staticinvoke <android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String)>($r3, "android.permission.READ_PHONE_STATE");

        return;
    }

    public void changeSimFdnPassword(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1, $r2, $r5;
        android.os.Message $r3;
        java.lang.StringBuilder $r4;
        com.android.internal.telephony.gsm.GSMPhone $r6;
        com.android.internal.telephony.gsm.CommandsInterface $r7;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Message;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Change Pin2 old: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r5);

        $r6 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r7 = $r6.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r3 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(9, $r3);

        interfaceinvoke $r7.<com.android.internal.telephony.gsm.CommandsInterface: void changeSimPin2(java.lang.String,java.lang.String,android.os.Message)>($r1, $r2, $r3);

        return;
    }

    public void changeSimLockPassword(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1, $r2, $r5;
        android.os.Message $r3;
        java.lang.StringBuilder $r4;
        com.android.internal.telephony.gsm.GSMPhone $r6;
        com.android.internal.telephony.gsm.CommandsInterface $r7;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Message;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Change Pin1 old: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r5);

        $r6 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r7 = $r6.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r3 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(9, $r3);

        interfaceinvoke $r7.<com.android.internal.telephony.gsm.CommandsInterface: void changeSimPin(java.lang.String,java.lang.String,android.os.Message)>($r1, $r2, $r3);

        return;
    }

    public java.lang.String getServiceProviderName()
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1;
        com.android.internal.telephony.gsm.GSMPhone $r2;
        com.android.internal.telephony.gsm.SIMRecords $r3;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r2 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r3 = $r2.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SIMRecords mSIMRecords>;

        $r1 = virtualinvoke $r3.<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getServiceProviderName()>();

        return $r1;
    }

    public boolean getSimFdnEnabled()
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        boolean z0;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        z0 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimFdnEnabled>;

        return z0;
    }

    public boolean getSimLockEnabled()
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        boolean z0;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        z0 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimPinLocked>;

        return z0;
    }

    public com.android.internal.telephony.SimCard$State getState()
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        com.android.internal.telephony.gsm.CommandsInterface$SimStatus $r1;
        int[] $r2;
        com.android.internal.telephony.gsm.GSMPhone $r3;
        com.android.internal.telephony.gsm.CommandsInterface $r4;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r5;
        int $i0;
        com.android.internal.telephony.SimCard$State r6;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.CommandsInterface$SimStatus status>;

        if $r1 != null goto label05;

        $r2 = <com.android.internal.telephony.gsm.GsmSimCard$1: int[] $SwitchMap$com$android$internal$telephony$gsm$CommandsInterface$RadioState>;

        $r3 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r4 = $r3.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r5 = interfaceinvoke $r4.<com.android.internal.telephony.gsm.CommandsInterface: com.android.internal.telephony.gsm.CommandsInterface$RadioState getRadioState()>();

        $i0 = virtualinvoke $r5.<java.lang.Enum: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label04;
            default: goto label01;
        };

     label01:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", "GsmSimCard.getState(): case should never be reached");

        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State UNKNOWN>;

        return r6;

     label02:
        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State UNKNOWN>;

        return r6;

     label03:
        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State UNKNOWN>;

        return r6;

     label04:
        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State READY>;

        return r6;

     label05:
        $r2 = <com.android.internal.telephony.gsm.GsmSimCard$1: int[] $SwitchMap$com$android$internal$telephony$gsm$CommandsInterface$SimStatus>;

        $r1 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.CommandsInterface$SimStatus status>;

        $i0 = virtualinvoke $r1.<java.lang.Enum: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label12;
            default: goto label06;
        };

     label06:
        goto label01;

     label07:
        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State ABSENT>;

        return r6;

     label08:
        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State UNKNOWN>;

        return r6;

     label09:
        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State READY>;

        return r6;

     label10:
        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State PIN_REQUIRED>;

        return r6;

     label11:
        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State PUK_REQUIRED>;

        return r6;

     label12:
        r6 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State NETWORK_LOCKED>;

        return r6;
    }

    public void handleMessage(android.os.Message)
    {
        android.os.Message $r0;
        com.android.internal.telephony.gsm.GsmSimCard $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.android.internal.telephony.gsm.GSMPhone $r4;
        com.android.internal.telephony.gsm.CommandsInterface $r5;
        java.lang.Object $r6;
        android.os.AsyncResult $r7, $r8;
        java.lang.Throwable $r9;
        boolean $z0;

        $r1 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r0 := @parameter0: android.os.Message;

        $i0 = $r0.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label02;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label03;
            case 7: goto label08;
            case 8: goto label10;
            case 9: goto label16;
            case 10: goto label09;
            case 11: goto label13;
            default: goto label01;
        };

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[GsmSimCard] Unknown Event ");

        $i0 = $r0.<android.os.Message: int what>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", $r3);

        return;

     label02:
        $r1.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.CommandsInterface$SimStatus status> = null;

        specialinvoke $r1.<com.android.internal.telephony.gsm.GsmSimCard: void updateStateProperty()>();

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmSimCard: void broadcastSimStateChangedIntent(java.lang.String,java.lang.String)>("NOT_READY", null);

        return;

     label03:
        $r4 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r5 = $r4.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r0 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        interfaceinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface: void getSimStatus(android.os.Message)>($r0);

        $r4 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r5 = $r4.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r0 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(7);

        interfaceinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>("SC", "", 7, $r0);

        $r4 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r5 = $r4.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r0 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(10);

        interfaceinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>("FD", "", 7, $r0);

        return;

     label04:
        $r4 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r5 = $r4.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r0 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        interfaceinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface: void getSimStatus(android.os.Message)>($r0);

        $r4 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r5 = $r4.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r0 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(7);

        interfaceinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>("SC", "", 7, $r0);

        return;

     label05:
        $r6 = $r0.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.os.AsyncResult) $r6;

        specialinvoke $r1.<com.android.internal.telephony.gsm.GsmSimCard: void getSimStatusDone(android.os.AsyncResult)>($r7);

        return;

     label06:
        $r6 = $r0.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.os.AsyncResult) $r6;

        $r6 = $r7.<android.os.AsyncResult: java.lang.Object userObj>;

        $r0 = (android.os.Message) $r6;

        $r8 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r0);

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r8.<android.os.AsyncResult: java.lang.Throwable exception> = $r9;

        $r4 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r5 = $r4.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r6 = $r7.<android.os.AsyncResult: java.lang.Object userObj>;

        $r0 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(5, $r6);

        interfaceinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface: void getSimStatus(android.os.Message)>($r0);

        return;

     label07:
        $r6 = $r0.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.os.AsyncResult) $r6;

        specialinvoke $r1.<com.android.internal.telephony.gsm.GsmSimCard: void getSimStatusDone(android.os.AsyncResult)>($r7);

        $r6 = $r7.<android.os.AsyncResult: java.lang.Object userObj>;

        $r0 = (android.os.Message) $r6;

        virtualinvoke $r0.<android.os.Message: void sendToTarget()>();

        return;

     label08:
        $r6 = $r0.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.os.AsyncResult) $r6;

        specialinvoke $r1.<com.android.internal.telephony.gsm.GsmSimCard: void onQueryFacilityLock(android.os.AsyncResult)>($r7);

        return;

     label09:
        $r6 = $r0.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.os.AsyncResult) $r6;

        specialinvoke $r1.<com.android.internal.telephony.gsm.GsmSimCard: void onQueryFdnEnabled(android.os.AsyncResult)>($r7);

        return;

     label10:
        $r6 = $r0.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.os.AsyncResult) $r6;

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r9 != null goto label12;

        $z0 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: boolean mDesiredPinLocked>;

        $r1.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimPinLocked> = $z0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_CHANGE_FACILITY_LOCK_DONE: mSimPinLocked= ");

        $z0 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimPinLocked>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r3);

     label11:
        $r6 = $r7.<android.os.AsyncResult: java.lang.Object userObj>;

        $r0 = (android.os.Message) $r6;

        $r8 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r0);

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r8.<android.os.AsyncResult: java.lang.Throwable exception> = $r9;

        $r6 = $r7.<android.os.AsyncResult: java.lang.Object userObj>;

        $r0 = (android.os.Message) $r6;

        virtualinvoke $r0.<android.os.Message: void sendToTarget()>();

        return;

     label12:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error change facility lock with exception ");

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", $r3);

        goto label11;

     label13:
        $r6 = $r0.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.os.AsyncResult) $r6;

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r9 != null goto label15;

        $z0 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: boolean mDesiredFdnEnabled>;

        $r1.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimFdnEnabled> = $z0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_CHANGE_FACILITY_FDN_DONE: mSimFdnEnabled=");

        $z0 = $r1.<com.android.internal.telephony.gsm.GsmSimCard: boolean mSimFdnEnabled>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r3);

     label14:
        $r6 = $r7.<android.os.AsyncResult: java.lang.Object userObj>;

        $r0 = (android.os.Message) $r6;

        $r8 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r0);

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r8.<android.os.AsyncResult: java.lang.Throwable exception> = $r9;

        $r6 = $r7.<android.os.AsyncResult: java.lang.Object userObj>;

        $r0 = (android.os.Message) $r6;

        virtualinvoke $r0.<android.os.Message: void sendToTarget()>();

        return;

     label15:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error change facility fdn with exception ");

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", $r3);

        goto label14;

     label16:
        $r6 = $r0.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.os.AsyncResult) $r6;

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r9 == null goto label17;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in change sim password with exception");

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GSM", $r3);

     label17:
        $r6 = $r7.<android.os.AsyncResult: java.lang.Object userObj>;

        $r0 = (android.os.Message) $r6;

        $r8 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r0);

        $r9 = $r7.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r8.<android.os.AsyncResult: java.lang.Throwable exception> = $r9;

        $r6 = $r7.<android.os.AsyncResult: java.lang.Object userObj>;

        $r0 = (android.os.Message) $r6;

        virtualinvoke $r0.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void registerForAbsent(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        com.android.internal.telephony.SimCard$State $r4, $r5;
        android.os.RegistrantList $r6;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r6 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList absentRegistrants>;

        virtualinvoke $r6.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        $r5 = virtualinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.SimCard$State getState()>();

        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State ABSENT>;

        if $r5 != $r4 goto label1;

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant()>();

        return;

     label1:
        return;
    }

    public void registerForLocked(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        android.os.RegistrantList $r4;
        com.android.internal.telephony.SimCard$State $r5;
        boolean $z0;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r4 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList pinLockedRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        $r5 = virtualinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.SimCard$State getState()>();

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.SimCard$State: boolean isPinLocked()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant()>();

        return;

     label1:
        return;
    }

    public void registerForNetworkLocked(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        com.android.internal.telephony.SimCard$State $r4, $r5;
        android.os.RegistrantList $r6;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r6 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList networkLockedRegistrants>;

        virtualinvoke $r6.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        $r5 = virtualinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.SimCard$State getState()>();

        $r4 = <com.android.internal.telephony.SimCard$State: com.android.internal.telephony.SimCard$State NETWORK_LOCKED>;

        if $r5 != $r4 goto label1;

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant()>();

        return;

     label1:
        return;
    }

    public void setSimFdnEnabled(boolean, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        boolean $z0;
        java.lang.String $r1;
        android.os.Message $r2;
        com.android.internal.telephony.gsm.GSMPhone $r3;
        com.android.internal.telephony.gsm.CommandsInterface $r4;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.os.Message;

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mDesiredFdnEnabled> = $z0;

        $r3 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r4 = $r3.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r2 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(11, $r2);

        interfaceinvoke $r4.<com.android.internal.telephony.gsm.CommandsInterface: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>("FD", $z0, $r1, 15, $r2);

        return;
    }

    public void setSimLockEnabled(boolean, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        boolean $z0;
        java.lang.String $r1;
        android.os.Message $r2;
        com.android.internal.telephony.gsm.GSMPhone $r3;
        com.android.internal.telephony.gsm.CommandsInterface $r4;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.os.Message;

        $r0.<com.android.internal.telephony.gsm.GsmSimCard: boolean mDesiredPinLocked> = $z0;

        $r3 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r4 = $r3.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r2 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(8, $r2);

        interfaceinvoke $r4.<com.android.internal.telephony.gsm.CommandsInterface: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>("SC", $z0, $r1, 7, $r2);

        return;
    }

    public void supplyNetworkDepersonalization(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1, $r4;
        android.os.Message $r2;
        java.lang.StringBuilder $r3;
        com.android.internal.telephony.gsm.GSMPhone $r5;
        com.android.internal.telephony.gsm.CommandsInterface $r6;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Network Despersonalization: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.internal.telephony.gsm.GsmSimCard: void log(java.lang.String)>($r4);

        $r5 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r6 = $r5.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r2 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(4, $r2);

        interfaceinvoke $r6.<com.android.internal.telephony.gsm.CommandsInterface: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>($r1, $r2);

        return;
    }

    public void supplyPin(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1;
        android.os.Message $r2;
        com.android.internal.telephony.gsm.GSMPhone $r3;
        com.android.internal.telephony.gsm.CommandsInterface $r4;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        $r3 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r4 = $r3.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r2 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(4, $r2);

        interfaceinvoke $r4.<com.android.internal.telephony.gsm.CommandsInterface: void supplySimPin(java.lang.String,android.os.Message)>($r1, $r2);

        return;
    }

    public void supplyPin2(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1;
        android.os.Message $r2;
        com.android.internal.telephony.gsm.GSMPhone $r3;
        com.android.internal.telephony.gsm.CommandsInterface $r4;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Message;

        $r3 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r4 = $r3.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r2 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(4, $r2);

        interfaceinvoke $r4.<com.android.internal.telephony.gsm.CommandsInterface: void supplySimPin2(java.lang.String,android.os.Message)>($r1, $r2);

        return;
    }

    public void supplyPuk(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1, $r2;
        android.os.Message $r3;
        com.android.internal.telephony.gsm.GSMPhone $r4;
        com.android.internal.telephony.gsm.CommandsInterface $r5;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Message;

        $r4 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r5 = $r4.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r3 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(4, $r3);

        interfaceinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface: void supplySimPuk(java.lang.String,java.lang.String,android.os.Message)>($r1, $r2, $r3);

        return;
    }

    public void supplyPuk2(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1, $r2;
        android.os.Message $r3;
        com.android.internal.telephony.gsm.GSMPhone $r4;
        com.android.internal.telephony.gsm.CommandsInterface $r5;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.os.Message;

        $r4 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: com.android.internal.telephony.gsm.GSMPhone phone>;

        $r5 = $r4.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.CommandsInterface mCM>;

        $r3 = virtualinvoke $r0.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(4, $r3);

        interfaceinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface: void supplySimPuk2(java.lang.String,java.lang.String,android.os.Message)>($r1, $r2, $r3);

        return;
    }

    public void unregisterForAbsent(android.os.Handler)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList absentRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForLocked(android.os.Handler)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList pinLockedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void unregisterForNetworkLocked(android.os.Handler)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        android.os.Handler $r1;
        android.os.RegistrantList $r2;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: android.os.Handler;

        $r2 = $r0.<com.android.internal.telephony.gsm.GsmSimCard: android.os.RegistrantList networkLockedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>($r1);

        return;
    }

    public void updateImsiConfiguration(java.lang.String)
    {
        com.android.internal.telephony.gsm.GsmSimCard $r0;
        java.lang.String $r1;
        android.content.res.Configuration $r2;
        int $i0, $i2;
        char $c1;
        android.app.IActivityManager $r3;
        android.os.RemoteException $r4;

        $r0 := @this: com.android.internal.telephony.gsm.GsmSimCard;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 < 6 goto label4;

        $r2 = new android.content.res.Configuration;

        specialinvoke $r2.<android.content.res.Configuration: void <init>()>();

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i0 = $c1 - 48;

        $i0 = $i0 * 100;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        $i2 = $c1 - 48;

        $i2 = $i2 * 10;

        $i0 = $i0 + $i2;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(2);

        $i2 = $c1 - 48;

        $i0 = $i0 + $i2;

        $r2.<android.content.res.Configuration: int mcc> = $i0;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(3);

        $i0 = $c1 - 48;

        $i0 = $i0 * 100;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(4);

        $i2 = $c1 - 48;

        $i2 = $i2 * 10;

        $i0 = $i0 + $i2;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(5);

        $i2 = $c1 - 48;

        $i0 = $i0 + $i2;

        $r2.<android.content.res.Configuration: int mnc> = $i0;

     label1:
        $r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r3.<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>($r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.GsmSimCard: int NOTIFICATION_ID_SIM_STATUS> = 33456;

        <com.android.internal.telephony.gsm.GsmSimCard: java.lang.String LOG_TAG> = "GSM";

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_SIM_READY> = 6;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_SIM_LOCKED_OR_ABSENT> = 1;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_REPOLL_STATUS_DONE> = 5;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_RADIO_OFF_OR_NOT_AVAILABLE> = 3;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_QUERY_FACILITY_LOCK_DONE> = 7;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_QUERY_FACILITY_FDN_DONE> = 10;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_PINPUK_DONE> = 4;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_GET_SIM_STATUS_DONE> = 2;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_CHANGE_SIM_PASSWORD_DONE> = 9;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_CHANGE_FACILITY_LOCK_DONE> = 8;

        <com.android.internal.telephony.gsm.GsmSimCard: int EVENT_CHANGE_FACILITY_FDN_DONE> = 11;

        <com.android.internal.telephony.gsm.GsmSimCard: boolean DBG> = 1;

        return;
    }
}
