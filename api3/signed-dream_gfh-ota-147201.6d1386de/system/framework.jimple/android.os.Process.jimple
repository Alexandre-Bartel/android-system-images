public class android.os.Process extends java.lang.Object
{
    public static final java.lang.String ANDROID_SHARED_MEDIA;
    public static final int BLUETOOTH_GID;
    public static final int FIRST_APPLICATION_UID;
    public static final java.lang.String GOOGLE_SHARED_APP_CONTENT;
    public static final int LAST_APPLICATION_UID;
    private static final java.lang.String LOG_TAG;
    public static final int PHONE_UID;
    public static final int PROC_COMBINE;
    public static final int PROC_OUT_FLOAT;
    public static final int PROC_OUT_LONG;
    public static final int PROC_OUT_STRING;
    public static final int PROC_PARENS;
    public static final int PROC_SPACE_TERM;
    public static final int PROC_TERM_MASK;
    public static final int PROC_ZERO_TERM;
    public static final int SIGNAL_KILL;
    public static final int SIGNAL_QUIT;
    public static final int SIGNAL_USR1;
    public static final int SYSTEM_UID;
    public static final int THREAD_PRIORITY_AUDIO;
    public static final int THREAD_PRIORITY_BACKGROUND;
    public static final int THREAD_PRIORITY_DEFAULT;
    public static final int THREAD_PRIORITY_DISPLAY;
    public static final int THREAD_PRIORITY_FOREGROUND;
    public static final int THREAD_PRIORITY_LESS_FAVORABLE;
    public static final int THREAD_PRIORITY_LOWEST;
    public static final int THREAD_PRIORITY_MORE_FAVORABLE;
    public static final int THREAD_PRIORITY_URGENT_AUDIO;
    public static final int THREAD_PRIORITY_URGENT_DISPLAY;
    static final int ZYGOTE_RETRY_MILLIS;
    private static final java.lang.String ZYGOTE_SOCKET;
    static boolean sPreviousZygoteOpenFailed;
    static java.io.DataInputStream sZygoteInputStream;
    static android.net.LocalSocket sZygoteSocket;
    static java.io.BufferedWriter sZygoteWriter;

    public void <init>()
    {
        android.os.Process $r0;

        $r0 := @this: android.os.Process;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$000(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.Process: void invokeStaticMain(java.lang.String)>($r0);

        return;
    }

    public static final native long getElapsedCpuTime();

    public static final native int getFreeMemory();

    public static final native int getGidForName(java.lang.String);

    public static final native int[] getPids(java.lang.String, int[]);

    public static final native long getPss(int);

    public static final native int getThreadPriority(int) throws java.lang.IllegalArgumentException;

    public static final native int getUidForName(java.lang.String);

    private static void invokeStaticMain(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;
        java.lang.String[] $r2;
        java.lang.Class $r3;
        java.lang.Class[] $r4;
        java.lang.reflect.Method $r5;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7;
        java.lang.RuntimeException $r8;

        $r0 := @parameter0: java.lang.String;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = newarray (java.lang.String)[0];

        $r1[0] = $r2;

     label1:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "[Ljava/lang/String;";

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("main", $r4);

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception invoking static main on ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Process", $r0, $r6);

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static final void killProcess(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i0, 9);

        return;
    }

    public static final native int myPid();

    public static final native int myTid();

    public static final native int myUid();

    private static void openZygoteSocketIfNeeded() throws android.os.ZygoteStartFailedEx
    {
        android.net.LocalSocketAddress$Namespace $r0;
        boolean $z0;
        byte $b0;
        int $i1, $i2;
        android.net.LocalSocket $r1;
        android.net.LocalSocketAddress $r2;
        java.io.DataInputStream $r3;
        java.io.InputStream $r4;
        java.io.BufferedWriter $r5;
        java.io.OutputStreamWriter $r6;
        java.io.OutputStream $r7;
        android.os.ZygoteStartFailedEx $r8;
        java.io.IOException $r9, $r10;
        java.lang.InterruptedException $r11;

        $z0 = <android.os.Process: boolean sPreviousZygoteOpenFailed>;

        if $z0 == 0 goto label14;

        $b0 = 0;

     label01:
        $i1 = 0;

     label02:
        $r1 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        if $r1 != null goto label13;

        $i2 = $b0 + 1;

        if $i1 >= $i2 goto label13;

        if $i1 <= 0 goto label04;

     label03:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Zygote not up yet, sleeping...");

        staticinvoke <java.lang.Thread: void sleep(long)>(500L);

     label04:
        $r1 = new android.net.LocalSocket;

     label05:
        specialinvoke $r1.<android.net.LocalSocket: void <init>()>();

     label06:
        <android.os.Process: android.net.LocalSocket sZygoteSocket> = $r1;

        $r1 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        $r2 = new android.net.LocalSocketAddress;

     label07:
        $r0 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r2.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("zygote", $r0);

        virtualinvoke $r1.<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>($r2);

     label08:
        $r3 = new java.io.DataInputStream;

     label09:
        $r1 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        $r4 = virtualinvoke $r1.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        specialinvoke $r3.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r4);

     label10:
        <android.os.Process: java.io.DataInputStream sZygoteInputStream> = $r3;

        $r5 = new java.io.BufferedWriter;

        $r6 = new java.io.OutputStreamWriter;

     label11:
        $r1 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        $r7 = virtualinvoke $r1.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r7);

        specialinvoke $r5.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r6, 256);

        <android.os.Process: java.io.BufferedWriter sZygoteWriter> = $r5;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Process: zygote socket opened");

     label12:
        <android.os.Process: boolean sPreviousZygoteOpenFailed> = 0;

     label13:
        $r1 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        if $r1 != null goto label19;

        <android.os.Process: boolean sPreviousZygoteOpenFailed> = 1;

        $r8 = new android.os.ZygoteStartFailedEx;

        specialinvoke $r8.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("connect failed");

        throw $r8;

     label14:
        $b0 = 10;

        goto label01;

     label15:
        $r9 := @caughtexception;

        $r1 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        if $r1 == null goto label17;

        $r1 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

     label16:
        virtualinvoke $r1.<android.net.LocalSocket: void close()>();

     label17:
        <android.os.Process: android.net.LocalSocket sZygoteSocket> = null;

        $i1 = $i1 + 1;

        goto label02;

     label18:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Process", "I/O exception on close after exception", $r10);

        goto label17;

     label19:
        return;

     label20:
        $r11 := @caughtexception;

        goto label04;

        catch java.lang.InterruptedException from label03 to label04 with label20;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.io.IOException from label11 to label12 with label15;
        catch java.io.IOException from label16 to label17 with label18;
    }

    public static final native boolean readProcFile(java.lang.String, int[], java.lang.String[], long[], float[]);

    public static final native void readProcLines(java.lang.String, java.lang.String[], long[]);

    public static final native void sendSignal(int, int);

    public static final native void setArgV0(java.lang.String);

    public static final native int setGid(int);

    public static final native boolean setOomAdj(int, int);

    public static final native void setThreadPriority(int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native void setThreadPriority(int, int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native int setUid(int);

    public static final int start(java.lang.String, int, int, int[], int, java.lang.String[])
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.String[] $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: int[];

        $i2 := @parameter4: int;

        $r2 := @parameter5: java.lang.String[];

        $i0 = staticinvoke <android.os.Process: int start(java.lang.String,java.lang.String,int,int,int[],int,java.lang.String[])>($r0, "", $i0, $i1, $r1, $i2, $r2);

        return $i0;
    }

    public static final int start(java.lang.String, java.lang.String, int, int, int[], int, java.lang.String[])
    {
        java.lang.String $r0, $r1;
        int $i0, $i1, $i2;
        int[] $r2;
        java.lang.String[] $r3;
        android.os.ZygoteStartFailedEx $r4;
        android.os.Process$1 $r5;
        boolean $z0;
        java.lang.RuntimeException $r6;
        java.lang.Thread $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 := @parameter4: int[];

        $i2 := @parameter5: int;

        $r3 := @parameter6: java.lang.String[];

        $z0 = staticinvoke <android.os.Process: boolean supportsProcesses()>();

        if $z0 == 0 goto label4;

     label1:
        $i0 = staticinvoke <android.os.Process: int startViaZygote(java.lang.String,java.lang.String,int,int,int[],int,java.lang.String[])>($r0, $r1, $i0, $i1, $r2, $i2, $r3);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Process", "Starting VM process through Zygote failed");

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Starting VM process through Zygote failed", $r4);

        throw $r6;

     label4:
        $r5 = new android.os.Process$1;

        specialinvoke $r5.<android.os.Process$1: void <init>(java.lang.String)>($r0);

        if $r1 == null goto label6;

        $r7 = new java.lang.Thread;

        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r5, $r1);

        virtualinvoke $r7.<java.lang.Thread: void start()>();

     label5:
        return 0;

     label6:
        $r7 = new java.lang.Thread;

        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        virtualinvoke $r7.<java.lang.Thread: void start()>();

        goto label5;

        catch android.os.ZygoteStartFailedEx from label1 to label2 with label3;
    }

    private static int startViaZygote(java.lang.String, java.lang.String, int, int, int[], int, java.lang.String[]) throws android.os.ZygoteStartFailedEx
    {
        int[] $r0;
        java.lang.String[] $r1;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r4, $r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5;
        android.os.ZygoteStartFailedEx $r7;
        java.lang.Throwable $r8;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r0 := @parameter4: int[];

        $i2 := @parameter5: int;

        $r1 := @parameter6: java.lang.String[];

        entermonitor class "android/os/Process";

     label01:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("--runtime-init");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--setuid=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--setgid=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i0 = $i2 & 1;

        if $i0 == 0 goto label02;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("--enable-debugger");

     label02:
        $i0 = $i2 & 2;

        if $i0 == 0 goto label03;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("--enable-checkjni");

     label03:
        $i0 = $i2 & 4;

        if $i0 == 0 goto label04;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("--enable-assert");

     label04:
        if $r0 == null goto label08;

        $i0 = lengthof $r0;

        if $i0 <= 0 goto label08;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--setgroups=");

        $i0 = lengthof $r0;

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label07;

        if $i1 == 0 goto label06;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label06:
        $i2 = $r0[$i1];

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $i1 = $i1 + 1;

        goto label05;

     label07:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label08:
        if $r4 == null goto label09;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--nice-name=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label09:
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        if $r1 == null goto label11;

        $i0 = lengthof $r1;

        $i1 = 0;

     label10:
        if $i1 >= $i0 goto label11;

        $r3 = $r1[$i1];

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label10;

     label11:
        $i0 = staticinvoke <android.os.Process: int zygoteSendArgsAndGetPid(java.util.ArrayList)>($r2);

        exitmonitor class "android/os/Process";

     label12:
        if $i0 > 0 goto label16;

        $r7 = new android.os.ZygoteStartFailedEx;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("zygote start failed:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>($r3);

        throw $r7;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor class "android/os/Process";

     label15:
        throw $r8;

     label16:
        return $i0;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public static final native boolean supportsProcesses();

    private static int zygoteSendArgsAndGetPid(java.util.ArrayList) throws android.os.ZygoteStartFailedEx
    {
        java.util.ArrayList $r0;
        java.io.BufferedWriter $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        java.lang.Object $r3;
        android.os.ZygoteStartFailedEx $r4;
        java.io.IOException $r5, $r8;
        android.net.LocalSocket $r6;
        java.io.DataInputStream $r7;

        $r0 := @parameter0: java.util.ArrayList;

        staticinvoke <android.os.Process: void openZygoteSocketIfNeeded()>();

        $r1 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

     label01:
        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        $r1 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

        virtualinvoke $r1.<java.io.BufferedWriter: void newLine()>();

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

     label02:
        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label13;

        $r3 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r2 = (java.lang.String) $r3;

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(10);

     label04:
        if $i2 < 0 goto label10;

     label05:
        $r4 = new android.os.ZygoteStartFailedEx;

        specialinvoke $r4.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("embedded newlines not allowed");

     label06:
        throw $r4;

     label07:
        $r5 := @caughtexception;

        $r6 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        if $r6 == null goto label09;

        $r6 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

     label08:
        virtualinvoke $r6.<android.net.LocalSocket: void close()>();

     label09:
        <android.os.Process: android.net.LocalSocket sZygoteSocket> = null;

        $r4 = new android.os.ZygoteStartFailedEx;

        specialinvoke $r4.<android.os.ZygoteStartFailedEx: void <init>(java.lang.Throwable)>($r5);

        throw $r4;

     label10:
        $r1 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

     label11:
        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        $r1 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

        virtualinvoke $r1.<java.io.BufferedWriter: void newLine()>();

     label12:
        $i1 = $i1 + 1;

        goto label03;

     label13:
        $r1 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

        virtualinvoke $r1.<java.io.BufferedWriter: void flush()>();

        $r7 = <android.os.Process: java.io.DataInputStream sZygoteInputStream>;

        $i0 = virtualinvoke $r7.<java.io.DataInputStream: int readInt()>();

     label14:
        if $i0 >= 0 goto label18;

     label15:
        $r4 = new android.os.ZygoteStartFailedEx;

        specialinvoke $r4.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("fork() failed");

     label16:
        throw $r4;

     label17:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Process", "I/O exception on routine close", $r8);

        goto label09;

     label18:
        return $i0;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.io.IOException from label11 to label12 with label07;
        catch java.io.IOException from label13 to label14 with label07;
        catch java.io.IOException from label15 to label16 with label07;
    }

    public static void <clinit>()
    {
        <android.os.Process: java.lang.String ZYGOTE_SOCKET> = "zygote";

        <android.os.Process: int ZYGOTE_RETRY_MILLIS> = 500;

        <android.os.Process: int THREAD_PRIORITY_URGENT_DISPLAY> = -8;

        <android.os.Process: int THREAD_PRIORITY_URGENT_AUDIO> = -19;

        <android.os.Process: int THREAD_PRIORITY_MORE_FAVORABLE> = -1;

        <android.os.Process: int THREAD_PRIORITY_LOWEST> = 19;

        <android.os.Process: int THREAD_PRIORITY_LESS_FAVORABLE> = 1;

        <android.os.Process: int THREAD_PRIORITY_FOREGROUND> = -2;

        <android.os.Process: int THREAD_PRIORITY_DISPLAY> = -4;

        <android.os.Process: int THREAD_PRIORITY_DEFAULT> = 0;

        <android.os.Process: int THREAD_PRIORITY_BACKGROUND> = 10;

        <android.os.Process: int THREAD_PRIORITY_AUDIO> = -16;

        <android.os.Process: int SYSTEM_UID> = 1000;

        <android.os.Process: int SIGNAL_USR1> = 10;

        <android.os.Process: int SIGNAL_QUIT> = 3;

        <android.os.Process: int SIGNAL_KILL> = 9;

        <android.os.Process: int PROC_ZERO_TERM> = 0;

        <android.os.Process: int PROC_TERM_MASK> = 255;

        <android.os.Process: int PROC_SPACE_TERM> = 32;

        <android.os.Process: int PROC_PARENS> = 512;

        <android.os.Process: int PROC_OUT_STRING> = 4096;

        <android.os.Process: int PROC_OUT_LONG> = 8192;

        <android.os.Process: int PROC_OUT_FLOAT> = 16384;

        <android.os.Process: int PROC_COMBINE> = 256;

        <android.os.Process: int PHONE_UID> = 1001;

        <android.os.Process: java.lang.String LOG_TAG> = "Process";

        <android.os.Process: int LAST_APPLICATION_UID> = 99999;

        <android.os.Process: java.lang.String GOOGLE_SHARED_APP_CONTENT> = "com.google.process.content";

        <android.os.Process: int FIRST_APPLICATION_UID> = 10000;

        <android.os.Process: int BLUETOOTH_GID> = 2000;

        <android.os.Process: java.lang.String ANDROID_SHARED_MEDIA> = "com.android.process.media";

        return;
    }
}
