public class org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl extends javax.net.ssl.TrustManagerFactorySpi
{
    private java.security.KeyStore keyStore;

    public void <init>()
    {
        org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl $r0;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl;

        specialinvoke $r0.<javax.net.ssl.TrustManagerFactorySpi: void <init>()>();

        return;
    }

    public javax.net.ssl.TrustManager[] engineGetTrustManagers()
    {
        org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl $r0;
        org.apache.harmony.xnet.provider.jsse.TrustManagerImpl $r1;
        java.security.KeyStore $r2;
        java.lang.IllegalStateException $r3;
        javax.net.ssl.TrustManager[] $r4;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl: java.security.KeyStore keyStore>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TrustManagerFactory is not initialized");

        throw $r3;

     label1:
        $r4 = newarray (javax.net.ssl.TrustManager)[1];

        $r1 = new org.apache.harmony.xnet.provider.jsse.TrustManagerImpl;

        $r2 = $r0.<org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl: java.security.KeyStore keyStore>;

        specialinvoke $r1.<org.apache.harmony.xnet.provider.jsse.TrustManagerImpl: void <init>(java.security.KeyStore)>($r2);

        $r4[0] = $r1;

        return $r4;
    }

    public void engineInit(java.security.KeyStore) throws java.security.KeyStoreException
    {
        org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl $r0;
        java.security.KeyStore $r1;
        java.lang.String $r2, $r11;
        java.lang.StringBuilder $r3;
        org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl$1 $r4;
        java.lang.Object $r5;
        boolean $z0;
        int $i0;
        java.io.IOException $r6, $r16;
        java.security.KeyStoreException $r7;
        java.security.cert.CertificateException $r8, $r17;
        java.security.NoSuchAlgorithmException $r9, $r18;
        org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl$2 $r10;
        char[] $r12;
        java.io.FileInputStream $r13;
        java.io.File $r14;
        java.io.FileNotFoundException $r15;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl;

        $r1 := @parameter0: java.security.KeyStore;

        if $r1 == null goto label01;

        $r0.<org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl: java.security.KeyStore keyStore> = $r1;

        return;

     label01:
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStore");

        if $r2 != null goto label02;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("etc");

        $r2 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("security");

        $r2 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cacerts.bks");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("javax.net.ssl.trustStore", $r2);

     label02:
        $r2 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2);

        $r0.<org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl: java.security.KeyStore keyStore> = $r1;

        $r4 = new org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl$1;

        specialinvoke $r4.<org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl$1: void <init>(org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl)>($r0);

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);

        $r2 = (java.lang.String) $r5;

        if $r2 == null goto label03;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NONE");

        if $z0 != 0 goto label03;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label09;

     label03:
        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl: java.security.KeyStore keyStore>;

     label04:
        virtualinvoke $r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);

     label05:
        return;

     label06:
        $r6 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label07:
        $r8 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

     label08:
        $r9 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r9);

        throw $r7;

     label09:
        $r10 = new org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl$2;

        specialinvoke $r10.<org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl$2: void <init>(org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl)>($r0);

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r10);

        $r11 = (java.lang.String) $r5;

        if $r11 != null goto label14;

        $r12 = newarray (char)[0];

     label10:
        $r1 = $r0.<org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl: java.security.KeyStore keyStore>;

        $r13 = new java.io.FileInputStream;

        $r14 = new java.io.File;

     label11:
        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r2);

        specialinvoke $r13.<java.io.FileInputStream: void <init>(java.io.File)>($r14);

        virtualinvoke $r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r13, $r12);

     label12:
        return;

     label13:
        $r15 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r15);

        throw $r7;

     label14:
        $r12 = virtualinvoke $r11.<java.lang.String: char[] toCharArray()>();

        goto label10;

     label15:
        $r16 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r16);

        throw $r7;

     label16:
        $r17 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r17);

        throw $r7;

     label17:
        $r18 := @caughtexception;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r18);

        throw $r7;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.security.cert.CertificateException from label04 to label05 with label07;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label08;
        catch java.io.FileNotFoundException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label15;
        catch java.security.cert.CertificateException from label11 to label12 with label16;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label17;
    }

    public void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.security.InvalidAlgorithmParameterException
    {
        org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl $r0;
        javax.net.ssl.ManagerFactoryParameters $r1;
        java.security.InvalidAlgorithmParameterException $r2;

        $r0 := @this: org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl;

        $r1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;

        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("ManagerFactoryParameters not supported");

        throw $r2;
    }
}
