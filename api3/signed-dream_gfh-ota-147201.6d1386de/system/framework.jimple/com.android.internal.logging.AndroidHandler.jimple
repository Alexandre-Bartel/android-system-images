public class com.android.internal.logging.AndroidHandler extends java.util.logging.Handler
{
    private static final java.util.logging.Formatter THE_FORMATTER;

    static void <clinit>()
    {
        com.android.internal.logging.AndroidHandler$1 $r0;

        $r0 = new com.android.internal.logging.AndroidHandler$1;

        specialinvoke $r0.<com.android.internal.logging.AndroidHandler$1: void <init>()>();

        <com.android.internal.logging.AndroidHandler: java.util.logging.Formatter THE_FORMATTER> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.logging.AndroidHandler $r0;
        java.util.logging.Formatter $r1;

        $r0 := @this: com.android.internal.logging.AndroidHandler;

        specialinvoke $r0.<java.util.logging.Handler: void <init>()>();

        $r1 = <com.android.internal.logging.AndroidHandler: java.util.logging.Formatter THE_FORMATTER>;

        virtualinvoke $r0.<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>($r1);

        return;
    }

    static int getAndroidLevel(java.util.logging.Level)
    {
        java.util.logging.Level $r0;
        int $i0;

        $r0 := @parameter0: java.util.logging.Level;

        $i0 = virtualinvoke $r0.<java.util.logging.Level: int intValue()>();

        if $i0 < 1000 goto label1;

        return 6;

     label1:
        if $i0 < 900 goto label2;

        return 5;

     label2:
        if $i0 < 800 goto label3;

        return 4;

     label3:
        return 3;
    }

    public void close()
    {
        com.android.internal.logging.AndroidHandler $r0;

        $r0 := @this: com.android.internal.logging.AndroidHandler;

        return;
    }

    public void flush()
    {
        com.android.internal.logging.AndroidHandler $r0;

        $r0 := @this: com.android.internal.logging.AndroidHandler;

        return;
    }

    public void publish(java.util.logging.LogRecord)
    {
        com.android.internal.logging.AndroidHandler $r0;
        java.util.logging.LogRecord $r1;
        java.util.logging.Level $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4;
        boolean $z0;
        java.util.logging.Formatter $r5;
        java.lang.RuntimeException $r6;

        $r0 := @this: com.android.internal.logging.AndroidHandler;

        $r1 := @parameter0: java.util.logging.LogRecord;

     label01:
        $r2 = virtualinvoke $r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();

        $i0 = staticinvoke <com.android.internal.logging.AndroidHandler: int getAndroidLevel(java.util.logging.Level)>($r2);

        $r3 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();

     label02:
        $r4 = $r3;

     label03:
        if $r3 != null goto label06;

        $r4 = "null";

     label04:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r4, $i0);

        if $z0 != 0 goto label12;

     label05:
        return;

     label06:
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 <= 23 goto label04;

        $i2 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

     label07:
        $i1 = $i1 - $i2;

        $i1 = $i1 - 1;

     label08:
        if $i1 > 23 goto label10;

        $i2 = $i2 + 1;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i2);

     label09:
        goto label04;

     label10:
        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = $i2 - 23;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i2);

     label11:
        goto label04;

     label12:
        $r5 = virtualinvoke $r0.<java.util.logging.Handler: java.util.logging.Formatter getFormatter()>();

        $r3 = virtualinvoke $r5.<java.util.logging.Formatter: java.lang.String format(java.util.logging.LogRecord)>($r1);

        staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r4, $r3);

     label13:
        return;

     label14:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidHandler", "Error logging message.", $r6);

        return;

        catch java.lang.RuntimeException from label01 to label02 with label14;
        catch java.lang.RuntimeException from label03 to label05 with label14;
        catch java.lang.RuntimeException from label06 to label07 with label14;
        catch java.lang.RuntimeException from label08 to label09 with label14;
        catch java.lang.RuntimeException from label09 to label11 with label14;
        catch java.lang.RuntimeException from label11 to label13 with label14;
    }
}
