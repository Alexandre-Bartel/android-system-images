public class org.bouncycastle.crypto.signers.ISO9796d2Signer extends java.lang.Object implements org.bouncycastle.crypto.SignerWithRecovery
{
    public static final int TRAILER_IMPLICIT;
    public static final int TRAILER_RIPEMD128;
    public static final int TRAILER_RIPEMD160;
    public static final int TRAILER_SHA1;
    private byte[] block;
    private org.bouncycastle.crypto.AsymmetricBlockCipher cipher;
    private org.bouncycastle.crypto.Digest digest;
    private boolean fullMessage;
    private int keyBits;
    private byte[] mBuf;
    private int messageLength;
    private byte[] recoveredMessage;
    private int trailer;

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest)
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        org.bouncycastle.crypto.Digest $r2;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        $r2 := @parameter1: org.bouncycastle.crypto.Digest;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,boolean)>($r1, $r2, 0);

        return;
    }

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, boolean)
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        org.bouncycastle.crypto.Digest $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        $r2 := @parameter1: org.bouncycastle.crypto.Digest;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r1;

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest> = $r2;

        if $z0 == 0 goto label1;

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer> = 188;

        return;

     label1:
        $z0 = $r2 instanceof org.bouncycastle.crypto.digests.SHA1Digest;

        if $z0 == 0 goto label2;

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer> = 13260;

        return;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no valid trailer for digest");

        throw $r3;
    }

    private void clearBlock(byte[])
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 := @parameter0: byte[];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 == $i1 goto label2;

        $r1[$i0] = 0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    private boolean isSameAs(byte[], byte[])
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1;
        byte $b2, $b3;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i1 = lengthof $r3;

        if $i0 <= $i1 goto label4;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i0 = lengthof $r3;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i1 = lengthof $r3;

        if $i0 == $i1 goto label8;

        $b2 = $r1[$i0];

        $b3 = $r2[$i0];

        if $b2 == $b3 goto label3;

        return 0;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $i0 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label5;

        return 0;

     label5:
        $i0 = 0;

     label6:
        $i1 = lengthof $r2;

        if $i0 == $i1 goto label8;

        $b2 = $r1[$i0];

        $b3 = $r2[$i0];

        if $b2 == $b3 goto label7;

        return 0;

     label7:
        $i0 = $i0 + 1;

        goto label6;

     label8:
        return 1;
    }

    public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        int $i0, $i1, $i2, $i4;
        org.bouncycastle.crypto.Digest $r1;
        byte $b3, $b5;
        byte[] $r2, $r3;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r4;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer>;

        if $i2 != 188 goto label4;

        $b3 = 8;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i2 = lengthof $r2;

        $i2 = $i2 - $i0;

        $i2 = $i2 - 1;

        $r1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r2, $i2);

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i1 = lengthof $r3;

        $i1 = $i1 - 1;

        $r2[$i1] = -68;

     label1:
        $i1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i0 = $i1 + $i0;

        $i0 = $i0 * 8;

        $i0 = $i0 + $b3;

        $i0 = $i0 + 4;

        $i1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int keyBits>;

        $i1 = $i0 - $i1;

        if $i1 <= 0 goto label5;

        $i0 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i1 = $i1 + 7;

        $i1 = $i1 / 8;

        $i0 = $i0 - $i1;

        $b3 = 96;

        $i2 = $i2 - $i0;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, $i2, $i0);

     label2:
        $i0 = $i2 - 1;

        if $i0 <= 0 goto label8;

        $i0 = $i2 - 1;

     label3:
        if $i0 == 0 goto label6;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r2[$i0] = -69;

        $i0 = $i0 + -1;

        goto label3;

     label4:
        $b3 = 16;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i2 = lengthof $r2;

        $i2 = $i2 - $i0;

        $i2 = $i2 - 2;

        $r1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r2, $i2);

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i1 = lengthof $r3;

        $i1 = $i1 - 2;

        $i4 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer>;

        $i4 = $i4 >>> 8;

        $b5 = (byte) $i4;

        $r2[$i1] = $b5;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i1 = lengthof $r3;

        $i1 = $i1 - 1;

        $i4 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer>;

        $b5 = (byte) $i4;

        $r2[$i1] = $b5;

        goto label1;

     label5:
        $b3 = 64;

        $i0 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i2 = $i2 - $i0;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i0 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, $i2, $i0);

        goto label2;

     label6:
        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i2 = $i2 - 1;

        $b5 = $r2[$i2];

        $b5 = $b5 ^ 1;

        $b5 = (byte) $b5;

        $r2[$i2] = $b5;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r2[0] = 11;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $b5 = $r2[0];

        $b3 = $b5 | $b3;

        $b3 = (byte) $b3;

        $r2[0] = $b3;

     label7:
        $r4 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i2 = lengthof $r3;

        $r2 = interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r2, 0, $i2);

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r3);

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r3);

        return $r2;

     label8:
        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $r2[0] = 10;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $b5 = $r2[0];

        $b3 = $b5 | $b3;

        $b3 = (byte) $b3;

        $r2[0] = $b3;

        goto label7;
    }

    public byte[] getRecoveredMessage()
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        byte[] r1;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        r1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        return r1;
    }

    public boolean hasFullMessage()
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        boolean z0;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        z0 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean fullMessage>;

        return z0;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        boolean $z0;
        org.bouncycastle.crypto.CipherParameters $r1;
        org.bouncycastle.crypto.params.RSAKeyParameters $r2;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r3;
        java.math.BigInteger $r4;
        int $i0, $i1;
        byte[] $r5;
        org.bouncycastle.crypto.Digest $r6;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $r2 = (org.bouncycastle.crypto.params.RSAKeyParameters) $r1;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r2);

        $r4 = virtualinvoke $r2.<org.bouncycastle.crypto.params.RSAKeyParameters: java.math.BigInteger getModulus()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int bitLength()>();

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int keyBits> = $i0;

        $i0 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int keyBits>;

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        $r5 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block> = $r5;

        $i0 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int trailer>;

        if $i0 != 188 goto label2;

        $r5 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i0 = lengthof $r5;

        $r6 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i1 = interfaceinvoke $r6.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i0 = $i0 - $i1;

        $i0 = $i0 - 2;

        $r5 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf> = $r5;

     label1:
        virtualinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void reset()>();

        return;

     label2:
        $r5 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] block>;

        $i0 = lengthof $r5;

        $r6 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i1 = interfaceinvoke $r6.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i0 = $i0 - $i1;

        $i0 = $i0 - 3;

        $r5 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf> = $r5;

        goto label1;
    }

    public void reset()
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        org.bouncycastle.crypto.Digest $r1;
        byte[] $r2;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void reset()>();

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength> = 0;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        if $r2 == null goto label1;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

     label1:
        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage> = null;

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean fullMessage> = 0;

        return;
    }

    public void update(byte)
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        byte $b0;
        org.bouncycastle.crypto.Digest $r1;
        int $i1, $i2;
        byte[] $r2;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $b0 := @parameter0: byte;

        $r1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void update(byte)>($b0);

        $i1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i2 = lengthof $r2;

        if $i1 >= $i2 goto label1;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $r2[$i1] = $b0;

     label1:
        $i1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i1 = $i1 + 1;

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength> = $i1;

        return;
    }

    public void update(byte[], int, int)
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        byte[] $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        org.bouncycastle.crypto.Digest $r2;
        byte $b5;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r1, $i0, $i1);

        $i2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i3 = lengthof $r3;

        if $i2 >= $i3 goto label2;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i3 = $i3 + $i2;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i4 = lengthof $r3;

        if $i3 >= $i4 goto label2;

        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $i3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i3 = $i3 + $i2;

        $i4 = $i0 + $i2;

        $b5 = $r1[$i4];

        $r3[$i3] = $b5;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $i0 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        $i0 = $i0 + $i1;

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength> = $i0;

        return;
    }

    public boolean verifySignature(byte[])
    {
        org.bouncycastle.crypto.signers.ISO9796d2Signer $r0;
        byte[] $r1, $r2, $r8;
        int $i0, $i1, $i5, $i6;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r3;
        byte $b2, $b4;
        short $s3;
        java.lang.Exception $r4;
        org.bouncycastle.crypto.Digest $r5;
        java.lang.IllegalArgumentException $r6;
        boolean $z0;
        java.lang.IllegalStateException $r7;

        $r0 := @this: org.bouncycastle.crypto.signers.ISO9796d2Signer;

        $r1 := @parameter0: byte[];

     label01:
        $r3 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i1 = lengthof $r1;

        $r1 = interfaceinvoke $r3.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r1, 0, $i1);

     label02:
        $b2 = $r1[0];

        $s3 = $b2 & 192;

        $s3 = $s3 ^ 64;

        if $s3 == 0 goto label04;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r1);

        return 0;

     label03:
        $r4 := @caughtexception;

        return 0;

     label04:
        $i1 = lengthof $r1;

        $i1 = $i1 - 1;

        $b2 = $r1[$i1];

        $b2 = $b2 & 15;

        $b2 = $b2 ^ 12;

        if $b2 == 0 goto label05;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r1);

        return 0;

     label05:
        $i1 = lengthof $r1;

        $i1 = $i1 - 1;

        $b2 = $r1[$i1];

        $s3 = $b2 & 255;

        $s3 = $s3 ^ 188;

        if $s3 != 0 goto label09;

        $b2 = 1;

     label06:
        $i1 = 0;

     label07:
        $i0 = lengthof $r1;

        if $i1 == $i0 goto label08;

        $b4 = $r1[$i1];

        $b4 = $b4 & 15;

        $b4 = $b4 ^ 10;

        if $b4 != 0 goto label13;

     label08:
        $i1 = $i1 + 1;

        $r5 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $r2 = newarray (byte)[$i0];

        $i0 = lengthof $r1;

        $i0 = $i0 - $b2;

        $i5 = lengthof $r2;

        $i0 = $i0 - $i5;

        $i5 = $i0 - $i1;

        if $i5 > 0 goto label14;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r1);

        return 0;

     label09:
        $i1 = lengthof $r1;

        $i1 = $i1 - 2;

        $b2 = $r1[$i1];

        $s3 = $b2 & 255;

        $i1 = $s3 << 8;

        $i0 = lengthof $r1;

        $i0 = $i0 - 1;

        $b2 = $r1[$i0];

        $s3 = $b2 & 255;

        $i1 = $i1 | $s3;

        lookupswitch($i1)
        {
            case 13260: goto label11;
            default: goto label10;
        };

     label10:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unrecognised hash in signature");

        throw $r6;

     label11:
        $r5 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $z0 = $r5 instanceof org.bouncycastle.crypto.digests.SHA1Digest;

        if $z0 != 0 goto label12;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("signer should be initialised with SHA1");

        throw $r7;

     label12:
        $b2 = 2;

        goto label06;

     label13:
        $i1 = $i1 + 1;

        goto label07;

     label14:
        $b2 = $r1[0];

        $b2 = $b2 & 32;

        if $b2 != 0 goto label19;

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean fullMessage> = 1;

        $r5 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: void reset()>();

        $r5 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        $i5 = $i0 - $i1;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r1, $i1, $i5);

        $r5 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r2, 0);

        $i5 = 0;

     label15:
        $i6 = lengthof $r2;

        if $i5 == $i6 goto label17;

        $i6 = $i0 + $i5;

        $b2 = $r1[$i6];

        $b4 = $r2[$i5];

        $b2 = $b2 ^ $b4;

        $b2 = (byte) $b2;

        $r1[$i6] = $b2;

        $i6 = $i0 + $i5;

        $b2 = $r1[$i6];

        if $b2 == 0 goto label16;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r1);

        return 0;

     label16:
        $i5 = $i5 + 1;

        goto label15;

     label17:
        $i0 = $i0 - $i1;

        $r2 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage> = $r2;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $r8 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $i0 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, 0, $i0);

     label18:
        $i1 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: int messageLength>;

        if $i1 == 0 goto label23;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        $r8 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $z0 = specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean isSameAs(byte[],byte[])>($r2, $r8);

        if $z0 != 0 goto label23;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r1);

        return 0;

     label19:
        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: boolean fullMessage> = 0;

        $r5 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r2, 0);

        $i5 = 0;

     label20:
        $i6 = lengthof $r2;

        if $i5 == $i6 goto label22;

        $i6 = $i0 + $i5;

        $b2 = $r1[$i6];

        $b4 = $r2[$i5];

        $b2 = $b2 ^ $b4;

        $b2 = (byte) $b2;

        $r1[$i6] = $b2;

        $i6 = $i0 + $i5;

        $b2 = $r1[$i6];

        if $b2 == 0 goto label21;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r1);

        return 0;

     label21:
        $i5 = $i5 + 1;

        goto label20;

     label22:
        $i0 = $i0 - $i1;

        $r2 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage> = $r2;

        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $r8 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] recoveredMessage>;

        $i0 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, 0, $i0);

        goto label18;

     label23:
        $r2 = $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: byte[] mBuf>;

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r2);

        specialinvoke $r0.<org.bouncycastle.crypto.signers.ISO9796d2Signer: void clearBlock(byte[])>($r1);

        return 1;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.signers.ISO9796d2Signer: int TRAILER_SHA1> = 13260;

        <org.bouncycastle.crypto.signers.ISO9796d2Signer: int TRAILER_RIPEMD160> = 12748;

        <org.bouncycastle.crypto.signers.ISO9796d2Signer: int TRAILER_RIPEMD128> = 13004;

        <org.bouncycastle.crypto.signers.ISO9796d2Signer: int TRAILER_IMPLICIT> = 188;

        return;
    }
}
