public class org.apache.http.message.BasicHeaderElement extends java.lang.Object implements java.lang.Cloneable, org.apache.http.HeaderElement
{
    private final java.lang.String name;
    private final org.apache.http.NameValuePair[] parameters;
    private final java.lang.String value;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.http.message.BasicHeaderElement $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<org.apache.http.message.BasicHeaderElement: void <init>(java.lang.String,java.lang.String,org.apache.http.NameValuePair[])>($r1, $r2, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.apache.http.NameValuePair[])
    {
        org.apache.http.message.BasicHeaderElement $r0;
        java.lang.String $r1, $r2;
        org.apache.http.NameValuePair[] $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.apache.http.NameValuePair[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name may not be null");

        throw $r4;

     label1:
        $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name> = $r1;

        $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value> = $r2;

        if $r3 == null goto label2;

        $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters> = $r3;

        return;

     label2:
        $r3 = newarray (org.apache.http.NameValuePair)[0];

        $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters> = $r3;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.message.BasicHeaderElement $r0;
        java.lang.Object $r1;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.http.message.BasicHeaderElement $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r3, $r4;
        org.apache.http.NameValuePair[] $r5, $r6;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        if $r0 != $r1 goto label2;

        return 1;

     label2:
        $z0 = $r1 instanceof org.apache.http.HeaderElement;

        if $z0 == 0 goto label4;

        $r2 = (org.apache.http.message.BasicHeaderElement) $r1;

        $r3 = $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        $r4 = $r2.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        $r4 = $r2.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        $z0 = staticinvoke <org.apache.http.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label3;

        $r5 = $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r6 = $r2.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $z0 = staticinvoke <org.apache.http.util.LangUtils: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        return 0;
    }

    public java.lang.String getName()
    {
        org.apache.http.message.BasicHeaderElement $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        r1 = $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        return r1;
    }

    public org.apache.http.NameValuePair getParameter(int)
    {
        org.apache.http.message.BasicHeaderElement $r0;
        int $i0;
        org.apache.http.NameValuePair[] $r1;
        org.apache.http.NameValuePair $r2;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public org.apache.http.NameValuePair getParameterByName(java.lang.String)
    {
        org.apache.http.message.BasicHeaderElement $r0;
        java.lang.String $r1, $r5;
        org.apache.http.NameValuePair $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i1;
        org.apache.http.NameValuePair[] $r4;
        boolean $z0;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name may not be null");

        throw $r3;

     label1:
        $i0 = 0;

     label2:
        $r4 = $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label4;

        $r4 = $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r2 = $r4[$i0];

        $r5 = interfaceinvoke $r2.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        return $r2;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return null;
    }

    public int getParameterCount()
    {
        org.apache.http.message.BasicHeaderElement $r0;
        org.apache.http.NameValuePair[] $r1;
        int $i0;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 = $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public org.apache.http.NameValuePair[] getParameters()
    {
        org.apache.http.NameValuePair[] $r0;
        java.lang.Object $r1;
        org.apache.http.message.BasicHeaderElement $r2;

        $r2 := @this: org.apache.http.message.BasicHeaderElement;

        $r0 = $r2.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r0 = (org.apache.http.NameValuePair[]) $r1;

        $r0 = (org.apache.http.NameValuePair[]) $r0;

        return $r0;
    }

    public java.lang.String getValue()
    {
        org.apache.http.message.BasicHeaderElement $r0;
        java.lang.String r1;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        r1 = $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        return r1;
    }

    public int hashCode()
    {
        org.apache.http.message.BasicHeaderElement $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        org.apache.http.NameValuePair[] $r2;
        org.apache.http.NameValuePair $r3;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 = $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        $i0 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>(17, $r1);

        $r1 = $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        $i1 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r1);

        $i0 = 0;

     label1:
        $r2 = $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $i2 = lengthof $r2;

        if $i0 >= $i2 goto label2;

        $r2 = $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r3 = $r2[$i0];

        $i1 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>($i1, $r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i1;
    }

    public java.lang.String toString()
    {
        org.apache.http.message.BasicHeaderElement $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        java.lang.String $r2;
        int $i0, $i1;
        org.apache.http.NameValuePair[] $r3;
        org.apache.http.NameValuePair $r4;

        $r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r1.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(64);

        $r2 = $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r2);

        $r2 = $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        if $r2 == null goto label1;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("=");

        $r2 = $r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r2);

     label1:
        $i0 = 0;

     label2:
        $r3 = $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label3;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("; ");

        $r3 = $r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r4 = $r3[$i0];

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r2;
    }
}
