public class org.apache.harmony.security.PolicyEntry extends java.lang.Object
{
    private final java.security.CodeSource cs;
    private final java.util.Collection permissions;
    private final java.security.Principal[] principals;

    public void <init>(java.security.CodeSource, java.util.Collection, java.util.Collection)
    {
        org.apache.harmony.security.PolicyEntry $r0;
        java.security.CodeSource $r1;
        java.util.Collection $r2, $r3;
        boolean $z0;
        java.security.Principal[] $r4;
        int $i0;
        java.lang.Object[] $r5;

        $r0 := @this: org.apache.harmony.security.PolicyEntry;

        $r1 := @parameter0: java.security.CodeSource;

        $r2 := @parameter1: java.util.Collection;

        $r3 := @parameter2: java.util.Collection;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.PolicyEntry: java.security.CodeSource cs> = $r1;

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label5;

     label1:
        $r4 = null;

     label2:
        $r0.<org.apache.harmony.security.PolicyEntry: java.security.Principal[] principals> = $r4;

        if $r3 == null goto label3;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label6;

     label3:
        $r2 = null;

     label4:
        $r0.<org.apache.harmony.security.PolicyEntry: java.util.Collection permissions> = $r2;

        return;

     label5:
        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $r4 = newarray (java.security.Principal)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r4 = (java.security.Principal[]) $r5;

        $r4 = (java.security.Principal[]) $r4;

        goto label2;

     label6:
        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r3);

        goto label4;
    }

    public java.util.Collection getPermissions()
    {
        org.apache.harmony.security.PolicyEntry $r0;
        java.util.Collection r1;

        $r0 := @this: org.apache.harmony.security.PolicyEntry;

        r1 = $r0.<org.apache.harmony.security.PolicyEntry: java.util.Collection permissions>;

        return r1;
    }

    public boolean impliesCodeSource(java.security.CodeSource)
    {
        org.apache.harmony.security.PolicyEntry $r0;
        java.security.CodeSource $r1, $r2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.PolicyEntry;

        $r1 := @parameter0: java.security.CodeSource;

        $r2 = $r0.<org.apache.harmony.security.PolicyEntry: java.security.CodeSource cs>;

        if $r2 != null goto label1;

        return 1;

     label1:
        $r2 = $r0.<org.apache.harmony.security.PolicyEntry: java.security.CodeSource cs>;

        $z0 = virtualinvoke $r2.<java.security.CodeSource: boolean implies(java.security.CodeSource)>($r1);

        return $z0;
    }

    public boolean impliesPrincipals(java.security.Principal[])
    {
        org.apache.harmony.security.PolicyEntry $r0;
        java.security.Principal[] $r1, $r2;
        boolean $z0;

        $r0 := @this: org.apache.harmony.security.PolicyEntry;

        $r1 := @parameter0: java.security.Principal[];

        $r2 = $r0.<org.apache.harmony.security.PolicyEntry: java.security.Principal[] principals>;

        $z0 = staticinvoke <org.apache.harmony.security.fortress.PolicyUtils: boolean matchSubset(java.lang.Object[],java.lang.Object[])>($r2, $r1);

        return $z0;
    }

    public boolean isVoid()
    {
        org.apache.harmony.security.PolicyEntry $r0;
        int $i0;
        java.util.Collection $r1;

        $r0 := @this: org.apache.harmony.security.PolicyEntry;

        $r1 = $r0.<org.apache.harmony.security.PolicyEntry: java.util.Collection permissions>;

        if $r1 == null goto label1;

        $r1 = $r0.<org.apache.harmony.security.PolicyEntry: java.util.Collection permissions>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
