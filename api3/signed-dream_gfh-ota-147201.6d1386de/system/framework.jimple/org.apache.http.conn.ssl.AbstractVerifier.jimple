public abstract class org.apache.http.conn.ssl.AbstractVerifier extends java.lang.Object implements org.apache.http.conn.ssl.X509HostnameVerifier
{
    private static final java.lang.String[] BAD_COUNTRY_2LDS;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[14];

        $r0[0] = "ac";

        $r0[1] = "co";

        $r0[2] = "com";

        $r0[3] = "ed";

        $r0[4] = "edu";

        $r0[5] = "go";

        $r0[6] = "gouv";

        $r0[7] = "gov";

        $r0[8] = "info";

        $r0[9] = "lg";

        $r0[10] = "ne";

        $r0[11] = "net";

        $r0[12] = "or";

        $r0[13] = "org";

        <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS> = $r0;

        $r0 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r0);

        return;
    }

    public void <init>()
    {
        org.apache.http.conn.ssl.AbstractVerifier $r0;

        $r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean acceptableCountryWildcard(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1;
        char $c2;
        java.lang.String[] $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 < 7 goto label2;

        if $i0 > 9 goto label2;

        $i1 = $i0 - 3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c2 != 46 goto label2;

        $i0 = $i0 - 3;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(2, $i0);

        $r1 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>;

        $i0 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r1, $r0);

        if $i0 >= 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static int countDots(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        char $c3;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

        $i1 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label3;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c3 != 46 goto label2;

        $i0 = $i0 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i0;
    }

    public static java.lang.String[] getCNs(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate $r0;
        java.util.LinkedList $r1;
        java.lang.String[] $r2;
        java.util.StringTokenizer $r3;
        javax.security.auth.x500.X500Principal $r4;
        java.lang.String $r5;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r4 = virtualinvoke $r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r5 = virtualinvoke $r4.<javax.security.auth.x500.X500Principal: java.lang.String toString()>();

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");

     label1:
        $z0 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>("CN=");

        if $i0 < 0 goto label1;

        $i0 = $i0 + 3;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke $r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        virtualinvoke $r1.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        return $r2;

     label3:
        return null;
    }

    public static java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)
    {
        java.security.cert.CertificateParsingException $r0;
        java.util.LinkedList $r1;
        java.lang.String[] $r2;
        java.util.logging.Level $r3;
        java.security.cert.X509Certificate $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.List $r8;
        java.lang.Integer $r9;
        int $i0;
        java.lang.String $r10;
        java.lang.Class $r11;
        java.util.logging.Logger $r12;

        $r4 := @parameter0: java.security.cert.X509Certificate;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r5 = null;

     label1:
        $r5 = virtualinvoke $r4.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>();

     label2:
        if $r5 == null goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.List) $r7;

        $r7 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.lang.Integer) $r7;

        $i0 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        if $i0 != 2 goto label3;

        $r7 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(1);

        $r10 = (java.lang.String) $r7;

        virtualinvoke $r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

        goto label3;

     label4:
        $r0 := @caughtexception;

        $r11 = class "org/apache/http/conn/ssl/AbstractVerifier";

        $r10 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r12 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r10);

        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r12.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, "Error parsing certificate.", $r0);

        goto label2;

     label5:
        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        virtualinvoke $r1.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        return $r2;

     label6:
        return null;

        catch java.security.cert.CertificateParsingException from label1 to label2 with label4;
    }

    public final void verify(java.lang.String, java.security.cert.X509Certificate) throws javax.net.ssl.SSLException
    {
        org.apache.http.conn.ssl.AbstractVerifier $r0;
        java.lang.String $r1;
        java.security.cert.X509Certificate $r2;
        java.lang.String[] $r3, $r4;

        $r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.cert.X509Certificate;

        $r3 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>($r2);

        $r4 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)>($r2);

        virtualinvoke $r0.<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>($r1, $r3, $r4);

        return;
    }

    public final void verify(java.lang.String, javax.net.ssl.SSLSocket) throws java.io.IOException
    {
        org.apache.http.conn.ssl.AbstractVerifier $r0;
        java.lang.String $r1;
        javax.net.ssl.SSLSocket $r2;
        java.lang.NullPointerException $r3;
        javax.net.ssl.SSLSession $r4, $r5;
        java.io.InputStream $r6;
        java.security.cert.Certificate[] $r7;
        java.security.cert.Certificate $r8;
        java.security.cert.X509Certificate $r9;

        $r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: javax.net.ssl.SSLSocket;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("host to verify is null");

        throw $r3;

     label1:
        virtualinvoke $r2.<javax.net.ssl.SSLSocket: void startHandshake()>();

        $r4 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $r5 = $r4;

        if $r4 != null goto label2;

        $r6 = virtualinvoke $r2.<java.net.Socket: java.io.InputStream getInputStream()>();

        virtualinvoke $r6.<java.io.InputStream: int available()>();

        $r4 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $r5 = $r4;

        if $r4 != null goto label2;

        virtualinvoke $r2.<javax.net.ssl.SSLSocket: void startHandshake()>();

        $r5 = virtualinvoke $r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

     label2:
        $r7 = interfaceinvoke $r5.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

        $r8 = $r7[0];

        $r9 = (java.security.cert.X509Certificate) $r8;

        virtualinvoke $r0.<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r9);

        return;
    }

    public final void verify(java.lang.String, java.lang.String[], java.lang.String[], boolean) throws javax.net.ssl.SSLException
    {
        org.apache.http.conn.ssl.AbstractVerifier $r0;
        java.lang.String $r1, $r6, $r12, $r13;
        java.lang.String[] $r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.StringBuffer $r4;
        int $i0, $i1;
        java.util.LinkedList $r5;
        java.lang.StringBuilder $r7;
        javax.net.ssl.SSLException $r8;
        java.util.Locale $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;

        $r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String[];

        $z0 := @parameter3: boolean;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        if $r2 == null goto label01;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label01;

        $r6 = $r2[0];

        if $r6 == null goto label01;

        $r6 = $r2[0];

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);

     label01:
        if $r3 == null goto label04;

        $i0 = lengthof $r3;

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label04;

        $r6 = $r3[$i1];

        if $r6 == null goto label03;

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);

     label03:
        $i1 = $i1 + 1;

        goto label02;

     label04:
        $z1 = virtualinvoke $r5.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z1 == 0 goto label05;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate for <");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> doesn\'t contain CN or DNS subjectAlt");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new javax.net.ssl.SSLException;

        specialinvoke $r8.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r9 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        $z1 = 0;

        $r10 = virtualinvoke $r5.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.String) $r11;

        $r9 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r12 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" OR");

     label07:
        $z1 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("*.");

        if $z1 == 0 goto label11;

        $i0 = virtualinvoke $r12.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 < 0 goto label11;

        $z1 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>($r12);

        if $z1 == 0 goto label11;

        $z1 = staticinvoke <org.apache.http.conn.util.InetAddressUtils: boolean isIPv4Address(java.lang.String)>($r1);

        if $z1 != 0 goto label11;

        $z1 = 1;

     label08:
        if $z1 == 0 goto label13;

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>(1);

        $z2 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>($r13);

        $z1 = $z2;

        if $z2 == 0 goto label09;

        if $z0 == 0 goto label09;

        $i0 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>($r6);

        $i1 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>($r12);

        if $i0 != $i1 goto label12;

        $z1 = 1;

     label09:
        if $z1 == 0 goto label06;

     label10:
        if $z1 != 0 goto label14;

        $r8 = new javax.net.ssl.SSLException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hostname in certificate didn\'t match: <");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> !=");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label11:
        $z1 = 0;

        goto label08;

     label12:
        $z1 = 0;

        goto label09;

     label13:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        goto label09;

     label14:
        return;
    }

    public final boolean verify(java.lang.String, javax.net.ssl.SSLSession)
    {
        org.apache.http.conn.ssl.AbstractVerifier $r0;
        java.lang.String $r1;
        javax.net.ssl.SSLSession $r2;
        java.security.cert.Certificate[] $r3;
        java.security.cert.Certificate $r4;
        java.security.cert.X509Certificate $r5;
        javax.net.ssl.SSLException $r6;

        $r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: javax.net.ssl.SSLSession;

     label1:
        $r3 = interfaceinvoke $r2.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

     label2:
        $r4 = $r3[0];

     label3:
        $r5 = (java.security.cert.X509Certificate) $r4;

        virtualinvoke $r0.<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r5);

     label4:
        return 1;

     label5:
        $r6 := @caughtexception;

        return 0;

        catch javax.net.ssl.SSLException from label1 to label2 with label5;
        catch javax.net.ssl.SSLException from label3 to label4 with label5;
    }
}
