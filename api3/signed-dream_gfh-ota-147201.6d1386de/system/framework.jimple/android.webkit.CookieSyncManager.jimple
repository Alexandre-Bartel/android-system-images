public final class android.webkit.CookieSyncManager extends android.webkit.WebSyncManager
{
    private static android.webkit.CookieSyncManager sRef;
    private long mLastUpdate;

    private void <init>(android.content.Context)
    {
        android.webkit.CookieSyncManager $r0;
        android.content.Context $r1;

        $r0 := @this: android.webkit.CookieSyncManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.webkit.WebSyncManager: void <init>(android.content.Context,java.lang.String)>($r1, "CookieSyncManager");

        return;
    }

    public static android.webkit.CookieSyncManager createInstance(android.content.Context)
    {
        android.content.Context $r0;
        android.webkit.CookieSyncManager $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "android/webkit/CookieSyncManager";

     label1:
        $r1 = <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager sRef>;

        if $r1 != null goto label2;

        $r1 = new android.webkit.CookieSyncManager;

        specialinvoke $r1.<android.webkit.CookieSyncManager: void <init>(android.content.Context)>($r0);

        <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager sRef> = $r1;

     label2:
        $r1 = <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager sRef>;

     label3:
        exitmonitor class "android/webkit/CookieSyncManager";

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "android/webkit/CookieSyncManager";

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static android.webkit.CookieSyncManager getInstance()
    {
        android.webkit.CookieSyncManager $r0;
        java.lang.IllegalStateException $r1;
        java.lang.Throwable $r2;

        entermonitor class "android/webkit/CookieSyncManager";

     label1:
        $r0 = <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager sRef>;

        if $r0 != null goto label3;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("CookieSyncManager::createInstance() needs to be called before CookieSyncManager::getInstance()");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor class "android/webkit/CookieSyncManager";

        throw $r2;

     label3:
        $r0 = <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager sRef>;

     label4:
        exitmonitor class "android/webkit/CookieSyncManager";

        return $r0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    private void syncFromRamToFlash(java.util.ArrayList)
    {
        android.webkit.CookieSyncManager $r0;
        java.util.ArrayList $r1;
        java.lang.String $r2, $r3, $r8;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.webkit.CookieManager$Cookie $r6;
        byte $b0;
        android.webkit.WebViewDatabase $r7;
        android.webkit.CookieManager $r9;

        $r0 := @this: android.webkit.CookieSyncManager;

        $r1 := @parameter0: java.util.ArrayList;

        $r4 = virtualinvoke $r1.<java.util.AbstractList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.webkit.CookieManager$Cookie) $r5;

        $b0 = $r6.<android.webkit.CookieManager$Cookie: byte mode>;

        if $b0 == 1 goto label1;

        $b0 = $r6.<android.webkit.CookieManager$Cookie: byte mode>;

        if $b0 == 0 goto label2;

        $r7 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        $r8 = $r6.<android.webkit.CookieManager$Cookie: java.lang.String domain>;

        $r2 = $r6.<android.webkit.CookieManager$Cookie: java.lang.String path>;

        $r3 = $r6.<android.webkit.CookieManager$Cookie: java.lang.String name>;

        virtualinvoke $r7.<android.webkit.WebViewDatabase: void deleteCookies(java.lang.String,java.lang.String,java.lang.String)>($r8, $r2, $r3);

     label2:
        $b0 = $r6.<android.webkit.CookieManager$Cookie: byte mode>;

        if $b0 == 2 goto label3;

        $r7 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r7.<android.webkit.WebViewDatabase: void addCookie(android.webkit.CookieManager$Cookie)>($r6);

        $r9 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        virtualinvoke $r9.<android.webkit.CookieManager: void syncedACookie(android.webkit.CookieManager$Cookie)>($r6);

        goto label1;

     label3:
        $r9 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        virtualinvoke $r9.<android.webkit.CookieManager: void deleteACookie(android.webkit.CookieManager$Cookie)>($r6);

        goto label1;

     label4:
        return;
    }

    void clearAllCookies()
    {
        android.webkit.CookieSyncManager $r0;
        android.webkit.WebViewDatabase $r1;

        $r0 := @this: android.webkit.CookieSyncManager;

        $r1 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r1.<android.webkit.WebViewDatabase: void clearCookies()>();

        return;
    }

    void clearExpiredCookies(long)
    {
        android.webkit.CookieSyncManager $r0;
        long $l0;
        android.webkit.WebViewDatabase $r1;

        $r0 := @this: android.webkit.CookieSyncManager;

        $l0 := @parameter0: long;

        $r1 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r1.<android.webkit.WebViewDatabase: void clearExpiredCookies(long)>($l0);

        return;
    }

    void clearSessionCookies()
    {
        android.webkit.CookieSyncManager $r0;
        android.webkit.WebViewDatabase $r1;

        $r0 := @this: android.webkit.CookieSyncManager;

        $r1 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        virtualinvoke $r1.<android.webkit.WebViewDatabase: void clearSessionCookies()>();

        return;
    }

    java.util.ArrayList getCookiesForDomain(java.lang.String)
    {
        android.webkit.CookieSyncManager $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;
        android.webkit.WebViewDatabase $r3;

        $r0 := @this: android.webkit.CookieSyncManager;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        if $r3 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

     label1:
        $r3 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        $r2 = virtualinvoke $r3.<android.webkit.WebViewDatabase: java.util.ArrayList getCookiesForDomain(java.lang.String)>($r1);

        return $r2;
    }

    boolean hasCookies()
    {
        android.webkit.CookieSyncManager $r0;
        boolean $z0;
        android.webkit.WebViewDatabase $r1;

        $r0 := @this: android.webkit.CookieSyncManager;

        $r1 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = $r0.<android.webkit.WebSyncManager: android.webkit.WebViewDatabase mDataBase>;

        $z0 = virtualinvoke $r1.<android.webkit.WebViewDatabase: boolean hasCookies()>();

        return $z0;
    }

    protected void syncFromRamToFlash()
    {
        android.webkit.CookieSyncManager $r0;
        long $l0;
        android.webkit.CookieManager $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        $r0 := @this: android.webkit.CookieSyncManager;

        $r1 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $z0 = virtualinvoke $r1.<android.webkit.CookieManager: boolean acceptCookie()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $l0 = $r0.<android.webkit.CookieSyncManager: long mLastUpdate>;

        $r2 = virtualinvoke $r1.<android.webkit.CookieManager: java.util.ArrayList getUpdatedCookiesSince(long)>($l0);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<android.webkit.CookieSyncManager: long mLastUpdate> = $l0;

        specialinvoke $r0.<android.webkit.CookieSyncManager: void syncFromRamToFlash(java.util.ArrayList)>($r2);

        $r1 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $r2 = virtualinvoke $r1.<android.webkit.CookieManager: java.util.ArrayList deleteLRUDomain()>();

        specialinvoke $r0.<android.webkit.CookieSyncManager: void syncFromRamToFlash(java.util.ArrayList)>($r2);

        return;
    }
}
