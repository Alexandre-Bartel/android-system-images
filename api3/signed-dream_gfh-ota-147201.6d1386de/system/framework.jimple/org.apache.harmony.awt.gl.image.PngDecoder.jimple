public class org.apache.harmony.awt.gl.image.PngDecoder extends org.apache.harmony.awt.gl.image.ImageDecoder
{
    private static final int INPUT_BUFFER_SIZE;
    private static final int PNG_COLOR_TYPE_GRAY;
    private static final int PNG_COLOR_TYPE_GRAY_ALPHA;
    private static final int PNG_COLOR_TYPE_PLTE;
    private static final int PNG_COLOR_TYPE_RGB;
    private static final int PNG_COLOR_TYPE_RGBA;
    private static final int hintflags;
    int bitDepth;
    private byte[] buffer;
    byte[] byteOut;
    java.awt.image.ColorModel cm;
    byte[] cmap;
    int colorType;
    int dataElementsPerPixel;
    private long hNativeDecoder;
    int imageHeight;
    int imageWidth;
    int[] intOut;
    int numScanlines;
    boolean transferInts;
    int updateFromScanline;

    static void <clinit>()
    {
        <org.apache.harmony.awt.gl.image.PngDecoder: int hintflags> = 22;

        <org.apache.harmony.awt.gl.image.PngDecoder: int PNG_COLOR_TYPE_RGBA> = 6;

        <org.apache.harmony.awt.gl.image.PngDecoder: int PNG_COLOR_TYPE_RGB> = 2;

        <org.apache.harmony.awt.gl.image.PngDecoder: int PNG_COLOR_TYPE_PLTE> = 3;

        <org.apache.harmony.awt.gl.image.PngDecoder: int PNG_COLOR_TYPE_GRAY_ALPHA> = 4;

        <org.apache.harmony.awt.gl.image.PngDecoder: int PNG_COLOR_TYPE_GRAY> = 0;

        <org.apache.harmony.awt.gl.image.PngDecoder: int INPUT_BUFFER_SIZE> = 4096;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("gl");

        staticinvoke <org.apache.harmony.awt.gl.image.PngDecoder: void initIDs()>();

        return;
    }

    public void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource, java.io.InputStream)
    {
        org.apache.harmony.awt.gl.image.PngDecoder $r0;
        org.apache.harmony.awt.gl.image.DecodingImageSource $r1;
        java.io.InputStream $r2;
        byte[] $r3;

        $r0 := @this: org.apache.harmony.awt.gl.image.PngDecoder;

        $r1 := @parameter0: org.apache.harmony.awt.gl.image.DecodingImageSource;

        $r2 := @parameter1: java.io.InputStream;

        specialinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>($r1, $r2);

        $r3 = newarray (byte)[4096];

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: byte[] buffer> = $r3;

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int dataElementsPerPixel> = 1;

        return;
    }

    private native long decode(byte[], int, long);

    private static native void initIDs();

    private static native void releaseNativeDecoder(long);

    private void returnData()
    {
        org.apache.harmony.awt.gl.image.PngDecoder $r0;
        int $i0, $i1, $i2;

        $r0 := @this: org.apache.harmony.awt.gl.image.PngDecoder;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int numScanlines>;

        if $i0 <= 0 goto label3;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int updateFromScanline>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int numScanlines>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageHeight>;

        if $i0 <= $i1 goto label2;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageHeight>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int updateFromScanline>;

        $i0 = $i0 - $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int updateFromScanline>;

        $i2 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int numScanlines>;

        $i1 = $i1 + $i2;

        $i2 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageHeight>;

        $i1 = $i1 - $i2;

     label1:
        $i2 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int updateFromScanline>;

        specialinvoke $r0.<org.apache.harmony.awt.gl.image.PngDecoder: void transfer(int,int)>($i2, $i0);

        if $i1 == 0 goto label4;

        specialinvoke $r0.<org.apache.harmony.awt.gl.image.PngDecoder: void transfer(int,int)>(0, $i1);

        return;

     label2:
        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int numScanlines>;

        $i1 = 0;

        goto label1;

     label3:
        return;

     label4:
        return;
    }

    private void returnHeader()
    {
        org.apache.harmony.awt.gl.image.PngDecoder $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;
        byte $b4;
        java.awt.image.IndexColorModel $r4;
        boolean $z0;
        int[] $r5;
        java.awt.image.ColorModel $r6;
        java.util.Hashtable $r7;
        java.awt.image.DirectColorModel $r8;
        java.awt.image.ComponentColorModel $r9;
        java.awt.color.ColorSpace $r10;

        $r0 := @this: org.apache.harmony.awt.gl.image.PngDecoder;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageWidth>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageHeight>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setDimensions(int,int)>($i0, $i1);

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int colorType>;

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label01;
            case 2: goto label08;
            case 3: goto label10;
            case 4: goto label12;
            case 5: goto label01;
            case 6: goto label14;
            default: goto label01;
        };

     label01:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label02:
        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 8 goto label03;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 4 goto label03;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 2 goto label03;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 1 goto label03;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label03:
        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        $i0 = 1 << $i0;

        $i1 = $i0 - 1;

        $i1 = 255 / $i1;

        $r1 = newarray (byte)[$i0];

        $i2 = 0;

     label04:
        if $i2 >= $i0 goto label05;

        $i3 = $i2 * $i1;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i2 + 1;

        goto label04;

     label05:
        $r4 = new java.awt.image.IndexColorModel;

        specialinvoke $r4.<java.awt.image.IndexColorModel: void <init>(int,int,byte[],byte[],byte[])>(8, $i0, $r1, $r1, $r1);

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: java.awt.image.ColorModel cm> = $r4;

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: boolean transferInts> = 0;

     label06:
        $z0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: boolean transferInts>;

        if $z0 == 0 goto label16;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageWidth>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageHeight>;

        $i0 = $i0 * $i1;

        $r5 = newarray (int)[$i0];

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int[] intOut> = $r5;

     label07:
        $r6 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: java.awt.image.ColorModel cm>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setColorModel(java.awt.image.ColorModel)>($r6);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setHints(int)>(22);

        $r7 = new java.util.Hashtable;

        specialinvoke $r7.<java.util.Hashtable: void <init>()>();

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setProperties(java.util.Hashtable)>($r7);

        return;

     label08:
        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 8 goto label09;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label09:
        $r8 = new java.awt.image.DirectColorModel;

        specialinvoke $r8.<java.awt.image.DirectColorModel: void <init>(int,int,int,int)>(24, 16711680, 65280, 255);

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: java.awt.image.ColorModel cm> = $r8;

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: boolean transferInts> = 1;

        goto label06;

     label10:
        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 8 goto label11;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 4 goto label11;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 2 goto label11;

        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 1 goto label11;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label11:
        $r4 = new java.awt.image.IndexColorModel;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: byte[] cmap>;

        $i0 = lengthof $r1;

        $i0 = $i0 / 3;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: byte[] cmap>;

        specialinvoke $r4.<java.awt.image.IndexColorModel: void <init>(int,int,byte[],int,boolean)>(8, $i0, $r1, 0, 0);

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: java.awt.image.ColorModel cm> = $r4;

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: boolean transferInts> = 0;

        goto label06;

     label12:
        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 8 goto label13;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label13:
        $r9 = new java.awt.image.ComponentColorModel;

        $r10 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1003);

        specialinvoke $r9.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>($r10, 1, 0, 3, 0);

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: java.awt.image.ColorModel cm> = $r9;

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: boolean transferInts> = 0;

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int dataElementsPerPixel> = 2;

        goto label06;

     label14:
        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int bitDepth>;

        if $i0 == 8 goto label15;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>("awt.3C");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label15:
        $r6 = staticinvoke <java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>();

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: java.awt.image.ColorModel cm> = $r6;

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: boolean transferInts> = 1;

        goto label06;

     label16:
        $i0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageWidth>;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageHeight>;

        $i0 = $i0 * $i1;

        $i1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int dataElementsPerPixel>;

        $i0 = $i0 * $i1;

        $r1 = newarray (byte)[$i0];

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: byte[] byteOut> = $r1;

        goto label07;
    }

    private void transfer(int, int)
    {
        org.apache.harmony.awt.gl.image.PngDecoder $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.awt.image.ColorModel $r1;
        int[] $r2;
        byte[] $r3;

        $r0 := @this: org.apache.harmony.awt.gl.image.PngDecoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: boolean transferInts>;

        if $z0 == 0 goto label1;

        $i2 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageWidth>;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: java.awt.image.ColorModel cm>;

        $r2 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int[] intOut>;

        $i3 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageWidth>;

        $i3 = $i0 * $i3;

        $i4 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageWidth>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>(0, $i0, $i2, $i1, $r1, $r2, $i3, $i4);

        return;

     label1:
        $i2 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageWidth>;

        $r1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: java.awt.image.ColorModel cm>;

        $r3 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: byte[] byteOut>;

        $i3 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageWidth>;

        $i3 = $i3 * $i0;

        $i4 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int dataElementsPerPixel>;

        $i3 = $i3 * $i4;

        $i4 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int imageWidth>;

        $i5 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: int dataElementsPerPixel>;

        $i4 = $i4 * $i5;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>(0, $i0, $i2, $i1, $r1, $r3, $i3, $i4);

        return;
    }

    public void decodeImage() throws java.io.IOException
    {
        org.apache.harmony.awt.gl.image.PngDecoder $r0;
        int $i0;
        java.io.InputStream $r1;
        byte[] $r2;
        long $l1;
        byte $b2;
        java.io.IOException $r3;
        java.lang.Throwable $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: org.apache.harmony.awt.gl.image.PngDecoder;

     label01:
        $i0 = 4096 - 0;

     label02:
        $r1 = $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: java.io.InputStream inputStream>;

        $r2 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: byte[] buffer>;

     label03:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i0);

     label04:
        if $i0 >= 0 goto label08;

     label05:
        $l1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: long hNativeDecoder>;

        staticinvoke <org.apache.harmony.awt.gl.image.PngDecoder: void releaseNativeDecoder(long)>($l1);

     label06:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void imageComplete(int)>(3);

     label07:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void closeStream()>();

        return;

     label08:
        $i0 = $i0 + 0;

     label09:
        $r2 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: byte[] buffer>;

        $l1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: long hNativeDecoder>;

     label10:
        $l1 = specialinvoke $r0.<org.apache.harmony.awt.gl.image.PngDecoder: long decode(byte[],int,long)>($r2, $i0, $l1);

        $r0.<org.apache.harmony.awt.gl.image.PngDecoder: long hNativeDecoder> = $l1;

        specialinvoke $r0.<org.apache.harmony.awt.gl.image.PngDecoder: void returnData()>();

     label11:
        $l1 = $r0.<org.apache.harmony.awt.gl.image.PngDecoder: long hNativeDecoder>;

     label12:
        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label01;

        goto label06;

     label13:
        $r3 := @caughtexception;

     label14:
        throw $r3;

     label15:
        $r4 := @caughtexception;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void closeStream()>();

        throw $r4;

     label16:
        $r5 := @caughtexception;

     label17:
        virtualinvoke $r0.<org.apache.harmony.awt.gl.image.ImageDecoder: void imageComplete(int)>(1);

        throw $r5;

     label18:
        nop;

        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label05 to label07 with label13;
        catch java.lang.RuntimeException from label02 to label07 with label16;
        catch java.lang.Throwable from label02 to label07 with label15;
        catch java.io.IOException from label10 to label11 with label13;
        catch java.lang.RuntimeException from label09 to label12 with label16;
        catch java.lang.Throwable from label09 to label12 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
    }
}
