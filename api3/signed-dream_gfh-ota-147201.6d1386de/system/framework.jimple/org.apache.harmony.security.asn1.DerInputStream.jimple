public final class org.apache.harmony.security.asn1.DerInputStream extends org.apache.harmony.security.asn1.BerInputStream
{
    private static final byte[] UNUSED_BITS_MASK;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[7];

        $r0[0] = 1;

        $r0[1] = 3;

        $r0[2] = 7;

        $r0[3] = 15;

        $r0[4] = 31;

        $r0[5] = 63;

        $r0[6] = 127;

        <org.apache.harmony.security.asn1.DerInputStream: byte[] UNUSED_BITS_MASK> = $r0;

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        java.io.InputStream $r1;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void <init>(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public void <init>(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void <init>(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public final int next() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        int $i0, $i1;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $i0 = specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

        $i1 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i1 != -1 goto label1;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.105");

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        return $i0;
    }

    public void readBitString() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.String $r2;
        byte[] $r3, $r4;
        byte $b1, $b2;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 35 goto label1;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.106", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readBitString()>();

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 <= 1 goto label2;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $b1 = $r3[$i0];

        if $b1 == 0 goto label3;

        $r3 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int offset>;

        $i0 = $i0 - 1;

        $b1 = $r3[$i0];

        $r3 = <org.apache.harmony.security.asn1.DerInputStream: byte[] UNUSED_BITS_MASK>;

        $r4 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $b2 = $r4[$i0];

        $i0 = $b2 - 1;

        $b2 = $r3[$i0];

        $b1 = $b1 & $b2;

        if $b1 == 0 goto label4;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.107", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        return;

     label3:
        return;

     label4:
        return;
    }

    public void readBoolean() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        int $i0;
        java.lang.String $r1;
        byte[] $r2;
        byte $b1;
        org.apache.harmony.security.asn1.ASN1Exception $r3;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readBoolean()>();

        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $b1 = $r2[$i0];

        if $b1 == 0 goto label1;

        $r2 = $r0.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $b1 = $r2[$i0];

        if $b1 == -1 goto label2;

        $r3 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.108", $i0);

        specialinvoke $r3.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r1);

        throw $r3;

     label1:
        return;

     label2:
        return;
    }

    public void readGeneralizedTime() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        int $i0;
        java.lang.String $r1;
        org.apache.harmony.security.asn1.ASN1Exception $r2;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 56 goto label1;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.10D", $i0);

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readGeneralizedTime()>();

        return;
    }

    public void readOctetString() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        int $i0;
        java.lang.String $r1;
        org.apache.harmony.security.asn1.ASN1Exception $r2;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 36 goto label1;

        $r2 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.109", $i0);

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readOctetString()>();

        return;
    }

    public void readSequence(org.apache.harmony.security.asn1.ASN1Sequence) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        org.apache.harmony.security.asn1.ASN1Sequence $r1;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Sequence;

        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readSequence(org.apache.harmony.security.asn1.ASN1Sequence)>($r1);

        return;
    }

    public void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        org.apache.harmony.security.asn1.ASN1SetOf $r1;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SetOf;

        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf)>($r1);

        return;
    }

    public void readString(org.apache.harmony.security.asn1.ASN1StringType) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        org.apache.harmony.security.asn1.ASN1StringType $r1;
        int $i0, $i1;
        java.lang.String $r2;
        org.apache.harmony.security.asn1.ASN1Exception $r3;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $r1 := @parameter0: org.apache.harmony.security.asn1.ASN1StringType;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $i1 = $r1.<org.apache.harmony.security.asn1.ASN1Type: int constrId>;

        if $i0 != $i1 goto label1;

        $r3 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.10A", $i0);

        specialinvoke $r3.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readString(org.apache.harmony.security.asn1.ASN1StringType)>($r1);

        return;
    }

    public void readUTCTime() throws java.io.IOException
    {
        org.apache.harmony.security.asn1.DerInputStream $r0;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Exception $r1;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.security.asn1.DerInputStream;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i0 != 55 goto label1;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.10B", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        if $i0 == 13 goto label2;

        $r1 = new org.apache.harmony.security.asn1.ASN1Exception;

        $i0 = $r0.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.10C", $i0);

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        specialinvoke $r0.<org.apache.harmony.security.asn1.BerInputStream: void readUTCTime()>();

        return;
    }
}
