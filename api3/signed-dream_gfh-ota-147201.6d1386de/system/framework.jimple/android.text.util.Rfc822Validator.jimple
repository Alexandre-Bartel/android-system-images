public class android.text.util.Rfc822Validator extends java.lang.Object implements android.widget.AutoCompleteTextView$Validator
{
    private static final java.util.regex.Pattern EMAIL_ADDRESS_PATTERN;
    private java.lang.String mDomain;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^\\s@]+@[^\\s@]+\\.[a-zA-z][a-zA-Z][a-zA-Z]*");

        <android.text.util.Rfc822Validator: java.util.regex.Pattern EMAIL_ADDRESS_PATTERN> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        android.text.util.Rfc822Validator $r0;
        java.lang.String $r1;

        $r0 := @this: android.text.util.Rfc822Validator;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.text.util.Rfc822Validator: java.lang.String mDomain> = $r1;

        return;
    }

    private java.lang.String removeIllegalCharacters(java.lang.String)
    {
        android.text.util.Rfc822Validator $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        char $c2;

        $r0 := @this: android.text.util.Rfc822Validator;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        if $c2 <= 32 goto label2;

        if $c2 <= 126 goto label3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        if $c2 == 40 goto label2;

        if $c2 == 41 goto label2;

        if $c2 == 60 goto label2;

        if $c2 == 62 goto label2;

        if $c2 == 64 goto label2;

        if $c2 == 44 goto label2;

        if $c2 == 59 goto label2;

        if $c2 == 58 goto label2;

        if $c2 == 92 goto label2;

        if $c2 == 34 goto label2;

        if $c2 == 91 goto label2;

        if $c2 == 93 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label2;

     label4:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.CharSequence fixText(java.lang.CharSequence)
    {
        android.text.util.Rfc822Validator $r0;
        java.lang.CharSequence $r1;
        java.lang.StringBuilder $r2, $r6;
        int $i0, $i1, $i2;
        android.text.util.Rfc822Token[] $r3;
        android.text.util.Rfc822Token $r4;
        java.lang.String $r5, $r7;

        $r0 := @this: android.text.util.Rfc822Validator;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 = staticinvoke <android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>($r1);

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r3 = staticinvoke <android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>($r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label2:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label8;

        $r4 = $r3[$i0];

        $r5 = virtualinvoke $r4.<android.text.util.Rfc822Token: java.lang.String getAddress()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(64);

        if $i1 >= 0 goto label5;

        $r4 = $r3[$i0];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = specialinvoke $r0.<android.text.util.Rfc822Validator: java.lang.String removeIllegalCharacters(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r7 = $r0.<android.text.util.Rfc822Validator: java.lang.String mDomain>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.text.util.Rfc822Token: void setAddress(java.lang.String)>($r7);

     label3:
        $r4 = $r3[$i0];

        $r7 = virtualinvoke $r4.<android.text.util.Rfc822Token: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $i1 = $i0 + 1;

        $i2 = lengthof $r3;

        if $i1 >= $i2 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r7 = specialinvoke $r0.<android.text.util.Rfc822Validator: java.lang.String removeIllegalCharacters(java.lang.String)>($r7);

        $i1 = $i1 + 1;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i1);

        $r5 = specialinvoke $r0.<android.text.util.Rfc822Validator: java.lang.String removeIllegalCharacters(java.lang.String)>($r5);

        $r4 = $r3[$i0];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 == 0 goto label7;

        $r7 = $r5;

     label6:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.text.util.Rfc822Token: void setAddress(java.lang.String)>($r7);

        goto label3;

     label7:
        $r7 = $r0.<android.text.util.Rfc822Validator: java.lang.String mDomain>;

        goto label6;

     label8:
        return $r2;
    }

    public boolean isValid(java.lang.CharSequence)
    {
        android.text.util.Rfc822Validator $r0;
        java.lang.CharSequence $r1;
        android.text.util.Rfc822Token[] $r2;
        int $i0;
        java.util.regex.Pattern $r3;
        android.text.util.Rfc822Token $r4;
        java.lang.String $r5;
        java.util.regex.Matcher $r6;
        boolean $z0;

        $r0 := @this: android.text.util.Rfc822Validator;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>($r1);

        $i0 = lengthof $r2;

        if $i0 != 1 goto label1;

        $r3 = <android.text.util.Rfc822Validator: java.util.regex.Pattern EMAIL_ADDRESS_PATTERN>;

        $r4 = $r2[0];

        $r5 = virtualinvoke $r4.<android.text.util.Rfc822Token: java.lang.String getAddress()>();

        $r6 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
