class android.content.SyncManager$SyncQueue extends java.lang.Object
{
    private static final int COLUMN_ACCOUNT;
    private static final int COLUMN_AUTHORITY;
    private static final int COLUMN_EXTRAS;
    private static final int COLUMN_ID;
    private static final int COLUMN_SOURCE;
    private static final boolean DEBUG_CHECK_DATA_CONSISTENCY;
    private final java.lang.String[] COLUMNS;
    private final java.util.HashMap mOpsByKey;
    private final java.util.PriorityQueue mOpsByWhen;
    private android.content.SyncStorageEngine mSyncStorageEngine;

    public void <init>(android.content.SyncStorageEngine)
    {
        android.content.SyncManager$SyncQueue $r0;
        android.content.SyncStorageEngine $r1;
        java.lang.String[] $r2;
        java.util.PriorityQueue $r3;
        java.util.HashMap $r4;
        android.database.Cursor $r5;
        boolean $z0;
        android.content.SyncManager$SyncOperation $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.content.SyncManager$SyncQueue;

        $r1 := @parameter0: android.content.SyncStorageEngine;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (java.lang.String)[5];

        $r2[0] = "_id";

        $r2[1] = "authority";

        $r2[2] = "account";

        $r2[3] = "extras";

        $r2[4] = "source";

        $r0.<android.content.SyncManager$SyncQueue: java.lang.String[] COLUMNS> = $r2;

        $r3 = new java.util.PriorityQueue;

        specialinvoke $r3.<java.util.PriorityQueue: void <init>()>();

        $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen> = $r3;

        $r4 = staticinvoke <com.google.android.collect.Maps: java.util.HashMap newHashMap()>();

        $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey> = $r4;

        $r0.<android.content.SyncManager$SyncQueue: android.content.SyncStorageEngine mSyncStorageEngine> = $r1;

        $r1 = $r0.<android.content.SyncManager$SyncQueue: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r2 = $r0.<android.content.SyncManager$SyncQueue: java.lang.String[] COLUMNS>;

        $r5 = virtualinvoke $r1.<android.content.SyncStorageEngine: android.database.Cursor getPendingSyncsCursor(java.lang.String[])>($r2);

     label1:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label4;

        $r6 = specialinvoke $r0.<android.content.SyncManager$SyncQueue: android.content.SyncManager$SyncOperation cursorToOperation(android.database.Cursor)>($r5);

        specialinvoke $r0.<android.content.SyncManager$SyncQueue: boolean add(android.content.SyncManager$SyncOperation,boolean)>($r6, 1);

     label2:
        goto label1;

     label3:
        $r7 := @caughtexception;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        throw $r7;

     label4:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean add(android.content.SyncManager$SyncOperation, boolean)
    {
        android.content.SyncManager$SyncQueue $r0;
        android.content.SyncManager$SyncOperation $r1, $r4;
        boolean $z0;
        java.lang.String $r2, $r11;
        android.content.ContentValues $r3;
        long $l0, $l2;
        byte $b1;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        android.os.Bundle $r7;
        java.lang.Long $r8;
        android.os.Parcel $r9;
        byte[] $r10;
        int $i3;
        java.lang.Integer $r12;
        android.content.SyncStorageEngine $r13;
        android.net.Uri $r14;
        java.lang.IllegalStateException $r15;
        java.lang.StringBuilder $r16;
        java.lang.Throwable $r17;
        java.util.PriorityQueue $r18;

        $r0 := @this: android.content.SyncManager$SyncQueue;

        $r1 := @parameter0: android.content.SyncManager$SyncOperation;

        $z0 := @parameter1: boolean;

        $l0 = $r1.<android.content.SyncManager$SyncOperation: long delay>;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label01;

        $r4 = virtualinvoke $r0.<android.content.SyncManager$SyncQueue: android.content.SyncManager$SyncOperation head()>();

        if $r4 == null goto label02;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $r4.<android.content.SyncManager$SyncOperation: long earliestRunTime>;

        $l2 = $l2 - 1L;

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l2);

        $r1.<android.content.SyncManager$SyncOperation: long earliestRunTime> = $l0;

     label01:
        $r2 = $r1.<android.content.SyncManager$SyncOperation: java.lang.String key>;

        $r5 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (android.content.SyncManager$SyncOperation) $r6;

        if $r4 == null goto label03;

        $l0 = $r4.<android.content.SyncManager$SyncOperation: long delay>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label03;

        $r7 = $r1.<android.content.SyncManager$SyncOperation: android.os.Bundle extras>;

        $z0 = virtualinvoke $r7.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("force", 0);

        if $z0 != 0 goto label03;

        return 0;

     label02:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1.<android.content.SyncManager$SyncOperation: long earliestRunTime> = $l0;

        goto label01;

     label03:
        if $r4 == null goto label04;

        $l0 = $r1.<android.content.SyncManager$SyncOperation: long earliestRunTime>;

        $l2 = $r4.<android.content.SyncManager$SyncOperation: long earliestRunTime>;

        $b1 = $l0 cmp $l2;

        if $b1 < 0 goto label04;

        return 0;

     label04:
        if $r4 == null goto label05;

        virtualinvoke $r0.<android.content.SyncManager$SyncQueue: void removeByKey(java.lang.String)>($r2);

     label05:
        $r8 = $r1.<android.content.SyncManager$SyncOperation: java.lang.Long rowId>;

        if $r8 != null goto label11;

        $r9 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label06:
        $r7 = $r1.<android.content.SyncManager$SyncOperation: android.os.Bundle extras>;

        virtualinvoke $r7.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r9, 0);

        $r10 = virtualinvoke $r9.<android.os.Parcel: byte[] marshall()>();

     label07:
        virtualinvoke $r9.<android.os.Parcel: void recycle()>();

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        $r11 = $r1.<android.content.SyncManager$SyncOperation: java.lang.String account>;

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("account", $r11);

        $r11 = $r1.<android.content.SyncManager$SyncOperation: java.lang.String authority>;

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("authority", $r11);

        $i3 = $r1.<android.content.SyncManager$SyncOperation: int syncSource>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("source", $r12);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,byte[])>("extras", $r10);

        $r13 = $r0.<android.content.SyncManager$SyncQueue: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r14 = virtualinvoke $r13.<android.content.SyncStorageEngine: android.net.Uri insertIntoPending(android.content.ContentValues)>($r3);

        if $r14 != null goto label10;

        $r8 = null;

     label08:
        $r1.<android.content.SyncManager$SyncOperation: java.lang.Long rowId> = $r8;

        $r8 = $r1.<android.content.SyncManager$SyncOperation: java.lang.Long rowId>;

        if $r8 != null goto label11;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error adding pending sync operation ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r15;

     label09:
        $r17 := @caughtexception;

        virtualinvoke $r9.<android.os.Parcel: void recycle()>();

        throw $r17;

     label10:
        $l0 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>($r14);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        goto label08;

     label11:
        $r5 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        $r18 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        virtualinvoke $r18.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r1);

        return 1;

        catch java.lang.Throwable from label06 to label07 with label09;
    }

    private android.content.SyncManager$SyncOperation cursorToOperation(android.database.Cursor)
    {
        android.content.SyncManager$SyncQueue $r0;
        android.database.Cursor $r1;
        android.content.SyncManager$SyncOperation $r2;
        byte[] $r3;
        android.os.Parcel $r4;
        int $i0;
        android.os.Bundle $r5;
        java.lang.String $r6, $r7;
        long $l1;
        java.lang.Long $r8;
        java.lang.RuntimeException $r9;
        java.lang.Throwable $r10;

        $r0 := @this: android.content.SyncManager$SyncQueue;

        $r1 := @parameter0: android.database.Cursor;

        $r3 = interfaceinvoke $r1.<android.database.Cursor: byte[] getBlob(int)>(3);

        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $i0 = lengthof $r3;

        virtualinvoke $r4.<android.os.Parcel: void unmarshall(byte[],int,int)>($r3, 0, $i0);

        virtualinvoke $r4.<android.os.Parcel: void setDataPosition(int)>(0);

        $r5 = virtualinvoke $r4.<android.os.Parcel: android.os.Bundle readBundle()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

     label3:
        $r2 = new android.content.SyncManager$SyncOperation;

        $r6 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(2);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>(4);

        $r7 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        specialinvoke $r2.<android.content.SyncManager$SyncOperation: void <init>(java.lang.String,int,java.lang.String,android.os.Bundle,long)>($r6, $i0, $r7, $r5, 0L);

        $l1 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>(0);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r2.<android.content.SyncManager$SyncOperation: java.lang.Long rowId> = $r8;

        return $r2;

     label4:
        $r9 := @caughtexception;

     label5:
        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

     label6:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        goto label3;

     label7:
        $r10 := @caughtexception;

        virtualinvoke $r4.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private void debugCheckDataStructures(boolean)
    {
        android.content.SyncManager$SyncQueue $r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r15;
        java.util.HashMap $r2;
        int $i0, $i1;
        java.util.PriorityQueue $r3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5, $r11;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        android.content.SyncManager$SyncOperation $r8;
        java.util.Set $r9;
        java.util.Map$Entry $r10;
        android.content.SyncStorageEngine $r12;
        java.lang.String[] $r13;
        android.database.Cursor $r14;
        java.lang.Throwable $r16;

        $r0 := @this: android.content.SyncManager$SyncQueue;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        $r3 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $i1 = virtualinvoke $r3.<java.util.PriorityQueue: int size()>();

        if $i0 == $i1 goto label01;

        $r4 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size mismatch: ");

        $r2 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $r3 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $i0 = virtualinvoke $r3.<java.util.PriorityQueue: int size()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label01:
        $r3 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $r6 = virtualinvoke $r3.<java.util.PriorityQueue: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.content.SyncManager$SyncOperation) $r7;

        $r2 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $r5 = $r8.<android.content.SyncManager$SyncOperation: java.lang.String key>;

        $z1 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r5);

        if $z1 != 0 goto label02;

        $r4 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("operation ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is in mOpsByWhen but not mOpsByKey");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label03:
        $r2 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $r9 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (android.content.SyncManager$SyncOperation) $r7;

        $r7 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r7;

        $r11 = $r8.<android.content.SyncManager$SyncOperation: java.lang.String key>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label05;

        $r4 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("operation ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in mOpsByKey doesn\'t match key ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label05:
        $r3 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $z1 = virtualinvoke $r3.<java.util.AbstractCollection: boolean contains(java.lang.Object)>($r8);

        if $z1 != 0 goto label04;

        $r4 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("operation ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is in mOpsByKey but not mOpsByWhen");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label06:
        if $z0 == 0 goto label10;

        $r12 = $r0.<android.content.SyncManager$SyncQueue: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r13 = $r0.<android.content.SyncManager$SyncQueue: java.lang.String[] COLUMNS>;

        $r14 = virtualinvoke $r12.<android.content.SyncStorageEngine: android.database.Cursor getPendingSyncsCursor(java.lang.String[])>($r13);

     label07:
        $r2 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        $i1 = interfaceinvoke $r14.<android.database.Cursor: int getCount()>();

        if $i0 == $i1 goto label09;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>($r14, $r1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r0.<android.content.SyncManager$SyncQueue: void dump(java.lang.StringBuilder)>($r1);

        $r4 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DB size mismatch: ");

        $r2 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $i0 = interfaceinvoke $r14.<android.database.Cursor: int getCount()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label08:
        $r16 := @caughtexception;

        interfaceinvoke $r14.<android.database.Cursor: void close()>();

        throw $r16;

     label09:
        interfaceinvoke $r14.<android.database.Cursor: void close()>();

        return;

     label10:
        return;

        catch java.lang.Throwable from label07 to label08 with label08;
    }

    public boolean add(android.content.SyncManager$SyncOperation)
    {
        android.content.SyncManager$SyncQueue $r0;
        android.content.SyncManager$SyncOperation $r1, $r2;
        boolean $z0;

        $r0 := @this: android.content.SyncManager$SyncQueue;

        $r1 := @parameter0: android.content.SyncManager$SyncOperation;

        $r2 = new android.content.SyncManager$SyncOperation;

        specialinvoke $r2.<android.content.SyncManager$SyncOperation: void <init>(android.content.SyncManager$SyncOperation)>($r1);

        $z0 = specialinvoke $r0.<android.content.SyncManager$SyncQueue: boolean add(android.content.SyncManager$SyncOperation,boolean)>($r2, 0);

        return $z0;
    }

    public void clear(java.lang.String, java.lang.String)
    {
        android.content.SyncManager$SyncQueue $r0;
        java.lang.String $r1, $r2, $r9;
        java.util.HashMap $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;
        android.content.SyncManager$SyncOperation $r8;
        java.util.PriorityQueue $r10;
        java.lang.IllegalStateException $r11;
        java.lang.StringBuilder $r12;
        android.content.SyncStorageEngine $r13;
        java.lang.Long $r14;
        long $l0;
        int $i1;

        $r0 := @this: android.content.SyncManager$SyncQueue;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (android.content.SyncManager$SyncOperation) $r6;

        if $r1 == null goto label2;

        $r9 = $r8.<android.content.SyncManager$SyncOperation: java.lang.String account>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

     label2:
        if $r2 == null goto label3;

        $r9 = $r8.<android.content.SyncManager$SyncOperation: java.lang.String authority>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

     label3:
        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

        $r10 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $z0 = virtualinvoke $r10.<java.util.PriorityQueue: boolean remove(java.lang.Object)>($r8);

        if $z0 != 0 goto label4;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in mOpsByWhen");

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r11;

     label4:
        $r13 = $r0.<android.content.SyncManager$SyncQueue: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r14 = $r8.<android.content.SyncManager$SyncOperation: java.lang.Long rowId>;

        $l0 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $i1 = virtualinvoke $r13.<android.content.SyncStorageEngine: int deleteFromPending(long)>($l0);

        if $i1 == 1 goto label1;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find pending row for ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r11;

     label5:
        return;
    }

    public void dump(java.lang.StringBuilder)
    {
        android.content.SyncManager$SyncQueue $r0;
        java.lang.StringBuilder $r1, $r2;
        java.util.PriorityQueue $r3;
        int $i0;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.content.SyncManager$SyncOperation $r6;

        $r0 := @this: android.content.SyncManager$SyncQueue;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SyncQueue: ");

        $r3 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $i0 = virtualinvoke $r3.<java.util.PriorityQueue: int size()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" operation(s)\n");

        $r3 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $r4 = virtualinvoke $r3.<java.util.PriorityQueue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.content.SyncManager$SyncOperation) $r5;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label1;

     label2:
        return;
    }

    public android.content.SyncManager$SyncOperation head()
    {
        java.util.PriorityQueue $r0;
        java.lang.Object $r1;
        android.content.SyncManager$SyncQueue $r2;
        android.content.SyncManager$SyncOperation $r3;

        $r2 := @this: android.content.SyncManager$SyncQueue;

        $r0 = $r2.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $r1 = virtualinvoke $r0.<java.util.PriorityQueue: java.lang.Object peek()>();

        $r3 = (android.content.SyncManager$SyncOperation) $r1;

        return $r3;
    }

    public void popHead()
    {
        android.content.SyncManager$SyncQueue $r0;
        java.util.PriorityQueue $r1;
        java.lang.Object $r2;
        android.content.SyncManager$SyncOperation $r3;
        java.util.HashMap $r4;
        java.lang.String $r5;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7;
        android.content.SyncStorageEngine $r8;
        java.lang.Long $r9;
        long $l0;
        int $i1;

        $r0 := @this: android.content.SyncManager$SyncQueue;

        $r1 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $r2 = virtualinvoke $r1.<java.util.AbstractQueue: java.lang.Object remove()>();

        $r3 = (android.content.SyncManager$SyncOperation) $r2;

        $r4 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $r5 = $r3.<android.content.SyncManager$SyncOperation: java.lang.String key>;

        $r2 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

        if $r2 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in mOpsByKey");

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label1:
        $r8 = $r0.<android.content.SyncManager$SyncQueue: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r9 = $r3.<android.content.SyncManager$SyncOperation: java.lang.Long rowId>;

        $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $i1 = virtualinvoke $r8.<android.content.SyncStorageEngine: int deleteFromPending(long)>($l0);

        if $i1 == 1 goto label2;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find pending row for ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label2:
        return;
    }

    public void removeByKey(java.lang.String)
    {
        android.content.SyncManager$SyncQueue $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        android.content.SyncManager$SyncOperation $r4;
        java.util.PriorityQueue $r5;
        boolean $z0;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7;
        android.content.SyncStorageEngine $r8;
        java.lang.Long $r9;
        long $l0;
        int $i1;

        $r0 := @this: android.content.SyncManager$SyncQueue;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.content.SyncManager$SyncQueue: java.util.HashMap mOpsByKey>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r4 = (android.content.SyncManager$SyncOperation) $r3;

        $r5 = $r0.<android.content.SyncManager$SyncQueue: java.util.PriorityQueue mOpsByWhen>;

        $z0 = virtualinvoke $r5.<java.util.PriorityQueue: boolean remove(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in mOpsByWhen");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label1:
        $r8 = $r0.<android.content.SyncManager$SyncQueue: android.content.SyncStorageEngine mSyncStorageEngine>;

        $r9 = $r4.<android.content.SyncManager$SyncOperation: java.lang.Long rowId>;

        $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $i1 = virtualinvoke $r8.<android.content.SyncStorageEngine: int deleteFromPending(long)>($l0);

        if $i1 == 1 goto label2;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find pending row for ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.content.SyncManager$SyncQueue: int COLUMN_SOURCE> = 4;

        <android.content.SyncManager$SyncQueue: int COLUMN_ID> = 0;

        <android.content.SyncManager$SyncQueue: int COLUMN_EXTRAS> = 3;

        <android.content.SyncManager$SyncQueue: int COLUMN_AUTHORITY> = 1;

        <android.content.SyncManager$SyncQueue: int COLUMN_ACCOUNT> = 2;

        return;
    }
}
