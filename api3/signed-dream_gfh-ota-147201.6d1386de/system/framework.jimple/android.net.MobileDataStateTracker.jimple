public class android.net.MobileDataStateTracker extends android.net.NetworkStateTracker
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private static final java.lang.String[] sDnsPropNames;
    private int mDefaultGatewayAddr;
    private java.util.List mDnsServers;
    private java.lang.String mInterfaceName;
    private int mLastCallingPid;
    private com.android.internal.telephony.Phone$DataState mMobileDataState;
    private com.android.internal.telephony.ITelephony mPhoneService;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.net.MobileDataStateTracker: java.lang.String TAG> = "MobileDataStateTracker";

        <android.net.MobileDataStateTracker: boolean DBG> = 0;

        $r0 = newarray (java.lang.String)[8];

        $r0[0] = "net.rmnet0.dns1";

        $r0[1] = "net.rmnet0.dns2";

        $r0[2] = "net.eth0.dns1";

        $r0[3] = "net.eth0.dns2";

        $r0[4] = "net.eth0.dns3";

        $r0[5] = "net.eth0.dns4";

        $r0[6] = "net.gprs.dns1";

        $r0[7] = "net.gprs.dns2";

        <android.net.MobileDataStateTracker: java.lang.String[] sDnsPropNames> = $r0;

        return;
    }

    public void <init>(android.content.Context, android.os.Handler)
    {
        android.net.MobileDataStateTracker $r0;
        android.content.Context $r1;
        android.os.Handler $r2;
        android.telephony.TelephonyManager $r3;
        int $i0;
        java.lang.String $r4;
        java.util.ArrayList $r5;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.os.Handler;

        $r3 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i0 = virtualinvoke $r3.<android.telephony.TelephonyManager: int getNetworkType()>();

        $r3 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $r4 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()>();

        specialinvoke $r0.<android.net.NetworkStateTracker: void <init>(android.content.Context,android.os.Handler,int,int,java.lang.String,java.lang.String)>($r1, $r2, 0, $i0, "MOBILE", $r4);

        $r0.<android.net.MobileDataStateTracker: int mLastCallingPid> = -1;

        $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService> = null;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r0.<android.net.MobileDataStateTracker: java.util.List mDnsServers> = $r5;

        return;
    }

    static com.android.internal.telephony.Phone$DataState access$100(android.content.Intent)
    {
        android.content.Intent $r0;
        com.android.internal.telephony.Phone$DataState $r1;

        $r0 := @parameter0: android.content.Intent;

        $r1 = staticinvoke <android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState getMobileDataState(android.content.Intent)>($r0);

        return $r1;
    }

    static com.android.internal.telephony.Phone$DataState access$200(android.net.MobileDataStateTracker)
    {
        android.net.MobileDataStateTracker $r0;
        com.android.internal.telephony.Phone$DataState r1;

        $r0 := @parameter0: android.net.MobileDataStateTracker;

        r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState mMobileDataState>;

        return r1;
    }

    static com.android.internal.telephony.Phone$DataState access$202(android.net.MobileDataStateTracker, com.android.internal.telephony.Phone$DataState)
    {
        android.net.MobileDataStateTracker $r0;
        com.android.internal.telephony.Phone$DataState $r1;

        $r0 := @parameter0: android.net.MobileDataStateTracker;

        $r1 := @parameter1: com.android.internal.telephony.Phone$DataState;

        $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState mMobileDataState> = $r1;

        return $r1;
    }

    static java.lang.String access$300(android.net.MobileDataStateTracker)
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.net.MobileDataStateTracker;

        r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        return r1;
    }

    static java.lang.String access$302(android.net.MobileDataStateTracker, java.lang.String)
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.net.MobileDataStateTracker;

        $r1 := @parameter1: java.lang.String;

        $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName> = $r1;

        return $r1;
    }

    static int access$402(android.net.MobileDataStateTracker, int)
    {
        android.net.MobileDataStateTracker $r0;
        int $i0;

        $r0 := @parameter0: android.net.MobileDataStateTracker;

        $i0 := @parameter1: int;

        $r0.<android.net.MobileDataStateTracker: int mDefaultGatewayAddr> = $i0;

        return $i0;
    }

    static void access$500(android.net.MobileDataStateTracker)
    {
        android.net.MobileDataStateTracker $r0;

        $r0 := @parameter0: android.net.MobileDataStateTracker;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void setupDnsProperties()>();

        return;
    }

    private static com.android.internal.telephony.Phone$DataState getMobileDataState(android.content.Intent)
    {
        android.content.Intent $r0;
        java.lang.String $r1;
        java.lang.Enum $r2;
        com.android.internal.telephony.Phone$DataState $r3;

        $r0 := @parameter0: android.content.Intent;

        $r1 = virtualinvoke $r0.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("state");

        if $r1 == null goto label1;

        $r2 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/android/internal/telephony/Phone$DataState", $r1);

        $r3 = (com.android.internal.telephony.Phone$DataState) $r2;

        return $r3;

     label1:
        $r3 = <com.android.internal.telephony.Phone$DataState: com.android.internal.telephony.Phone$DataState DISCONNECTED>;

        return $r3;
    }

    private void getPhoneService(boolean)
    {
        android.net.MobileDataStateTracker $r0;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r1;
        android.os.IBinder $r2;

        $r0 := @this: android.net.MobileDataStateTracker;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        if $r1 == null goto label1;

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("phone");

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>($r2);

        $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService> = $r1;

        return;

     label2:
        return;
    }

    private int setEnableApn(java.lang.String, boolean)
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.String $r1, $r4;
        boolean $z0;
        int $i0, $i1;
        com.android.internal.telephony.ITelephony $r2;
        java.lang.StringBuilder $r3;
        android.os.RemoteException $r5;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(0);

        $i0 = 0;

     label01:
        if $i0 >= 2 goto label02;

        $r2 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        if $r2 != null goto label04;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobileDataStateTracker", "Ignoring feature request because could not acquire PhoneService");

     label02:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not ");

        if $z0 == 0 goto label11;

        $r4 = "enable";

     label03:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" APN type \"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobileDataStateTracker", $r1);

        return 3;

     label04:
        if $z0 == 0 goto label07;

        $r2 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

     label05:
        $i1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int enableApnType(java.lang.String)>($r1);

     label06:
        return $i1;

     label07:
        $r2 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        $i0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int disableApnType(java.lang.String)>($r1);

     label08:
        return $i0;

     label09:
        $r5 := @caughtexception;

        if $i0 != 0 goto label10;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(1);

     label10:
        $i0 = $i0 + 1;

        goto label01;

     label11:
        $r4 = "disable";

        goto label03;

        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    private void setupDnsProperties()
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r4;
        java.util.List $r3;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.NumberFormatException $r6;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r3 = $r0.<android.net.MobileDataStateTracker: java.util.List mDnsServers>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $i1 = 1;

        $r2 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        if $r2 == null goto label4;

        $r1 = <android.net.MobileDataStateTracker: java.lang.String[] sDnsPropNames>;

        $i0 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label4;

        $r2 = $r1[$i2];

        $r4 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        $i3 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>($r4);

        if $i3 == -1 goto label3;

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>($r2);

        if $r2 == null goto label3;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i3 == 0 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("0.0.0.0");

        if $z0 != 0 goto label3;

        $r3 = $r0.<android.net.MobileDataStateTracker: java.util.List mDnsServers>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i3 = $r0.<android.net.MobileDataStateTracker: int mLastCallingPid>;

        if $i3 == -1 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("net.dns");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i3 = $r0.<android.net.MobileDataStateTracker: int mLastCallingPid>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>($r4, $r2);

     label2:
        $i1 = $i1 + 1;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $i1 != 1 goto label6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MobileDataStateTracker", "DNS server addresses are not known.");

     label5:
        $r0.<android.net.MobileDataStateTracker: int mLastCallingPid> = -1;

        return;

     label6:
        $i0 = $r0.<android.net.MobileDataStateTracker: int mLastCallingPid>;

        if $i0 == -1 goto label5;

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("net.dnschange");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label5;

     label7:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = $i0 + 1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("net.dnschange", $r2);

     label8:
        goto label5;

     label9:
        $r6 := @caughtexception;

        goto label5;

        catch java.lang.NumberFormatException from label7 to label8 with label9;
    }

    public void addPrivateRoutes()
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.String $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        if $r1 == null goto label2;

        $r2 = $r0.<android.net.MobileDataStateTracker: java.util.List mDnsServers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r4;

        $i0 = staticinvoke <android.net.NetworkUtils: int lookupHost(java.lang.String)>($r1);

        if $i0 == -1 goto label1;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        staticinvoke <android.net.NetworkUtils: int addHostRoute(java.lang.String,int)>($r1, $i0);

        goto label1;

     label2:
        return;

     label3:
        return;
    }

    public java.lang.String[] getNameServers()
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.String[] $r1;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 = <android.net.MobileDataStateTracker: java.lang.String[] sDnsPropNames>;

        $r1 = staticinvoke <android.net.MobileDataStateTracker: java.lang.String[] getNameServerList(java.lang.String[])>($r1);

        return $r1;
    }

    public int getNetworkSubtype()
    {
        android.net.MobileDataStateTracker $r0;
        android.telephony.TelephonyManager $r1;
        int $i0;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getNetworkType()>();

        return $i0;
    }

    public java.lang.String getTcpBufferSizesPropName()
    {
        android.net.MobileDataStateTracker $r0;
        android.telephony.TelephonyManager $r1;
        java.lang.String $r2;
        android.content.Context $r3;
        int $i0;
        java.lang.StringBuilder $r4;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r2 = "unknown";

        $r1 = new android.telephony.TelephonyManager;

        $r3 = $r0.<android.net.NetworkStateTracker: android.content.Context mContext>;

        specialinvoke $r1.<android.telephony.TelephonyManager: void <init>(android.content.Context)>($r3);

        $i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getNetworkType()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("net.tcp.buffersize.");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r2 = "gprs";

        goto label1;

     label3:
        $r2 = "edge";

        goto label1;

     label4:
        $r2 = "umts";

        goto label1;
    }

    public boolean isAvailable()
    {
        android.net.MobileDataStateTracker $r0;
        boolean $z0;
        int $i0;
        com.android.internal.telephony.ITelephony $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.MobileDataStateTracker;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(0);

        $i0 = 0;

     label1:
        if $i0 >= 2 goto label2;

        $r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        if $r1 != null goto label3;

     label2:
        return 0;

     label3:
        $r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

     label4:
        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.ITelephony: boolean isDataConnectivityPossible()>();

     label5:
        return $z0;

     label6:
        $r2 := @caughtexception;

        if $i0 != 0 goto label7;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(1);

     label7:
        $i0 = $i0 + 1;

        goto label1;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean reconnect()
    {
        android.net.MobileDataStateTracker $r0;
        boolean $z0;
        int $i0;
        com.android.internal.telephony.ITelephony $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.MobileDataStateTracker;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(0);

        $i0 = 0;

     label1:
        if $i0 >= 2 goto label2;

        $r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        if $r1 != null goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobileDataStateTracker", "Ignoring mobile data connect request because could not acquire PhoneService");

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobileDataStateTracker", "Failed to set up mobile data connectivity");

        return 0;

     label3:
        $r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

     label4:
        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.ITelephony: boolean enableDataConnectivity()>();

     label5:
        return $z0;

     label6:
        $r2 := @caughtexception;

        if $i0 != 0 goto label7;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(1);

     label7:
        $i0 = $i0 + 1;

        goto label1;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void removeDefaultRoute()
    {
        android.net.MobileDataStateTracker $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        $i0 = staticinvoke <android.net.NetworkUtils: int getDefaultRoute(java.lang.String)>($r1);

        $r0.<android.net.MobileDataStateTracker: int mDefaultGatewayAddr> = $i0;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        staticinvoke <android.net.NetworkUtils: int removeDefaultRoute(java.lang.String)>($r1);

        return;

     label1:
        return;
    }

    public void removePrivateRoutes()
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.String $r1;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        staticinvoke <android.net.NetworkUtils: int removeHostRoutes(java.lang.String)>($r1);

        return;

     label1:
        return;
    }

    public boolean requestRouteToHost(int)
    {
        android.net.MobileDataStateTracker $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @this: android.net.MobileDataStateTracker;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        if $r1 == null goto label2;

        if $i0 == -1 goto label2;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        $i0 = staticinvoke <android.net.NetworkUtils: int addHostRoute(java.lang.String,int)>($r1, $i0);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 0;
    }

    public void restoreDefaultRoute()
    {
        android.net.MobileDataStateTracker $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        if $r1 == null goto label1;

        $i0 = $r0.<android.net.MobileDataStateTracker: int mDefaultGatewayAddr>;

        if $i0 == 0 goto label2;

        $r1 = $r0.<android.net.MobileDataStateTracker: java.lang.String mInterfaceName>;

        $i0 = $r0.<android.net.MobileDataStateTracker: int mDefaultGatewayAddr>;

        staticinvoke <android.net.NetworkUtils: int setDefaultRoute(java.lang.String,int)>($r1, $i0);

        return;

     label1:
        return;

     label2:
        return;
    }

    public boolean setRadio(boolean)
    {
        android.net.MobileDataStateTracker $r0;
        boolean $z0;
        int $i0;
        com.android.internal.telephony.ITelephony $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.net.MobileDataStateTracker;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(0);

        $i0 = 0;

     label1:
        if $i0 >= 2 goto label2;

        $r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        if $r1 != null goto label4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobileDataStateTracker", "Ignoring mobile radio request because could not acquire PhoneService");

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not set radio power to ");

        if $z0 == 0 goto label9;

        $r3 = "on";

     label3:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobileDataStateTracker", $r3);

        return 0;

     label4:
        $r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

     label5:
        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.ITelephony: boolean setRadio(boolean)>($z0);

     label6:
        return $z0;

     label7:
        $r4 := @caughtexception;

        if $i0 != 0 goto label8;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(1);

     label8:
        $i0 = $i0 + 1;

        goto label1;

     label9:
        $r3 = "off";

        goto label3;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void startMonitoring()
    {
        android.net.MobileDataStateTracker $r0;
        android.content.IntentFilter $r1;
        android.net.MobileDataStateTracker$MobileDataStateReceiver $r2;
        android.content.Context $r3;
        android.content.Intent $r4;
        com.android.internal.telephony.Phone$DataState $r5;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 = new android.content.IntentFilter;

        specialinvoke $r1.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.ANY_DATA_STATE");

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DATA_CONNECTION_FAILED");

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SERVICE_STATE");

        $r3 = $r0.<android.net.NetworkStateTracker: android.content.Context mContext>;

        $r2 = new android.net.MobileDataStateTracker$MobileDataStateReceiver;

        specialinvoke $r2.<android.net.MobileDataStateTracker$MobileDataStateReceiver: void <init>(android.net.MobileDataStateTracker,android.net.MobileDataStateTracker$1)>($r0, null);

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, $r1);

        if $r4 == null goto label1;

        $r5 = staticinvoke <android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState getMobileDataState(android.content.Intent)>($r4);

        $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState mMobileDataState> = $r5;

        return;

     label1:
        $r5 = <com.android.internal.telephony.Phone$DataState: com.android.internal.telephony.Phone$DataState DISCONNECTED>;

        $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState mMobileDataState> = $r5;

        return;
    }

    public int startUsingNetworkFeature(java.lang.String, int, int)
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.String $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r1, "enableMMS");

        if $z0 == 0 goto label1;

        $r0.<android.net.MobileDataStateTracker: int mLastCallingPid> = $i0;

        $i0 = specialinvoke $r0.<android.net.MobileDataStateTracker: int setEnableApn(java.lang.String,boolean)>("mms", 1);

        return $i0;

     label1:
        return -1;
    }

    public int stopUsingNetworkFeature(java.lang.String, int, int)
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.String $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r1, "enableMMS");

        if $z0 == 0 goto label1;

        $i0 = specialinvoke $r0.<android.net.MobileDataStateTracker: int setEnableApn(java.lang.String,boolean)>("mms", 0);

        return $i0;

     label1:
        return -1;
    }

    public boolean teardown()
    {
        android.net.MobileDataStateTracker $r0;
        boolean $z0;
        int $i0;
        com.android.internal.telephony.ITelephony $r1;
        android.os.RemoteException $r2;

        $r0 := @this: android.net.MobileDataStateTracker;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(0);

        $i0 = 0;

     label1:
        if $i0 >= 2 goto label2;

        $r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        if $r1 != null goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobileDataStateTracker", "Ignoring mobile data teardown request because could not acquire PhoneService");

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobileDataStateTracker", "Failed to tear down mobile data connectivity");

        return 0;

     label3:
        $r1 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

     label4:
        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.ITelephony: boolean disableDataConnectivity()>();

     label5:
        return $z0;

     label6:
        $r2 := @caughtexception;

        if $i0 != 0 goto label7;

        specialinvoke $r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(1);

     label7:
        $i0 = $i0 + 1;

        goto label1;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public java.lang.String toString()
    {
        android.net.MobileDataStateTracker $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;
        com.android.internal.telephony.Phone$DataState $r3;

        $r0 := @this: android.net.MobileDataStateTracker;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("Mobile data state: ");

        $r3 = $r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState mMobileDataState>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
