public class org.bouncycastle.crypto.macs.ISO9797Alg3Mac extends java.lang.Object implements org.bouncycastle.crypto.Mac
{
    private byte[] buf;
    private int bufOff;
    private org.bouncycastle.crypto.BlockCipher cipher;
    private org.bouncycastle.crypto.params.KeyParameter lastKey2;
    private org.bouncycastle.crypto.params.KeyParameter lastKey3;
    private byte[] mac;
    private int macSize;
    private org.bouncycastle.crypto.paddings.BlockCipherPadding padding;

    public void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        org.bouncycastle.crypto.BlockCipher $r1;
        int $i0;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        $r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i0 = $i0 * 8;

        specialinvoke $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: void <init>(org.bouncycastle.crypto.BlockCipher,int,org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r1, $i0, null);

        return;
    }

    public void <init>(org.bouncycastle.crypto.BlockCipher, int)
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        org.bouncycastle.crypto.BlockCipher $r1;
        int $i0;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        $r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        $i0 := @parameter1: int;

        specialinvoke $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: void <init>(org.bouncycastle.crypto.BlockCipher,int,org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r1, $i0, null);

        return;
    }

    public void <init>(org.bouncycastle.crypto.BlockCipher, int, org.bouncycastle.crypto.paddings.BlockCipherPadding)
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        org.bouncycastle.crypto.BlockCipher $r1;
        int $i0, $i1;
        org.bouncycastle.crypto.paddings.BlockCipherPadding $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r4;
        byte[] $r5;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        $r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.bouncycastle.crypto.paddings.BlockCipherPadding;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i1 = $i0 % 8;

        if $i1 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MAC size must be multiple of 8");

        throw $r3;

     label1:
        $z0 = $r1 instanceof org.bouncycastle.crypto.engines.DESEngine;

        if $z0 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cipher must be instance of DESEngine");

        throw $r3;

     label2:
        $r4 = new org.bouncycastle.crypto.modes.CBCBlockCipher;

        specialinvoke $r4.<org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r1);

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher> = $r4;

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.paddings.BlockCipherPadding padding> = $r2;

        $i0 = $i0 / 8;

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int macSize> = $i0;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r5 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac> = $r5;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r5 = newarray (byte)[$i0];

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf> = $r5;

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff> = 0;

        return;
    }

    public void <init>(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding)
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        org.bouncycastle.crypto.BlockCipher $r1;
        org.bouncycastle.crypto.paddings.BlockCipherPadding $r2;
        int $i0;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        $r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        $r2 := @parameter1: org.bouncycastle.crypto.paddings.BlockCipherPadding;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i0 = $i0 * 8;

        specialinvoke $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: void <init>(org.bouncycastle.crypto.BlockCipher,int,org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r1, $i0, $r2);

        return;
    }

    public int doFinal(byte[], int)
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        byte[] $r1, $r5, $r6;
        int $i0, $i1, $i2;
        org.bouncycastle.crypto.engines.DESEngine $r2;
        org.bouncycastle.crypto.BlockCipher $r3;
        org.bouncycastle.crypto.paddings.BlockCipherPadding $r4;
        org.bouncycastle.crypto.params.KeyParameter $r7;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r3 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher>;

        $i1 = interfaceinvoke $r3.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r4 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.paddings.BlockCipherPadding padding>;

        if $r4 != null goto label2;

     label1:
        $i2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        if $i2 >= $i1 goto label4;

        $r5 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $i2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        $r5[$i2] = 0;

        $i2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        $i2 = $i2 + 1;

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff> = $i2;

        goto label1;

     label2:
        $i2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        if $i2 != $i1 goto label3;

        $r3 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $r6 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, $r6, 0);

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff> = 0;

     label3:
        $r4 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.paddings.BlockCipherPadding padding>;

        $r5 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $i1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.paddings.BlockCipherPadding: int addPadding(byte[],int)>($r5, $i1);

     label4:
        $r3 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $r6 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, $r6, 0);

        $r2 = new org.bouncycastle.crypto.engines.DESEngine;

        specialinvoke $r2.<org.bouncycastle.crypto.engines.DESEngine: void <init>()>();

        $r7 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.params.KeyParameter lastKey2>;

        virtualinvoke $r2.<org.bouncycastle.crypto.engines.DESEngine: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r7);

        $r5 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        $r6 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        virtualinvoke $r2.<org.bouncycastle.crypto.engines.DESEngine: int processBlock(byte[],int,byte[],int)>($r5, 0, $r6, 0);

        $r7 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.params.KeyParameter lastKey3>;

        virtualinvoke $r2.<org.bouncycastle.crypto.engines.DESEngine: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r7);

        $r5 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        $r6 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        virtualinvoke $r2.<org.bouncycastle.crypto.engines.DESEngine: int processBlock(byte[],int,byte[],int)>($r5, 0, $r6, 0);

        $r5 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        $i1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r1, $i0, $i1);

        virtualinvoke $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: void reset()>();

        $i0 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int macSize>;

        return $i0;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        return "ISO9797Alg3";
    }

    public int getMacSize()
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        int i0;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        i0 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int macSize>;

        return i0;
    }

    public void init(org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        org.bouncycastle.crypto.CipherParameters $r1;
        byte[] $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        org.bouncycastle.crypto.params.KeyParameter $r4, $r5;
        int $i0;
        org.bouncycastle.crypto.BlockCipher $r6;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        $r1 := @parameter0: org.bouncycastle.crypto.CipherParameters;

        virtualinvoke $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: void reset()>();

        $z0 = $r1 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("params must be an instance of KeyParameter");

        throw $r3;

     label1:
        $r4 = (org.bouncycastle.crypto.params.KeyParameter) $r1;

        $r2 = virtualinvoke $r4.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $i0 = lengthof $r2;

        if $i0 != 16 goto label3;

        $r4 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r4.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r2, 0, 8);

        $r5 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r5.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r2, 8, 8);

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.params.KeyParameter lastKey2> = $r5;

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.params.KeyParameter lastKey3> = $r4;

     label2:
        $r6 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r6.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r4);

        return;

     label3:
        $i0 = lengthof $r2;

        if $i0 != 24 goto label4;

        $r4 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r4.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r2, 0, 8);

        $r5 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r5.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r2, 8, 8);

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.params.KeyParameter lastKey2> = $r5;

        $r5 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r5.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r2, 16, 8);

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.params.KeyParameter lastKey3> = $r5;

        goto label2;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key must be either 112 or 168 bit long");

        throw $r3;
    }

    public void reset()
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        int $i0, $i1;
        byte[] $r1;
        org.bouncycastle.crypto.BlockCipher $r2;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        $i0 = 0;

     label1:
        $r1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $r1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $r1[$i0] = 0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff> = 0;

        $r2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }

    public void update(byte)
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        byte $b0;
        int $i1, $i2;
        byte[] $r1, $r3;
        org.bouncycastle.crypto.BlockCipher $r2;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        $b0 := @parameter0: byte;

        $i1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        $r1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $i2 = lengthof $r1;

        if $i1 != $i2 goto label1;

        $r2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher>;

        $r1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $r3 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r1, 0, $r3, 0);

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff> = 0;

     label1:
        $r1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $i1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        $i2 = $i1 + 1;

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff> = $i2;

        $r1[$i1] = $b0;

        return;
    }

    public void update(byte[], int, int)
    {
        org.bouncycastle.crypto.macs.ISO9797Alg3Mac $r0;
        byte[] $r1, $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r3;
        org.bouncycastle.crypto.BlockCipher $r4;

        $r0 := @this: org.bouncycastle.crypto.macs.ISO9797Alg3Mac;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i2 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t have a negative input length!");

        throw $r3;

     label1:
        $r4 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher>;

        $i3 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i0 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        $i0 = $i3 - $i0;

        if $i2 <= $i0 goto label3;

        $r2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $i4 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i4, $i0);

        $r4 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $r2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, $r2, 0);

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff> = 0;

        $i2 = $i2 - $i0;

        $i1 = $i1 + $i0;

     label2:
        if $i2 <= $i3 goto label3;

        $r4 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: org.bouncycastle.crypto.BlockCipher cipher>;

        $r2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] mac>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r1, $i1, $r2, 0);

        $i2 = $i2 - $i3;

        $i1 = $i1 + $i3;

        goto label2;

     label3:
        $r2 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: byte[] buf>;

        $i3 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i3, $i2);

        $i1 = $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff>;

        $i1 = $i1 + $i2;

        $r0.<org.bouncycastle.crypto.macs.ISO9797Alg3Mac: int bufOff> = $i1;

        return;
    }
}
