public class android.util.MonthDisplayHelper extends java.lang.Object
{
    private java.util.Calendar mCalendar;
    private int mNumDaysInMonth;
    private int mNumDaysInPrevMonth;
    private int mOffset;
    private final int mWeekStartDay;

    public void <init>(int, int)
    {
        android.util.MonthDisplayHelper $r0;
        int $i0, $i1;

        $r0 := @this: android.util.MonthDisplayHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.util.MonthDisplayHelper: void <init>(int,int,int)>($i0, $i1, 1);

        return;
    }

    public void <init>(int, int, int)
    {
        android.util.MonthDisplayHelper $r0;
        int $i0, $i1, $i2;
        java.util.Calendar $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: android.util.MonthDisplayHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $i2 < 1 goto label1;

        if $i2 <= 7 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        $r0.<android.util.MonthDisplayHelper: int mWeekStartDay> = $i2;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar> = $r1;

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(1, $i0);

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(2, $i1);

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(5, 1);

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(11, 0);

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(12, 0);

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(13, 0);

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke $r0.<android.util.MonthDisplayHelper: void recalculate()>();

        return;
    }

    private void recalculate()
    {
        android.util.MonthDisplayHelper $r0;
        java.util.Calendar $r1;
        int $i0, $i1;

        $r0 := @this: android.util.MonthDisplayHelper;

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getActualMaximum(int)>(5);

        $r0.<android.util.MonthDisplayHelper: int mNumDaysInMonth> = $i0;

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(2, -1);

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getActualMaximum(int)>(5);

        $r0.<android.util.MonthDisplayHelper: int mNumDaysInPrevMonth> = $i0;

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(2, 1);

        $i0 = virtualinvoke $r0.<android.util.MonthDisplayHelper: int getFirstDayOfMonth()>();

        $i1 = $r0.<android.util.MonthDisplayHelper: int mWeekStartDay>;

        $i0 = $i0 - $i1;

        if $i0 >= 0 goto label1;

        $i0 = $i0 + 7;

     label1:
        $r0.<android.util.MonthDisplayHelper: int mOffset> = $i0;

        return;
    }

    public int getColumnOf(int)
    {
        android.util.MonthDisplayHelper $r0;
        int $i0, $i1;

        $r0 := @this: android.util.MonthDisplayHelper;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.util.MonthDisplayHelper: int mOffset>;

        $i0 = $i1 + $i0;

        $i0 = $i0 - 1;

        $i0 = $i0 % 7;

        return $i0;
    }

    public int getDayAt(int, int)
    {
        android.util.MonthDisplayHelper $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.util.MonthDisplayHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 != 0 goto label1;

        $i2 = $r0.<android.util.MonthDisplayHelper: int mOffset>;

        if $i1 >= $i2 goto label1;

        $i0 = $r0.<android.util.MonthDisplayHelper: int mNumDaysInPrevMonth>;

        $i0 = $i0 + $i1;

        $i1 = $r0.<android.util.MonthDisplayHelper: int mOffset>;

        $i0 = $i0 - $i1;

        $i0 = $i0 + 1;

        return $i0;

     label1:
        $i0 = $i0 * 7;

        $i0 = $i0 + $i1;

        $i1 = $r0.<android.util.MonthDisplayHelper: int mOffset>;

        $i0 = $i0 - $i1;

        $i0 = $i0 + 1;

        $i1 = $r0.<android.util.MonthDisplayHelper: int mNumDaysInMonth>;

        if $i0 <= $i1 goto label2;

        $i1 = $r0.<android.util.MonthDisplayHelper: int mNumDaysInMonth>;

        $i0 = $i0 - $i1;

        return $i0;

     label2:
        return $i0;
    }

    public int[] getDigitsForRow(int)
    {
        android.util.MonthDisplayHelper $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @this: android.util.MonthDisplayHelper;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        if $i0 <= 5 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("row ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range (0-5)");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r1 = newarray (int)[7];

        $i1 = 0;

     label3:
        if $i1 >= 7 goto label4;

        $i2 = virtualinvoke $r0.<android.util.MonthDisplayHelper: int getDayAt(int,int)>($i0, $i1);

        $r1[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r1;
    }

    public int getFirstDayOfMonth()
    {
        android.util.MonthDisplayHelper $r0;
        int $i0;
        java.util.Calendar $r1;

        $r0 := @this: android.util.MonthDisplayHelper;

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(7);

        return $i0;
    }

    public int getMonth()
    {
        android.util.MonthDisplayHelper $r0;
        int $i0;
        java.util.Calendar $r1;

        $r0 := @this: android.util.MonthDisplayHelper;

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        return $i0;
    }

    public int getNumberOfDaysInMonth()
    {
        android.util.MonthDisplayHelper $r0;
        int i0;

        $r0 := @this: android.util.MonthDisplayHelper;

        i0 = $r0.<android.util.MonthDisplayHelper: int mNumDaysInMonth>;

        return i0;
    }

    public int getOffset()
    {
        android.util.MonthDisplayHelper $r0;
        int i0;

        $r0 := @this: android.util.MonthDisplayHelper;

        i0 = $r0.<android.util.MonthDisplayHelper: int mOffset>;

        return i0;
    }

    public int getRowOf(int)
    {
        android.util.MonthDisplayHelper $r0;
        int $i0, $i1;

        $r0 := @this: android.util.MonthDisplayHelper;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.util.MonthDisplayHelper: int mOffset>;

        $i0 = $i1 + $i0;

        $i0 = $i0 - 1;

        $i0 = $i0 / 7;

        return $i0;
    }

    public int getWeekStartDay()
    {
        android.util.MonthDisplayHelper $r0;
        int i0;

        $r0 := @this: android.util.MonthDisplayHelper;

        i0 = $r0.<android.util.MonthDisplayHelper: int mWeekStartDay>;

        return i0;
    }

    public int getYear()
    {
        android.util.MonthDisplayHelper $r0;
        int $i0;
        java.util.Calendar $r1;

        $r0 := @this: android.util.MonthDisplayHelper;

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        return $i0;
    }

    public boolean isWithinCurrentMonth(int, int)
    {
        android.util.MonthDisplayHelper $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.util.MonthDisplayHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < 0 goto label1;

        if $i1 < 0 goto label1;

        if $i0 > 5 goto label1;

        if $i1 <= 6 goto label2;

     label1:
        return 0;

     label2:
        if $i0 != 0 goto label3;

        $i2 = $r0.<android.util.MonthDisplayHelper: int mOffset>;

        if $i1 >= $i2 goto label3;

        return 0;

     label3:
        $i0 = $i0 * 7;

        $i1 = $i0 + $i1;

        $i0 = $r0.<android.util.MonthDisplayHelper: int mOffset>;

        $i0 = $i1 - $i0;

        $i0 = $i0 + 1;

        $i1 = $r0.<android.util.MonthDisplayHelper: int mNumDaysInMonth>;

        if $i0 <= $i1 goto label4;

        return 0;

     label4:
        return 1;
    }

    public void nextMonth()
    {
        android.util.MonthDisplayHelper $r0;
        java.util.Calendar $r1;

        $r0 := @this: android.util.MonthDisplayHelper;

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(2, 1);

        specialinvoke $r0.<android.util.MonthDisplayHelper: void recalculate()>();

        return;
    }

    public void previousMonth()
    {
        android.util.MonthDisplayHelper $r0;
        java.util.Calendar $r1;

        $r0 := @this: android.util.MonthDisplayHelper;

        $r1 = $r0.<android.util.MonthDisplayHelper: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(2, -1);

        specialinvoke $r0.<android.util.MonthDisplayHelper: void recalculate()>();

        return;
    }
}
