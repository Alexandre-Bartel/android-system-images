public class android.os.PatternMatcher extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int PATTERN_LITERAL;
    public static final int PATTERN_PREFIX;
    public static final int PATTERN_SIMPLE_GLOB;
    private final java.lang.String mPattern;
    private final int mType;

    static void <clinit>()
    {
        android.os.PatternMatcher$1 $r0;

        <android.os.PatternMatcher: int PATTERN_SIMPLE_GLOB> = 2;

        <android.os.PatternMatcher: int PATTERN_PREFIX> = 1;

        <android.os.PatternMatcher: int PATTERN_LITERAL> = 0;

        $r0 = new android.os.PatternMatcher$1;

        specialinvoke $r0.<android.os.PatternMatcher$1: void <init>()>();

        <android.os.PatternMatcher: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.os.PatternMatcher $r0;
        android.os.Parcel $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: android.os.PatternMatcher;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        $r0.<android.os.PatternMatcher: java.lang.String mPattern> = $r2;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.os.PatternMatcher: int mType> = $i0;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        android.os.PatternMatcher $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: android.os.PatternMatcher;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.os.PatternMatcher: java.lang.String mPattern> = $r1;

        $r0.<android.os.PatternMatcher: int mType> = $i0;

        return;
    }

    static boolean matchPattern(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1, $i2, $i3, $i6;
        boolean $z0;
        char $c4, $c5, $c7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        if $r1 != null goto label01;

        return 0;

     label01:
        if $i0 != 0 goto label02;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label02:
        if $i0 != 1 goto label03;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r0);

        return $z0;

     label03:
        if $i0 == 2 goto label04;

        return 0;

     label04:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 > 0 goto label06;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 > 0 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = 0;

        $i3 = 0;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

     label07:
        if $i2 >= $i0 goto label29;

        if $i3 >= $i1 goto label29;

        $c4 = $c5;

        $i2 = $i2 + 1;

        if $i2 >= $i0 goto label11;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

     label08:
        if $c4 != 92 goto label12;

        $z0 = 1;

     label09:
        if $z0 == 0 goto label10;

        $c4 = $c5;

        $i2 = $i2 + 1;

        if $i2 >= $i0 goto label13;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

     label10:
        if $c5 != 42 goto label27;

        if $z0 != 0 goto label22;

        if $c4 != 46 goto label22;

        $i6 = $i0 - 1;

        if $i2 < $i6 goto label14;

        return 1;

     label11:
        $c5 = 0;

        goto label08;

     label12:
        $z0 = 0;

        goto label09;

     label13:
        $c5 = 0;

        goto label10;

     label14:
        $i2 = $i2 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $c4 = $c5;

        if $c5 != 92 goto label15;

        $i2 = $i2 + 1;

        if $i2 >= $i0 goto label17;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

     label15:
        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        if $c5 != $c4 goto label18;

     label16:
        if $i3 != $i1 goto label19;

        return 0;

     label17:
        $c4 = 0;

        goto label15;

     label18:
        $i3 = $i3 + 1;

        if $i3 < $i1 goto label15;

        goto label16;

     label19:
        $i2 = $i2 + 1;

        if $i2 >= $i0 goto label21;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

     label20:
        $i3 = $i3 + 1;

        goto label07;

     label21:
        $c5 = 0;

        goto label20;

     label22:
        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        if $c5 == $c4 goto label25;

     label23:
        $i2 = $i2 + 1;

        if $i2 >= $i0 goto label26;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

     label24:
        goto label07;

     label25:
        $i3 = $i3 + 1;

        if $i3 < $i1 goto label22;

        goto label23;

     label26:
        $c5 = 0;

        goto label24;

     label27:
        if $c4 == 46 goto label28;

        $c7 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        if $c7 == $c4 goto label28;

        return 0;

     label28:
        $i3 = $i3 + 1;

        goto label07;

     label29:
        if $i2 < $i0 goto label30;

        if $i3 < $i1 goto label30;

        return 1;

     label30:
        $i0 = $i0 - 2;

        if $i2 != $i0 goto label31;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        if $c4 != 46 goto label31;

        $i0 = $i2 + 1;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c4 != 42 goto label31;

        return 1;

     label31:
        return 0;
    }

    public int describeContents()
    {
        android.os.PatternMatcher $r0;

        $r0 := @this: android.os.PatternMatcher;

        return 0;
    }

    public final java.lang.String getPath()
    {
        android.os.PatternMatcher $r0;
        java.lang.String r1;

        $r0 := @this: android.os.PatternMatcher;

        r1 = $r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        return r1;
    }

    public final int getType()
    {
        android.os.PatternMatcher $r0;
        int i0;

        $r0 := @this: android.os.PatternMatcher;

        i0 = $r0.<android.os.PatternMatcher: int mType>;

        return i0;
    }

    public boolean match(java.lang.String)
    {
        android.os.PatternMatcher $r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: android.os.PatternMatcher;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        $i0 = $r0.<android.os.PatternMatcher: int mType>;

        $z0 = staticinvoke <android.os.PatternMatcher: boolean matchPattern(java.lang.String,java.lang.String,int)>($r2, $r1, $i0);

        return $z0;
    }

    public java.lang.String toString()
    {
        android.os.PatternMatcher $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.StringBuilder $r2;

        $r0 := @this: android.os.PatternMatcher;

        $r1 = "? ";

        $i0 = $r0.<android.os.PatternMatcher: int mType>;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PatternMatcher{");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = $r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r1 = "LITERAL: ";

        goto label1;

     label3:
        $r1 = "PREFIX: ";

        goto label1;

     label4:
        $r1 = "GLOB: ";

        goto label1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.PatternMatcher $r0;
        android.os.Parcel $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: android.os.PatternMatcher;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i0 = $r0.<android.os.PatternMatcher: int mType>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }
}
