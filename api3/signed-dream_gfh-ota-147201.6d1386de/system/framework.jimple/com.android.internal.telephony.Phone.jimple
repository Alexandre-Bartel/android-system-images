public interface  com.android.internal.telephony.Phone extends java.lang.Object
{
    public static final int APN_ALREADY_ACTIVE;
    public static final int APN_REQUEST_FAILED;
    public static final int APN_REQUEST_STARTED;
    public static final java.lang.String APN_TYPE_ALL;
    public static final java.lang.String APN_TYPE_DEFAULT;
    public static final java.lang.String APN_TYPE_MMS;
    public static final int APN_TYPE_NOT_AVAILABLE;
    public static final int BM_AUS2_BAND;
    public static final int BM_AUS_BAND;
    public static final int BM_BOUNDARY;
    public static final int BM_EURO_BAND;
    public static final int BM_JPN_BAND;
    public static final int BM_UNSPECIFIED;
    public static final int BM_US_BAND;
    public static final java.lang.String DATA_APN_KEY;
    public static final java.lang.String DATA_APN_TYPE_KEY;
    public static final java.lang.String DATA_IFACE_NAME_KEY;
    public static final boolean DEBUG_PHONE;
    public static final java.lang.String FAILURE_REASON_KEY;
    public static final java.lang.String FEATURE_ENABLE_MMS;
    public static final java.lang.String NETWORK_UNAVAILABLE_KEY;
    public static final int NT_AUTO_TYPE;
    public static final int NT_GSM_TYPE;
    public static final int NT_WCDMA_TYPE;
    public static final java.lang.String PHONE_NAME_KEY;
    public static final java.lang.String REASON_APN_CHANGED;
    public static final java.lang.String REASON_APN_SWITCHED;
    public static final java.lang.String REASON_DATA_DISABLED;
    public static final java.lang.String REASON_DATA_ENABLED;
    public static final java.lang.String REASON_GPRS_ATTACHED;
    public static final java.lang.String REASON_GPRS_DETACHED;
    public static final java.lang.String REASON_PDP_RESET;
    public static final java.lang.String REASON_PS_RESTRICT_DISABLED;
    public static final java.lang.String REASON_PS_RESTRICT_ENABLED;
    public static final java.lang.String REASON_RADIO_TURNED_OFF;
    public static final java.lang.String REASON_RESTORE_DEFAULT_APN;
    public static final java.lang.String REASON_ROAMING_OFF;
    public static final java.lang.String REASON_ROAMING_ON;
    public static final java.lang.String REASON_SIM_LOADED;
    public static final java.lang.String REASON_VOICE_CALL_ENDED;
    public static final java.lang.String REASON_VOICE_CALL_STARTED;
    public static final java.lang.String STATE_CHANGE_REASON_KEY;
    public static final java.lang.String STATE_KEY;

    public abstract void acceptCall() throws com.android.internal.telephony.CallStateException;

    public abstract boolean canConference();

    public abstract boolean canTransfer();

    public abstract void clearDisconnected();

    public abstract void conference() throws com.android.internal.telephony.CallStateException;

    public abstract com.android.internal.telephony.Connection dial(java.lang.String) throws com.android.internal.telephony.CallStateException;

    public abstract int disableApnType(java.lang.String);

    public abstract boolean disableDataConnectivity();

    public abstract void disableLocationUpdates();

    public abstract int enableApnType(java.lang.String);

    public abstract boolean enableDataConnectivity();

    public abstract void enableLocationUpdates();

    public abstract void explicitCallTransfer() throws com.android.internal.telephony.CallStateException;

    public abstract java.lang.String getActiveApn();

    public abstract java.lang.String[] getActiveApnTypes();

    public abstract void getAvailableNetworks(android.os.Message);

    public abstract com.android.internal.telephony.Call getBackgroundCall();

    public abstract boolean getCallForwardingIndicator();

    public abstract void getCallForwardingOption(int, android.os.Message);

    public abstract void getCallWaiting(android.os.Message);

    public abstract android.telephony.CellLocation getCellLocation();

    public abstract android.content.Context getContext();

    public abstract java.util.List getCurrentPdpList();

    public abstract com.android.internal.telephony.Phone$DataActivityState getDataActivityState();

    public abstract com.android.internal.telephony.Phone$DataState getDataConnectionState();

    public abstract boolean getDataRoamingEnabled();

    public abstract java.lang.String getDeviceId();

    public abstract java.lang.String getDeviceSvn();

    public abstract java.lang.String[] getDnsServers(java.lang.String);

    public abstract com.android.internal.telephony.Call getForegroundCall();

    public abstract java.lang.String getGateway(java.lang.String);

    public abstract java.lang.String getInterfaceName(java.lang.String);

    public abstract java.lang.String getIpAddress(java.lang.String);

    public abstract java.lang.String getLine1AlphaTag();

    public abstract java.lang.String getLine1Number();

    public abstract boolean getMessageWaitingIndicator();

    public abstract boolean getMute();

    public abstract void getNeighboringCids(android.os.Message);

    public abstract void getOutgoingCallerIdDisplay(android.os.Message);

    public abstract void getPdpContextList(android.os.Message);

    public abstract java.util.List getPendingMmiCodes();

    public abstract java.lang.String getPhoneName();

    public abstract void getPreferredNetworkType(android.os.Message);

    public abstract com.android.internal.telephony.Call getRingingCall();

    public abstract android.telephony.ServiceState getServiceState();

    public abstract int getSignalStrengthASU();

    public abstract com.android.internal.telephony.SimCard getSimCard();

    public abstract boolean getSimRecordsLoaded();

    public abstract java.lang.String getSimSerialNumber();

    public abstract com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl();

    public abstract com.android.internal.telephony.Phone$State getState();

    public abstract java.lang.String getSubscriberId();

    public abstract boolean getUnitTestMode();

    public abstract java.lang.String getVoiceMailAlphaTag();

    public abstract java.lang.String getVoiceMailNumber();

    public abstract boolean handleInCallMmiCommands(java.lang.String) throws com.android.internal.telephony.CallStateException;

    public abstract boolean handlePinMmi(java.lang.String);

    public abstract void invokeOemRilRequestRaw(byte[], android.os.Message);

    public abstract void invokeOemRilRequestStrings(java.lang.String[], android.os.Message);

    public abstract boolean isDataConnectivityPossible();

    public abstract void queryAvailableBandMode(android.os.Message);

    public abstract void registerForDisconnect(android.os.Handler, int, java.lang.Object);

    public abstract void registerForIncomingRing(android.os.Handler, int, java.lang.Object);

    public abstract void registerForMmiComplete(android.os.Handler, int, java.lang.Object);

    public abstract void registerForMmiInitiate(android.os.Handler, int, java.lang.Object);

    public abstract void registerForNewRingingConnection(android.os.Handler, int, java.lang.Object);

    public abstract void registerForPhoneStateChanged(android.os.Handler, int, java.lang.Object);

    public abstract void registerForServiceStateChanged(android.os.Handler, int, java.lang.Object);

    public abstract void registerForSuppServiceFailed(android.os.Handler, int, java.lang.Object);

    public abstract void registerForSuppServiceNotification(android.os.Handler, int, java.lang.Object);

    public abstract void registerForUnknownConnection(android.os.Handler, int, java.lang.Object);

    public abstract void rejectCall() throws com.android.internal.telephony.CallStateException;

    public abstract void selectNetworkManually(com.android.internal.telephony.gsm.NetworkInfo, android.os.Message);

    public abstract void sendDtmf(char);

    public abstract void sendUssdResponse(java.lang.String);

    public abstract void setBandMode(int, android.os.Message);

    public abstract void setCallForwardingOption(int, int, java.lang.String, int, android.os.Message);

    public abstract void setCallWaiting(boolean, android.os.Message);

    public abstract void setDataRoamingEnabled(boolean);

    public abstract void setLine1Number(java.lang.String, java.lang.String, android.os.Message);

    public abstract void setMute(boolean);

    public abstract void setNetworkSelectionModeAutomatic(android.os.Message);

    public abstract void setOnPostDialCharacter(android.os.Handler, int, java.lang.Object);

    public abstract void setOutgoingCallerIdDisplay(int, android.os.Message);

    public abstract void setPreferredNetworkType(int, android.os.Message);

    public abstract void setRadioPower(boolean);

    public abstract void setUnitTestMode(boolean);

    public abstract void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message);

    public abstract void startDtmf(char);

    public abstract void stopDtmf();

    public abstract void switchHoldingAndActive() throws com.android.internal.telephony.CallStateException;

    public abstract void unregisterForDisconnect(android.os.Handler);

    public abstract void unregisterForIncomingRing(android.os.Handler);

    public abstract void unregisterForMmiComplete(android.os.Handler);

    public abstract void unregisterForMmiInitiate(android.os.Handler);

    public abstract void unregisterForNewRingingConnection(android.os.Handler);

    public abstract void unregisterForPhoneStateChanged(android.os.Handler);

    public abstract void unregisterForServiceStateChanged(android.os.Handler);

    public abstract void unregisterForSuppServiceFailed(android.os.Handler);

    public abstract void unregisterForSuppServiceNotification(android.os.Handler);

    public abstract void unregisterForUnknownConnection(android.os.Handler);

    public abstract void updateServiceLocation(android.os.Message);

    public static void <clinit>()
    {
        <com.android.internal.telephony.Phone: java.lang.String STATE_KEY> = "state";

        <com.android.internal.telephony.Phone: java.lang.String STATE_CHANGE_REASON_KEY> = "reason";

        <com.android.internal.telephony.Phone: java.lang.String REASON_VOICE_CALL_STARTED> = "2GVoiceCallStarted";

        <com.android.internal.telephony.Phone: java.lang.String REASON_VOICE_CALL_ENDED> = "2GVoiceCallEnded";

        <com.android.internal.telephony.Phone: java.lang.String REASON_SIM_LOADED> = "simLoaded";

        <com.android.internal.telephony.Phone: java.lang.String REASON_ROAMING_ON> = "roamingOn";

        <com.android.internal.telephony.Phone: java.lang.String REASON_ROAMING_OFF> = "roamingOff";

        <com.android.internal.telephony.Phone: java.lang.String REASON_RESTORE_DEFAULT_APN> = "restoreDefaultApn";

        <com.android.internal.telephony.Phone: java.lang.String REASON_RADIO_TURNED_OFF> = "radioTurnedOff";

        <com.android.internal.telephony.Phone: java.lang.String REASON_PS_RESTRICT_ENABLED> = "psRestrictEnabled";

        <com.android.internal.telephony.Phone: java.lang.String REASON_PS_RESTRICT_DISABLED> = "psRestrictDisabled";

        <com.android.internal.telephony.Phone: java.lang.String REASON_PDP_RESET> = "pdpReset";

        <com.android.internal.telephony.Phone: java.lang.String REASON_GPRS_DETACHED> = "gprsDetached";

        <com.android.internal.telephony.Phone: java.lang.String REASON_GPRS_ATTACHED> = "gprsAttached";

        <com.android.internal.telephony.Phone: java.lang.String REASON_DATA_ENABLED> = "dataEnabled";

        <com.android.internal.telephony.Phone: java.lang.String REASON_DATA_DISABLED> = "dataDisabled";

        <com.android.internal.telephony.Phone: java.lang.String REASON_APN_SWITCHED> = "apnSwitched";

        <com.android.internal.telephony.Phone: java.lang.String REASON_APN_CHANGED> = "apnChanged";

        <com.android.internal.telephony.Phone: java.lang.String PHONE_NAME_KEY> = "phoneName";

        <com.android.internal.telephony.Phone: int NT_WCDMA_TYPE> = 2;

        <com.android.internal.telephony.Phone: int NT_GSM_TYPE> = 1;

        <com.android.internal.telephony.Phone: int NT_AUTO_TYPE> = 0;

        <com.android.internal.telephony.Phone: java.lang.String NETWORK_UNAVAILABLE_KEY> = "networkUnvailable";

        <com.android.internal.telephony.Phone: java.lang.String FEATURE_ENABLE_MMS> = "enableMMS";

        <com.android.internal.telephony.Phone: java.lang.String FAILURE_REASON_KEY> = "reason";

        <com.android.internal.telephony.Phone: boolean DEBUG_PHONE> = 1;

        <com.android.internal.telephony.Phone: java.lang.String DATA_IFACE_NAME_KEY> = "iface";

        <com.android.internal.telephony.Phone: java.lang.String DATA_APN_TYPE_KEY> = "apnType";

        <com.android.internal.telephony.Phone: java.lang.String DATA_APN_KEY> = "apn";

        <com.android.internal.telephony.Phone: int BM_US_BAND> = 2;

        <com.android.internal.telephony.Phone: int BM_UNSPECIFIED> = 0;

        <com.android.internal.telephony.Phone: int BM_JPN_BAND> = 3;

        <com.android.internal.telephony.Phone: int BM_EURO_BAND> = 1;

        <com.android.internal.telephony.Phone: int BM_BOUNDARY> = 6;

        <com.android.internal.telephony.Phone: int BM_AUS_BAND> = 4;

        <com.android.internal.telephony.Phone: int BM_AUS2_BAND> = 5;

        <com.android.internal.telephony.Phone: int APN_TYPE_NOT_AVAILABLE> = 2;

        <com.android.internal.telephony.Phone: java.lang.String APN_TYPE_MMS> = "mms";

        <com.android.internal.telephony.Phone: java.lang.String APN_TYPE_DEFAULT> = "default";

        <com.android.internal.telephony.Phone: java.lang.String APN_TYPE_ALL> = "*";

        <com.android.internal.telephony.Phone: int APN_REQUEST_STARTED> = 1;

        <com.android.internal.telephony.Phone: int APN_REQUEST_FAILED> = 3;

        <com.android.internal.telephony.Phone: int APN_ALREADY_ACTIVE> = 0;

        return;
    }
}
