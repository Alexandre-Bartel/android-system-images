class android.webkit.Network extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    private static android.webkit.Network sNetwork;
    private static int sPlatformNotificationEnableRefCount;
    private static boolean sPlatformNotifications;
    private android.webkit.HttpAuthHandler mHttpAuthHandler;
    private java.lang.String mProxyPassword;
    private java.lang.String mProxyUsername;
    private android.net.http.RequestQueue mRequestQueue;
    private android.webkit.SslErrorHandler mSslErrorHandler;

    private void <init>(android.content.Context)
    {
        android.webkit.Network $r0;
        android.content.Context $r1;
        android.webkit.SslErrorHandler $r2;
        android.webkit.HttpAuthHandler $r3;
        android.net.http.RequestQueue $r4;

        $r0 := @this: android.webkit.Network;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new android.webkit.SslErrorHandler;

        specialinvoke $r2.<android.webkit.SslErrorHandler: void <init>(android.webkit.Network)>($r0);

        $r0.<android.webkit.Network: android.webkit.SslErrorHandler mSslErrorHandler> = $r2;

        $r3 = new android.webkit.HttpAuthHandler;

        specialinvoke $r3.<android.webkit.HttpAuthHandler: void <init>(android.webkit.Network)>($r0);

        $r0.<android.webkit.Network: android.webkit.HttpAuthHandler mHttpAuthHandler> = $r3;

        $r4 = new android.net.http.RequestQueue;

        specialinvoke $r4.<android.net.http.RequestQueue: void <init>(android.content.Context)>($r1);

        $r0.<android.webkit.Network: android.net.http.RequestQueue mRequestQueue> = $r4;

        return;
    }

    public static void disablePlatformNotifications()
    {
        int $i0;
        android.webkit.Network $r0;
        android.net.http.RequestQueue $r1;

        $i0 = <android.webkit.Network: int sPlatformNotificationEnableRefCount>;

        $i0 = $i0 - 1;

        <android.webkit.Network: int sPlatformNotificationEnableRefCount> = $i0;

        if $i0 != 0 goto label2;

        $r0 = <android.webkit.Network: android.webkit.Network sNetwork>;

        if $r0 == null goto label1;

        $r0 = <android.webkit.Network: android.webkit.Network sNetwork>;

        $r1 = $r0.<android.webkit.Network: android.net.http.RequestQueue mRequestQueue>;

        virtualinvoke $r1.<android.net.http.RequestQueue: void disablePlatformNotifications()>();

        return;

     label1:
        <android.webkit.Network: boolean sPlatformNotifications> = 0;

        return;

     label2:
        return;
    }

    public static void enablePlatformNotifications()
    {
        int $i0;
        android.webkit.Network $r0;
        android.net.http.RequestQueue $r1;

        $i0 = <android.webkit.Network: int sPlatformNotificationEnableRefCount>;

        $i0 = $i0 + 1;

        <android.webkit.Network: int sPlatformNotificationEnableRefCount> = $i0;

        if $i0 != 1 goto label2;

        $r0 = <android.webkit.Network: android.webkit.Network sNetwork>;

        if $r0 == null goto label1;

        $r0 = <android.webkit.Network: android.webkit.Network sNetwork>;

        $r1 = $r0.<android.webkit.Network: android.net.http.RequestQueue mRequestQueue>;

        virtualinvoke $r1.<android.net.http.RequestQueue: void enablePlatformNotifications()>();

        return;

     label1:
        <android.webkit.Network: boolean sPlatformNotifications> = 1;

        return;

     label2:
        return;
    }

    public static android.webkit.Network getInstance(android.content.Context)
    {
        android.content.Context $r0;
        android.webkit.Network $r1;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r2;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "android/webkit/Network";

     label1:
        $r1 = <android.webkit.Network: android.webkit.Network sNetwork>;

        if $r1 != null goto label2;

        $r1 = new android.webkit.Network;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke $r1.<android.webkit.Network: void <init>(android.content.Context)>($r0);

        <android.webkit.Network: android.webkit.Network sNetwork> = $r1;

        $z0 = <android.webkit.Network: boolean sPlatformNotifications>;

        if $z0 == 0 goto label2;

        $i0 = <android.webkit.Network: int sPlatformNotificationEnableRefCount>;

        $i0 = $i0 - 1;

        <android.webkit.Network: int sPlatformNotificationEnableRefCount> = $i0;

        staticinvoke <android.webkit.Network: void enablePlatformNotifications()>();

     label2:
        $r1 = <android.webkit.Network: android.webkit.Network sNetwork>;

     label3:
        exitmonitor class "android/webkit/Network";

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "android/webkit/Network";

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void clearUserSslPrefTable()
    {
        android.webkit.Network $r0;
        android.webkit.SslErrorHandler $r1;

        $r0 := @this: android.webkit.Network;

        $r1 = $r0.<android.webkit.Network: android.webkit.SslErrorHandler mSslErrorHandler>;

        virtualinvoke $r1.<android.webkit.SslErrorHandler: void clear()>();

        return;
    }

    public java.lang.String getProxyHostname()
    {
        android.webkit.Network $r0;
        android.net.http.RequestQueue $r1;
        org.apache.http.HttpHost $r2;
        java.lang.String $r3;

        $r0 := @this: android.webkit.Network;

        $r1 = $r0.<android.webkit.Network: android.net.http.RequestQueue mRequestQueue>;

        $r2 = virtualinvoke $r1.<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()>();

        $r3 = virtualinvoke $r2.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        return $r3;
    }

    public java.lang.String getProxyPassword()
    {
        android.webkit.Network $r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        $r0 := @this: android.webkit.Network;

        entermonitor $r0;

     label1:
        r2 = $r0.<android.webkit.Network: java.lang.String mProxyPassword>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getProxyUsername()
    {
        android.webkit.Network $r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        $r0 := @this: android.webkit.Network;

        entermonitor $r0;

     label1:
        r2 = $r0.<android.webkit.Network: java.lang.String mProxyUsername>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void handleAuthRequest(android.webkit.LoadListener)
    {
        android.webkit.Network $r0;
        android.webkit.LoadListener $r1;
        android.webkit.HttpAuthHandler $r2;

        $r0 := @this: android.webkit.Network;

        $r1 := @parameter0: android.webkit.LoadListener;

        if $r1 == null goto label1;

        $r2 = $r0.<android.webkit.Network: android.webkit.HttpAuthHandler mHttpAuthHandler>;

        virtualinvoke $r2.<android.webkit.HttpAuthHandler: void handleAuthRequest(android.webkit.LoadListener)>($r1);

        return;

     label1:
        return;
    }

    public void handleSslErrorRequest(android.webkit.LoadListener)
    {
        android.webkit.Network $r0;
        android.webkit.LoadListener $r1;
        android.webkit.SslErrorHandler $r2;

        $r0 := @this: android.webkit.Network;

        $r1 := @parameter0: android.webkit.LoadListener;

        if $r1 == null goto label1;

        $r2 = $r0.<android.webkit.Network: android.webkit.SslErrorHandler mSslErrorHandler>;

        virtualinvoke $r2.<android.webkit.SslErrorHandler: void handleSslErrorRequest(android.webkit.LoadListener)>($r1);

        return;

     label1:
        return;
    }

    public boolean isValidProxySet()
    {
        android.webkit.Network $r0;
        android.net.http.RequestQueue $r1, $r3;
        org.apache.http.HttpHost $r2;
        boolean $z0;
        java.lang.Throwable $r4;

        $r0 := @this: android.webkit.Network;

        $r1 = $r0.<android.webkit.Network: android.net.http.RequestQueue mRequestQueue>;

        entermonitor $r1;

     label1:
        $r3 = $r0.<android.webkit.Network: android.net.http.RequestQueue mRequestQueue>;

        $r2 = virtualinvoke $r3.<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()>();

        if $r2 == null goto label4;

        $z0 = 1;

     label2:
        exitmonitor $r1;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public boolean requestURL(java.lang.String, java.util.Map, byte[], android.webkit.LoadListener, boolean)
    {
        android.webkit.Network $r0;
        java.lang.String $r1, $r5;
        java.util.Map $r2;
        byte[] $r3;
        android.webkit.LoadListener $r4;
        boolean $z0, $z1;
        java.io.ByteArrayInputStream $r6;
        int $i0;
        android.net.http.RequestQueue $r7;
        android.content.Context $r8;
        android.net.WebAddress $r9;
        android.net.http.RequestHandle $r10;

        $r0 := @this: android.webkit.Network;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: android.webkit.LoadListener;

        $z0 := @parameter4: boolean;

        $r5 = virtualinvoke $r4.<android.webkit.LoadListener: java.lang.String url()>();

        $z1 = staticinvoke <android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>($r5);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <android.webkit.URLUtil: boolean isAssetUrl(java.lang.String)>($r5);

        if $z1 != 0 goto label2;

        $z1 = staticinvoke <android.webkit.URLUtil: boolean isFileUrl(java.lang.String)>($r5);

        if $z1 != 0 goto label2;

        $z1 = staticinvoke <android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>($r5);

        if $z1 == 0 goto label3;

     label2:
        return 0;

     label3:
        $r6 = null;

        $i0 = 0;

        if $r3 == null goto label4;

        $i0 = lengthof $r3;

        $r6 = new java.io.ByteArrayInputStream;

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

     label4:
        $r7 = $r0.<android.webkit.Network: android.net.http.RequestQueue mRequestQueue>;

        $z1 = virtualinvoke $r4.<android.webkit.LoadListener: boolean isSynchronous()>();

        if $z1 == 0 goto label5;

        $r7 = new android.net.http.RequestQueue;

        $r8 = virtualinvoke $r4.<android.webkit.LoadListener: android.content.Context getContext()>();

        specialinvoke $r7.<android.net.http.RequestQueue: void <init>(android.content.Context,int)>($r8, 1);

     label5:
        $r9 = virtualinvoke $r4.<android.webkit.LoadListener: android.net.WebAddress getWebAddress()>();

        $r10 = virtualinvoke $r7.<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int,boolean)>($r5, $r9, $r1, $r2, $r4, $r6, $i0, $z0);

        virtualinvoke $r4.<android.webkit.LoadListener: void attachRequestHandle(android.net.http.RequestHandle)>($r10);

        $z0 = virtualinvoke $r4.<android.webkit.LoadListener: boolean isSynchronous()>();

        if $z0 == 0 goto label6;

        virtualinvoke $r10.<android.net.http.RequestHandle: void waitUntilComplete()>();

        virtualinvoke $r4.<android.webkit.LoadListener: void loadSynchronousMessages()>();

        virtualinvoke $r7.<android.net.http.RequestQueue: void shutdown()>();

     label6:
        return 1;
    }

    public boolean restoreState(android.os.Bundle)
    {
        android.webkit.Network $r0;
        android.os.Bundle $r1;
        boolean $z0;
        android.webkit.SslErrorHandler $r2;

        $r0 := @this: android.webkit.Network;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = $r0.<android.webkit.Network: android.webkit.SslErrorHandler mSslErrorHandler>;

        $z0 = virtualinvoke $r2.<android.webkit.SslErrorHandler: boolean restoreState(android.os.Bundle)>($r1);

        return $z0;
    }

    public boolean saveState(android.os.Bundle)
    {
        android.webkit.Network $r0;
        android.os.Bundle $r1;
        boolean $z0;
        android.webkit.SslErrorHandler $r2;

        $r0 := @this: android.webkit.Network;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = $r0.<android.webkit.Network: android.webkit.SslErrorHandler mSslErrorHandler>;

        $z0 = virtualinvoke $r2.<android.webkit.SslErrorHandler: boolean saveState(android.os.Bundle)>($r1);

        return $z0;
    }

    public void setProxyPassword(java.lang.String)
    {
        android.webkit.Network $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.webkit.Network;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r0.<android.webkit.Network: java.lang.String mProxyPassword> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setProxyUsername(java.lang.String)
    {
        android.webkit.Network $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.webkit.Network;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r0.<android.webkit.Network: java.lang.String mProxyUsername> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void startTiming()
    {
        android.webkit.Network $r0;
        android.net.http.RequestQueue $r1;

        $r0 := @this: android.webkit.Network;

        $r1 = $r0.<android.webkit.Network: android.net.http.RequestQueue mRequestQueue>;

        virtualinvoke $r1.<android.net.http.RequestQueue: void startTiming()>();

        return;
    }

    public void stopTiming()
    {
        android.webkit.Network $r0;
        android.net.http.RequestQueue $r1;

        $r0 := @this: android.webkit.Network;

        $r1 = $r0.<android.webkit.Network: android.net.http.RequestQueue mRequestQueue>;

        virtualinvoke $r1.<android.net.http.RequestQueue: void stopTiming()>();

        return;
    }

    public static void <clinit>()
    {
        <android.webkit.Network: java.lang.String LOGTAG> = "network";

        return;
    }
}
