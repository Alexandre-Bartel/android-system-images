public class android.opengl.GLU extends java.lang.Object
{

    public void <init>()
    {
        android.opengl.GLU $r0;

        $r0 := @this: android.opengl.GLU;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String gluErrorString(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1280: goto label3;
            case 1281: goto label4;
            case 1282: goto label5;
            case 1283: goto label6;
            case 1284: goto label7;
            case 1285: goto label8;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "no error";

     label3:
        return "invalid enum";

     label4:
        return "invalid value";

     label5:
        return "invalid operation";

     label6:
        return "stack overflow";

     label7:
        return "stack underflow";

     label8:
        return "out of memory";
    }

    public static void gluLookAt(javax.microedition.khronos.opengles.GL10, float, float, float, float, float, float, float, float, float)
    {
        javax.microedition.khronos.opengles.GL10 $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        float[] $r1;

        $r0 := @parameter0: javax.microedition.khronos.opengles.GL10;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        $f4 := @parameter5: float;

        $f5 := @parameter6: float;

        $f6 := @parameter7: float;

        $f7 := @parameter8: float;

        $f8 := @parameter9: float;

        $f3 = $f3 - $f0;

        $f4 = $f4 - $f1;

        $f9 = $f5 - $f2;

        $f5 = staticinvoke <android.opengl.Matrix: float length(float,float,float)>($f3, $f4, $f9);

        $f10 = 1.0F / $f5;

        $f5 = $f3 * $f10;

        $f3 = $f4 * $f10;

        $f4 = $f9 * $f10;

        $f9 = $f3 * $f8;

        $f10 = $f4 * $f7;

        $f9 = $f9 - $f10;

        $f10 = $f4 * $f6;

        $f8 = $f8 * $f5;

        $f10 = $f10 - $f8;

        $f7 = $f7 * $f5;

        $f6 = $f6 * $f3;

        $f7 = $f7 - $f6;

        $f6 = staticinvoke <android.opengl.Matrix: float length(float,float,float)>($f9, $f10, $f7);

        $f11 = 1.0F / $f6;

        $f8 = $f9 * $f11;

        $f6 = $f10 * $f11;

        $f7 = $f7 * $f11;

        $f9 = $f6 * $f4;

        $f10 = $f7 * $f3;

        $f9 = $f9 - $f10;

        $f10 = $f7 * $f5;

        $f11 = $f8 * $f4;

        $f10 = $f10 - $f11;

        $f11 = $f8 * $f3;

        $f12 = $f6 * $f5;

        $f11 = $f11 - $f12;

        $r1 = newarray (float)[16];

        $r1[0] = $f8;

        $r1[1] = $f9;

        $f5 = neg $f5;

        $r1[2] = $f5;

        $f5 = 0.0F;

        $r1[3] = $f5;

        $r1[4] = $f6;

        $r1[5] = $f10;

        $f3 = neg $f3;

        $r1[6] = $f3;

        $f3 = 0.0F;

        $r1[7] = $f3;

        $r1[8] = $f7;

        $r1[9] = $f11;

        $f3 = neg $f4;

        $r1[10] = $f3;

        $f3 = 0.0F;

        $r1[11] = $f3;

        $f3 = 0.0F;

        $r1[12] = $f3;

        $f3 = 0.0F;

        $r1[13] = $f3;

        $f3 = 0.0F;

        $r1[14] = $f3;

        $f3 = 1.06535322E9F;

        $r1[15] = $f3;

        interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(float[],int)>($r1, 0);

        $f0 = neg $f0;

        $f1 = neg $f1;

        $f2 = neg $f2;

        interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: void glTranslatef(float,float,float)>($f0, $f1, $f2);

        return;
    }

    public static void gluOrtho2D(javax.microedition.khronos.opengles.GL10, float, float, float, float)
    {
        javax.microedition.khronos.opengles.GL10 $r0;
        float $f0, $f1, $f2, $f3;

        $r0 := @parameter0: javax.microedition.khronos.opengles.GL10;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: void glOrthof(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, -1.0F, 1.0F);

        return;
    }

    public static void gluPerspective(javax.microedition.khronos.opengles.GL10, float, float, float, float)
    {
        javax.microedition.khronos.opengles.GL10 $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0;

        $r0 := @parameter0: javax.microedition.khronos.opengles.GL10;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        $d0 = (double) $f0;

        $d0 = $d0 * 0.008726646259971648;

        $d0 = staticinvoke <java.lang.Math: double tan(double)>($d0);

        $f0 = (float) $d0;

        $f5 = $f2 * $f0;

        $f4 = neg $f5;

        $f0 = $f4 * $f1;

        $f1 = $f5 * $f1;

        interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: void glFrustumf(float,float,float,float,float,float)>($f0, $f1, $f4, $f5, $f2, $f3);

        return;
    }

    public static int gluProject(float, float, float, float[], int, float[], int, int[], int, float[], int)
    {
        int $i0, $i1, $i2, $i3;
        int[] $r0;
        float[] $r1, $r2, $r3, $r4;
        float $f0, $f1, $f2, $f3;
        byte $b4;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r2 := @parameter3: float[];

        $i3 := @parameter4: int;

        $r3 := @parameter5: float[];

        $i0 := @parameter6: int;

        $r0 := @parameter7: int[];

        $i1 := @parameter8: int;

        $r1 := @parameter9: float[];

        $i2 := @parameter10: int;

        $r4 = newarray (float)[16];

        staticinvoke <android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>($r4, 0, $r3, $i0, $r2, $i3);

        $r2 = newarray (float)[4];

        $r2[0] = $f0;

        $r2[1] = $f1;

        $r2[2] = $f2;

        $f0 = 1.06535322E9F;

        $r2[3] = $f0;

        $r3 = newarray (float)[4];

        staticinvoke <android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>($r3, 0, $r4, 0, $r2, 0);

        $f0 = $r3[3];

        $b4 = $f0 cmpl 0.0F;

        if $b4 != 0 goto label1;

        return 0;

     label1:
        $f0 = 1.0F / $f0;

        $i3 = $r0[$i1];

        $f1 = (float) $i3;

        $i3 = $i1 + 2;

        $i3 = $r0[$i3];

        $f2 = (float) $i3;

        $f3 = $r3[0];

        $f3 = $f3 * $f0;

        $f3 = $f3 + 1.0F;

        $f2 = $f2 * $f3;

        $f2 = $f2 * 0.5F;

        $f1 = $f1 + $f2;

        $r1[$i2] = $f1;

        $i3 = $i2 + 1;

        $i0 = $i1 + 1;

        $i0 = $r0[$i0];

        $f1 = (float) $i0;

        $i0 = $i1 + 3;

        $i0 = $r0[$i0];

        $f2 = (float) $i0;

        $f3 = $r3[1];

        $f3 = $f3 * $f0;

        $f3 = $f3 + 1.0F;

        $f2 = $f2 * $f3;

        $f2 = $f2 * 0.5F;

        $f1 = $f1 + $f2;

        $r1[$i3] = $f1;

        $i3 = $i2 + 2;

        $f1 = $r3[2];

        $f0 = $f0 * $f1;

        $f0 = $f0 + 1.0F;

        $f0 = $f0 * 0.5F;

        $r1[$i3] = $f0;

        return 1;
    }

    public static int gluUnProject(float, float, float, float[], int, float[], int, int[], int, float[], int)
    {
        int $i0, $i1, $i2, $i3;
        int[] $r0;
        float[] $r1, $r2, $r3, $r4;
        boolean $z0;
        float $f0, $f1, $f2, $f3;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r2 := @parameter3: float[];

        $i3 := @parameter4: int;

        $r3 := @parameter5: float[];

        $i0 := @parameter6: int;

        $r0 := @parameter7: int[];

        $i1 := @parameter8: int;

        $r1 := @parameter9: float[];

        $i2 := @parameter10: int;

        $r4 = newarray (float)[16];

        staticinvoke <android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>($r4, 0, $r3, $i0, $r2, $i3);

        $r2 = newarray (float)[16];

        $z0 = staticinvoke <android.opengl.Matrix: boolean invertM(float[],int,float[],int)>($r2, 0, $r4, 0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = newarray (float)[4];

        $i3 = $i1 + 0;

        $i3 = $r0[$i3];

        $f3 = (float) $i3;

        $f0 = $f0 - $f3;

        $f0 = $f0 * 2.0F;

        $i3 = $i1 + 2;

        $i3 = $r0[$i3];

        $f3 = (float) $i3;

        $f0 = $f0 / $f3;

        $f0 = $f0 - 1.0F;

        $r3[0] = $f0;

        $i3 = $i1 + 1;

        $i3 = $r0[$i3];

        $f0 = (float) $i3;

        $f0 = $f1 - $f0;

        $f0 = $f0 * 2.0F;

        $i3 = $i1 + 3;

        $i3 = $r0[$i3];

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

        $f0 = $f0 - 1.0F;

        $r3[1] = $f0;

        $f0 = 2.0F * $f2;

        $f0 = $f0 - 1.0F;

        $r3[2] = $f0;

        $f0 = 1.06535322E9F;

        $r3[3] = $f0;

        $r4 = newarray (float)[4];

        staticinvoke <android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>($r4, 0, $r2, 0, $r3, 0);

        $f0 = $r4[0];

        $r1[$i2] = $f0;

        $i3 = $i2 + 1;

        $f0 = $r4[1];

        $r1[$i3] = $f0;

        $i3 = $i2 + 2;

        $f0 = $r4[2];

        $r1[$i3] = $f0;

        return 1;
    }
}
