class com.android.server.WindowManagerService$PolicyThread extends java.lang.Thread
{
    private final android.content.Context mContext;
    private final com.android.server.PowerManagerService mPM;
    private final android.view.WindowManagerPolicy mPolicy;
    boolean mRunning;
    private final com.android.server.WindowManagerService mService;

    public void <init>(android.view.WindowManagerPolicy, com.android.server.WindowManagerService, android.content.Context, com.android.server.PowerManagerService)
    {
        com.android.server.WindowManagerService$PolicyThread $r0;
        android.view.WindowManagerPolicy $r1;
        com.android.server.WindowManagerService $r2;
        android.content.Context $r3;
        com.android.server.PowerManagerService $r4;

        $r0 := @this: com.android.server.WindowManagerService$PolicyThread;

        $r1 := @parameter0: android.view.WindowManagerPolicy;

        $r2 := @parameter1: com.android.server.WindowManagerService;

        $r3 := @parameter2: android.content.Context;

        $r4 := @parameter3: com.android.server.PowerManagerService;

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.String)>("WindowManagerPolicy");

        $r0.<com.android.server.WindowManagerService$PolicyThread: boolean mRunning> = 0;

        $r0.<com.android.server.WindowManagerService$PolicyThread: android.view.WindowManagerPolicy mPolicy> = $r1;

        $r0.<com.android.server.WindowManagerService$PolicyThread: com.android.server.WindowManagerService mService> = $r2;

        $r0.<com.android.server.WindowManagerService$PolicyThread: android.content.Context mContext> = $r3;

        $r0.<com.android.server.WindowManagerService$PolicyThread: com.android.server.PowerManagerService mPM> = $r4;

        return;
    }

    public void run()
    {
        com.android.server.WindowManagerService$PolicyThread $r0;
        android.content.Context $r1;
        com.android.server.WindowManagerService $r2;
        com.android.server.PowerManagerService $r3;
        android.view.WindowManagerPolicy $r4;
        java.lang.Throwable $r5;
        android.view.IWindowManager r6;

        $r0 := @this: com.android.server.WindowManagerService$PolicyThread;

        staticinvoke <android.os.Looper: void prepare()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(-2);

        $r4 = $r0.<com.android.server.WindowManagerService$PolicyThread: android.view.WindowManagerPolicy mPolicy>;

        $r1 = $r0.<com.android.server.WindowManagerService$PolicyThread: android.content.Context mContext>;

        $r2 = $r0.<com.android.server.WindowManagerService$PolicyThread: com.android.server.WindowManagerService mService>;

        $r3 = $r0.<com.android.server.WindowManagerService$PolicyThread: com.android.server.PowerManagerService mPM>;

        r6 = (android.view.IWindowManager) $r2;

        interfaceinvoke $r4.<android.view.WindowManagerPolicy: void init(android.content.Context,android.view.IWindowManager,android.os.LocalPowerManager)>($r1, r6, $r3);

        entermonitor $r0;

     label1:
        $r0.<com.android.server.WindowManagerService$PolicyThread: boolean mRunning> = 1;

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label2:
        staticinvoke <android.os.Looper: void loop()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor $r0;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
