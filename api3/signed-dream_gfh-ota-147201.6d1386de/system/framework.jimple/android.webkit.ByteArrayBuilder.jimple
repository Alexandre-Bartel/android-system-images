class android.webkit.ByteArrayBuilder extends java.lang.Object
{
    private static final int DEFAULT_CAPACITY;
    private java.util.LinkedList mChunks;
    private int mMinCapacity;
    private java.util.LinkedList mPool;

    public void <init>()
    {
        android.webkit.ByteArrayBuilder $r0;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        specialinvoke $r0.<android.webkit.ByteArrayBuilder: void init(int)>(0);

        return;
    }

    public void <init>(int)
    {
        android.webkit.ByteArrayBuilder $r0;
        int $i0;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        specialinvoke $r0.<android.webkit.ByteArrayBuilder: void init(int)>($i0);

        return;
    }

    private android.webkit.ByteArrayBuilder$Chunk appendChunk(int)
    {
        android.webkit.ByteArrayBuilder $r0;
        int $i0, $i1, $i2;
        java.util.LinkedList $r1;
        boolean $z0;
        android.webkit.ByteArrayBuilder$Chunk $r2;
        java.lang.Object $r3;
        byte[] $r4;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.webkit.ByteArrayBuilder: int mMinCapacity>;

        if $i0 >= $i1 goto label1;

        $i0 = $r0.<android.webkit.ByteArrayBuilder: int mMinCapacity>;

     label1:
        $r1 = $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mChunks>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke $r0.<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk obtainChunk(int)>($i0);

        return $r2;

     label2:
        $r1 = $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mChunks>;

        $r3 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object getLast()>();

        $r2 = (android.webkit.ByteArrayBuilder$Chunk) $r3;

        $i1 = $r2.<android.webkit.ByteArrayBuilder$Chunk: int mLength>;

        $r4 = $r2.<android.webkit.ByteArrayBuilder$Chunk: byte[] mArray>;

        $i2 = lengthof $r4;

        if $i1 != $i2 goto label3;

        $r2 = specialinvoke $r0.<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk obtainChunk(int)>($i0);

        return $r2;

     label3:
        return $r2;
    }

    private void init(int)
    {
        android.webkit.ByteArrayBuilder $r0;
        int $i0;
        java.util.LinkedList $r1;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        $i0 := @parameter0: int;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mChunks> = $r1;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mPool> = $r1;

        if $i0 > 0 goto label1;

        $i0 = 8192;

     label1:
        $r0.<android.webkit.ByteArrayBuilder: int mMinCapacity> = $i0;

        return;
    }

    private android.webkit.ByteArrayBuilder$Chunk obtainChunk(int)
    {
        android.webkit.ByteArrayBuilder $r0;
        int $i0;
        java.util.LinkedList $r1;
        boolean $z0;
        android.webkit.ByteArrayBuilder$Chunk $r2;
        java.lang.Object $r3;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mPool>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r2 = new android.webkit.ByteArrayBuilder$Chunk;

        specialinvoke $r2.<android.webkit.ByteArrayBuilder$Chunk: void <init>(int)>($i0);

     label1:
        $r1 = $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mChunks>;

        virtualinvoke $r1.<java.util.LinkedList: void addLast(java.lang.Object)>($r2);

        return $r2;

     label2:
        $r1 = $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mPool>;

        $r3 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r2 = (android.webkit.ByteArrayBuilder$Chunk) $r3;

        goto label1;
    }

    public void append(byte[])
    {
        android.webkit.ByteArrayBuilder $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke $r0.<android.webkit.ByteArrayBuilder: void append(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public void append(byte[], int, int)
    {
        android.webkit.ByteArrayBuilder $r0;
        byte[] $r1, $r3;
        int $i0, $i1, $i2, $i3;
        android.webkit.ByteArrayBuilder$Chunk $r2;
        java.lang.Throwable $r4;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        entermonitor $r0;

     label1:
        if $i1 <= 0 goto label4;

     label2:
        $r2 = specialinvoke $r0.<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk appendChunk(int)>($i1);

        $r3 = $r2.<android.webkit.ByteArrayBuilder$Chunk: byte[] mArray>;

        $i2 = lengthof $r3;

        $i3 = $r2.<android.webkit.ByteArrayBuilder$Chunk: int mLength>;

        $i2 = $i2 - $i3;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r3 = $r2.<android.webkit.ByteArrayBuilder$Chunk: byte[] mArray>;

        $i3 = $r2.<android.webkit.ByteArrayBuilder$Chunk: int mLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r3, $i3, $i2);

        $i3 = $r2.<android.webkit.ByteArrayBuilder$Chunk: int mLength>;

        $i3 = $i3 + $i2;

        $r2.<android.webkit.ByteArrayBuilder$Chunk: int mLength> = $i3;

     label3:
        $i1 = $i1 - $i2;

        $i0 = $i0 + $i2;

        goto label1;

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public void clear()
    {
        android.webkit.ByteArrayBuilder $r0;
        java.lang.Throwable $r1;
        android.webkit.ByteArrayBuilder$Chunk $r2;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        entermonitor $r0;

     label1:
        $r2 = virtualinvoke $r0.<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk getFirstChunk()>();

     label2:
        if $r2 == null goto label4;

        virtualinvoke $r0.<android.webkit.ByteArrayBuilder: void releaseChunk(android.webkit.ByteArrayBuilder$Chunk)>($r2);

        $r2 = virtualinvoke $r0.<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk getFirstChunk()>();

     label3:
        goto label2;

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public android.webkit.ByteArrayBuilder$Chunk getFirstChunk()
    {
        android.webkit.ByteArrayBuilder $r0;
        java.util.LinkedList $r1;
        boolean $z0;
        android.webkit.ByteArrayBuilder$Chunk $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        entermonitor $r0;

     label1:
        $r1 = $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mChunks>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

     label2:
        if $z0 == 0 goto label4;

        $r2 = null;

     label3:
        exitmonitor $r0;

        return $r2;

     label4:
        $r1 = $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mChunks>;

        $r3 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r2 = (android.webkit.ByteArrayBuilder$Chunk) $r3;

     label5:
        goto label3;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public boolean isEmpty()
    {
        android.webkit.ByteArrayBuilder $r0;
        boolean $z0;
        java.util.LinkedList $r1;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        $r1 = $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mChunks>;

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        return $z0;
    }

    public void releaseChunk(android.webkit.ByteArrayBuilder$Chunk)
    {
        android.webkit.ByteArrayBuilder $r0;
        android.webkit.ByteArrayBuilder$Chunk $r1;
        java.util.LinkedList $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.webkit.ByteArrayBuilder;

        $r1 := @parameter0: android.webkit.ByteArrayBuilder$Chunk;

        entermonitor $r0;

     label1:
        $r1.<android.webkit.ByteArrayBuilder$Chunk: int mLength> = 0;

        $r2 = $r0.<android.webkit.ByteArrayBuilder: java.util.LinkedList mPool>;

        virtualinvoke $r2.<java.util.LinkedList: void addLast(java.lang.Object)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.webkit.ByteArrayBuilder: int DEFAULT_CAPACITY> = 8192;

        return;
    }
}
