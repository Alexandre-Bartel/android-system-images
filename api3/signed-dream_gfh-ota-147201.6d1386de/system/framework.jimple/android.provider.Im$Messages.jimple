public final class android.provider.Im$Messages extends java.lang.Object implements android.provider.BaseColumns, android.provider.Im$MessagesColumns
{
    public static final java.lang.String CONTENT_ITEM_TYPE;
    public static final java.lang.String CONTENT_TYPE;
    public static final android.net.Uri CONTENT_URI;
    public static final android.net.Uri CONTENT_URI_MESSAGES_BY;
    public static final java.lang.String DEFAULT_SORT_ORDER;

    static void <clinit>()
    {
        android.net.Uri $r0;

        <android.provider.Im$Messages: java.lang.String DEFAULT_SORT_ORDER> = "date ASC";

        <android.provider.Im$Messages: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/im-messages";

        <android.provider.Im$Messages: java.lang.String CONTENT_ITEM_TYPE> = "vnd.android.cursor.item/im-messages";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://im/messages");

        <android.provider.Im$Messages: android.net.Uri CONTENT_URI> = $r0;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://im/messagesBy");

        <android.provider.Im$Messages: android.net.Uri CONTENT_URI_MESSAGES_BY> = $r0;

        return;
    }

    private void <init>()
    {
        android.provider.Im$Messages $r0;

        $r0 := @this: android.provider.Im$Messages;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final android.net.Uri getContentUriByContact(long, long, java.lang.String)
    {
        long $l0, $l1;
        java.lang.String $r0;
        android.net.Uri $r1;
        android.net.Uri$Builder $r2;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r0 := @parameter2: java.lang.String;

        $r1 = <android.provider.Im$Messages: android.net.Uri CONTENT_URI_MESSAGES_BY>;

        $r2 = virtualinvoke $r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        staticinvoke <android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>($r2, $l0);

        staticinvoke <android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>($r2, $l1);

        virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r0);

        $r1 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r1;
    }
}
