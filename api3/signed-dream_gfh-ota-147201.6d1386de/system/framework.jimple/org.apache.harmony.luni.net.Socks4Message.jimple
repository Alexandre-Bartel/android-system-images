class org.apache.harmony.luni.net.Socks4Message extends java.lang.Object
{
    private static final int BUFFER_LENGTH;
    static final int COMMAND_BIND;
    static final int COMMAND_CONNECT;
    private static final int INDEX_COMMAND;
    private static final int INDEX_IP;
    private static final int INDEX_PORT;
    private static final int INDEX_USER_ID;
    static final int INDEX_VERSION;
    private static final int MAX_USER_ID_LENGTH;
    static final int REPLY_LENGTH;
    static final int RETURN_CANNOT_CONNECT_TO_IDENTD;
    static final int RETURN_DIFFERENT_USER_IDS;
    static final int RETURN_FAILURE;
    static final int RETURN_SUCCESS;
    private static final int SOCKS_VERSION;
    protected byte[] buffer;

    public void <init>()
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        byte[] $r1;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[256];

        $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer> = $r1;

        specialinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: void setVersionNumber(int)>(4);

        return;
    }

    private int getInt16(int)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0, $i3;
        byte[] $r1;
        byte $b1;
        short $s2;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b1 = $r1[$i0];

        $s2 = $b1 & 255;

        $i3 = $s2 << 8;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $i0 = $i0 + 1;

        $b1 = $r1[$i0];

        $s2 = $b1 & 255;

        $i0 = $i3 + $s2;

        return $i0;
    }

    private int getInt32(int)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0, $i1, $i5;
        byte[] $r1;
        byte $b2;
        short $s3, $s4;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $i1 = $i0 + 3;

        $b2 = $r1[$i1];

        $s3 = $b2 & 255;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $i1 = $i0 + 2;

        $b2 = $r1[$i1];

        $s4 = $b2 & 255;

        $i1 = $s4 << 8;

        $i1 = $s3 + $i1;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $i5 = $i0 + 1;

        $b2 = $r1[$i5];

        $s3 = $b2 & 255;

        $i5 = $s3 << 16;

        $i1 = $i1 + $i5;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $i0 = $i0 + 0;

        $b2 = $r1[$i0];

        $s3 = $b2 & 255;

        $i0 = $s3 << 24;

        $i0 = $i1 + $i0;

        return $i0;
    }

    private java.lang.String getString(int, int)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        byte[] $r2;
        byte $b3;
        java.io.UnsupportedEncodingException $r3;
        java.lang.RuntimeException $r4;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i0;

        $i1 = $i0 + $i1;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b3 = $r2[$i2];

        if $b3 == 0 goto label2;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r1 = new java.lang.String;

        $r2 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $i1 = $i2 - $i0;

     label3:
        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r2, $i0, $i1, "ISO8859_1");

     label4:
        return $r1;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r1 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    private int getVersionNumber()
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        byte[] $r1;
        byte $b0;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b0 = $r1[0];

        return $b0;
    }

    private void setInt16(int, int)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $i2 = $i1 >>> 8;

        $i2 = $i2 & 255;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $i0 = $i0 + 1;

        $i1 = $i1 & 255;

        $b3 = (byte) $i1;

        $r1[$i0] = $b3;

        return;
    }

    private void setString(int, int, java.lang.String)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        byte[] $r2, $r3;
        java.io.UnsupportedEncodingException $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO8859_1");

     label2:
        $i2 = lengthof $r2;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i1);

        $r3 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, $i0, $i1);

        $r2 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $i0 = $i0 + $i1;

        $r2[$i0] = 0;

        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r1 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private void setVersionNumber(int)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b1 = (byte) $i0;

        $r1[0] = $b1;

        return;
    }

    public byte[] getBytes()
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        byte[] r1;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        return r1;
    }

    public int getCommandOrResult()
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        byte[] $r1;
        byte $b0;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b0 = $r1[1];

        return $b0;
    }

    public java.lang.String getErrorString(int)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 91: goto label2;
            case 92: goto label3;
            case 93: goto label4;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K00d0");

        return $r1;

     label2:
        $r1 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K00cd");

        return $r1;

     label3:
        $r1 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K00ce");

        return $r1;

     label4:
        $r1 = staticinvoke <org.apache.harmony.luni.util.Msg: java.lang.String getString(java.lang.String)>("K00cf");

        return $r1;
    }

    public int getIP()
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: int getInt32(int)>(4);

        return $i0;
    }

    public int getLength()
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 = 8;

     label1:
        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b1 = $r1[$i0];

        if $b1 == 0 goto label2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i0 = $i0 + 1;

        return $i0;
    }

    public int getPort()
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: int getInt16(int)>(2);

        return $i0;
    }

    public java.lang.String getUserId()
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $r1 = specialinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: java.lang.String getString(int,int)>(8, 248);

        return $r1;
    }

    public void setCommandOrResult(int)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b1 = (byte) $i0;

        $r1[1] = $b1;

        return;
    }

    public void setIP(byte[])
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        byte[] $r1, $r2;
        byte $b0;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b0 = $r1[0];

        $r2[4] = $b0;

        $r2 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b0 = $r1[1];

        $r2[5] = $b0;

        $r2 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b0 = $r1[2];

        $r2[6] = $b0;

        $r2 = $r0.<org.apache.harmony.luni.net.Socks4Message: byte[] buffer>;

        $b0 = $r1[3];

        $r2[7] = $b0;

        return;
    }

    public void setPort(int)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $i0 := @parameter0: int;

        specialinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: void setInt16(int,int)>(2, $i0);

        return;
    }

    public void setUserId(java.lang.String)
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: void setString(int,int,java.lang.String)>(8, 248, $r1);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.luni.net.Socks4Message $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.luni.net.Socks4Message;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(50);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version: ");

        $i0 = specialinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: int getVersionNumber()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Command: ");

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: int getCommandOrResult()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Port: ");

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: int getPort()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" IP: ");

        $i0 = virtualinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: int getIP()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" User ID: ");

        $r2 = virtualinvoke $r0.<org.apache.harmony.luni.net.Socks4Message: java.lang.String getUserId()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.luni.net.Socks4Message: int SOCKS_VERSION> = 4;

        <org.apache.harmony.luni.net.Socks4Message: int RETURN_SUCCESS> = 90;

        <org.apache.harmony.luni.net.Socks4Message: int RETURN_FAILURE> = 91;

        <org.apache.harmony.luni.net.Socks4Message: int RETURN_DIFFERENT_USER_IDS> = 93;

        <org.apache.harmony.luni.net.Socks4Message: int RETURN_CANNOT_CONNECT_TO_IDENTD> = 92;

        <org.apache.harmony.luni.net.Socks4Message: int REPLY_LENGTH> = 8;

        <org.apache.harmony.luni.net.Socks4Message: int MAX_USER_ID_LENGTH> = 248;

        <org.apache.harmony.luni.net.Socks4Message: int INDEX_VERSION> = 0;

        <org.apache.harmony.luni.net.Socks4Message: int INDEX_USER_ID> = 8;

        <org.apache.harmony.luni.net.Socks4Message: int INDEX_PORT> = 2;

        <org.apache.harmony.luni.net.Socks4Message: int INDEX_IP> = 4;

        <org.apache.harmony.luni.net.Socks4Message: int INDEX_COMMAND> = 1;

        <org.apache.harmony.luni.net.Socks4Message: int COMMAND_CONNECT> = 1;

        <org.apache.harmony.luni.net.Socks4Message: int COMMAND_BIND> = 2;

        <org.apache.harmony.luni.net.Socks4Message: int BUFFER_LENGTH> = 256;

        return;
    }
}
