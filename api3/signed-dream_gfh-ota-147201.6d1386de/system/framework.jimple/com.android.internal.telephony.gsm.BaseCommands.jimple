public abstract class com.android.internal.telephony.gsm.BaseCommands extends java.lang.Object implements com.android.internal.telephony.gsm.CommandsInterface
{
    static final java.lang.String LOG_TAG;
    protected android.os.RegistrantList mAvailRegistrants;
    protected android.os.RegistrantList mCallStateRegistrants;
    protected android.content.Context mContext;
    protected android.os.Registrant mNITZTimeRegistrant;
    protected android.os.RegistrantList mNetworkStateRegistrants;
    protected android.os.RegistrantList mNotAvailRegistrants;
    protected android.os.RegistrantList mOffOrNotAvailRegistrants;
    protected android.os.RegistrantList mOnRegistrants;
    protected android.os.RegistrantList mPDPRegistrants;
    protected android.os.RegistrantList mRadioStateChangedRegistrants;
    protected android.os.Registrant mRestrictedStateRegistrant;
    protected android.os.Registrant mRingRegistrant;
    protected android.os.RegistrantList mSIMLockedRegistrants;
    protected android.os.RegistrantList mSIMReadyRegistrants;
    protected android.os.Registrant mSMSRegistrant;
    protected android.os.Registrant mSignalStrengthRegistrant;
    protected android.os.Registrant mSimRefreshRegistrant;
    protected android.os.Registrant mSimSmsFullRegistrant;
    protected android.os.Registrant mSmsOnSimRegistrant;
    protected android.os.Registrant mSmsStatusRegistrant;
    protected android.os.Registrant mSsnRegistrant;
    protected com.android.internal.telephony.gsm.CommandsInterface$RadioState mState;
    protected java.lang.Object mStateMonitor;
    protected android.os.Registrant mStkCallSetUpRegistrant;
    protected android.os.Registrant mStkEventRegistrant;
    protected android.os.Registrant mStkProCmdRegistrant;
    protected android.os.Registrant mStkSessionEndRegistrant;
    protected android.os.Registrant mUSSDRegistrant;

    public void <init>(android.content.Context)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.content.Context $r1;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r2;
        java.lang.Object $r3;
        android.os.RegistrantList $r4;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState RADIO_UNAVAILABLE>;

        $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: java.lang.Object mStateMonitor> = $r3;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mRadioStateChangedRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mOnRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mAvailRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mOffOrNotAvailRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mNotAvailRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mSIMReadyRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mSIMLockedRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mCallStateRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mNetworkStateRegistrants> = $r4;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mPDPRegistrants> = $r4;

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.content.Context mContext> = $r1;

        return;
    }

    public com.android.internal.telephony.gsm.CommandsInterface$RadioState getRadioState()
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState r1;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        r1 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        return r1;
    }

    protected void onRadioAvailable()
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        return;
    }

    public void registerForAvailable(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        boolean $z0;
        android.os.RegistrantList $r4;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r5;
        android.os.AsyncResult $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mAvailRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        $r5 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 == 0 goto label2;

        $r6 = new android.os.AsyncResult;

        specialinvoke $r6.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r6);

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void registerForCallStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        android.os.RegistrantList $r4;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        return;
    }

    public void registerForNetworkStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        android.os.RegistrantList $r4;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mNetworkStateRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        return;
    }

    public void registerForNotAvailable(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        boolean $z0;
        android.os.RegistrantList $r4;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r5;
        android.os.AsyncResult $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mNotAvailRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        $r5 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 != 0 goto label2;

        $r6 = new android.os.AsyncResult;

        specialinvoke $r6.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r6);

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void registerForOffOrNotAvailable(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        boolean $z0;
        android.os.RegistrantList $r4;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r5, $r6;
        android.os.AsyncResult $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mOffOrNotAvailRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        $r5 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $r6 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState RADIO_OFF>;

        if $r5 == $r6 goto label2;

        $r5 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 != 0 goto label3;

     label2:
        $r7 = new android.os.AsyncResult;

        specialinvoke $r7.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r7);

     label3:
        exitmonitor $r2;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void registerForOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        boolean $z0;
        android.os.RegistrantList $r4;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r5;
        android.os.AsyncResult $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mOnRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        $r5 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isOn()>();

        if $z0 == 0 goto label2;

        $r6 = new android.os.AsyncResult;

        specialinvoke $r6.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r6);

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void registerForPDPStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        android.os.RegistrantList $r4;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mPDPRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        return;
    }

    public void registerForRadioStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        android.os.RegistrantList $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mRadioStateChangedRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant()>();

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerForSIMLockedOrAbsent(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        android.os.RegistrantList $r4;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r5, $r6;
        android.os.AsyncResult $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mSIMLockedRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        $r5 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $r6 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState SIM_LOCKED_OR_ABSENT>;

        if $r5 != $r6 goto label2;

        $r7 = new android.os.AsyncResult;

        specialinvoke $r7.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r7);

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void registerForSIMReady(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;
        boolean $z0;
        android.os.RegistrantList $r4;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r5;
        android.os.AsyncResult $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mSIMReadyRegistrants>;

        virtualinvoke $r4.<android.os.RegistrantList: void add(android.os.Registrant)>($r3);

        $r5 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isSIMReady()>();

        if $z0 == 0 goto label2;

        $r6 = new android.os.AsyncResult;

        specialinvoke $r6.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r6);

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setOnCallRing(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mRingRegistrant> = $r3;

        return;
    }

    public void setOnNITZTime(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mNITZTimeRegistrant> = $r3;

        return;
    }

    public void setOnNewSMS(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mSMSRegistrant> = $r3;

        return;
    }

    public void setOnRestrictedStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mRestrictedStateRegistrant> = $r3;

        return;
    }

    public void setOnSignalStrengthUpdate(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mSignalStrengthRegistrant> = $r3;

        return;
    }

    public void setOnSimRefresh(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mSimRefreshRegistrant> = $r3;

        return;
    }

    public void setOnSimSmsFull(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mSimSmsFullRegistrant> = $r3;

        return;
    }

    public void setOnSmsOnSim(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mSmsOnSimRegistrant> = $r3;

        return;
    }

    public void setOnSmsStatus(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mSmsStatusRegistrant> = $r3;

        return;
    }

    public void setOnStkCallSetUp(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mStkCallSetUpRegistrant> = $r3;

        return;
    }

    public void setOnStkEvent(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mStkEventRegistrant> = $r3;

        return;
    }

    public void setOnStkProactiveCmd(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mStkProCmdRegistrant> = $r3;

        return;
    }

    public void setOnStkSessionEnd(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mStkSessionEndRegistrant> = $r3;

        return;
    }

    public void setOnSuppServiceNotification(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mSsnRegistrant> = $r3;

        return;
    }

    public void setOnUSSD(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.Object $r2;
        android.os.Registrant $r3;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>($r1, $i0, $r2);

        $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.Registrant mUSSDRegistrant> = $r3;

        return;
    }

    protected void setRadioState(com.android.internal.telephony.gsm.CommandsInterface$RadioState)
    {
        com.android.internal.telephony.gsm.BaseCommands $r0;
        com.android.internal.telephony.gsm.CommandsInterface$RadioState $r1, $r2, $r4;
        java.lang.Object $r3;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        android.provider.Checkin$Stats$Tag $r7;
        android.os.RegistrantList $r8;
        boolean $z0;
        java.lang.Throwable $r9;

        $r0 := @this: com.android.internal.telephony.gsm.BaseCommands;

        $r1 := @parameter0: com.android.internal.telephony.gsm.CommandsInterface$RadioState;

        $r3 = $r0.<com.android.internal.telephony.gsm.BaseCommands: java.lang.Object mStateMonitor>;

        entermonitor $r3;

     label01:
        $r2 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState> = $r1;

        $r4 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        if $r2 != $r4 goto label03;

        exitmonitor $r3;

     label02:
        return;

     label03:
        $r5 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.content.Context mContext>;

        if $r5 == null goto label04;

        $r4 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState RADIO_UNAVAILABLE>;

        if $r1 != $r4 goto label04;

        $r1 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState RADIO_OFF>;

        if $r2 == $r1 goto label04;

        $r5 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = <android.provider.Checkin$Stats$Tag: android.provider.Checkin$Stats$Tag PHONE_RADIO_RESETS>;

        staticinvoke <android.provider.Checkin: android.net.Uri updateStats(android.content.ContentResolver,android.provider.Checkin$Stats$Tag,int,double)>($r6, $r7, 1, 0.0);

     label04:
        $r8 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mRadioStateChangedRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants()>();

        $r1 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 == 0 goto label05;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 != 0 goto label05;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GSM", "Notifying: radio available");

        $r8 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mAvailRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants()>();

        virtualinvoke $r0.<com.android.internal.telephony.gsm.BaseCommands: void onRadioAvailable()>();

     label05:
        $r1 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 != 0 goto label06;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 == 0 goto label06;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GSM", "Notifying: radio not available");

        $r8 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mNotAvailRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants()>();

     label06:
        $r1 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isSIMReady()>();

        if $z0 == 0 goto label07;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isSIMReady()>();

        if $z0 != 0 goto label07;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GSM", "Notifying: SIM ready");

        $r8 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mSIMReadyRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants()>();

     label07:
        $r1 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $r4 = <com.android.internal.telephony.gsm.CommandsInterface$RadioState: com.android.internal.telephony.gsm.CommandsInterface$RadioState SIM_LOCKED_OR_ABSENT>;

        if $r1 != $r4 goto label08;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GSM", "Notifying: SIM locked or absent");

        $r8 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mSIMLockedRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants()>();

     label08:
        $r1 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isOn()>();

        if $z0 == 0 goto label09;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isOn()>();

        if $z0 != 0 goto label09;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GSM", "Notifying: Radio On");

        $r8 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mOnRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants()>();

     label09:
        $r1 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isOn()>();

        if $z0 == 0 goto label10;

        $r1 = $r0.<com.android.internal.telephony.gsm.BaseCommands: com.android.internal.telephony.gsm.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 != 0 goto label11;

     label10:
        $z0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isOn()>();

        if $z0 == 0 goto label11;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 == 0 goto label11;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GSM", "Notifying: radio off or not available");

        $r8 = $r0.<com.android.internal.telephony.gsm.BaseCommands: android.os.RegistrantList mOffOrNotAvailRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants()>();

     label11:
        exitmonitor $r3;

     label12:
        return;

     label13:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label14:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.BaseCommands: java.lang.String LOG_TAG> = "GSM";

        return;
    }
}
