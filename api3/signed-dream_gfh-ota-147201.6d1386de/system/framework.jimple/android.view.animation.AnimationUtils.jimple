public class android.view.animation.AnimationUtils extends java.lang.Object
{

    public void <init>()
    {
        android.view.animation.AnimationUtils $r0;

        $r0 := @this: android.view.animation.AnimationUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.view.animation.Animation createAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.util.AttributeSet $r2;
        android.view.animation.Animation $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r1);

        $r3 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet)>($r0, $r1, null, $r2);

        return $r3;
    }

    private static android.view.animation.Animation createAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.view.animation.AnimationSet, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.view.animation.AnimationSet $r2, $r6;
        android.util.AttributeSet $r3;
        android.view.animation.Animation $r4;
        int $i0, $i1, $i2;
        java.lang.String $r5;
        boolean $z0;
        java.lang.StringBuilder $r8, r13;
        android.view.animation.AlphaAnimation r9;
        android.view.animation.ScaleAnimation r10;
        android.view.animation.RotateAnimation r11;
        android.view.animation.TranslateAnimation r12;
        java.lang.RuntimeException r14;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.view.animation.AnimationSet;

        $r3 := @parameter3: android.util.AttributeSet;

        $r4 = null;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 3 goto label02;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label09;

     label02:
        if $i1 == 1 goto label10;

        if $i1 != 2 goto label01;

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z0 == 0 goto label04;

        $r6 = new android.view.animation.AnimationSet;

        $r4 = $r6;

        specialinvoke $r6.<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        $r6 = (android.view.animation.AnimationSet) $r4;

        staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet)>($r0, $r1, $r6, $r3);

     label03:
        if $r2 == null goto label01;

        virtualinvoke $r2.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r4);

        goto label01;

     label04:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z0 == 0 goto label05;

        r9 = new android.view.animation.AlphaAnimation;

        $r4 = r9;

        specialinvoke r9.<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        goto label03;

     label05:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("scale");

        if $z0 == 0 goto label06;

        r10 = new android.view.animation.ScaleAnimation;

        $r4 = r10;

        specialinvoke r10.<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        goto label03;

     label06:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("rotate");

        if $z0 == 0 goto label07;

        r11 = new android.view.animation.RotateAnimation;

        $r4 = r11;

        specialinvoke r11.<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        goto label03;

     label07:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("translate");

        if $z0 == 0 goto label08;

        r12 = new android.view.animation.TranslateAnimation;

        $r4 = r12;

        specialinvoke r12.<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        goto label03;

     label08:
        r14 = new java.lang.RuntimeException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animation name: ");

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw r14;

     label09:
        return $r4;

     label10:
        return $r4;
    }

    private static android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.view.animation.Interpolator $r2;
        int $i0, $i1, $i2;
        android.util.AttributeSet $r3;
        java.lang.String $r4;
        boolean $z0;
        java.lang.StringBuilder $r6, r12;
        android.view.animation.LinearInterpolator r7;
        android.view.animation.AccelerateInterpolator r8;
        android.view.animation.DecelerateInterpolator r9;
        android.view.animation.AccelerateDecelerateInterpolator r10;
        android.view.animation.CycleInterpolator r11;
        java.lang.RuntimeException r13;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = null;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label8;

     label2:
        if $i1 == 1 goto label9;

        if $i1 != 2 goto label1;

        $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r1);

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("linearInterpolator");

        if $z0 == 0 goto label3;

        r7 = new android.view.animation.LinearInterpolator;

        $r2 = r7;

        specialinvoke r7.<android.view.animation.LinearInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        goto label1;

     label3:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("accelerateInterpolator");

        if $z0 == 0 goto label4;

        r8 = new android.view.animation.AccelerateInterpolator;

        $r2 = r8;

        specialinvoke r8.<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        goto label1;

     label4:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("decelerateInterpolator");

        if $z0 == 0 goto label5;

        r9 = new android.view.animation.DecelerateInterpolator;

        $r2 = r9;

        specialinvoke r9.<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        goto label1;

     label5:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("accelerateDecelerateInterpolator");

        if $z0 == 0 goto label6;

        r10 = new android.view.animation.AccelerateDecelerateInterpolator;

        $r2 = r10;

        specialinvoke r10.<android.view.animation.AccelerateDecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        goto label1;

     label6:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("cycleInterpolator");

        if $z0 == 0 goto label7;

        r11 = new android.view.animation.CycleInterpolator;

        $r2 = r11;

        specialinvoke r11.<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r3);

        goto label1;

     label7:
        r13 = new java.lang.RuntimeException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown interpolator name: ");

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw r13;

     label8:
        return $r2;

     label9:
        return $r2;
    }

    private static android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.util.AttributeSet $r2;
        android.view.animation.LayoutAnimationController $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r1);

        $r3 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r0, $r1, $r2);

        return $r3;
    }

    private static android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.util.AttributeSet $r2;
        android.view.animation.LayoutAnimationController $r3, r8;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r5;
        boolean $z0;
        java.lang.StringBuilder $r7, r10;
        android.view.animation.GridLayoutAnimationController r9;
        java.lang.RuntimeException r11;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.util.AttributeSet;

        $r3 = null;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 3 goto label2;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label5;

     label2:
        if $i1 == 1 goto label6;

        if $i1 != 2 goto label1;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = "layoutAnimation";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        r8 = new android.view.animation.LayoutAnimationController;

        $r3 = r8;

        specialinvoke r8.<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r2);

        goto label1;

     label3:
        $r5 = "gridLayoutAnimation";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        r9 = new android.view.animation.GridLayoutAnimationController;

        $r3 = r9;

        specialinvoke r9.<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r2);

        goto label1;

     label4:
        r11 = new java.lang.RuntimeException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown layout animation name: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw r11;

     label5:
        return $r3;

     label6:
        return $r3;
    }

    public static long currentAnimationTimeMillis()
    {
        long $l0;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        return $l0;
    }

    public static android.view.animation.Animation loadAnimation(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.XmlResourceParser $r1, $r3;
        android.content.res.Resources $r2;
        android.view.animation.Animation $r4;
        org.xmlpull.v1.XmlPullParserException $r5;
        android.content.res.Resources$NotFoundException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        java.io.IOException $r10;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>($i0);

        $r1 = $r3;

        $r4 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>($r0, $r3);

     label2:
        if $r3 == null goto label9;

        interfaceinvoke $r3.<android.content.res.XmlResourceParser: void close()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        $r9 := @caughtexception;

        if $r1 == null goto label6;

        interfaceinvoke $r1.<android.content.res.XmlResourceParser: void close()>();

     label6:
        throw $r9;

     label7:
        $r10 := @caughtexception;

     label8:
        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r10);

        throw $r6;

     label9:
        return $r4;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public static android.view.animation.Interpolator loadInterpolator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.XmlResourceParser $r1, $r3;
        android.content.res.Resources $r2;
        android.view.animation.Interpolator $r4;
        org.xmlpull.v1.XmlPullParserException $r5;
        android.content.res.Resources$NotFoundException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        java.io.IOException $r10;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>($i0);

        $r1 = $r3;

        $r4 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>($r0, $r3);

     label2:
        if $r3 == null goto label9;

        interfaceinvoke $r3.<android.content.res.XmlResourceParser: void close()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        $r9 := @caughtexception;

        if $r1 == null goto label6;

        interfaceinvoke $r1.<android.content.res.XmlResourceParser: void close()>();

     label6:
        throw $r9;

     label7:
        $r10 := @caughtexception;

     label8:
        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r10);

        throw $r6;

     label9:
        return $r4;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public static android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.XmlResourceParser $r1, $r3;
        android.content.res.Resources $r2;
        android.view.animation.LayoutAnimationController $r4;
        org.xmlpull.v1.XmlPullParserException $r5;
        android.content.res.Resources$NotFoundException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        java.io.IOException $r10;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>($i0);

        $r1 = $r3;

        $r4 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>($r0, $r3);

     label2:
        if $r3 == null goto label9;

        interfaceinvoke $r3.<android.content.res.XmlResourceParser: void close()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        $r9 := @caughtexception;

        if $r1 == null goto label6;

        interfaceinvoke $r1.<android.content.res.XmlResourceParser: void close()>();

     label6:
        throw $r9;

     label7:
        $r10 := @caughtexception;

     label8:
        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r10);

        throw $r6;

     label9:
        return $r4;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public static android.view.animation.Animation makeInAnimation(android.content.Context, boolean)
    {
        android.content.Context $r0;
        boolean $z0;
        android.view.animation.Animation $r1;
        android.view.animation.DecelerateInterpolator $r2;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r0, 17432578);

     label1:
        $r2 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r2.<android.view.animation.DecelerateInterpolator: void <init>()>();

        virtualinvoke $r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke $r1.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return $r1;

     label2:
        $r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r0, 17432609);

        goto label1;
    }

    public static android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)
    {
        android.content.Context $r0;
        android.view.animation.Animation $r1;
        android.view.animation.AccelerateInterpolator $r2;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r0, 17432608);

        $r2 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r2.<android.view.animation.AccelerateInterpolator: void <init>()>();

        virtualinvoke $r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke $r1.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return $r1;
    }

    public static android.view.animation.Animation makeOutAnimation(android.content.Context, boolean)
    {
        android.content.Context $r0;
        boolean $z0;
        android.view.animation.Animation $r1;
        android.view.animation.AccelerateInterpolator $r2;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r0, 17432579);

     label1:
        $r2 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r2.<android.view.animation.AccelerateInterpolator: void <init>()>();

        virtualinvoke $r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke $r1.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return $r1;

     label2:
        $r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r0, 17432610);

        goto label1;
    }
}
