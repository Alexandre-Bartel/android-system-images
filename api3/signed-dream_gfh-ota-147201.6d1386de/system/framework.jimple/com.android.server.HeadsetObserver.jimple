class com.android.server.HeadsetObserver extends android.os.UEventObserver
{
    private static final java.lang.String HEADSET_NAME_PATH;
    private static final java.lang.String HEADSET_STATE_PATH;
    private static final java.lang.String HEADSET_UEVENT_MATCH;
    private static final java.lang.String TAG;
    private android.media.AudioManager mAudioManager;
    private boolean mAudioRouteNeedsUpdate;
    private android.content.Context mContext;
    private final android.os.Handler mHandler;
    private java.lang.String mHeadsetName;
    private int mHeadsetState;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        <com.android.server.HeadsetObserver: java.lang.String HEADSET_UEVENT_MATCH> = "DEVPATH=/devices/virtual/switch/h2w";

        <com.android.server.HeadsetObserver: java.lang.String HEADSET_STATE_PATH> = "/sys/class/switch/h2w/state";

        <com.android.server.HeadsetObserver: java.lang.String HEADSET_NAME_PATH> = "/sys/class/switch/h2w/name";

        $r1 = class "com/android/server/HeadsetObserver";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.HeadsetObserver: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.HeadsetObserver $r0;
        android.content.Context $r1;
        com.android.server.HeadsetObserver$1 $r2;

        $r0 := @this: com.android.server.HeadsetObserver;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.os.UEventObserver: void <init>()>();

        $r2 = new com.android.server.HeadsetObserver$1;

        specialinvoke $r2.<com.android.server.HeadsetObserver$1: void <init>(com.android.server.HeadsetObserver)>($r0);

        $r0.<com.android.server.HeadsetObserver: android.os.Handler mHandler> = $r2;

        $r0.<com.android.server.HeadsetObserver: android.content.Context mContext> = $r1;

        virtualinvoke $r0.<android.os.UEventObserver: void startObserving(java.lang.String)>("DEVPATH=/devices/virtual/switch/h2w");

        specialinvoke $r0.<com.android.server.HeadsetObserver: void init()>();

        return;
    }

    static void access$000(com.android.server.HeadsetObserver)
    {
        com.android.server.HeadsetObserver $r0;

        $r0 := @parameter0: com.android.server.HeadsetObserver;

        specialinvoke $r0.<com.android.server.HeadsetObserver: void updateAudioRoute()>();

        return;
    }

    private final void init()
    {
        com.android.server.HeadsetObserver $r0;
        char[] $r1;
        java.lang.String $r2, $r4;
        int $i0, $i1;
        java.io.FileReader $r3;
        java.lang.Integer $r5;
        android.content.Context $r6;
        java.lang.Object $r7;
        android.media.AudioManager $r8;
        java.io.FileNotFoundException $r9;
        java.lang.Throwable $r10;
        java.lang.Exception $r11;

        $r0 := @this: com.android.server.HeadsetObserver;

        entermonitor $r0;

     label01:
        $r1 = newarray (char)[1024];

        $r2 = $r0.<com.android.server.HeadsetObserver: java.lang.String mHeadsetName>;

        $i0 = $r0.<com.android.server.HeadsetObserver: int mHeadsetState>;

     label02:
        $r3 = new java.io.FileReader;

     label03:
        specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>("/sys/class/switch/h2w/state");

        $i1 = virtualinvoke $r3.<java.io.InputStreamReader: int read(char[],int,int)>($r1, 0, 1024);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r1, 0, $i1);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r4);

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label04:
        $r3 = new java.io.FileReader;

        specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>("/sys/class/switch/h2w/name");

        $i1 = virtualinvoke $r3.<java.io.InputStreamReader: int read(char[],int,int)>($r1, 0, 1024);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r1, 0, $i1);

        $r2 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

     label05:
        $r6 = $r0.<com.android.server.HeadsetObserver: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r8 = (android.media.AudioManager) $r7;

        $r0.<com.android.server.HeadsetObserver: android.media.AudioManager mAudioManager> = $r8;

        specialinvoke $r0.<com.android.server.HeadsetObserver: void update(java.lang.String,int)>($r2, $i0);

     label06:
        exitmonitor $r0;

        return;

     label07:
        $r9 := @caughtexception;

     label08:
        $r4 = <com.android.server.HeadsetObserver: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r4, "This kernel does not have wired headset support");

     label09:
        goto label05;

     label10:
        $r10 := @caughtexception;

        exitmonitor $r0;

        throw $r10;

     label11:
        $r11 := @caughtexception;

     label12:
        $r4 = <com.android.server.HeadsetObserver: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "", $r11);

     label13:
        goto label05;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.io.FileNotFoundException from label03 to label04 with label07;
        catch java.io.FileNotFoundException from label04 to label05 with label07;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Throwable from label02 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
    }

    private final void sendIntent(boolean)
    {
        com.android.server.HeadsetObserver $r0;
        boolean $z0;
        android.content.Intent $r1;
        int $i0;
        java.lang.String $r2;
        android.content.Context $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.server.HeadsetObserver;

        $z0 := @parameter0: boolean;

        entermonitor $r0;

     label1:
        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.HEADSET_PLUG");

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $i0 = $r0.<com.android.server.HeadsetObserver: int mHeadsetState>;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("state", $i0);

        $r2 = $r0.<com.android.server.HeadsetObserver: java.lang.String mHeadsetName>;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("name", $r2);

        staticinvoke <android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String)>($r1, null);

        if $z0 == 0 goto label2;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.media.AUDIO_BECOMING_NOISY");

        $r3 = $r0.<com.android.server.HeadsetObserver: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void sendBroadcast(android.content.Intent)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private final void update(java.lang.String, int)
    {
        com.android.server.HeadsetObserver $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        android.os.Handler $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.android.server.HeadsetObserver;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.android.server.HeadsetObserver: java.lang.String mHeadsetName>;

        if $r1 != $r2 goto label2;

        $i1 = $r0.<com.android.server.HeadsetObserver: int mHeadsetState>;

        if $i0 == $i1 goto label4;

     label2:
        if $i0 != 0 goto label5;

        $i1 = $r0.<com.android.server.HeadsetObserver: int mHeadsetState>;

        if $i1 != 1 goto label5;

        $z0 = 1;

     label3:
        $r0.<com.android.server.HeadsetObserver: java.lang.String mHeadsetName> = $r1;

        $r0.<com.android.server.HeadsetObserver: int mHeadsetState> = $i0;

        $r0.<com.android.server.HeadsetObserver: boolean mAudioRouteNeedsUpdate> = 1;

        specialinvoke $r0.<com.android.server.HeadsetObserver: void sendIntent(boolean)>($z0);

        if $z0 == 0 goto label6;

        $r3 = $r0.<com.android.server.HeadsetObserver: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(0, 1000L);

     label4:
        exitmonitor $r0;

        return;

     label5:
        $z0 = 0;

        goto label3;

     label6:
        specialinvoke $r0.<com.android.server.HeadsetObserver: void updateAudioRoute()>();

     label7:
        goto label4;

     label8:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    private final void updateAudioRoute()
    {
        com.android.server.HeadsetObserver $r0;
        boolean $z0;
        android.media.AudioManager $r1;
        int $i0;
        java.lang.Throwable $r2;

        $r0 := @this: com.android.server.HeadsetObserver;

        entermonitor $r0;

     label1:
        $z0 = $r0.<com.android.server.HeadsetObserver: boolean mAudioRouteNeedsUpdate>;

        if $z0 == 0 goto label3;

        $r1 = $r0.<com.android.server.HeadsetObserver: android.media.AudioManager mAudioManager>;

        $i0 = $r0.<com.android.server.HeadsetObserver: int mHeadsetState>;

        if $i0 != 1 goto label4;

        $z0 = 1;

     label2:
        virtualinvoke $r1.<android.media.AudioManager: void setWiredHeadsetOn(boolean)>($z0);

        $r0.<com.android.server.HeadsetObserver: boolean mAudioRouteNeedsUpdate> = 0;

     label3:
        exitmonitor $r0;

        return;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public void onUEvent(android.os.UEventObserver$UEvent)
    {
        com.android.server.HeadsetObserver $r0;
        android.os.UEventObserver$UEvent $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.NumberFormatException $r5;

        $r0 := @this: com.android.server.HeadsetObserver;

        $r1 := @parameter0: android.os.UEventObserver$UEvent;

        $r2 = <com.android.server.HeadsetObserver: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Headset UEVENT: ");

        $r4 = virtualinvoke $r1.<android.os.UEventObserver$UEvent: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r2, $r4);

     label1:
        $r2 = virtualinvoke $r1.<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String)>("SWITCH_NAME");

        $r4 = virtualinvoke $r1.<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String)>("SWITCH_STATE");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        specialinvoke $r0.<com.android.server.HeadsetObserver: void update(java.lang.String,int)>($r2, $i0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r2 = <com.android.server.HeadsetObserver: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse switch state from event ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, $r4);

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
}
