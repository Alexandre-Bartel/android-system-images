public final class org.bouncycastle.asn1.OrderedTable extends java.lang.Object
{
    private org.bouncycastle.asn1.DERObjectIdentifier key0;
    private org.bouncycastle.asn1.DERObjectIdentifier key1;
    private org.bouncycastle.asn1.DERObjectIdentifier key2;
    private org.bouncycastle.asn1.DERObjectIdentifier key3;
    private java.lang.Object[] rest;
    private int size;
    private java.lang.Object value0;
    private java.lang.Object value1;
    private java.lang.Object value2;
    private java.lang.Object value3;

    public void <init>()
    {
        org.bouncycastle.asn1.OrderedTable $r0;

        $r0 := @this: org.bouncycastle.asn1.OrderedTable;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int access$100(org.bouncycastle.asn1.OrderedTable)
    {
        org.bouncycastle.asn1.OrderedTable $r0;
        int i0;

        $r0 := @parameter0: org.bouncycastle.asn1.OrderedTable;

        i0 = $r0.<org.bouncycastle.asn1.OrderedTable: int size>;

        return i0;
    }

    public void add(org.bouncycastle.asn1.DERObjectIdentifier, java.lang.Object)
    {
        org.bouncycastle.asn1.OrderedTable $r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r3, $r5, $r6;
        java.lang.NullPointerException $r4;

        $r0 := @this: org.bouncycastle.asn1.OrderedTable;

        $r1 := @parameter0: org.bouncycastle.asn1.DERObjectIdentifier;

        $r2 := @parameter1: java.lang.Object;

        if $r1 != null goto label01;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r4;

     label01:
        if $r2 != null goto label02;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("value == null");

        throw $r4;

     label02:
        $i2 = $r0.<org.bouncycastle.asn1.OrderedTable: int size>;

        lookupswitch($i2)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            default: goto label03;
        };

     label03:
        $i0 = $i2 - 4;

        $i0 = $i0 * 2;

        $i1 = $i0 + 1;

        $r3 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest>;

        $i3 = lengthof $r3;

        if $i1 < $i3 goto label04;

        $i3 = $i1 * 2;

        $i3 = $i3 + 10;

        $r3 = newarray (java.lang.Object)[$i3];

        $r5 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest>;

        $r6 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest>;

        $i3 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r3, 0, $i3);

        $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest> = $r3;

     label04:
        $r3 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest>;

        $r3[$i0] = $r1;

        $r3 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest>;

        $r3[$i1] = $r2;

     label05:
        $i2 = $i2 + 1;

        $r0.<org.bouncycastle.asn1.OrderedTable: int size> = $i2;

        return;

     label06:
        $r0.<org.bouncycastle.asn1.OrderedTable: org.bouncycastle.asn1.DERObjectIdentifier key0> = $r1;

        $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object value0> = $r2;

        goto label05;

     label07:
        $r0.<org.bouncycastle.asn1.OrderedTable: org.bouncycastle.asn1.DERObjectIdentifier key1> = $r1;

        $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object value1> = $r2;

        goto label05;

     label08:
        $r0.<org.bouncycastle.asn1.OrderedTable: org.bouncycastle.asn1.DERObjectIdentifier key2> = $r1;

        $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object value2> = $r2;

        goto label05;

     label09:
        $r0.<org.bouncycastle.asn1.OrderedTable: org.bouncycastle.asn1.DERObjectIdentifier key3> = $r1;

        $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object value3> = $r2;

        goto label05;

     label10:
        $r3 = newarray (java.lang.Object)[10];

        $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest> = $r3;

        $r3 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest>;

        $r3[0] = $r1;

        $r3 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest>;

        $r3[1] = $r2;

        goto label05;
    }

    public java.lang.Object get(org.bouncycastle.asn1.DERObjectIdentifier)
    {
        org.bouncycastle.asn1.OrderedTable $r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Object $r3;

        $r0 := @this: org.bouncycastle.asn1.OrderedTable;

        $r1 := @parameter0: org.bouncycastle.asn1.DERObjectIdentifier;

        $i0 = virtualinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: int hashCode()>();

        $i1 = 0;

     label1:
        $i2 = $r0.<org.bouncycastle.asn1.OrderedTable: int size>;

        if $i1 >= $i2 goto label3;

        $r2 = virtualinvoke $r0.<org.bouncycastle.asn1.OrderedTable: org.bouncycastle.asn1.DERObjectIdentifier getKey(int)>($i1);

        $i2 = virtualinvoke $r2.<org.bouncycastle.asn1.DERObjectIdentifier: int hashCode()>();

        if $i2 != $i0 goto label2;

        $z0 = virtualinvoke $r2.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object getValue(int)>($i1);

        return $r3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.bouncycastle.asn1.DERObjectIdentifier getKey(int)
    {
        int $i0, $i1;
        java.lang.String $r0;
        org.bouncycastle.asn1.OrderedTable $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        org.bouncycastle.asn1.DERObjectIdentifier $r5;

        $r1 := @this: org.bouncycastle.asn1.OrderedTable;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = $r1.<org.bouncycastle.asn1.OrderedTable: int size>;

        if $i0 < $i1 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label2:
        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label3;
        };

     label3:
        $r3 = $r1.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest>;

        $i0 = $i0 - 4;

        $i0 = $i0 * 2;

        $r4 = $r3[$i0];

        $r5 = (org.bouncycastle.asn1.DERObjectIdentifier) $r4;

        return $r5;

     label4:
        $r5 = $r1.<org.bouncycastle.asn1.OrderedTable: org.bouncycastle.asn1.DERObjectIdentifier key0>;

        return $r5;

     label5:
        $r5 = $r1.<org.bouncycastle.asn1.OrderedTable: org.bouncycastle.asn1.DERObjectIdentifier key1>;

        return $r5;

     label6:
        $r5 = $r1.<org.bouncycastle.asn1.OrderedTable: org.bouncycastle.asn1.DERObjectIdentifier key2>;

        return $r5;

     label7:
        $r5 = $r1.<org.bouncycastle.asn1.OrderedTable: org.bouncycastle.asn1.DERObjectIdentifier key3>;

        return $r5;
    }

    public java.util.Enumeration getKeys()
    {
        org.bouncycastle.asn1.OrderedTable $r0;
        org.bouncycastle.asn1.OrderedTable$KeyEnumeration $r1;

        $r0 := @this: org.bouncycastle.asn1.OrderedTable;

        $r1 = new org.bouncycastle.asn1.OrderedTable$KeyEnumeration;

        specialinvoke $r1.<org.bouncycastle.asn1.OrderedTable$KeyEnumeration: void <init>(org.bouncycastle.asn1.OrderedTable,org.bouncycastle.asn1.OrderedTable$1)>($r0, null);

        return $r1;
    }

    public java.lang.Object getValue(int)
    {
        org.bouncycastle.asn1.OrderedTable $r0;
        int $i0, $i1;
        java.lang.String $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;

        $r0 := @this: org.bouncycastle.asn1.OrderedTable;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = $r0.<org.bouncycastle.asn1.OrderedTable: int size>;

        if $i0 < $i1 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label3;
        };

     label3:
        $r3 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object[] rest>;

        $i0 = $i0 - 4;

        $i0 = $i0 * 2;

        $i0 = $i0 + 1;

        $r4 = $r3[$i0];

        return $r4;

     label4:
        $r4 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object value0>;

        return $r4;

     label5:
        $r4 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object value1>;

        return $r4;

     label6:
        $r4 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object value2>;

        return $r4;

     label7:
        $r4 = $r0.<org.bouncycastle.asn1.OrderedTable: java.lang.Object value3>;

        return $r4;
    }

    public int size()
    {
        org.bouncycastle.asn1.OrderedTable $r0;
        int i0;

        $r0 := @this: org.bouncycastle.asn1.OrderedTable;

        i0 = $r0.<org.bouncycastle.asn1.OrderedTable: int size>;

        return i0;
    }
}
