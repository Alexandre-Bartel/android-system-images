public class com.google.map.MapPoint extends java.lang.Object implements com.google.map.Geometry
{
    private static final char DECIMAL;
    private static final char DELIMITER;
    private static final int E6;
    private static final int E6_360;
    private static final int E9;
    private static final int MAX_DIF;
    private static final int MAX_LATITUDE;
    private static final com.google.map.Zoom PIXEL_COORDS_ZOOM;
    private static final int PIXEL_COORDS_ZOOM_LEVEL;
    static int[] mercatorValues;
    static int[] reverseMercatorValues;
    private final int latitude;
    private final int longitude;
    private final int pixelCoordX;
    private final int pixelCoordY;

    static void <clinit>()
    {
        com.google.map.Zoom $r0;

        <com.google.map.MapPoint: int PIXEL_COORDS_ZOOM_LEVEL> = 22;

        <com.google.map.MapPoint: int MAX_LATITUDE> = 80000000;

        <com.google.map.MapPoint: int MAX_DIF> = 5000000;

        <com.google.map.MapPoint: int E9> = 1000000000;

        <com.google.map.MapPoint: int E6_360> = 360000000;

        <com.google.map.MapPoint: int E6> = 1000000;

        <com.google.map.MapPoint: char DELIMITER> = 44;

        <com.google.map.MapPoint: char DECIMAL> = 46;

        <com.google.map.MapPoint: int[] mercatorValues> = null;

        <com.google.map.MapPoint: int[] reverseMercatorValues> = null;

        $r0 = staticinvoke <com.google.map.Zoom: com.google.map.Zoom getZoom(int)>(22);

        <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM> = $r0;

        return;
    }

    public void <init>(int, int)
    {
        com.google.map.MapPoint $r0;
        int $i0, $i1, $i2;
        com.google.map.Zoom $r1;

        $r0 := @this: com.google.map.MapPoint;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = 80000000;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i1 = staticinvoke <com.google.map.MapPoint: int adjustLongitude(int)>($i1);

        if $i0 <= 80000000 goto label3;

     label1:
        if $i2 >= -80000000 goto label2;

        $i2 = -80000000;

     label2:
        $r0.<com.google.map.MapPoint: int latitude> = $i2;

        $r0.<com.google.map.MapPoint: int longitude> = $i1;

        $r1 = <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM>;

        $i0 = staticinvoke <com.google.map.MapPoint: int getXPixelFromLon(int,com.google.map.Zoom)>($i1, $r1);

        $r0.<com.google.map.MapPoint: int pixelCoordX> = $i0;

        $r1 = <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM>;

        $i0 = staticinvoke <com.google.map.MapPoint: int getYPixelFromLat(int,com.google.map.Zoom)>($i2, $r1);

        $r0.<com.google.map.MapPoint: int pixelCoordY> = $i0;

        return;

     label3:
        $i2 = $i0;

        goto label1;
    }

    public void <init>(int, int, int)
    {
        com.google.map.MapPoint $r0;
        int $i0, $i1, $i2;
        com.google.map.Zoom $r1;

        $r0 := @this: com.google.map.MapPoint;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.map.Zoom: com.google.map.Zoom getZoom(int)>($i2);

        $i2 = virtualinvoke $r1.<com.google.map.Zoom: int getEquatorPixels()>();

        $i0 = staticinvoke <com.google.map.MapPoint: int adjustPixelX(int,int)>($i0, $i2);

        $i0 = virtualinvoke $r1.<com.google.map.Zoom: int changePixelsToTargetZoomlevel(int,int)>($i0, 22);

        $r0.<com.google.map.MapPoint: int pixelCoordX> = $i0;

        $i0 = virtualinvoke $r1.<com.google.map.Zoom: int changePixelsToTargetZoomlevel(int,int)>($i1, 22);

        $r0.<com.google.map.MapPoint: int pixelCoordY> = $i0;

        $i0 = $r0.<com.google.map.MapPoint: int pixelCoordY>;

        $r1 = <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM>;

        $i0 = staticinvoke <com.google.map.MapPoint: int getLatitudeFromY(int,com.google.map.Zoom)>($i0, $r1);

        $r0.<com.google.map.MapPoint: int latitude> = $i0;

        $i0 = $r0.<com.google.map.MapPoint: int pixelCoordX>;

        $r1 = <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM>;

        $i0 = staticinvoke <com.google.map.MapPoint: int getLongitudeFromX(int,com.google.map.Zoom)>($i0, $r1);

        $r0.<com.google.map.MapPoint: int longitude> = $i0;

        return;
    }

    public void <init>(int, int, int, int, int)
    {
        com.google.map.MapPoint $r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.google.map.Zoom $r1;

        $r0 := @this: com.google.map.MapPoint;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i4 = staticinvoke <com.google.map.MapPoint: int adjustLongitude(int)>($i4);

        $r0.<com.google.map.MapPoint: int latitude> = $i3;

        $r0.<com.google.map.MapPoint: int longitude> = $i4;

        $r1 = staticinvoke <com.google.map.Zoom: com.google.map.Zoom getZoom(int)>($i2);

        $i2 = virtualinvoke $r1.<com.google.map.Zoom: int getEquatorPixels()>();

        $i0 = staticinvoke <com.google.map.MapPoint: int adjustPixelX(int,int)>($i0, $i2);

        $i0 = virtualinvoke $r1.<com.google.map.Zoom: int changePixelsToTargetZoomlevel(int,int)>($i0, 22);

        $r0.<com.google.map.MapPoint: int pixelCoordX> = $i0;

        $i0 = virtualinvoke $r1.<com.google.map.Zoom: int changePixelsToTargetZoomlevel(int,int)>($i1, 22);

        $r0.<com.google.map.MapPoint: int pixelCoordY> = $i0;

        return;
    }

    private static int adjustLongitude(int)
    {
        int $i0;

        $i0 := @parameter0: int;

     label1:
        if $i0 >= -180000000 goto label2;

        $i0 = $i0 + 360000000;

        goto label1;

     label2:
        if $i0 <= 180000000 goto label3;

        $i0 = $i0 - 360000000;

        goto label2;

     label3:
        return $i0;
    }

    private static int adjustPixelX(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

     label1:
        if $i0 <= $i1 goto label2;

        $i0 = $i0 - $i1;

        goto label1;

     label2:
        if $i0 >= 0 goto label3;

        $i0 = $i0 + $i1;

        goto label2;

     label3:
        return $i0;
    }

    public static com.google.map.MapPoint fromProto(com.google.common.io.protocol.ProtoBuf)
    {
        com.google.common.io.protocol.ProtoBuf $r0;
        com.google.map.MapPoint $r1;
        int $i0, $i1;

        $r0 := @parameter0: com.google.common.io.protocol.ProtoBuf;

        $i0 = virtualinvoke $r0.<com.google.common.io.protocol.ProtoBuf: int getInt(int)>(1);

        $i1 = virtualinvoke $r0.<com.google.common.io.protocol.ProtoBuf: int getInt(int)>(2);

        $r1 = new com.google.map.MapPoint;

        specialinvoke $r1.<com.google.map.MapPoint: void <init>(int,int)>($i0, $i1);

        return $r1;
    }

    public static com.google.map.MapPoint fromString(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        com.google.map.MapPoint $r2;
        java.lang.NumberFormatException $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(44);

        if $i0 == -1 goto label4;

     label1:
        $r1 = staticinvoke <com.google.common.util.text.TextUtil: java.lang.String[] split(java.lang.String,char)>($r0, 44);

        $r0 = $r1[0];

        $i0 = staticinvoke <com.google.map.MapPoint: int stringToLatLonE6(java.lang.String)>($r0);

        $r0 = $r1[1];

        $i1 = staticinvoke <com.google.map.MapPoint: int stringToLatLonE6(java.lang.String)>($r0);

        $r2 = new com.google.map.MapPoint;

        specialinvoke $r2.<com.google.map.MapPoint: void <init>(int,int)>($i0, $i1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

     label4:
        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static int getLatitudeFromY(int, com.google.map.Zoom)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.google.map.Zoom $r0;
        int[] $r1;
        long $l7, $l8, $l9;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.map.Zoom;

        $r1 = staticinvoke <com.google.map.MapPoint: int[] getReverseMercatorValues()>();

        $i1 = virtualinvoke $r0.<com.google.map.Zoom: int getEquatorPixels()>();

        $i1 = $i1 / 2;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <com.google.map.MapPoint: int pixelsToMercator(int,com.google.map.Zoom)>($i0, $r0);

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i1 = $i1 / 5000000;

        $i1 = $i1 + 1;

        $i2 = lengthof $r1;

        $i2 = $i2 - 2;

        if $i1 < $i2 goto label2;

        if $i0 <= 0 goto label1;

        return 80000000;

     label1:
        return -80000000;

     label2:
        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i2 = $i2 % 5000000;

        $i3 = $i1 - 1;

        $i3 = $r1[$i3];

        $i3 = $i3 * -1;

        $i4 = $r1[$i1];

        $i4 = $i4 * 3;

        $i3 = $i3 + $i4;

        $i4 = $i1 + 1;

        $i4 = $r1[$i4];

        $i4 = $i4 * 3;

        $i3 = $i3 - $i4;

        $i4 = $i1 + 2;

        $i4 = $r1[$i4];

        $i3 = $i3 + $i4;

        $i3 = $i3 / 6;

        $i4 = $i1 - 1;

        $i4 = $r1[$i4];

        $i4 = $i4 * 3;

        $i5 = $r1[$i1];

        $i5 = $i5 * 6;

        $i4 = $i4 - $i5;

        $i5 = $i1 + 1;

        $i5 = $r1[$i5];

        $i5 = $i5 * 3;

        $i4 = $i4 + $i5;

        $i4 = $i4 / 6;

        $i5 = $i1 - 1;

        $i5 = $r1[$i5];

        $i5 = $i5 * -2;

        $i6 = $r1[$i1];

        $i6 = $i6 * 3;

        $i5 = $i5 - $i6;

        $i6 = $i1 + 1;

        $i6 = $r1[$i6];

        $i6 = $i6 * 6;

        $i5 = $i5 + $i6;

        $i6 = $i1 + 2;

        $i6 = $r1[$i6];

        $i5 = $i5 - $i6;

        $i5 = $i5 / 6;

        $i1 = $r1[$i1];

        $l7 = (long) $i3;

        $l8 = (long) $i2;

        $l7 = $l7 * $l8;

        $l8 = (long) $i2;

        $l7 = $l7 * $l8;

        $l7 = $l7 / 5000000L;

        $l8 = (long) $i2;

        $l7 = $l7 * $l8;

        $l7 = $l7 / 5000000L;

        $l7 = $l7 / 5000000L;

        $l8 = (long) $i4;

        $l9 = (long) $i2;

        $l8 = $l8 * $l9;

        $l9 = (long) $i2;

        $l8 = $l8 * $l9;

        $l8 = $l8 / 5000000L;

        $l8 = $l8 / 5000000L;

        $l7 = $l8 + $l7;

        $l8 = (long) $i5;

        $l9 = (long) $i2;

        $l8 = $l9 * $l8;

        $l8 = $l8 / 5000000L;

        $l7 = $l8 + $l7;

        $l8 = (long) $i1;

        $l7 = $l7 + $l8;

        $i1 = (int) $l7;

        if $i0 >= 0 goto label3;

        $i1 = neg $i1;

        return $i1;

     label3:
        return $i1;
    }

    private static int getLongitudeFromX(int, com.google.map.Zoom)
    {
        int $i0, $i1;
        com.google.map.Zoom $r0;
        long $l2, $l3;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.map.Zoom;

        $i1 = virtualinvoke $r0.<com.google.map.Zoom: int getEquatorPixels()>();

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        $l2 = (long) $i0;

        $l2 = $l2 * 360000000L;

        $i0 = virtualinvoke $r0.<com.google.map.Zoom: int getEquatorPixels()>();

        $l3 = (long) $i0;

        $l2 = $l2 / $l3;

        $i0 = (int) $l2;

        return $i0;
    }

    public static com.google.map.MapPoint getMapPointFromXY(int, int, int)
    {
        int $i0, $i1, $i2;
        com.google.map.MapPoint $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 = new com.google.map.MapPoint;

        specialinvoke $r0.<com.google.map.MapPoint: void <init>(int,int,int)>($i0, $i1, $i2);

        return $r0;
    }

    private static int getMercatorIndex(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i0 = $i0 / 1000000;

        $i0 = $i0 + 1;

        return $i0;
    }

    private static int[] getMercatorValues()
    {
        int[] $r0;
        byte[] $r1;
        java.io.ByteArrayInputStream $r2;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;

        $r0 = <com.google.map.MapPoint: int[] mercatorValues>;

        if $r0 != null goto label2;

        $r0 = newarray (int)[84];

        <com.google.map.MapPoint: int[] mercatorValues> = $r0;

        $r1 = newarray (byte)[253];

        $r1[0] = -1;

        $r1[1] = -16;

        $r1[2] = -67;

        $r1[3] = -115;

        $r1[4] = 15;

        $r1[5] = 66;

        $r1[6] = 115;

        $r1[7] = 15;

        $r1[8] = 66;

        $r1[9] = 115;

        $r1[10] = 15;

        $r1[11] = 67;

        $r1[12] = -93;

        $r1[13] = 15;

        $r1[14] = 70;

        $r1[15] = 6;

        $r1[16] = 15;

        $r1[17] = 73;

        $r1[18] = -103;

        $r1[19] = 15;

        $r1[20] = 78;

        $r1[21] = 97;

        $r1[22] = 15;

        $r1[23] = 84;

        $r1[24] = 94;

        $r1[25] = 15;

        $r1[26] = 91;

        $r1[27] = -109;

        $r1[28] = 15;

        $r1[29] = 100;

        $r1[30] = 2;

        $r1[31] = 15;

        $r1[32] = 109;

        $r1[33] = -80;

        $r1[34] = 15;

        $r1[35] = 120;

        $r1[36] = -97;

        $r1[37] = 15;

        $r1[38] = -124;

        $r1[39] = -44;

        $r1[40] = 15;

        $r1[41] = -110;

        $r1[42] = 84;

        $r1[43] = 15;

        $r1[44] = -95;

        $r1[45] = 38;

        $r1[46] = 15;

        $r1[47] = -79;

        $r1[48] = 78;

        $r1[49] = 15;

        $r1[50] = -62;

        $r1[51] = -45;

        $r1[52] = 15;

        $r1[53] = -43;

        $r1[54] = -67;

        $r1[55] = 15;

        $r1[56] = -22;

        $r1[57] = 21;

        $r1[58] = 15;

        $r1[59] = -1;

        $r1[60] = -31;

        $r1[61] = 16;

        $r1[62] = 23;

        $r1[63] = 45;

        $r1[64] = 16;

        $r1[65] = 48;

        $r1[66] = 1;

        $r1[67] = 16;

        $r1[68] = 74;

        $r1[69] = 107;

        $r1[70] = 16;

        $r1[71] = 102;

        $r1[72] = 116;

        $r1[73] = 16;

        $r1[74] = -124;

        $r1[75] = 43;

        $r1[76] = 16;

        $r1[77] = -93;

        $r1[78] = -100;

        $r1[79] = 16;

        $r1[80] = -60;

        $r1[81] = -41;

        $r1[82] = 16;

        $r1[83] = -25;

        $r1[84] = -19;

        $r1[85] = 17;

        $r1[86] = 12;

        $r1[87] = -18;

        $r1[88] = 17;

        $r1[89] = 51;

        $r1[90] = -20;

        $r1[91] = 17;

        $r1[92] = 92;

        $r1[93] = -4;

        $r1[94] = 17;

        $r1[95] = -120;

        $r1[96] = 52;

        $r1[97] = 17;

        $r1[98] = -75;

        $r1[99] = -87;

        $r1[100] = 17;

        $r1[101] = -27;

        $r1[102] = 118;

        $r1[103] = 18;

        $r1[104] = 23;

        $r1[105] = -76;

        $r1[106] = 18;

        $r1[107] = 76;

        $r1[108] = -127;

        $r1[109] = 18;

        $r1[110] = -125;

        $r1[111] = -3;

        $r1[112] = 18;

        $r1[113] = -66;

        $r1[114] = 70;

        $r1[115] = 18;

        $r1[116] = -5;

        $r1[117] = -124;

        $r1[118] = 19;

        $r1[119] = 59;

        $r1[120] = -37;

        $r1[121] = 19;

        $r1[122] = 127;

        $r1[123] = 119;

        $r1[124] = 19;

        $r1[125] = -58;

        $r1[126] = -122;

        $r1[127] = 20;

        $r1[128] = 17;

        $r1[129] = 56;

        $r1[130] = 20;

        $r1[131] = 95;

        $r1[132] = -60;

        $r1[133] = 20;

        $r1[134] = -78;

        $r1[135] = 100;

        $r1[136] = 21;

        $r1[137] = 9;

        $r1[138] = 87;

        $r1[139] = 21;

        $r1[140] = 100;

        $r1[141] = -27;

        $r1[142] = 21;

        $r1[143] = -59;

        $r1[144] = 86;

        $r1[145] = 22;

        $r1[146] = 42;

        $r1[147] = -1;

        $r1[148] = 22;

        $r1[149] = -106;

        $r1[150] = 58;

        $r1[151] = 23;

        $r1[152] = 7;

        $r1[153] = 109;

        $r1[154] = 23;

        $r1[155] = 127;

        $r1[156] = 2;

        $r1[157] = 23;

        $r1[158] = -3;

        $r1[159] = 117;

        $r1[160] = 24;

        $r1[161] = -125;

        $r1[162] = 72;

        $r1[163] = 25;

        $r1[164] = 17;

        $r1[165] = 20;

        $r1[166] = 25;

        $r1[167] = -89;

        $r1[168] = 120;

        $r1[169] = 26;

        $r1[170] = 71;

        $r1[171] = 46;

        $r1[172] = 26;

        $r1[173] = -15;

        $r1[174] = 3;

        $r1[175] = 27;

        $r1[176] = -91;

        $r1[177] = -39;

        $r1[178] = 28;

        $r1[179] = 102;

        $r1[180] = -77;

        $r1[181] = 29;

        $r1[182] = 52;

        $r1[183] = -77;

        $r1[184] = 30;

        $r1[185] = 17;

        $r1[186] = 31;

        $r1[187] = 30;

        $r1[188] = -3;

        $r1[189] = 111;

        $r1[190] = 31;

        $r1[191] = -5;

        $r1[192] = 74;

        $r1[193] = 33;

        $r1[194] = 12;

        $r1[195] = -105;

        $r1[196] = 34;

        $r1[197] = 51;

        $r1[198] = -120;

        $r1[199] = 35;

        $r1[200] = 114;

        $r1[201] = -91;

        $r1[202] = 36;

        $r1[203] = -52;

        $r1[204] = -30;

        $r1[205] = 38;

        $r1[206] = 69;

        $r1[207] = -76;

        $r1[208] = 39;

        $r1[209] = -31;

        $r1[210] = 42;

        $r1[211] = 41;

        $r1[212] = -92;

        $r1[213] = 25;

        $r1[214] = 43;

        $r1[215] = -108;

        $r1[216] = 70;

        $r1[217] = 45;

        $r1[218] = -72;

        $r1[219] = -91;

        $r1[220] = 48;

        $r1[221] = 25;

        $r1[222] = -84;

        $r1[223] = 50;

        $r1[224] = -63;

        $r1[225] = -63;

        $r1[226] = 53;

        $r1[227] = -67;

        $r1[228] = -47;

        $r1[229] = 57;

        $r1[230] = 30;

        $r1[231] = 28;

        $r1[232] = 60;

        $r1[233] = -9;

        $r1[234] = 105;

        $r1[235] = 65;

        $r1[236] = 100;

        $r1[237] = -96;

        $r1[238] = 70;

        $r1[239] = -119;

        $r1[240] = 82;

        $r1[241] = 76;

        $r1[242] = -107;

        $r1[243] = 115;

        $r1[244] = 83;

        $r1[245] = -53;

        $r1[246] = 79;

        $r1[247] = 92;

        $r1[248] = -119;

        $r1[249] = 52;

        $r1[250] = 103;

        $r1[251] = 90;

        $r1[252] = 12;

        $r2 = new java.io.ByteArrayInputStream;

     label1:
        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        $r0 = <com.google.map.MapPoint: int[] mercatorValues>;

        staticinvoke <com.google.map.MapPoint: void readMercatorValues(java.io.InputStream,int[])>($r2, $r0);

     label2:
        $r0 = <com.google.map.MapPoint: int[] mercatorValues>;

        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t read mercator.dat");

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static int[] getReverseMercatorValues()
    {
        int[] $r0;
        byte[] $r1;
        java.io.ByteArrayInputStream $r2;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;

        $r0 = <com.google.map.MapPoint: int[] reverseMercatorValues>;

        if $r0 != null goto label2;

        $r0 = newarray (int)[141];

        <com.google.map.MapPoint: int[] reverseMercatorValues> = $r0;

        $r1 = newarray (byte)[424];

        $r1[0] = -1;

        $r1[1] = -28;

        $r1[2] = -119;

        $r1[3] = -24;

        $r1[4] = 27;

        $r1[5] = 118;

        $r1[6] = 24;

        $r1[7] = 27;

        $r1[8] = 118;

        $r1[9] = 24;

        $r1[10] = 27;

        $r1[11] = 111;

        $r1[12] = 42;

        $r1[13] = 27;

        $r1[14] = 97;

        $r1[15] = 85;

        $r1[16] = 27;

        $r1[17] = 76;

        $r1[18] = -82;

        $r1[19] = 27;

        $r1[20] = 49;

        $r1[21] = 75;

        $r1[22] = 27;

        $r1[23] = 15;

        $r1[24] = 79;

        $r1[25] = 26;

        $r1[26] = -26;

        $r1[27] = -26;

        $r1[28] = 26;

        $r1[29] = -72;

        $r1[30] = 61;

        $r1[31] = 26;

        $r1[32] = -125;

        $r1[33] = -114;

        $r1[34] = 26;

        $r1[35] = 73;

        $r1[36] = 22;

        $r1[37] = 26;

        $r1[38] = 9;

        $r1[39] = 25;

        $r1[40] = 25;

        $r1[41] = -61;

        $r1[42] = -35;

        $r1[43] = 25;

        $r1[44] = 121;

        $r1[45] = -81;

        $r1[46] = 25;

        $r1[47] = 42;

        $r1[48] = -34;

        $r1[49] = 24;

        $r1[50] = -41;

        $r1[51] = -70;

        $r1[52] = 24;

        $r1[53] = -128;

        $r1[54] = -103;

        $r1[55] = 24;

        $r1[56] = 37;

        $r1[57] = -51;

        $r1[58] = 23;

        $r1[59] = -57;

        $r1[60] = -82;

        $r1[61] = 23;

        $r1[62] = 102;

        $r1[63] = -115;

        $r1[64] = 23;

        $r1[65] = 2;

        $r1[66] = -64;

        $r1[67] = 22;

        $r1[68] = -100;

        $r1[69] = -101;

        $r1[70] = 22;

        $r1[71] = 52;

        $r1[72] = 109;

        $r1[73] = 21;

        $r1[74] = -54;

        $r1[75] = -122;

        $r1[76] = 21;

        $r1[77] = 95;

        $r1[78] = 48;

        $r1[79] = 20;

        $r1[80] = -14;

        $r1[81] = -72;

        $r1[82] = 20;

        $r1[83] = -123;

        $r1[84] = 97;

        $r1[85] = 20;

        $r1[86] = 23;

        $r1[87] = 111;

        $r1[88] = 19;

        $r1[89] = -87;

        $r1[90] = 33;

        $r1[91] = 19;

        $r1[92] = 58;

        $r1[93] = -76;

        $r1[94] = 18;

        $r1[95] = -52;

        $r1[96] = 94;

        $r1[97] = 18;

        $r1[98] = 94;

        $r1[99] = 85;

        $r1[100] = 17;

        $r1[101] = -16;

        $r1[102] = -56;

        $r1[103] = 17;

        $r1[104] = -125;

        $r1[105] = -26;

        $r1[106] = 17;

        $r1[107] = 23;

        $r1[108] = -42;

        $r1[109] = 16;

        $r1[110] = -84;

        $r1[111] = -64;

        $r1[112] = 16;

        $r1[113] = 66;

        $r1[114] = -61;

        $r1[115] = 15;

        $r1[116] = -38;

        $r1[117] = 2;

        $r1[118] = 15;

        $r1[119] = 114;

        $r1[120] = -106;

        $r1[121] = 15;

        $r1[122] = 12;

        $r1[123] = -103;

        $r1[124] = 14;

        $r1[125] = -88;

        $r1[126] = 32;

        $r1[127] = 14;

        $r1[128] = 69;

        $r1[129] = 64;

        $r1[130] = 13;

        $r1[131] = -28;

        $r1[132] = 7;

        $r1[133] = 13;

        $r1[134] = -124;

        $r1[135] = -122;

        $r1[136] = 13;

        $r1[137] = 38;

        $r1[138] = -58;

        $r1[139] = 12;

        $r1[140] = -54;

        $r1[141] = -45;

        $r1[142] = 12;

        $r1[143] = 112;

        $r1[144] = -75;

        $r1[145] = 12;

        $r1[146] = 24;

        $r1[147] = 113;

        $r1[148] = 11;

        $r1[149] = -62;

        $r1[150] = 10;

        $r1[151] = 11;

        $r1[152] = 109;

        $r1[153] = -121;

        $r1[154] = 11;

        $r1[155] = 26;

        $r1[156] = -27;

        $r1[157] = 10;

        $r1[158] = -54;

        $r1[159] = 40;

        $r1[160] = 10;

        $r1[161] = 123;

        $r1[162] = 77;

        $r1[163] = 10;

        $r1[164] = 46;

        $r1[165] = 82;

        $r1[166] = 9;

        $r1[167] = -29;

        $r1[168] = 52;

        $r1[169] = 9;

        $r1[170] = -103;

        $r1[171] = -16;

        $r1[172] = 9;

        $r1[173] = 82;

        $r1[174] = -126;

        $r1[175] = 9;

        $r1[176] = 12;

        $r1[177] = -29;

        $r1[178] = 8;

        $r1[179] = -55;

        $r1[180] = 14;

        $r1[181] = 8;

        $r1[182] = -122;

        $r1[183] = -2;

        $r1[184] = 8;

        $r1[185] = 70;

        $r1[186] = -86;

        $r1[187] = 8;

        $r1[188] = 8;

        $r1[189] = 13;

        $r1[190] = 7;

        $r1[191] = -53;

        $r1[192] = 30;

        $r1[193] = 7;

        $r1[194] = -113;

        $r1[195] = -41;

        $r1[196] = 7;

        $r1[197] = 86;

        $r1[198] = 45;

        $r1[199] = 7;

        $r1[200] = 30;

        $r1[201] = 27;

        $r1[202] = 6;

        $r1[203] = -25;

        $r1[204] = -104;

        $r1[205] = 6;

        $r1[206] = -78;

        $r1[207] = -102;

        $r1[208] = 6;

        $r1[209] = 127;

        $r1[210] = 26;

        $r1[211] = 6;

        $r1[212] = 77;

        $r1[213] = 15;

        $r1[214] = 6;

        $r1[215] = 28;

        $r1[216] = 114;

        $r1[217] = 5;

        $r1[218] = -19;

        $r1[219] = 56;

        $r1[220] = 5;

        $r1[221] = -65;

        $r1[222] = 89;

        $r1[223] = 5;

        $r1[224] = -110;

        $r1[225] = -50;

        $r1[226] = 5;

        $r1[227] = 103;

        $r1[228] = -114;

        $r1[229] = 5;

        $r1[230] = 61;

        $r1[231] = -111;

        $r1[232] = 5;

        $r1[233] = 20;

        $r1[234] = -51;

        $r1[235] = 4;

        $r1[236] = -19;

        $r1[237] = 59;

        $r1[238] = 4;

        $r1[239] = -58;

        $r1[240] = -43;

        $r1[241] = 4;

        $r1[242] = -95;

        $r1[243] = -113;

        $r1[244] = 4;

        $r1[245] = 125;

        $r1[246] = 102;

        $r1[247] = 4;

        $r1[248] = 90;

        $r1[249] = 78;

        $r1[250] = 4;

        $r1[251] = 56;

        $r1[252] = 65;

        $r1[253] = 4;

        $r1[254] = 23;

        $r1[255] = 58;

        $r1[256] = 3;

        $r1[257] = -9;

        $r1[258] = 47;

        $r1[259] = 3;

        $r1[260] = -40;

        $r1[261] = 26;

        $r1[262] = 3;

        $r1[263] = -71;

        $r1[264] = -13;

        $r1[265] = 3;

        $r1[266] = -100;

        $r1[267] = -75;

        $r1[268] = 3;

        $r1[269] = -128;

        $r1[270] = 88;

        $r1[271] = 3;

        $r1[272] = 100;

        $r1[273] = -41;

        $r1[274] = 3;

        $r1[275] = 74;

        $r1[276] = 43;

        $r1[277] = 3;

        $r1[278] = 48;

        $r1[279] = 76;

        $r1[280] = 3;

        $r1[281] = 23;

        $r1[282] = 55;

        $r1[283] = 2;

        $r1[284] = -2;

        $r1[285] = -28;

        $r1[286] = 2;

        $r1[287] = -25;

        $r1[288] = 79;

        $r1[289] = 2;

        $r1[290] = -48;

        $r1[291] = 114;

        $r1[292] = 2;

        $r1[293] = -70;

        $r1[294] = 70;

        $r1[295] = 2;

        $r1[296] = -92;

        $r1[297] = -56;

        $r1[298] = 2;

        $r1[299] = -113;

        $r1[300] = -15;

        $r1[301] = 2;

        $r1[302] = 123;

        $r1[303] = -67;

        $r1[304] = 2;

        $r1[305] = 104;

        $r1[306] = 40;

        $r1[307] = 2;

        $r1[308] = 85;

        $r1[309] = 43;

        $r1[310] = 2;

        $r1[311] = 66;

        $r1[312] = -61;

        $r1[313] = 2;

        $r1[314] = 48;

        $r1[315] = -20;

        $r1[316] = 2;

        $r1[317] = 31;

        $r1[318] = -96;

        $r1[319] = 2;

        $r1[320] = 14;

        $r1[321] = -35;

        $r1[322] = 1;

        $r1[323] = -2;

        $r1[324] = -100;

        $r1[325] = 1;

        $r1[326] = -18;

        $r1[327] = -36;

        $r1[328] = 1;

        $r1[329] = -33;

        $r1[330] = -106;

        $r1[331] = 1;

        $r1[332] = -48;

        $r1[333] = -53;

        $r1[334] = 1;

        $r1[335] = -62;

        $r1[336] = 114;

        $r1[337] = 1;

        $r1[338] = -76;

        $r1[339] = -118;

        $r1[340] = 1;

        $r1[341] = -89;

        $r1[342] = 17;

        $r1[343] = 1;

        $r1[344] = -102;

        $r1[345] = 1;

        $r1[346] = 1;

        $r1[347] = -115;

        $r1[348] = 88;

        $r1[349] = 1;

        $r1[350] = -127;

        $r1[351] = 18;

        $r1[352] = 1;

        $r1[353] = 117;

        $r1[354] = 47;

        $r1[355] = 1;

        $r1[356] = 105;

        $r1[357] = -89;

        $r1[358] = 1;

        $r1[359] = 94;

        $r1[360] = 124;

        $r1[361] = 1;

        $r1[362] = 83;

        $r1[363] = -88;

        $r1[364] = 1;

        $r1[365] = 73;

        $r1[366] = 42;

        $r1[367] = 1;

        $r1[368] = 62;

        $r1[369] = -1;

        $r1[370] = 1;

        $r1[371] = 53;

        $r1[372] = 35;

        $r1[373] = 1;

        $r1[374] = 43;

        $r1[375] = -105;

        $r1[376] = 1;

        $r1[377] = 34;

        $r1[378] = 84;

        $r1[379] = 1;

        $r1[380] = 25;

        $r1[381] = 91;

        $r1[382] = 1;

        $r1[383] = 16;

        $r1[384] = -86;

        $r1[385] = 1;

        $r1[386] = 8;

        $r1[387] = 60;

        $r1[388] = 1;

        $r1[389] = 0;

        $r1[390] = 17;

        $r1[391] = 0;

        $r1[392] = -8;

        $r1[393] = 40;

        $r1[394] = 0;

        $r1[395] = -16;

        $r1[396] = 124;

        $r1[397] = 0;

        $r1[398] = -23;

        $r1[399] = 13;

        $r1[400] = 0;

        $r1[401] = -31;

        $r1[402] = -40;

        $r1[403] = 0;

        $r1[404] = -38;

        $r1[405] = -34;

        $r1[406] = 0;

        $r1[407] = -44;

        $r1[408] = 25;

        $r1[409] = 0;

        $r1[410] = -51;

        $r1[411] = -117;

        $r1[412] = 0;

        $r1[413] = -57;

        $r1[414] = 48;

        $r1[415] = 0;

        $r1[416] = -63;

        $r1[417] = 8;

        $r1[418] = 0;

        $r1[419] = -69;

        $r1[420] = 16;

        $r1[421] = 0;

        $r1[422] = -75;

        $r1[423] = 71;

        $r2 = new java.io.ByteArrayInputStream;

     label1:
        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        $r0 = <com.google.map.MapPoint: int[] reverseMercatorValues>;

        staticinvoke <com.google.map.MapPoint: void readMercatorValues(java.io.InputStream,int[])>($r2, $r0);

     label2:
        $r0 = <com.google.map.MapPoint: int[] reverseMercatorValues>;

        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("rmercator.dat is incorrect");

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static int getXPixelFromLon(int, com.google.map.Zoom)
    {
        int $i0, $i1;
        com.google.map.Zoom $r0;
        long $l2, $l3, $l4;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.map.Zoom;

        $i1 = virtualinvoke $r0.<com.google.map.Zoom: int getEquatorPixels()>();

        $l2 = (long) $i1;

        $l2 = $l2 / 2L;

        $l3 = (long) $i0;

        $i0 = virtualinvoke $r0.<com.google.map.Zoom: int getEquatorPixels()>();

        $l4 = (long) $i0;

        $l3 = $l3 * $l4;

        $l3 = $l3 / 360000000L;

        $l2 = $l2 + $l3;

        $i0 = (int) $l2;

        return $i0;
    }

    public static int getYPixelFromLat(int, com.google.map.Zoom)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.google.map.Zoom $r0;
        int[] $r1;
        long $l7, $l8, $l9;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.map.Zoom;

        $i1 = staticinvoke <com.google.map.MapPoint: int getMercatorIndex(int)>($i0);

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i2 = $i2 % 1000000;

        $r1 = staticinvoke <com.google.map.MapPoint: int[] getMercatorValues()>();

        $i3 = $i1 - 1;

        $i3 = $r1[$i3];

        $i3 = $i3 * -1;

        $i4 = $r1[$i1];

        $i4 = $i4 * 3;

        $i3 = $i3 + $i4;

        $i4 = $i1 + 1;

        $i4 = $r1[$i4];

        $i4 = $i4 * 3;

        $i3 = $i3 - $i4;

        $i4 = $i1 + 2;

        $i4 = $r1[$i4];

        $i3 = $i3 + $i4;

        $i3 = $i3 / 6;

        $i4 = $i1 - 1;

        $i4 = $r1[$i4];

        $i4 = $i4 * 3;

        $i5 = $r1[$i1];

        $i5 = $i5 * 6;

        $i4 = $i4 - $i5;

        $i5 = $i1 + 1;

        $i5 = $r1[$i5];

        $i5 = $i5 * 3;

        $i4 = $i4 + $i5;

        $i4 = $i4 / 6;

        $i5 = $i1 - 1;

        $i5 = $r1[$i5];

        $i5 = $i5 * -2;

        $i6 = $r1[$i1];

        $i6 = $i6 * 3;

        $i5 = $i5 - $i6;

        $i6 = $i1 + 1;

        $i6 = $r1[$i6];

        $i6 = $i6 * 6;

        $i5 = $i5 + $i6;

        $i6 = $i1 + 2;

        $i6 = $r1[$i6];

        $i5 = $i5 - $i6;

        $i5 = $i5 / 6;

        $i1 = $r1[$i1];

        $l7 = (long) $i3;

        $l8 = (long) $i2;

        $l7 = $l7 * $l8;

        $l8 = (long) $i2;

        $l7 = $l7 * $l8;

        $l7 = $l7 / 1000000L;

        $l8 = (long) $i2;

        $l7 = $l7 * $l8;

        $l7 = $l7 / 1000000L;

        $l7 = $l7 / 1000000L;

        $l8 = (long) $i4;

        $l9 = (long) $i2;

        $l8 = $l8 * $l9;

        $l9 = (long) $i2;

        $l8 = $l8 * $l9;

        $l8 = $l8 / 1000000L;

        $l8 = $l8 / 1000000L;

        $l7 = $l7 + $l8;

        $l8 = (long) $i5;

        $l9 = (long) $i2;

        $l8 = $l8 * $l9;

        $l8 = $l8 / 1000000L;

        $l7 = $l7 + $l8;

        $l8 = (long) $i1;

        $l7 = $l7 + $l8;

        $i1 = (int) $l7;

        if $i0 >= 0 goto label1;

        $i1 = neg $i1;

     label1:
        $i0 = virtualinvoke $r0.<com.google.map.Zoom: int getEquatorPixels()>();

        $l7 = (long) $i0;

        $l7 = $l7 / 2L;

        $i0 = staticinvoke <com.google.map.MapPoint: int mercatorToPixelsTimesTen(int,com.google.map.Zoom)>($i1, $r0);

        $i0 = $i0 / 10;

        $l8 = (long) $i0;

        $l7 = $l7 - $l8;

        $i0 = (int) $l7;

        return $i0;
    }

    public static java.lang.String latLonToString(int, int)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <com.google.common.util.text.TextUtil: java.lang.String e6ToString(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r1 = staticinvoke <com.google.common.util.text.TextUtil: java.lang.String e6ToString(int)>($i1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private static int mercatorToPixelsTimesTen(int, com.google.map.Zoom)
    {
        int $i0;
        com.google.map.Zoom $r0;
        long $l1, $l2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.map.Zoom;

        $l1 = (long) $i0;

        $i0 = virtualinvoke $r0.<com.google.map.Zoom: int getEquatorPixels()>();

        $l2 = (long) $i0;

        $l1 = $l1 * $l2;

        $l1 = $l1 * 10L;

        $l1 = $l1 / 360000000L;

        $i0 = (int) $l1;

        return $i0;
    }

    private static long microDegreesToMeters(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        $l0 = 4L * $l0;

        $l0 = $l0 / 36L;

        return $l0;
    }

    private static int pixelsToMercator(int, com.google.map.Zoom)
    {
        int $i0;
        com.google.map.Zoom $r0;
        long $l1, $l2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.map.Zoom;

        $l1 = (long) $i0;

        $l1 = $l1 * 1000000000L;

        $i0 = virtualinvoke $r0.<com.google.map.Zoom: int getEquatorPixels()>();

        $l2 = (long) $i0;

        $l1 = $l1 / $l2;

        $i0 = (int) $l1;

        return $i0;
    }

    private static void readMercatorValues(java.io.InputStream, int[]) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int[] $r1;
        java.io.DataInputStream $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: int[];

     label01:
        $r2 = new java.io.DataInputStream;

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r0);

        $i0 = interfaceinvoke $r2.<java.io.DataInput: int readInt()>();

        $r1[0] = $i0;

        $i0 = 1;

     label02:
        $i1 = lengthof $r1;

     label03:
        if $i0 >= $i1 goto label10;

     label04:
        $i1 = $i0 - 1;

        $i1 = $r1[$i1];

        $i2 = interfaceinvoke $r2.<java.io.DataInput: int readUnsignedByte()>();

        $i2 = $i2 << 16;

        $i3 = interfaceinvoke $r2.<java.io.DataInput: int readUnsignedByte()>();

     label05:
        $i3 = $i3 << 8;

     label06:
        $i2 = $i2 | $i3;

        $i3 = interfaceinvoke $r2.<java.io.DataInput: int readUnsignedByte()>();

     label07:
        $i2 = $i2 | $i3;

     label08:
        $i1 = $i1 + $i2;

        $r1[$i0] = $i1;

     label09:
        $i0 = $i0 + 1;

        goto label02;

     label10:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

        return;

     label11:
        $r3 := @caughtexception;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        throw $r3;

        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
    }

    public static com.google.map.MapPoint readPoint(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput $r0;
        com.google.map.MapPoint $r1;
        int $i0, $i1;

        $r0 := @parameter0: java.io.DataInput;

        $r1 = new com.google.map.MapPoint;

        $i0 = interfaceinvoke $r0.<java.io.DataInput: int readInt()>();

        $i1 = interfaceinvoke $r0.<java.io.DataInput: int readInt()>();

        specialinvoke $r1.<com.google.map.MapPoint: void <init>(int,int)>($i0, $i1);

        return $r1;
    }

    public static int stringToLatLonE6(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String $r0, $r4, $r5;
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.NumberFormatException $r2;
        java.lang.StringBuilder $r3;
        boolean $z0;
        char $c2;
        byte $b3;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(46);

        if $i0 == -1 goto label8;

        $r1 = staticinvoke <com.google.common.util.text.TextUtil: java.lang.String[] split(java.lang.String,char)>($r0, 46);

        $i0 = lengthof $r1;

        if $i0 <= 2 goto label1;

        $r2 = new java.lang.NumberFormatException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Coordinate has more than one decimal point: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label1:
        $r4 = $r1[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r4 = $r1[0];

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("-");

        if $i1 == -1 goto label4;

        $z0 = 1;

     label2:
        $r4 = $r1[1];

        $r5 = $r1[1];

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(6, $i1);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 == 0 goto label3;

        $c2 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        if $c2 < 48 goto label3;

        $c2 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        if $c2 <= 57 goto label5;

     label3:
        $r2 = new java.lang.NumberFormatException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid fractional part in \"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r0 = staticinvoke <com.google.common.util.text.TextUtil: java.lang.String pad(java.lang.String,int,char)>($r4, 6, 48);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $i0 = 1000000 * $i0;

        if $z0 == 0 goto label7;

        $b3 = -1;

     label6:
        $i1 = $i1 * $b3;

        $i0 = $i1 + $i0;

        return $i0;

     label7:
        $b3 = 1;

        goto label6;

     label8:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $i0 = $i0 * 1000000;

        return $i0;
    }

    public static void writePoint(com.google.map.MapPoint, java.io.DataOutput) throws java.io.IOException
    {
        com.google.map.MapPoint $r0;
        java.io.DataOutput $r1;

        $r0 := @parameter0: com.google.map.MapPoint;

        $r1 := @parameter1: java.io.DataOutput;

        if $r0 == null goto label1;

        specialinvoke $r0.<com.google.map.MapPoint: void writePoint(java.io.DataOutput)>($r1);

        return;

     label1:
        interfaceinvoke $r1.<java.io.DataOutput: void writeInt(int)>(0);

        interfaceinvoke $r1.<java.io.DataOutput: void writeInt(int)>(0);

        return;
    }

    private void writePoint(java.io.DataOutput) throws java.io.IOException
    {
        com.google.map.MapPoint $r0;
        java.io.DataOutput $r1;
        int $i0;

        $r0 := @this: com.google.map.MapPoint;

        $r1 := @parameter0: java.io.DataOutput;

        $i0 = $r0.<com.google.map.MapPoint: int latitude>;

        interfaceinvoke $r1.<java.io.DataOutput: void writeInt(int)>($i0);

        $i0 = $r0.<com.google.map.MapPoint: int longitude>;

        interfaceinvoke $r1.<java.io.DataOutput: void writeInt(int)>($i0);

        return;
    }

    public long distanceSquared(com.google.map.MapPoint)
    {
        com.google.map.MapPoint $r0, $r1;
        int $i0, $i1;
        long $l2, $l3, $l4;

        $r0 := @this: com.google.map.MapPoint;

        $r1 := @parameter0: com.google.map.MapPoint;

        $i1 = $r0.<com.google.map.MapPoint: int latitude>;

        $i0 = $r1.<com.google.map.MapPoint: int latitude>;

        $i0 = $i1 - $i0;

        $l2 = (long) $i0;

        $i0 = $r0.<com.google.map.MapPoint: int latitude>;

        $i1 = $r1.<com.google.map.MapPoint: int latitude>;

        $i0 = $i0 - $i1;

        $l3 = (long) $i0;

        $l2 = $l2 * $l3;

        $l2 = $l2 / 100L;

        $i0 = $r0.<com.google.map.MapPoint: int longitude>;

        $i1 = $r1.<com.google.map.MapPoint: int longitude>;

        $i0 = $i0 - $i1;

        $l3 = (long) $i0;

        $i1 = $r0.<com.google.map.MapPoint: int longitude>;

        $i0 = $r1.<com.google.map.MapPoint: int longitude>;

        $i0 = $i1 - $i0;

        $l4 = (long) $i0;

        $l3 = $l3 * $l4;

        $l3 = $l3 / 100L;

        $l2 = $l2 + $l3;

        return $l2;
    }

    public long distanceSquaredMercator(com.google.map.MapPoint)
    {
        com.google.map.MapPoint $r0, $r1;
        int $i0, $i1;
        long $l2, $l3, $l4;
        byte $b5;

        $r0 := @this: com.google.map.MapPoint;

        $r1 := @parameter0: com.google.map.MapPoint;

        $i1 = $r0.<com.google.map.MapPoint: int latitude>;

        $i0 = $r1.<com.google.map.MapPoint: int latitude>;

        $i0 = $i1 - $i0;

        $l2 = (long) $i0;

        $l2 = staticinvoke <java.lang.Math: long abs(long)>($l2);

        $i1 = $r0.<com.google.map.MapPoint: int longitude>;

        $i0 = $r1.<com.google.map.MapPoint: int longitude>;

        $i0 = $i1 - $i0;

        $l3 = (long) $i0;

        $l4 = staticinvoke <java.lang.Math: long abs(long)>($l3);

        $l3 = $l4;

        $b5 = $l4 cmp 180000000L;

        if $b5 <= 0 goto label1;

        $l3 = 360000000L - $l4;

     label1:
        $i0 = $r0.<com.google.map.MapPoint: int latitude>;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i1 = $r1.<com.google.map.MapPoint: int latitude>;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i0 = $i0 + $i1;

        $i0 = $i0 / 2000000;

        $i0 = staticinvoke <com.google.common.util.MathUtil: int cos(int)>($i0);

        $l4 = (long) $i0;

        $l3 = $l3 * $l4;

        $l3 = $l3 / 250L;

        $l4 = staticinvoke <com.google.map.MapPoint: long microDegreesToMeters(long)>($l2);

        $l2 = staticinvoke <com.google.map.MapPoint: long microDegreesToMeters(long)>($l2);

        $l2 = $l2 * $l4;

        $l4 = staticinvoke <com.google.map.MapPoint: long microDegreesToMeters(long)>($l3);

        $l3 = staticinvoke <com.google.map.MapPoint: long microDegreesToMeters(long)>($l3);

        $l3 = $l3 * $l4;

        $l2 = $l2 + $l3;

        return $l2;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.map.MapPoint $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;

        $r0 := @this: com.google.map.MapPoint;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.map.MapPoint;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (com.google.map.MapPoint) $r1;

        $i0 = $r0.<com.google.map.MapPoint: int latitude>;

        $i1 = $r2.<com.google.map.MapPoint: int latitude>;

        if $i0 != $i1 goto label3;

        $i0 = $r0.<com.google.map.MapPoint: int longitude>;

        $i1 = $r2.<com.google.map.MapPoint: int longitude>;

        if $i0 == $i1 goto label4;

     label3:
        $i0 = $r0.<com.google.map.MapPoint: int pixelCoordX>;

        $i1 = $r2.<com.google.map.MapPoint: int pixelCoordX>;

        if $i0 != $i1 goto label5;

        $i0 = $r0.<com.google.map.MapPoint: int pixelCoordY>;

        $i1 = $r2.<com.google.map.MapPoint: int pixelCoordY>;

        if $i0 != $i1 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }

    public com.google.map.MapPoint getDefiningPoint()
    {
        com.google.map.MapPoint $r0;

        $r0 := @this: com.google.map.MapPoint;

        return $r0;
    }

    public int getLatitude()
    {
        com.google.map.MapPoint $r0;
        int i0;

        $r0 := @this: com.google.map.MapPoint;

        i0 = $r0.<com.google.map.MapPoint: int latitude>;

        return i0;
    }

    public int getLongitude()
    {
        com.google.map.MapPoint $r0;
        int i0;

        $r0 := @this: com.google.map.MapPoint;

        i0 = $r0.<com.google.map.MapPoint: int longitude>;

        return i0;
    }

    public int getType()
    {
        com.google.map.MapPoint $r0;

        $r0 := @this: com.google.map.MapPoint;

        return 1;
    }

    public int getXPixel(com.google.map.Zoom)
    {
        com.google.map.MapPoint $r0;
        com.google.map.Zoom $r1, $r2;
        int $i0, $i1;

        $r0 := @this: com.google.map.MapPoint;

        $r1 := @parameter0: com.google.map.Zoom;

        $r2 = <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM>;

        $i0 = $r0.<com.google.map.MapPoint: int pixelCoordX>;

        $i1 = virtualinvoke $r1.<com.google.map.Zoom: int getZoomLevel()>();

        $i0 = virtualinvoke $r2.<com.google.map.Zoom: int changePixelsToTargetZoomlevel(int,int)>($i0, $i1);

        return $i0;
    }

    public int getYPixel(com.google.map.Zoom)
    {
        com.google.map.MapPoint $r0;
        com.google.map.Zoom $r1, $r2;
        int $i0, $i1;

        $r0 := @this: com.google.map.MapPoint;

        $r1 := @parameter0: com.google.map.Zoom;

        $r2 = <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM>;

        $i0 = $r0.<com.google.map.MapPoint: int pixelCoordY>;

        $i1 = virtualinvoke $r1.<com.google.map.Zoom: int getZoomLevel()>();

        $i0 = virtualinvoke $r2.<com.google.map.Zoom: int changePixelsToTargetZoomlevel(int,int)>($i0, $i1);

        return $i0;
    }

    public int hashCode()
    {
        com.google.map.MapPoint $r0;
        int $i0, $i1;

        $r0 := @this: com.google.map.MapPoint;

        $i0 = $r0.<com.google.map.MapPoint: int latitude>;

        $i1 = $i0 * 29;

        $i0 = $r0.<com.google.map.MapPoint: int longitude>;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public long pixelDistanceSquared(com.google.map.MapPoint, com.google.map.Zoom)
    {
        com.google.map.MapPoint $r0, $r1;
        com.google.map.Zoom $r2;
        int $i0, $i1, $i2;
        long $l3, $l4, $l5;

        $r0 := @this: com.google.map.MapPoint;

        $r1 := @parameter0: com.google.map.MapPoint;

        $r2 := @parameter1: com.google.map.Zoom;

        $i0 = virtualinvoke $r1.<com.google.map.MapPoint: int getXPixel(com.google.map.Zoom)>($r2);

        $i1 = virtualinvoke $r0.<com.google.map.MapPoint: int getXPixel(com.google.map.Zoom)>($r2);

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r1.<com.google.map.MapPoint: int getYPixel(com.google.map.Zoom)>($r2);

        $i2 = virtualinvoke $r0.<com.google.map.MapPoint: int getYPixel(com.google.map.Zoom)>($r2);

        $i1 = $i1 - $i2;

        $l3 = (long) $i0;

        $l4 = (long) $i0;

        $l3 = $l3 * $l4;

        $l4 = (long) $i1;

        $l5 = (long) $i1;

        $l4 = $l5 * $l4;

        $l3 = $l4 + $l3;

        return $l3;
    }

    public com.google.map.MapPoint pixelOffset(int, int, com.google.map.Zoom)
    {
        com.google.map.MapPoint $r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.google.map.Zoom $r1, $r2;
        long $l5, $l6;

        $r0 := @this: com.google.map.MapPoint;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: com.google.map.Zoom;

        $i2 = virtualinvoke $r1.<com.google.map.Zoom: int changePixelsToTargetZoomlevel(int,int)>($i0, 22);

        $i3 = $r0.<com.google.map.MapPoint: int pixelCoordX>;

        $i2 = $i3 + $i2;

        $i3 = virtualinvoke $r1.<com.google.map.Zoom: int changePixelsToTargetZoomlevel(int,int)>($i1, 22);

        $i4 = $r0.<com.google.map.MapPoint: int pixelCoordY>;

        $i3 = $i4 + $i3;

        if $i1 == 0 goto label4;

        $r2 = <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM>;

        $i1 = staticinvoke <com.google.map.MapPoint: int getLatitudeFromY(int,com.google.map.Zoom)>($i3, $r2);

     label1:
        $i4 = $r0.<com.google.map.MapPoint: int longitude>;

        if $i0 == 0 goto label3;

        $l5 = (long) $i0;

        $l5 = $l5 * 360000000L;

        $i0 = virtualinvoke $r1.<com.google.map.Zoom: int getEquatorPixels()>();

        $l6 = (long) $i0;

        $l5 = $l5 / $l6;

        $i0 = (int) $l5;

        $i0 = $i4 + $i0;

     label2:
        $r0 = new com.google.map.MapPoint;

        specialinvoke $r0.<com.google.map.MapPoint: void <init>(int,int,int,int,int)>($i2, $i3, 22, $i1, $i0);

        return $r0;

     label3:
        $i0 = $i4;

        goto label2;

     label4:
        $i1 = $r0.<com.google.map.MapPoint: int latitude>;

        goto label1;
    }

    public com.google.map.MapPoint pointDegreeOffset(int, int)
    {
        com.google.map.MapPoint $r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.google.map.Zoom $r1;

        $r0 := @this: com.google.map.MapPoint;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<com.google.map.MapPoint: int latitude>;

        $i2 = $i2 + $i0;

        $i3 = $r0.<com.google.map.MapPoint: int longitude>;

        $i3 = $i3 + $i1;

        $i4 = $r0.<com.google.map.MapPoint: int pixelCoordX>;

        if $i0 == 0 goto label4;

        $r1 = <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM>;

        $i0 = staticinvoke <com.google.map.MapPoint: int getYPixelFromLat(int,com.google.map.Zoom)>($i2, $r1);

     label1:
        if $i1 == 0 goto label3;

        $r1 = <com.google.map.MapPoint: com.google.map.Zoom PIXEL_COORDS_ZOOM>;

        $i1 = staticinvoke <com.google.map.MapPoint: int getXPixelFromLon(int,com.google.map.Zoom)>($i3, $r1);

     label2:
        $r0 = new com.google.map.MapPoint;

        specialinvoke $r0.<com.google.map.MapPoint: void <init>(int,int,int,int,int)>($i1, $i0, 22, $i2, $i3);

        return $r0;

     label3:
        $i1 = $i4;

        goto label2;

     label4:
        $i0 = $r0.<com.google.map.MapPoint: int pixelCoordY>;

        goto label1;
    }

    public com.google.common.io.protocol.ProtoBuf toMapPointProto()
    {
        com.google.map.MapPoint $r0;
        com.google.common.io.protocol.ProtoBuf $r1;
        com.google.common.io.protocol.ProtoBufType $r2;
        int $i0;

        $r0 := @this: com.google.map.MapPoint;

        $r1 = new com.google.common.io.protocol.ProtoBuf;

        $r2 = <com.google.googlenav.proto.GmmMessageTypes: com.google.common.io.protocol.ProtoBufType MAP_POINT_PROTO>;

        specialinvoke $r1.<com.google.common.io.protocol.ProtoBuf: void <init>(com.google.common.io.protocol.ProtoBufType)>($r2);

        $i0 = $r0.<com.google.map.MapPoint: int latitude>;

        virtualinvoke $r1.<com.google.common.io.protocol.ProtoBuf: void setInt(int,int)>(1, $i0);

        $i0 = $r0.<com.google.map.MapPoint: int longitude>;

        virtualinvoke $r1.<com.google.common.io.protocol.ProtoBuf: void setInt(int,int)>(2, $i0);

        return $r1;
    }

    public java.lang.String toString()
    {
        com.google.map.MapPoint $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @this: com.google.map.MapPoint;

        $i1 = $r0.<com.google.map.MapPoint: int latitude>;

        $i0 = $r0.<com.google.map.MapPoint: int longitude>;

        $r1 = staticinvoke <com.google.map.MapPoint: java.lang.String latLonToString(int,int)>($i1, $i0);

        return $r1;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        com.google.map.MapPoint $r0;
        java.io.DataOutput $r1;

        $r0 := @this: com.google.map.MapPoint;

        $r1 := @parameter0: java.io.DataOutput;

        staticinvoke <com.google.map.MapPoint: void writePoint(com.google.map.MapPoint,java.io.DataOutput)>($r0, $r1);

        return;
    }
}
