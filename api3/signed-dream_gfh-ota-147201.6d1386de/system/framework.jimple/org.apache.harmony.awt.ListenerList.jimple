public class org.apache.harmony.awt.ListenerList extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private transient java.util.ArrayList systemList;
    private transient java.util.ArrayList userList;

    public void <init>()
    {
        org.apache.harmony.awt.ListenerList $r0;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.util.ArrayList getOnlySerializable(java.util.ArrayList)
    {
        java.util.ArrayList $r0, $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        int $i0;

        $r0 := @parameter0: java.util.ArrayList;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke $r0.<java.util.AbstractList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r3 instanceof java.io.Serializable;

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label2;

     label3:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label4;

        return $r1;

     label4:
        return null;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.io.ObjectInputStream $r1;
        java.lang.Object $r2;
        java.util.ArrayList $r3;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.util.ArrayList) $r2;

        $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList systemList> = $r3;

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.util.ArrayList) $r2;

        $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList> = $r3;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.io.ObjectOutputStream $r1;
        java.util.ArrayList $r2;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList systemList>;

        $r2 = staticinvoke <org.apache.harmony.awt.ListenerList: java.util.ArrayList getOnlySerializable(java.util.ArrayList)>($r2);

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        $r2 = staticinvoke <org.apache.harmony.awt.ListenerList: java.util.ArrayList getOnlySerializable(java.util.ArrayList)>($r2);

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    public void addSystemListener(java.util.EventListener)
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.util.EventListener $r1;
        java.util.ArrayList $r2;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        $r1 := @parameter0: java.util.EventListener;

        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList systemList>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList systemList> = $r2;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList systemList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addUserListener(java.util.EventListener)
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.util.EventListener $r1;
        java.util.ArrayList $r2, $r4;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        $r1 := @parameter0: java.util.EventListener;

        if $r1 != null goto label1;

        return;

     label1:
        entermonitor $r0;

     label2:
        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        if $r2 != null goto label6;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList> = $r2;

        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        exitmonitor $r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r3;

     label6:
        $r2 = new java.util.ArrayList;

        $r4 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList> = $r2;

        exitmonitor $r0;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    public java.util.Iterator getSystemIterator()
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.util.Iterator $r1;
        java.util.ArrayList $r2;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList systemList>;

        $r1 = virtualinvoke $r2.<java.util.AbstractList: java.util.Iterator iterator()>();

        return $r1;
    }

    public java.util.List getSystemListeners()
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.util.ArrayList $r1, $r3;
        boolean $z0;
        java.util.List $r2;
        java.lang.Throwable $r4;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        entermonitor $r0;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList systemList>;

        if $r1 == null goto label2;

        $r1 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList systemList>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label2:
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor $r0;

     label3:
        return $r2;

     label4:
        $r3 = new java.util.ArrayList;

        $r1 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList systemList>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        exitmonitor $r0;

     label5:
        return $r3;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.util.Iterator getUserIterator()
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.util.ArrayList $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        org.apache.harmony.awt.ReadOnlyIterator $r4;
        java.lang.Throwable $r5;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        entermonitor $r0;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        if $r1 != null goto label3;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        exitmonitor $r0;

     label2:
        return $r3;

     label3:
        $r4 = new org.apache.harmony.awt.ReadOnlyIterator;

        $r1 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        $r3 = virtualinvoke $r1.<java.util.AbstractList: java.util.Iterator iterator()>();

        specialinvoke $r4.<org.apache.harmony.awt.ReadOnlyIterator: void <init>(java.util.Iterator)>($r3);

        exitmonitor $r0;

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getUserListeners()
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.util.ArrayList $r1, $r3;
        boolean $z0;
        java.util.List $r2;
        java.lang.Throwable $r4;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        entermonitor $r0;

     label1:
        $r1 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        if $r1 == null goto label2;

        $r1 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label2:
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor $r0;

     label3:
        return $r2;

     label4:
        $r3 = new java.util.ArrayList;

        $r1 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        exitmonitor $r0;

     label5:
        return $r3;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.lang.Object[] getUserListeners(java.lang.Object[])
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.lang.Object[] $r1;
        java.util.ArrayList $r2;
        java.lang.Throwable $r3;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        $r1 := @parameter0: java.lang.Object[];

        entermonitor $r0;

     label1:
        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        if $r2 == null goto label4;

        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

     label2:
        exitmonitor $r0;

     label3:
        return $r1;

     label4:
        goto label2;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public void removeUserListener(java.lang.Object)
    {
        org.apache.harmony.awt.ListenerList $r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2, $r4;
        boolean $z0;
        java.lang.Throwable $r3;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.ListenerList;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        return;

     label01:
        entermonitor $r0;

     label02:
        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        if $r2 == null goto label03;

        $r2 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label07;

     label03:
        exitmonitor $r0;

     label04:
        return;

     label05:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label06:
        throw $r3;

     label07:
        $r2 = new java.util.ArrayList;

        $r4 = $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label10;

     label08:
        $r0.<org.apache.harmony.awt.ListenerList: java.util.ArrayList userList> = $r2;

        exitmonitor $r0;

     label09:
        return;

     label10:
        $r2 = null;

        goto label08;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label07 to label09 with label05;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.awt.ListenerList: long serialVersionUID> = 9180703263299648154L;

        return;
    }
}
