public class android.text.method.SingleLineTransformationMethod extends android.text.method.ReplacementTransformationMethod
{
    private static char[] ORIGINAL;
    private static char[] REPLACEMENT;
    private static android.text.method.SingleLineTransformationMethod sInstance;

    static void <clinit>()
    {
        char[] $r0;
        char c1;

        $r0 = newarray (char)[2];

        $r0[0] = 10;

        $r0[1] = 13;

        <android.text.method.SingleLineTransformationMethod: char[] ORIGINAL> = $r0;

        $r0 = newarray (char)[2];

        $r0[0] = 32;

        c1 = (char) -257;

        $r0[1] = c1;

        <android.text.method.SingleLineTransformationMethod: char[] REPLACEMENT> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.method.SingleLineTransformationMethod $r0;

        $r0 := @this: android.text.method.SingleLineTransformationMethod;

        specialinvoke $r0.<android.text.method.ReplacementTransformationMethod: void <init>()>();

        return;
    }

    public static android.text.method.SingleLineTransformationMethod getInstance()
    {
        android.text.method.SingleLineTransformationMethod $r0;

        $r0 = <android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod sInstance>;

        if $r0 == null goto label1;

        $r0 = <android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod sInstance>;

        return $r0;

     label1:
        $r0 = new android.text.method.SingleLineTransformationMethod;

        specialinvoke $r0.<android.text.method.SingleLineTransformationMethod: void <init>()>();

        <android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod sInstance> = $r0;

        $r0 = <android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod sInstance>;

        return $r0;
    }

    protected char[] getOriginal()
    {
        android.text.method.SingleLineTransformationMethod $r0;
        char[] r1;

        $r0 := @this: android.text.method.SingleLineTransformationMethod;

        r1 = <android.text.method.SingleLineTransformationMethod: char[] ORIGINAL>;

        return r1;
    }

    protected char[] getReplacement()
    {
        android.text.method.SingleLineTransformationMethod $r0;
        char[] r1;

        $r0 := @this: android.text.method.SingleLineTransformationMethod;

        r1 = <android.text.method.SingleLineTransformationMethod: char[] REPLACEMENT>;

        return r1;
    }
}
