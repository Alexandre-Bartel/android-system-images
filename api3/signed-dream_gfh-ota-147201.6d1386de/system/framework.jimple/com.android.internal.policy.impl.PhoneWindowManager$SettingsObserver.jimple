class com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver extends android.database.ContentObserver
{
    private android.content.ContentQueryMap mSettings;
    final com.android.internal.policy.impl.PhoneWindowManager this$0;

    void <init>(com.android.internal.policy.impl.PhoneWindowManager, android.os.Handler)
    {
        com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver $r0;
        com.android.internal.policy.impl.PhoneWindowManager $r1;
        android.os.Handler $r2;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver;

        $r1 := @parameter0: com.android.internal.policy.impl.PhoneWindowManager;

        $r2 := @parameter1: android.os.Handler;

        $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0> = $r1;

        specialinvoke $r0.<android.database.ContentObserver: void <init>(android.os.Handler)>($r2);

        return;
    }

    void observe()
    {
        com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver $r0;
        com.android.internal.policy.impl.PhoneWindowManager $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        android.net.Uri $r4;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r2 = $r1.<com.android.internal.policy.impl.PhoneWindowManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("end_button_behavior");

        virtualinvoke $r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r4, 0, $r0);

        $r4 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("accelerometer_rotation");

        virtualinvoke $r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r4, 0, $r0);

        $r4 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("default_input_method");

        virtualinvoke $r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r4, 0, $r0);

        $r4 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("fancy_rotation_anim");

        virtualinvoke $r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r4, 0, $r0);

        virtualinvoke $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void update()>();

        return;
    }

    public void onChange(boolean)
    {
        com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver $r0;
        boolean $z0;
        com.android.internal.policy.impl.PhoneWindowManager $r1;
        android.view.IWindowManager $r2;
        int $i0;
        android.os.RemoteException $r3;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver;

        $z0 := @parameter0: boolean;

        virtualinvoke $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void update()>();

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r2 = $r1.<com.android.internal.policy.impl.PhoneWindowManager: android.view.IWindowManager mWindowManager>;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $i0 = $r1.<com.android.internal.policy.impl.PhoneWindowManager: int mFancyRotationAnimation>;

     label1:
        interfaceinvoke $r2.<android.view.IWindowManager: void setRotation(int,boolean,int)>(-1000, 0, $i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void update()
    {
        com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver $r0;
        com.android.internal.policy.impl.PhoneWindowManager $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        int $i0, $i2;
        short $s1;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r2 = $r1.<com.android.internal.policy.impl.PhoneWindowManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $z0 = 0;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r4 = $r1.<com.android.internal.policy.impl.PhoneWindowManager: java.lang.Object mLock>;

        entermonitor $r4;

     label01:
        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "end_button_behavior", 2);

        $r1.<com.android.internal.policy.impl.PhoneWindowManager: int mEndcallBehavior> = $i0;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "fancy_rotation_anim", 0);

        if $i0 == 0 goto label07;

        $s1 = 128;

     label02:
        $r1.<com.android.internal.policy.impl.PhoneWindowManager: int mFancyRotationAnimation> = $s1;

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "accelerometer_rotation", 0);

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $i2 = $r1.<com.android.internal.policy.impl.PhoneWindowManager: int mAccelerometerDefault>;

        if $i2 == $i0 goto label03;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r1.<com.android.internal.policy.impl.PhoneWindowManager: int mAccelerometerDefault> = $i0;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindowManager: void updateOrientationListenerLp()>();

     label03:
        $r5 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "default_input_method");

        if $r5 == null goto label08;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label08;

        $z1 = 1;

     label04:
        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $z2 = $r1.<com.android.internal.policy.impl.PhoneWindowManager: boolean mHasSoftInput>;

        if $z2 == $z1 goto label05;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r1.<com.android.internal.policy.impl.PhoneWindowManager: boolean mHasSoftInput> = $z1;

        $z0 = 1;

     label05:
        exitmonitor $r4;

     label06:
        if $z0 == 0 goto label12;

        $r1 = $r0.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindowManager: void updateRotation(int)>(0);

        return;

     label07:
        $s1 = 0;

        goto label02;

     label08:
        $z1 = 0;

        goto label04;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor $r4;

     label11:
        throw $r6;

     label12:
        return;

        catch java.lang.Throwable from label01 to label06 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
