public class org.apache.harmony.security.x509.CertificateIssuer extends org.apache.harmony.security.x509.ExtensionValue
{
    public static org.apache.harmony.security.asn1.ASN1Type ASN1;
    private javax.security.auth.x500.X500Principal issuer;

    static void <clinit>()
    {
        org.apache.harmony.security.x509.CertificateIssuer$1 $r0;
        org.apache.harmony.security.asn1.ASN1Choice $r1;
        org.apache.harmony.security.asn1.ASN1Type[] $r2;

        $r0 = new org.apache.harmony.security.x509.CertificateIssuer$1;

        $r2 = newarray (org.apache.harmony.security.asn1.ASN1Type)[1];

        $r1 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        $r2[0] = $r1;

        specialinvoke $r0.<org.apache.harmony.security.x509.CertificateIssuer$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>($r2);

        <org.apache.harmony.security.x509.CertificateIssuer: org.apache.harmony.security.asn1.ASN1Type ASN1> = $r0;

        return;
    }

    public void <init>(org.apache.harmony.security.x509.GeneralName)
    {
        org.apache.harmony.security.x509.CertificateIssuer $r0;
        org.apache.harmony.security.x509.GeneralName $r1;
        byte[] $r2;
        org.apache.harmony.security.asn1.ASN1Type $r3;

        $r0 := @this: org.apache.harmony.security.x509.CertificateIssuer;

        $r1 := @parameter0: org.apache.harmony.security.x509.GeneralName;

        $r3 = <org.apache.harmony.security.x509.CertificateIssuer: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r2 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r1);

        specialinvoke $r0.<org.apache.harmony.security.x509.ExtensionValue: void <init>(byte[])>($r2);

        return;
    }

    public void <init>(byte[])
    {
        org.apache.harmony.security.x509.CertificateIssuer $r0;
        byte[] $r1;

        $r0 := @this: org.apache.harmony.security.x509.CertificateIssuer;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<org.apache.harmony.security.x509.ExtensionValue: void <init>(byte[])>($r1);

        return;
    }

    public void dumpValue(java.lang.StringBuffer, java.lang.String)
    {
        org.apache.harmony.security.x509.CertificateIssuer $r0;
        java.lang.StringBuffer $r1, $r3;
        java.lang.String $r2;
        javax.security.auth.x500.X500Principal $r4;
        java.io.IOException $r5;

        $r0 := @this: org.apache.harmony.security.x509.CertificateIssuer;

        $r1 := @parameter0: java.lang.StringBuffer;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Certificate Issuer: ");

        $r4 = $r0.<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal issuer>;

        if $r4 != null goto label3;

     label1:
        $r4 = virtualinvoke $r0.<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal getIssuer()>();

     label2:
        $r0.<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal issuer> = $r4;

     label3:
        $r4 = $r0.<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal issuer>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unparseable (incorrect!) extension value:\n");

        specialinvoke $r0.<org.apache.harmony.security.x509.ExtensionValue: void dumpValue(java.lang.StringBuffer)>($r1);

        goto label3;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public javax.security.auth.x500.X500Principal getIssuer() throws java.io.IOException
    {
        org.apache.harmony.security.x509.CertificateIssuer $r0;
        javax.security.auth.x500.X500Principal $r1;
        org.apache.harmony.security.asn1.ASN1Type $r2;
        byte[] $r3;
        java.lang.Object $r4;

        $r0 := @this: org.apache.harmony.security.x509.CertificateIssuer;

        $r1 = $r0.<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal issuer>;

        if $r1 != null goto label1;

        $r2 = <org.apache.harmony.security.x509.CertificateIssuer: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r3 = virtualinvoke $r0.<org.apache.harmony.security.x509.ExtensionValue: byte[] getEncoded()>();

        $r4 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>($r3);

        $r1 = (javax.security.auth.x500.X500Principal) $r4;

        $r0.<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal issuer> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal issuer>;

        return $r1;
    }
}
