public class org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi extends javax.imageio.spi.ImageOutputStreamSpi
{
    private static final java.lang.String vendor;
    private static final java.lang.String ver;

    public void <init>()
    {
        org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi $r0;

        $r0 := @this: org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi;

        specialinvoke $r0.<javax.imageio.spi.ImageOutputStreamSpi: void <init>(java.lang.String,java.lang.String,java.lang.Class)>("Apache", "0.1", class "java/io/OutputStream");

        return;
    }

    public boolean canUseCacheFile()
    {
        org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi $r0;

        $r0 := @this: org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi;

        return 1;
    }

    public javax.imageio.stream.ImageOutputStream createOutputStreamInstance(java.lang.Object, boolean, java.io.File) throws java.io.IOException
    {
        org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi $r0;
        boolean $z0, $z1;
        java.io.File $r1;
        java.lang.Object $r2;
        java.io.OutputStream $r4;
        javax.imageio.stream.FileCacheImageOutputStream r6;
        javax.imageio.stream.MemoryCacheImageOutputStream r7;
        java.lang.IllegalArgumentException r8;

        $r0 := @this: org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi;

        $r2 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.io.File;

        $z1 = $r2 instanceof java.io.OutputStream;

        if $z1 == 0 goto label2;

        if $z0 == 0 goto label1;

        r6 = new javax.imageio.stream.FileCacheImageOutputStream;

        $r4 = (java.io.OutputStream) $r2;

        specialinvoke r6.<javax.imageio.stream.FileCacheImageOutputStream: void <init>(java.io.OutputStream,java.io.File)>($r4, $r1);

        return r6;

     label1:
        r7 = new javax.imageio.stream.MemoryCacheImageOutputStream;

        $r4 = (java.io.OutputStream) $r2;

        specialinvoke r7.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>($r4);

        return r7;

     label2:
        r8 = new java.lang.IllegalArgumentException;

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output is not an instance of OutputStream");

        throw r8;
    }

    public java.lang.String getDescription(java.util.Locale)
    {
        org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi $r0;
        java.util.Locale $r1;

        $r0 := @this: org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi;

        $r1 := @parameter0: java.util.Locale;

        return "Output Stream IOS Spi";
    }

    public static void <clinit>()
    {
        <org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi: java.lang.String ver> = "0.1";

        <org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi: java.lang.String vendor> = "Apache";

        return;
    }
}
