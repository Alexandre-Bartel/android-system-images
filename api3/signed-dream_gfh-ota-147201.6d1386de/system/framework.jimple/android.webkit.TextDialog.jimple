class android.webkit.TextDialog extends android.widget.AutoCompleteTextView
{
    private static final android.text.InputFilter[] NO_FILTERS;
    private char[] mCharacter;
    private boolean mGotEnterDown;
    private int mHeightSpec;
    private int mMaxLength;
    private int mNodePointer;
    private java.lang.String mPreChange;
    private boolean mScrollToAccommodateCursor;
    private boolean mSingle;
    private android.webkit.WebView mWebView;
    private int mWidthSpec;

    static void <clinit>()
    {
        android.text.InputFilter[] $r0;

        $r0 = newarray (android.text.InputFilter)[0];

        <android.webkit.TextDialog: android.text.InputFilter[] NO_FILTERS> = $r0;

        return;
    }

    void <init>(android.content.Context, android.webkit.WebView)
    {
        android.webkit.TextDialog $r0;
        android.content.Context $r1;
        android.webkit.WebView $r2;
        android.graphics.drawable.Drawable[] $r3;
        android.graphics.drawable.ShapeDrawable $r4;
        android.graphics.drawable.ColorDrawable $r5;
        int $i0;
        android.graphics.drawable.LayerDrawable $r6;
        char[] $r7;
        android.graphics.drawable.shapes.RectShape $r8;
        android.graphics.Paint $r9;
        android.graphics.Paint$Style $r10;
        android.text.TextPaint $r11;

        $r0 := @this: android.webkit.TextDialog;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.webkit.WebView;

        specialinvoke $r0.<android.widget.AutoCompleteTextView: void <init>(android.content.Context)>($r1);

        $r7 = newarray (char)[1];

        $r0.<android.webkit.TextDialog: char[] mCharacter> = $r7;

        $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView> = $r2;

        $r4 = new android.graphics.drawable.ShapeDrawable;

        $r8 = new android.graphics.drawable.shapes.RectShape;

        specialinvoke $r8.<android.graphics.drawable.shapes.RectShape: void <init>()>();

        specialinvoke $r4.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>($r8);

        $r9 = virtualinvoke $r4.<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>();

        $r10 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r9.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r10);

        $r5 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r5.<android.graphics.drawable.ColorDrawable: void <init>(int)>(-1);

        $r3 = newarray (android.graphics.drawable.Drawable)[2];

        $r3[0] = $r5;

        $r3[1] = $r4;

        $r6 = new android.graphics.drawable.LayerDrawable;

        specialinvoke $r6.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r3);

        virtualinvoke $r0.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r6);

        virtualinvoke $r0.<android.widget.TextView: void setPadding(int,int,int,int)>(3, 2, 0, 0);

        $r0.<android.webkit.TextDialog: int mMaxLength> = -1;

        $r11 = virtualinvoke $r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $i0 = virtualinvoke $r11.<android.graphics.Paint: int getFlags()>();

        $i0 = $i0 | 128;

        $i0 = $i0 | 1;

        virtualinvoke $r11.<android.graphics.Paint: void setFlags(int)>($i0);

        virtualinvoke $r0.<android.widget.TextView: void setTextColor(int)>(-16777216);

        virtualinvoke $r0.<android.widget.TextView: void setImeOptions(int)>(1);

        return;
    }

    private void sendDomEvent(android.view.KeyEvent)
    {
        android.webkit.TextDialog $r0;
        android.view.KeyEvent $r1;
        android.webkit.WebView $r2;
        android.text.Editable $r3;
        java.lang.String $r4;

        $r0 := @this: android.webkit.TextDialog;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        $r3 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<android.webkit.WebView: void passToJavaScript(java.lang.String,android.view.KeyEvent)>($r4, $r1);

        return;
    }

    void bringIntoView()
    {
        android.webkit.TextDialog $r0;
        android.text.Layout $r1;
        android.text.Editable $r2;
        int $i0;

        $r0 := @this: android.webkit.TextDialog;

        $r1 = virtualinvoke $r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r2);

        virtualinvoke $r0.<android.widget.TextView: boolean bringPointIntoView(int)>($i0);

        return;

     label1:
        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.webkit.TextDialog $r0;
        android.view.KeyEvent $r1, $r6;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.Editable $r2;
        android.content.Context $r3;
        android.view.inputmethod.InputMethodManager $r4;
        android.os.IBinder $r5;
        android.webkit.WebView $r7;
        android.text.Layout $r8;
        java.lang.String $r9, $r10;

        $r0 := @this: android.webkit.TextDialog;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isSystem()>();

        if $z0 == 0 goto label01;

        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label01:
        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 == 1 goto label03;

        $z0 = 1;

     label02:
        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        $r2 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r2.<android.text.Spannable: int length()>();

        if 67 != $i1 goto label04;

        if $i0 != 0 goto label04;

        specialinvoke $r0.<android.webkit.TextDialog: void sendDomEvent(android.view.KeyEvent)>($r1);

        return 1;

     label03:
        $z0 = 0;

        goto label02;

     label04:
        $z1 = $r0.<android.webkit.TextDialog: boolean mSingle>;

        if $z1 == 0 goto label07;

        if 66 != $i1 goto label07;

        $z1 = virtualinvoke $r0.<android.widget.AutoCompleteTextView: boolean isPopupShowing()>();

        if $z1 == 0 goto label05;

        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label05:
        if $z0 != 0 goto label06;

        $r3 = $r0.<android.view.View: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.content.Context)>($r3);

        $r5 = virtualinvoke $r0.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r4.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r5, 0);

        $r6 = new android.view.KeyEvent;

        specialinvoke $r6.<android.view.KeyEvent: void <init>(int,int)>(0, $i1);

        specialinvoke $r0.<android.webkit.TextDialog: void sendDomEvent(android.view.KeyEvent)>($r6);

        specialinvoke $r0.<android.webkit.TextDialog: void sendDomEvent(android.view.KeyEvent)>($r1);

     label06:
        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label07:
        if 23 != $i1 goto label10;

        $z1 = virtualinvoke $r0.<android.widget.AutoCompleteTextView: boolean isPopupShowing()>();

        if $z1 == 0 goto label08;

        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label08:
        if $z0 != 0 goto label09;

        $r7 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        virtualinvoke $r7.<android.webkit.WebView: void shortPressOnTextField()>();

     label09:
        $z0 = specialinvoke $r0.<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        return $z0;

     label10:
        $r8 = virtualinvoke $r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r8 != null goto label11;

        $i2 = $r0.<android.webkit.TextDialog: int mWidthSpec>;

        $i3 = $r0.<android.webkit.TextDialog: int mHeightSpec>;

        virtualinvoke $r0.<android.view.View: void measure(int,int)>($i2, $i3);

     label11:
        $i2 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r2);

        $i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r2);

        $i4 = $r0.<android.webkit.TextDialog: int mMaxLength>;

        if $i4 == -1 goto label16;

        $i4 = $r0.<android.webkit.TextDialog: int mMaxLength>;

        if $i0 != $i4 goto label16;

        $z1 = 1;

     label12:
        if $z1 == 0 goto label17;

        if $i3 == $i2 goto label17;

        $r9 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label13:
        $z2 = specialinvoke $r0.<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        if $z2 == 0 goto label23;

        lookupswitch($i1)
        {
            case 19: goto label18;
            case 20: goto label18;
            case 21: goto label18;
            case 22: goto label18;
            case 66: goto label19;
            default: goto label14;
        };

     label14:
        $z0 = 0;

     label15:
        if $z1 == 0 goto label21;

        if $z0 != 0 goto label21;

        if $i1 == 67 goto label21;

        if $i3 != $i2 goto label20;

        $r0.<android.webkit.TextDialog: boolean mScrollToAccommodateCursor> = 1;

        return 1;

     label16:
        $z1 = 0;

        goto label12;

     label17:
        $r9 = "";

        goto label13;

     label18:
        $z0 = 1;

        goto label15;

     label19:
        $r0.<android.webkit.TextDialog: boolean mGotEnterDown> = 1;

        goto label14;

     label20:
        $r2 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $r10 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label21;

        $r2 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r2);

        $i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r2);

        $r7 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        $r9 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r7.<android.webkit.WebView: void replaceTextfieldText(int,int,java.lang.String,int,int)>(0, $i0, $r9, $i1, $i2);

        $r0.<android.webkit.TextDialog: boolean mScrollToAccommodateCursor> = 1;

        return 1;

     label21:
        if $z0 == 0 goto label22;

        specialinvoke $r0.<android.webkit.TextDialog: void sendDomEvent(android.view.KeyEvent)>($r1);

     label22:
        $r0.<android.webkit.TextDialog: boolean mScrollToAccommodateCursor> = 1;

        return 1;

     label23:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r2, $i2, $i3);

        $z1 = $r0.<android.webkit.TextDialog: boolean mGotEnterDown>;

        if $z1 == 0 goto label24;

        if $z0 != 0 goto label24;

        return 1;

     label24:
        if $i1 == 21 goto label25;

        if $i1 == 22 goto label25;

        if $i1 == 19 goto label25;

        if $i1 != 20 goto label27;

     label25:
        $r7 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        virtualinvoke $r7.<android.webkit.WebView: void resetTrackballTime()>();

        if $z0 == 0 goto label26;

        $r7 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        $z0 = virtualinvoke $r7.<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>($i1, $r1);

        return $z0;

     label26:
        $r7 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        $z0 = virtualinvoke $r7.<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>($i1, $r1);

        return $z0;

     label27:
        return 0;
    }

    void enableScrollOnScreen(boolean)
    {
        android.webkit.TextDialog $r0;
        boolean $z0;

        $r0 := @this: android.webkit.TextDialog;

        $z0 := @parameter0: boolean;

        $r0.<android.webkit.TextDialog: boolean mScrollToAccommodateCursor> = $z0;

        return;
    }

    void fakeTouchEvent(float, float)
    {
        android.webkit.TextDialog $r0;
        float $f0, $f1;
        int $i0, $i1;
        android.text.Layout $r1;
        android.view.MotionEvent $r2;

        $r0 := @this: android.webkit.TextDialog;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r1 != null goto label1;

        $i1 = $r0.<android.webkit.TextDialog: int mWidthSpec>;

        $i0 = $r0.<android.webkit.TextDialog: int mHeightSpec>;

        virtualinvoke $r0.<android.view.View: void measure(int,int)>($i1, $i0);

     label1:
        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(0L, 0L, 1, $f0, $f1, 0);

        virtualinvoke $r0.<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>($r2);

        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

        return;
    }

    boolean isSameTextField(int)
    {
        android.webkit.TextDialog $r0;
        int $i0, $i1;

        $r0 := @this: android.webkit.TextDialog;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.webkit.TextDialog: int mNodePointer>;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean onPreDraw()
    {
        android.webkit.TextDialog $r0;
        int $i0, $i1;
        android.text.Layout $r1;
        boolean $z0;

        $r0 := @this: android.webkit.TextDialog;

        $r1 = virtualinvoke $r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r1 != null goto label1;

        $i1 = $r0.<android.webkit.TextDialog: int mWidthSpec>;

        $i0 = $r0.<android.webkit.TextDialog: int mHeightSpec>;

        virtualinvoke $r0.<android.view.View: void measure(int,int)>($i1, $i0);

     label1:
        $z0 = specialinvoke $r0.<android.widget.TextView: boolean onPreDraw()>();

        return $z0;
    }

    protected void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.webkit.TextDialog $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.webkit.WebView $r4;
        char[] $r5;
        android.view.KeyCharacterMap $r6;
        android.view.KeyEvent[] $r7;
        byte $b5;
        android.view.KeyEvent $r8;

        $r0 := @this: android.webkit.TextDialog;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        specialinvoke $r0.<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>($r1, $i0, $i1, $i2);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = $r0.<android.webkit.TextDialog: java.lang.String mPreChange>;

        if $r3 == null goto label12;

        $r3 = $r0.<android.webkit.TextDialog: java.lang.String mPreChange>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label13;

        $i3 = $r0.<android.webkit.TextDialog: int mMaxLength>;

        if $i3 <= -1 goto label01;

        $r3 = $r0.<android.webkit.TextDialog: java.lang.String mPreChange>;

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i4 = $r0.<android.webkit.TextDialog: int mMaxLength>;

        if $i3 <= $i4 goto label01;

        $r3 = $r0.<android.webkit.TextDialog: java.lang.String mPreChange>;

        $i3 = $r0.<android.webkit.TextDialog: int mMaxLength>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r0.<android.webkit.TextDialog: java.lang.String mPreChange> = $r2;

        if $i1 <= 0 goto label02;

        if $i2 != 0 goto label02;

        $r4 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        $i1 = $i0 + $i1;

        virtualinvoke $r4.<android.webkit.WebView: void deleteSelection(int,int)>($i0, $i1);

        virtualinvoke $r0.<android.webkit.TextDialog: void updateCachedTextfield()>();

        return;

     label02:
        $i3 = $i0 + $i2;

        $i3 = $i3 - 1;

        $i4 = $i0 + $i2;

        $r5 = $r0.<android.webkit.TextDialog: char[] mCharacter>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r1, $i3, $i4, $r5, 0);

        $r6 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(0);

        $r5 = $r0.<android.webkit.TextDialog: char[] mCharacter>;

        $r7 = virtualinvoke $r6.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r5);

        if $r7 != null goto label09;

        $z0 = 1;

     label03:
        if $z0 == 0 goto label10;

        $b5 = 0;

     label04:
        if $i2 > 1 goto label05;

        if $z0 == 0 goto label11;

     label05:
        $i3 = $i0 + $i2;

        $i3 = $i3 - $b5;

        $r1 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i0, $i3);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r4 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        $i1 = $i0 + $i1;

        $i3 = $i0 + $i2;

        $i3 = $i3 - $b5;

        $i2 = $i0 + $i2;

        $i2 = $i2 - $b5;

        virtualinvoke $r4.<android.webkit.WebView: void replaceTextfieldText(int,int,java.lang.String,int,int)>($i0, $i1, $r2, $i3, $i2);

     label06:
        virtualinvoke $r0.<android.webkit.TextDialog: void updateCachedTextfield()>();

        if $z0 != 0 goto label14;

        $i0 = lengthof $r7;

        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label15;

        $r8 = $r7[$i1];

        $i2 = virtualinvoke $r8.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>($i2);

        if $z0 != 0 goto label08;

        $r8 = $r7[$i1];

        specialinvoke $r0.<android.webkit.TextDialog: void sendDomEvent(android.view.KeyEvent)>($r8);

     label08:
        $i1 = $i1 + 1;

        goto label07;

     label09:
        $z0 = 0;

        goto label03;

     label10:
        $b5 = 1;

        goto label04;

     label11:
        $r4 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        $i1 = $i0 + $i1;

        virtualinvoke $r4.<android.webkit.WebView: void setSelection(int,int)>($i0, $i1);

        goto label06;

     label12:
        return;

     label13:
        return;

     label14:
        return;

     label15:
        return;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.webkit.TextDialog $r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        int $i0;
        android.text.Editable $r2;
        android.text.method.MovementMethod $r3;
        android.text.Layout $r4;

        $r0 := @this: android.webkit.TextDialog;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke $r0.<android.widget.AutoCompleteTextView: boolean isPopupShowing()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke $r0.<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label1:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 == 2 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $r3 = virtualinvoke $r0.<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke $r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r4 == null goto label3;

        $z0 = interfaceinvoke $r3.<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>($r0, $r2, $r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $r0.<android.webkit.TextDialog: boolean mScrollToAccommodateCursor> = 0;

        return 0;
    }

    void remove()
    {
        android.webkit.TextDialog $r0;
        android.content.Context $r1;
        android.view.inputmethod.InputMethodManager $r2;
        android.os.IBinder $r3;
        android.webkit.WebView $r4;

        $r0 := @this: android.webkit.TextDialog;

        $r1 = $r0.<android.view.View: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.content.Context)>($r1);

        $r3 = virtualinvoke $r0.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r3, 0);

        $r4 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        virtualinvoke $r4.<android.view.ViewGroup: void removeView(android.view.View)>($r0);

        $r4 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        virtualinvoke $r4.<android.view.View: boolean requestFocus()>();

        $r0.<android.webkit.TextDialog: boolean mScrollToAccommodateCursor> = 0;

        return;
    }

    public boolean requestRectangleOnScreen(android.graphics.Rect)
    {
        android.webkit.TextDialog $r0;
        android.graphics.Rect $r1;
        boolean $z0;

        $r0 := @this: android.webkit.TextDialog;

        $r1 := @parameter0: android.graphics.Rect;

        $z0 = $r0.<android.webkit.TextDialog: boolean mScrollToAccommodateCursor>;

        if $z0 == 0 goto label1;

        $z0 = specialinvoke $r0.<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>($r1);

        return $z0;

     label1:
        return 0;
    }

    public void setAdapterCustom(android.webkit.TextDialog$AutoCompleteAdapter)
    {
        android.webkit.TextDialog $r0;
        android.webkit.TextDialog$AutoCompleteAdapter $r1;

        $r0 := @this: android.webkit.TextDialog;

        $r1 := @parameter0: android.webkit.TextDialog$AutoCompleteAdapter;

        if $r1 == null goto label1;

        virtualinvoke $r0.<android.widget.TextView: void setInputType(int)>(65536);

        staticinvoke <android.webkit.TextDialog$AutoCompleteAdapter: void access$000(android.webkit.TextDialog$AutoCompleteAdapter,android.widget.TextView)>($r1, $r0);

     label1:
        specialinvoke $r0.<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>($r1);

        return;
    }

    void setInPassword(boolean)
    {
        android.webkit.TextDialog $r0;
        boolean $z0;

        $r0 := @this: android.webkit.TextDialog;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.widget.TextView: void setInputType(int)>(129);

        return;

     label1:
        return;
    }

    void setMaxLength(int)
    {
        android.webkit.TextDialog $r0;
        int $i0;
        android.text.InputFilter$LengthFilter $r1;
        android.text.InputFilter[] $r2;

        $r0 := @this: android.webkit.TextDialog;

        $i0 := @parameter0: int;

        $r0.<android.webkit.TextDialog: int mMaxLength> = $i0;

        if -1 != $i0 goto label1;

        $r2 = <android.webkit.TextDialog: android.text.InputFilter[] NO_FILTERS>;

        virtualinvoke $r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r2);

        return;

     label1:
        $r2 = newarray (android.text.InputFilter)[1];

        $r1 = new android.text.InputFilter$LengthFilter;

        specialinvoke $r1.<android.text.InputFilter$LengthFilter: void <init>(int)>($i0);

        $r2[0] = $r1;

        virtualinvoke $r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r2);

        return;
    }

    void setNodePointer(int)
    {
        android.webkit.TextDialog $r0;
        int $i0;

        $r0 := @this: android.webkit.TextDialog;

        $i0 := @parameter0: int;

        $r0.<android.webkit.TextDialog: int mNodePointer> = $i0;

        return;
    }

    void setRect(int, int, int, int)
    {
        android.webkit.TextDialog $r0;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r1;
        android.widget.AbsoluteLayout$LayoutParams $r2;
        android.view.ViewParent $r3;
        android.webkit.WebView $r4;

        $r0 := @this: android.webkit.TextDialog;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (android.widget.AbsoluteLayout$LayoutParams) $r1;

        if $r2 != null goto label3;

        $r2 = new android.widget.AbsoluteLayout$LayoutParams;

        specialinvoke $r2.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>($i2, $i3, $i0, $i1);

     label1:
        $r3 = virtualinvoke $r0.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 != null goto label4;

        $r4 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        virtualinvoke $r4.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r0, $r2);

     label2:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

        $r0.<android.webkit.TextDialog: int mWidthSpec> = $i0;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        $r0.<android.webkit.TextDialog: int mHeightSpec> = $i0;

        virtualinvoke $r0.<android.view.View: boolean requestFocus()>();

        return;

     label3:
        $r2.<android.widget.AbsoluteLayout$LayoutParams: int x> = $i0;

        $r2.<android.widget.AbsoluteLayout$LayoutParams: int y> = $i1;

        $r2.<android.view.ViewGroup$LayoutParams: int width> = $i2;

        $r2.<android.view.ViewGroup$LayoutParams: int height> = $i3;

        goto label1;

     label4:
        virtualinvoke $r0.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        goto label2;
    }

    public void setSingleLine(boolean)
    {
        android.webkit.TextDialog $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.webkit.TextDialog;

        $z0 := @parameter0: boolean;

        $i0 = 1;

        if $z0 != 0 goto label1;

        $i0 = 1 | 180224;

     label1:
        $r0.<android.webkit.TextDialog: boolean mSingle> = $z0;

        virtualinvoke $r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>($z0);

        virtualinvoke $r0.<android.widget.TextView: void setInputType(int)>($i0);

        return;
    }

    void setText(java.lang.CharSequence, int, int)
    {
        android.webkit.TextDialog $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        android.text.Editable $r3;

        $r0 := @this: android.webkit.TextDialog;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r0.<android.webkit.TextDialog: java.lang.String mPreChange> = $r2;

        virtualinvoke $r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        $r3 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $i2 = interfaceinvoke $r3.<android.text.Spannable: int length()>();

        if $i1 <= $i2 goto label1;

        $i1 = $i2;

     label1:
        if $i0 >= 0 goto label3;

        $i0 = 0;

     label2:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r3, $i0, $i1);

        return;

     label3:
        if $i0 <= $i2 goto label2;

        $i0 = $i2;

        goto label2;
    }

    void setTextAndKeepSelection(java.lang.String)
    {
        android.webkit.TextDialog $r0;
        java.lang.String $r1, $r2;
        android.text.Editable $r3;
        int $i0;

        $r0 := @this: android.webkit.TextDialog;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        $r0.<android.webkit.TextDialog: java.lang.String mPreChange> = $r2;

        $r3 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(0, $i0, $r1);

        virtualinvoke $r0.<android.webkit.TextDialog: void updateCachedTextfield()>();

        return;
    }

    void updateCachedTextfield()
    {
        android.webkit.TextDialog $r0;
        android.webkit.WebView $r1;
        android.text.Editable $r2;
        java.lang.String $r3;

        $r0 := @this: android.webkit.TextDialog;

        $r1 = $r0.<android.webkit.TextDialog: android.webkit.WebView mWebView>;

        $r2 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<android.webkit.WebView: void updateCachedTextfield(java.lang.String)>($r3);

        return;
    }
}
