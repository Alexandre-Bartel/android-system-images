public abstract class org.apache.harmony.awt.gl.CommonGraphicsEnvironment extends java.awt.GraphicsEnvironment
{

    public void <init>()
    {
        org.apache.harmony.awt.gl.CommonGraphicsEnvironment $r0;

        $r0 := @this: org.apache.harmony.awt.gl.CommonGraphicsEnvironment;

        specialinvoke $r0.<java.awt.GraphicsEnvironment: void <init>()>();

        return;
    }

    public java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)
    {
        org.apache.harmony.awt.gl.CommonGraphicsEnvironment $r0;
        java.awt.image.BufferedImage $r1;
        org.apache.harmony.awt.gl.image.BufferedImageGraphics2D $r2;

        $r0 := @this: org.apache.harmony.awt.gl.CommonGraphicsEnvironment;

        $r1 := @parameter0: java.awt.image.BufferedImage;

        $r2 = new org.apache.harmony.awt.gl.image.BufferedImageGraphics2D;

        specialinvoke $r2.<org.apache.harmony.awt.gl.image.BufferedImageGraphics2D: void <init>(java.awt.image.BufferedImage)>($r1);

        return $r2;
    }

    public java.awt.Font[] getAllFonts()
    {
        org.apache.harmony.awt.gl.CommonGraphicsEnvironment $r0;
        org.apache.harmony.awt.gl.CommonGraphics2DFactory $r1;
        org.apache.harmony.awt.gl.font.FontManager $r2;
        java.awt.Font[] $r3;

        $r0 := @this: org.apache.harmony.awt.gl.CommonGraphicsEnvironment;

        $r1 = <org.apache.harmony.awt.gl.CommonGraphics2DFactory: org.apache.harmony.awt.gl.CommonGraphics2DFactory inst>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.awt.gl.CommonGraphics2DFactory: org.apache.harmony.awt.gl.font.FontManager getFontManager()>();

        $r3 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.FontManager: java.awt.Font[] getAllFonts()>();

        return $r3;
    }

    public java.lang.String[] getAvailableFontFamilyNames()
    {
        org.apache.harmony.awt.gl.CommonGraphicsEnvironment $r0;
        org.apache.harmony.awt.gl.CommonGraphics2DFactory $r1;
        org.apache.harmony.awt.gl.font.FontManager $r2;
        java.lang.String[] $r3;

        $r0 := @this: org.apache.harmony.awt.gl.CommonGraphicsEnvironment;

        $r1 = <org.apache.harmony.awt.gl.CommonGraphics2DFactory: org.apache.harmony.awt.gl.CommonGraphics2DFactory inst>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.awt.gl.CommonGraphics2DFactory: org.apache.harmony.awt.gl.font.FontManager getFontManager()>();

        $r3 = virtualinvoke $r2.<org.apache.harmony.awt.gl.font.FontManager: java.lang.String[] getAllFamilies()>();

        return $r3;
    }

    public java.lang.String[] getAvailableFontFamilyNames(java.util.Locale)
    {
        java.util.Locale $r0;
        java.awt.Font $r1;
        java.util.ArrayList $r2;
        int $i0, $i1;
        org.apache.harmony.awt.gl.CommonGraphicsEnvironment $r3;
        java.awt.Font[] $r4;
        java.lang.String $r5;
        boolean $z0;
        java.lang.String[] $r6;
        java.lang.Object[] $r7;

        $r3 := @this: org.apache.harmony.awt.gl.CommonGraphicsEnvironment;

        $r0 := @parameter0: java.util.Locale;

        $r4 = virtualinvoke $r3.<org.apache.harmony.awt.gl.CommonGraphicsEnvironment: java.awt.Font[] getAllFonts()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r4[$i1];

        $r5 = virtualinvoke $r1.<java.awt.Font: java.lang.String getFamily(java.util.Locale)>($r0);

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r6 = newarray (java.lang.String)[$i0];

        $r7 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (java.lang.String[]) $r7;

        return $r6;
    }
}
