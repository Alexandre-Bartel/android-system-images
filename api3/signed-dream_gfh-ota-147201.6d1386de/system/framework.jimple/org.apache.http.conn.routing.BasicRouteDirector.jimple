public class org.apache.http.conn.routing.BasicRouteDirector extends java.lang.Object implements org.apache.http.conn.routing.HttpRouteDirector
{

    public void <init>()
    {
        org.apache.http.conn.routing.BasicRouteDirector $r0;

        $r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected int directStep(org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo)
    {
        org.apache.http.conn.routing.BasicRouteDirector $r0;
        org.apache.http.conn.routing.RouteInfo $r1, $r2;
        int $i0;
        org.apache.http.HttpHost $r3, $r4;
        boolean $z0, $z1;
        java.net.InetAddress $r5, $r6;

        $r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        $r1 := @parameter0: org.apache.http.conn.routing.RouteInfo;

        $r2 := @parameter1: org.apache.http.conn.routing.RouteInfo;

        $i0 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 <= 1 goto label1;

        return -1;

     label1:
        $r3 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getTargetHost()>();

        $r4 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getTargetHost()>();

        $z0 = virtualinvoke $r3.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        return -1;

     label2:
        $z0 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: boolean isSecure()>();

        $z1 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: boolean isSecure()>();

        if $z0 == $z1 goto label3;

        return -1;

     label3:
        $r5 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>();

        if $r5 == null goto label4;

        $r5 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>();

        $r6 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>();

        $z0 = virtualinvoke $r5.<java.net.InetAddress: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label4;

        return -1;

     label4:
        return 0;
    }

    protected int firstStep(org.apache.http.conn.routing.RouteInfo)
    {
        org.apache.http.conn.routing.BasicRouteDirector $r0;
        org.apache.http.conn.routing.RouteInfo $r1;
        int $i0;

        $r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        $r1 := @parameter0: org.apache.http.conn.routing.RouteInfo;

        $i0 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 <= 1 goto label1;

        return 2;

     label1:
        return 1;
    }

    public int nextStep(org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo)
    {
        org.apache.http.conn.routing.BasicRouteDirector $r0;
        org.apache.http.conn.routing.RouteInfo $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;

        $r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        $r1 := @parameter0: org.apache.http.conn.routing.RouteInfo;

        $r2 := @parameter1: org.apache.http.conn.routing.RouteInfo;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Planned route may not be null.");

        throw $r3;

     label1:
        if $r2 == null goto label2;

        $i0 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 >= 1 goto label3;

     label2:
        $i0 = virtualinvoke $r0.<org.apache.http.conn.routing.BasicRouteDirector: int firstStep(org.apache.http.conn.routing.RouteInfo)>($r1);

        return $i0;

     label3:
        $i0 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 <= 1 goto label4;

        $i0 = virtualinvoke $r0.<org.apache.http.conn.routing.BasicRouteDirector: int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>($r1, $r2);

        return $i0;

     label4:
        $i0 = virtualinvoke $r0.<org.apache.http.conn.routing.BasicRouteDirector: int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>($r1, $r2);

        return $i0;
    }

    protected int proxiedStep(org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo)
    {
        org.apache.http.conn.routing.BasicRouteDirector $r0;
        org.apache.http.conn.routing.RouteInfo $r1, $r2;
        int $i0, $i1, $i2, $i3;
        org.apache.http.HttpHost $r3, $r4;
        boolean $z0, $z1;

        $r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        $r1 := @parameter0: org.apache.http.conn.routing.RouteInfo;

        $r2 := @parameter1: org.apache.http.conn.routing.RouteInfo;

        $i0 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 > 1 goto label01;

        return -1;

     label01:
        $r3 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getTargetHost()>();

        $r4 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getTargetHost()>();

        $z0 = virtualinvoke $r3.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label02;

        return -1;

     label02:
        $i0 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        $i1 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 >= $i1 goto label03;

        return -1;

     label03:
        $i2 = 0;

     label04:
        $i3 = $i1 - 1;

        if $i2 >= $i3 goto label06;

        $r3 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getHopTarget(int)>($i2);

        $r4 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getHopTarget(int)>($i2);

        $z0 = virtualinvoke $r3.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label05;

        return -1;

     label05:
        $i2 = $i2 + 1;

        goto label04;

     label06:
        if $i0 <= $i1 goto label07;

        return 4;

     label07:
        $z0 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: boolean isTunnelled()>();

        if $z0 == 0 goto label08;

        $z0 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: boolean isTunnelled()>();

        if $z0 == 0 goto label09;

     label08:
        $z0 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: boolean isLayered()>();

        if $z0 == 0 goto label10;

        $z0 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: boolean isLayered()>();

        if $z0 != 0 goto label10;

     label09:
        return -1;

     label10:
        $z0 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: boolean isTunnelled()>();

        if $z0 == 0 goto label11;

        $z0 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: boolean isTunnelled()>();

        if $z0 != 0 goto label11;

        return 3;

     label11:
        $z0 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: boolean isLayered()>();

        if $z0 == 0 goto label12;

        $z0 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: boolean isLayered()>();

        if $z0 != 0 goto label12;

        return 5;

     label12:
        $z0 = interfaceinvoke $r1.<org.apache.http.conn.routing.RouteInfo: boolean isSecure()>();

        $z1 = interfaceinvoke $r2.<org.apache.http.conn.routing.RouteInfo: boolean isSecure()>();

        if $z0 == $z1 goto label13;

        return -1;

     label13:
        return 0;
    }
}
