public class org.apache.harmony.security.x501.Name extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1SequenceOf ASN1;
    public static final org.apache.harmony.security.asn1.ASN1SetOf ASN1_RDN;
    private java.lang.String canonicalString;
    private volatile byte[] encoded;
    private java.util.List rdn;
    private java.lang.String rfc1779String;
    private java.lang.String rfc2253String;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1SetOf $r0;
        org.apache.harmony.security.asn1.ASN1Sequence $r1;
        org.apache.harmony.security.x501.Name$1 $r2;

        $r0 = new org.apache.harmony.security.asn1.ASN1SetOf;

        $r1 = <org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1SetOf: void <init>(org.apache.harmony.security.asn1.ASN1Type)>($r1);

        <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SetOf ASN1_RDN> = $r0;

        $r2 = new org.apache.harmony.security.x501.Name$1;

        $r0 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SetOf ASN1_RDN>;

        specialinvoke $r2.<org.apache.harmony.security.x501.Name$1: void <init>(org.apache.harmony.security.asn1.ASN1Type)>($r0);

        <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1> = $r2;

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        org.apache.harmony.security.x501.Name $r0;
        java.lang.String $r1;
        java.util.List $r2;
        org.apache.harmony.security.x509.DNParser $r3;

        $r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new org.apache.harmony.security.x509.DNParser;

        specialinvoke $r3.<org.apache.harmony.security.x509.DNParser: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<org.apache.harmony.security.x509.DNParser: java.util.List parse()>();

        $r0.<org.apache.harmony.security.x501.Name: java.util.List rdn> = $r2;

        return;
    }

    private void <init>(java.util.List)
    {
        org.apache.harmony.security.x501.Name $r0;
        java.util.List $r1;

        $r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 := @parameter0: java.util.List;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.security.x501.Name: java.util.List rdn> = $r1;

        return;
    }

    void <init>(java.util.List, org.apache.harmony.security.x501.Name$1)
    {
        org.apache.harmony.security.x501.Name $r0;
        java.util.List $r1;
        org.apache.harmony.security.x501.Name$1 $r2;

        $r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.apache.harmony.security.x501.Name$1;

        specialinvoke $r0.<org.apache.harmony.security.x501.Name: void <init>(java.util.List)>($r1);

        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.x501.Name $r0;
        byte[] $r1;
        org.apache.harmony.security.asn1.DerInputStream $r2;
        int $i0, $i1;
        java.io.IOException $r3;
        java.lang.String $r4;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r5;
        java.lang.Object $r6;
        java.util.List $r7;

        $r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.harmony.security.asn1.DerInputStream;

        specialinvoke $r2.<org.apache.harmony.security.asn1.DerInputStream: void <init>(byte[])>($r1);

        $i0 = virtualinvoke $r2.<org.apache.harmony.security.asn1.BerInputStream: int getEndOffset()>();

        $i1 = lengthof $r1;

        if $i0 == $i1 goto label1;

        $r3 = new java.io.IOException;

        $r4 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.111");

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $r5 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        virtualinvoke $r5.<org.apache.harmony.security.asn1.ASN1SequenceOf: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r2);

        $r6 = $r2.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object content>;

        $r7 = (java.util.List) $r6;

        $r0.<org.apache.harmony.security.x501.Name: java.util.List rdn> = $r7;

        return;
    }

    static java.util.List access$100(org.apache.harmony.security.x501.Name)
    {
        org.apache.harmony.security.x501.Name $r0;
        java.util.List r1;

        $r0 := @parameter0: org.apache.harmony.security.x501.Name;

        r1 = $r0.<org.apache.harmony.security.x501.Name: java.util.List rdn>;

        return r1;
    }

    private java.lang.String getName0(java.lang.String)
    {
        org.apache.harmony.security.x501.Name $r0;
        java.lang.String $r1, $r9;
        java.lang.StringBuffer $r2;
        java.util.LinkedList $r3;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;
        org.apache.harmony.security.x501.AttributeTypeAndValueComparator $r6;
        java.util.Iterator $r7;
        boolean $z0;
        org.apache.harmony.security.x501.AttributeTypeAndValue $r8;
        java.util.Locale $r10;

        $r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = $r0.<org.apache.harmony.security.x501.Name: java.util.List rdn>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label7;

        $r4 = $r0.<org.apache.harmony.security.x501.Name: java.util.List rdn>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.util.List) $r5;

        if "CANONICAL" != $r1 goto label2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>(java.util.Collection)>($r4);

        $r6 = new org.apache.harmony.security.x501.AttributeTypeAndValueComparator;

        specialinvoke $r6.<org.apache.harmony.security.x501.AttributeTypeAndValueComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r3, $r6);

        $r4 = $r3;

     label2:
        $r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.harmony.security.x501.AttributeTypeAndValue) $r5;

        virtualinvoke $r8.<org.apache.harmony.security.x501.AttributeTypeAndValue: void appendName(java.lang.String,java.lang.StringBuffer)>($r1, $r2);

        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if "RFC1779" != $r1 goto label4;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

        goto label3;

     label4:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);

        goto label3;

     label5:
        if $i0 == 0 goto label6;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        if $r1 != "RFC1779" goto label6;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label6:
        $i0 = $i0 + -1;

        goto label1;

     label7:
        $r9 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        if $r1 != "CANONICAL" goto label8;

        $r10 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r10);

        return $r1;

     label8:
        return $r9;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x501.Name $r0;
        byte[] $r1;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r2;

        $r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 = $r0.<org.apache.harmony.security.x501.Name: byte[] encoded>;

        if $r1 != null goto label1;

        $r2 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        $r1 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r0);

        $r0.<org.apache.harmony.security.x501.Name: byte[] encoded> = $r1;

     label1:
        $r1 = $r0.<org.apache.harmony.security.x501.Name: byte[] encoded>;

        return $r1;
    }

    public java.lang.String getName(java.lang.String)
    {
        org.apache.harmony.security.x501.Name $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;

        $r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 := @parameter0: java.lang.String;

        $r3 = "RFC2253";

        $r2 = "RFC1779";

        $r4 = "CANONICAL";

        if $r1 != "RFC1779" goto label02;

        $r2 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String>;

        if $r2 != null goto label01;

        $r1 = specialinvoke $r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>($r1);

        $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String> = $r1;

     label01:
        $r1 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String>;

        return $r1;

     label02:
        if $r1 != "RFC2253" goto label04;

        $r2 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String>;

        if $r2 != null goto label03;

        $r1 = specialinvoke $r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>($r1);

        $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String> = $r1;

     label03:
        $r1 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String>;

        return $r1;

     label04:
        if $r1 != "CANONICAL" goto label06;

        $r2 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString>;

        if $r2 != null goto label05;

        $r1 = specialinvoke $r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>($r1);

        $r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString> = $r1;

     label05:
        $r1 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString>;

        return $r1;

     label06:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label08;

        $r1 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String>;

        if $r1 != null goto label07;

        $r1 = specialinvoke $r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>("RFC1779");

        $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String> = $r1;

     label07:
        $r1 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String>;

        return $r1;

     label08:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label10;

        $r1 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String>;

        if $r1 != null goto label09;

        $r1 = specialinvoke $r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>("RFC2253");

        $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String> = $r1;

     label09:
        $r1 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String>;

        return $r1;

     label10:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label12;

        $r1 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString>;

        if $r1 != null goto label11;

        $r1 = specialinvoke $r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>("CANONICAL");

        $r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString> = $r1;

     label11:
        $r1 = $r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString>;

        return $r1;

     label12:
        $r5 = new java.lang.IllegalArgumentException;

        $r1 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>("security.177", $r1);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r5;
    }

    public javax.security.auth.x500.X500Principal getX500Principal()
    {
        org.apache.harmony.security.x501.Name $r0;
        javax.security.auth.x500.X500Principal $r1;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 = new javax.security.auth.x500.X500Principal;

        $r2 = specialinvoke $r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>("RFC2253");

        specialinvoke $r1.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r2);

        return $r1;
    }
}
