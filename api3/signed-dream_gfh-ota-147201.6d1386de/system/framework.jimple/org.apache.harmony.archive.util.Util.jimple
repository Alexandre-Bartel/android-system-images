public class org.apache.harmony.archive.util.Util extends java.lang.Object
{

    public void <init>()
    {
        org.apache.harmony.archive.util.Util $r0;

        $r0 := @this: org.apache.harmony.archive.util.Util;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean ASCIIIgnoreCaseRegionMatches(java.lang.String, int, java.lang.String, int, int)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r1;
        boolean $z0;
        java.lang.NullPointerException $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        if $r0 == null goto label5;

        if $r1 == null goto label5;

        if $i0 < 0 goto label1;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i3 = $i3 - $i0;

        if $i2 <= $i3 goto label2;

     label1:
        return 0;

     label2:
        if $i1 < 0 goto label3;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i3 = $i3 - $i1;

        if $i2 <= $i3 goto label4;

     label3:
        return 0;

     label4:
        $i3 = $i0 + $i2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        $i0 = $i1 + $i2;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        $r0 = staticinvoke <org.apache.harmony.archive.util.Util: java.lang.String toASCIILowerCase(java.lang.String)>($r0);

        $r1 = staticinvoke <org.apache.harmony.archive.util.Util: java.lang.String toASCIILowerCase(java.lang.String)>($r1);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label5:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;
    }

    public static java.lang.String toASCIILowerCase(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i3;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if 65 > $c2 goto label3;

        if $c2 > 90 goto label3;

        $i3 = $c2 + 32;

        $c2 = (char) $i3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label2;

     label4:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String toASCIIUpperCase(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i3;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if 97 > $c2 goto label3;

        if $c2 > 122 goto label3;

        $i3 = $c2 - 32;

        $c2 = (char) $i3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label2;

     label4:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
}
