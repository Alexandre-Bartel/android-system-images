public class org.bouncycastle.crypto.engines.NullEngine extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    protected static final int BLOCK_SIZE;

    public void <init>()
    {
        org.bouncycastle.crypto.engines.NullEngine $r0;

        $r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.NullEngine $r0;

        $r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        return "Null";
    }

    public int getBlockSize()
    {
        org.bouncycastle.crypto.engines.NullEngine $r0;

        $r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        return 1;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.bouncycastle.crypto.engines.NullEngine $r0;
        boolean $z0;
        org.bouncycastle.crypto.CipherParameters $r1;

        $r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        return;
    }

    public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.bouncycastle.crypto.engines.NullEngine $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        org.bouncycastle.crypto.DataLengthException $r3;
        byte $b5;

        $r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $i2 = $i0 + 1;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label1;

        $r3 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r3;

     label1:
        $i2 = $i1 + 1;

        $i3 = lengthof $r2;

        if $i2 <= $i3 goto label2;

        $r3 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r3;

     label2:
        $i2 = 0;

     label3:
        if $i2 >= 1 goto label4;

        $i3 = $i1 + $i2;

        $i4 = $i0 + $i2;

        $b5 = $r1[$i4];

        $r2[$i3] = $b5;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        return 1;
    }

    public void reset()
    {
        org.bouncycastle.crypto.engines.NullEngine $r0;

        $r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        return;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.engines.NullEngine: int BLOCK_SIZE> = 1;

        return;
    }
}
