public abstract class org.apache.harmony.security.asn1.ASN1Type extends java.lang.Object implements org.apache.harmony.security.asn1.ASN1Constants
{
    public final int constrId;
    public final int id;

    public void <init>(int)
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        int $i0;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $i0 := @parameter0: int;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1Type: void <init>(int,int)>(0, $i0);

        return;
    }

    public void <init>(int, int)
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $i1 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.102");

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        if $i0 == 0 goto label2;

        if $i0 == 64 goto label2;

        if $i0 == 128 goto label2;

        if $i0 == 192 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.103");

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        if $i1 >= 31 goto label3;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.asn1.ASN1Type: int id> = $i0;

        $i0 = $r0.<org.apache.harmony.security.asn1.ASN1Type: int id>;

        $i0 = $i0 + 32;

        $r0.<org.apache.harmony.security.asn1.ASN1Type: int constrId> = $i0;

        return;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.104");

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public abstract boolean checkTag(int);

    public final java.lang.Object decode(java.io.InputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        java.io.InputStream $r1;
        java.lang.Object $r2;
        org.apache.harmony.security.asn1.DerInputStream $r3;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = new org.apache.harmony.security.asn1.DerInputStream;

        specialinvoke $r3.<org.apache.harmony.security.asn1.DerInputStream: void <init>(java.io.InputStream)>($r1);

        $r2 = virtualinvoke $r0.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r3);

        return $r2;
    }

    public abstract java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException;

    public final java.lang.Object decode(byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        byte[] $r1;
        java.lang.Object $r2;
        org.apache.harmony.security.asn1.DerInputStream $r3;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $r1 := @parameter0: byte[];

        $r3 = new org.apache.harmony.security.asn1.DerInputStream;

        specialinvoke $r3.<org.apache.harmony.security.asn1.DerInputStream: void <init>(byte[])>($r1);

        $r2 = virtualinvoke $r0.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r3);

        return $r2;
    }

    public final java.lang.Object decode(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        org.apache.harmony.security.asn1.DerInputStream $r3;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = new org.apache.harmony.security.asn1.DerInputStream;

        specialinvoke $r3.<org.apache.harmony.security.asn1.DerInputStream: void <init>(byte[],int,int)>($r1, $i0, $i1);

        $r2 = virtualinvoke $r0.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r3);

        return $r2;
    }

    public final byte[] encode(java.lang.Object)
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        java.lang.Object $r1;
        org.apache.harmony.security.asn1.DerOutputStream $r2;
        byte[] r3;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.harmony.security.asn1.DerOutputStream;

        specialinvoke $r2.<org.apache.harmony.security.asn1.DerOutputStream: void <init>(org.apache.harmony.security.asn1.ASN1Type,java.lang.Object)>($r0, $r1);

        r3 = $r2.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        return r3;
    }

    public abstract void encodeASN(org.apache.harmony.security.asn1.BerOutputStream);

    public abstract void encodeContent(org.apache.harmony.security.asn1.BerOutputStream);

    protected java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        org.apache.harmony.security.asn1.BerInputStream $r1;
        java.lang.Object r2;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        r2 = $r1.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object content>;

        return r2;
    }

    public int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        org.apache.harmony.security.asn1.BerOutputStream $r1;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $i0 = 1 + 1;

        $i1 = $r1.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        if $i1 <= 127 goto label2;

        $i0 = $i0 + 1;

        $i1 = $r1.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i1 = $i1 >> 8;

     label1:
        if $i1 <= 0 goto label2;

        $i1 = $i1 >> 8;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i1 = $r1.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public abstract void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream);

    public java.lang.String toString()
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        int $i0;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(tag: 0x");

        $i0 = $r0.<org.apache.harmony.security.asn1.ASN1Type: int id>;

        $i0 = $i0 & 255;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public final void verify(java.io.InputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        java.io.InputStream $r1;
        org.apache.harmony.security.asn1.DerInputStream $r2;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new org.apache.harmony.security.asn1.DerInputStream;

        specialinvoke $r2.<org.apache.harmony.security.asn1.DerInputStream: void <init>(java.io.InputStream)>($r1);

        virtualinvoke $r2.<org.apache.harmony.security.asn1.BerInputStream: void setVerify()>();

        virtualinvoke $r0.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r2);

        return;
    }

    public final void verify(byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Type $r0;
        byte[] $r1;
        org.apache.harmony.security.asn1.DerInputStream $r2;

        $r0 := @this: org.apache.harmony.security.asn1.ASN1Type;

        $r1 := @parameter0: byte[];

        $r2 = new org.apache.harmony.security.asn1.DerInputStream;

        specialinvoke $r2.<org.apache.harmony.security.asn1.DerInputStream: void <init>(byte[])>($r1);

        virtualinvoke $r2.<org.apache.harmony.security.asn1.BerInputStream: void setVerify()>();

        virtualinvoke $r0.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>($r2);

        return;
    }
}
