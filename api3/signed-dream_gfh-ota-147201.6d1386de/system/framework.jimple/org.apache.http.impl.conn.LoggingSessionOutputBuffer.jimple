public class org.apache.http.impl.conn.LoggingSessionOutputBuffer extends java.lang.Object implements org.apache.http.io.SessionOutputBuffer
{
    private final org.apache.http.io.SessionOutputBuffer out;
    private final org.apache.http.impl.conn.Wire wire;

    public void <init>(org.apache.http.io.SessionOutputBuffer, org.apache.http.impl.conn.Wire)
    {
        org.apache.http.impl.conn.LoggingSessionOutputBuffer $r0;
        org.apache.http.io.SessionOutputBuffer $r1;
        org.apache.http.impl.conn.Wire $r2;

        $r0 := @this: org.apache.http.impl.conn.LoggingSessionOutputBuffer;

        $r1 := @parameter0: org.apache.http.io.SessionOutputBuffer;

        $r2 := @parameter1: org.apache.http.impl.conn.Wire;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.SessionOutputBuffer out> = $r1;

        $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire> = $r2;

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionOutputBuffer $r0;
        org.apache.http.io.SessionOutputBuffer $r1;

        $r0 := @this: org.apache.http.impl.conn.LoggingSessionOutputBuffer;

        $r1 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r1.<org.apache.http.io.SessionOutputBuffer: void flush()>();

        return;
    }

    public org.apache.http.io.HttpTransportMetrics getMetrics()
    {
        org.apache.http.impl.conn.LoggingSessionOutputBuffer $r0;
        org.apache.http.io.HttpTransportMetrics $r1;
        org.apache.http.io.SessionOutputBuffer $r2;

        $r0 := @this: org.apache.http.impl.conn.LoggingSessionOutputBuffer;

        $r2 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.SessionOutputBuffer out>;

        $r1 = interfaceinvoke $r2.<org.apache.http.io.SessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>();

        return $r1;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionOutputBuffer $r0;
        int $i0;
        boolean $z0;
        org.apache.http.io.SessionOutputBuffer $r1;
        org.apache.http.impl.conn.Wire $r2;

        $r0 := @this: org.apache.http.impl.conn.LoggingSessionOutputBuffer;

        $i0 := @parameter0: int;

        $r1 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r1.<org.apache.http.io.SessionOutputBuffer: void write(int)>($i0);

        $r2 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r2.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        virtualinvoke $r2.<org.apache.http.impl.conn.Wire: void output(int)>($i0);

        return;

     label1:
        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionOutputBuffer $r0;
        byte[] $r1;
        boolean $z0;
        org.apache.http.io.SessionOutputBuffer $r2;
        org.apache.http.impl.conn.Wire $r3;

        $r0 := @this: org.apache.http.impl.conn.LoggingSessionOutputBuffer;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r2.<org.apache.http.io.SessionOutputBuffer: void write(byte[])>($r1);

        $r3 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        $r3 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        virtualinvoke $r3.<org.apache.http.impl.conn.Wire: void output(byte[])>($r1);

        return;

     label1:
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionOutputBuffer $r0;
        byte[] $r1;
        int $i0, $i1;
        boolean $z0;
        org.apache.http.io.SessionOutputBuffer $r2;
        org.apache.http.impl.conn.Wire $r3;

        $r0 := @this: org.apache.http.impl.conn.LoggingSessionOutputBuffer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r2.<org.apache.http.io.SessionOutputBuffer: void write(byte[],int,int)>($r1, $i0, $i1);

        $r3 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        $r3 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        virtualinvoke $r3.<org.apache.http.impl.conn.Wire: void output(byte[],int,int)>($r1, $i0, $i1);

        return;

     label1:
        return;
    }

    public void writeLine(java.lang.String) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionOutputBuffer $r0;
        java.lang.String $r1;
        org.apache.http.io.SessionOutputBuffer $r2;
        org.apache.http.impl.conn.Wire $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;

        $r0 := @this: org.apache.http.impl.conn.LoggingSessionOutputBuffer;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r2.<org.apache.http.io.SessionOutputBuffer: void writeLine(java.lang.String)>($r1);

        $r3 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        $r3 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[EOL]");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.http.impl.conn.Wire: void output(java.lang.String)>($r1);

        return;

     label1:
        return;
    }

    public void writeLine(org.apache.http.util.CharArrayBuffer) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionOutputBuffer $r0;
        org.apache.http.util.CharArrayBuffer $r1;
        java.lang.String $r2;
        org.apache.http.io.SessionOutputBuffer $r3;
        org.apache.http.impl.conn.Wire $r4;
        boolean $z0;
        char[] $r5;
        int $i0;
        java.lang.StringBuilder $r6;

        $r0 := @this: org.apache.http.impl.conn.LoggingSessionOutputBuffer;

        $r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r3 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r3.<org.apache.http.io.SessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)>($r1);

        $r4 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r4.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.String;

        $r5 = virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: char[] buffer()>();

        $i0 = virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r5, 0, $i0);

        $r4 = $r0.<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.impl.conn.Wire wire>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[EOL]");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.http.impl.conn.Wire: void output(java.lang.String)>($r2);

        return;

     label1:
        return;
    }
}
