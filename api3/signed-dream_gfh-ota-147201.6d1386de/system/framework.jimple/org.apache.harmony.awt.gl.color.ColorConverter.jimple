public class org.apache.harmony.awt.gl.color.ColorConverter extends java.lang.Object
{
    private org.apache.harmony.awt.gl.color.ColorScaler scaler;

    public void <init>()
    {
        org.apache.harmony.awt.gl.color.ColorConverter $r0;
        org.apache.harmony.awt.gl.color.ColorScaler $r1;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorConverter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.harmony.awt.gl.color.ColorScaler;

        specialinvoke $r1.<org.apache.harmony.awt.gl.color.ColorScaler: void <init>()>();

        $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler> = $r1;

        return;
    }

    private org.apache.harmony.awt.gl.color.NativeImageFormat createImageFormat(java.awt.image.BufferedImage)
    {
        org.apache.harmony.awt.gl.color.ColorConverter $r0;
        java.awt.image.BufferedImage $r1;
        short[] $r2;
        int $i0, $i1, $i2, $i3;
        java.awt.image.ColorModel $r3;
        org.apache.harmony.awt.gl.color.NativeImageFormat $r4;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorConverter;

        $r1 := @parameter0: java.awt.image.BufferedImage;

        $i0 = virtualinvoke $r1.<java.awt.image.BufferedImage: int getHeight()>();

        $i1 = virtualinvoke $r1.<java.awt.image.BufferedImage: int getWidth()>();

        $r3 = virtualinvoke $r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $i2 = virtualinvoke $r3.<java.awt.image.ColorModel: int getNumColorComponents()>();

        $i3 = $i0 * $i1;

        $i3 = $i3 * $i2;

        $r2 = newarray (short)[$i3];

        $r4 = new org.apache.harmony.awt.gl.color.NativeImageFormat;

        specialinvoke $r4.<org.apache.harmony.awt.gl.color.NativeImageFormat: void <init>(java.lang.Object,int,int,int)>($r2, $i2, $i0, $i1);

        return $r4;
    }

    private org.apache.harmony.awt.gl.color.NativeImageFormat createImageFormat(org.apache.harmony.awt.gl.color.ICC_Transform, short[], int, boolean)
    {
        org.apache.harmony.awt.gl.color.ColorConverter $r0;
        org.apache.harmony.awt.gl.color.ICC_Transform $r1;
        boolean $z0;
        short[] $r2;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.awt.gl.color.NativeImageFormat $r3;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorConverter;

        $r1 := @parameter0: org.apache.harmony.awt.gl.color.ICC_Transform;

        $r2 := @parameter1: short[];

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r1.<org.apache.harmony.awt.gl.color.ICC_Transform: int getNumInputChannels()>();

     label1:
        if $r2 == null goto label2;

        $i2 = lengthof $r2;

        $i3 = $i0 * $i1;

        if $i2 >= $i3 goto label3;

     label2:
        $i2 = $i0 * $i1;

        $r2 = newarray (short)[$i2];

     label3:
        if $i0 != 0 goto label4;

        $i0 = lengthof $r2;

        $i0 = $i0 / $i1;

     label4:
        $r3 = new org.apache.harmony.awt.gl.color.NativeImageFormat;

        specialinvoke $r3.<org.apache.harmony.awt.gl.color.NativeImageFormat: void <init>(java.lang.Object,int,int,int)>($r2, $i1, 1, $i0);

        return $r3;

     label5:
        $i1 = virtualinvoke $r1.<org.apache.harmony.awt.gl.color.ICC_Transform: int getNumOutputChannels()>();

        goto label1;
    }

    public void loadScalingData(java.awt.color.ColorSpace)
    {
        org.apache.harmony.awt.gl.color.ColorConverter $r0;
        java.awt.color.ColorSpace $r1;
        org.apache.harmony.awt.gl.color.ColorScaler $r2;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorConverter;

        $r1 := @parameter0: java.awt.color.ColorSpace;

        $r2 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        virtualinvoke $r2.<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.color.ColorSpace)>($r1);

        return;
    }

    public void translateColor(org.apache.harmony.awt.gl.color.ICC_Transform, java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        org.apache.harmony.awt.gl.color.ColorConverter $r0;
        org.apache.harmony.awt.gl.color.ICC_Transform $r1;
        java.awt.image.BufferedImage $r2, $r3;
        org.apache.harmony.awt.gl.color.NativeImageFormat $r4, $r5;
        java.lang.Object $r6;
        short[] $r7, $r8;
        java.awt.image.ColorModel $r9, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.harmony.awt.gl.color.ColorScaler $r10;
        java.awt.color.ColorSpace $r11;
        float[] $r13, $r15;
        boolean $z0, $z1;
        java.awt.image.WritableRaster $r14;
        float $f0;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorConverter;

        $r1 := @parameter0: org.apache.harmony.awt.gl.color.ICC_Transform;

        $r2 := @parameter1: java.awt.image.BufferedImage;

        $r3 := @parameter2: java.awt.image.BufferedImage;

        $r4 = staticinvoke <org.apache.harmony.awt.gl.color.NativeImageFormat: org.apache.harmony.awt.gl.color.NativeImageFormat createNativeImageFormat(java.awt.image.BufferedImage)>($r2);

        $r5 = staticinvoke <org.apache.harmony.awt.gl.color.NativeImageFormat: org.apache.harmony.awt.gl.color.NativeImageFormat createNativeImageFormat(java.awt.image.BufferedImage)>($r3);

        if $r4 == null goto label01;

        if $r5 == null goto label01;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.color.ICC_Transform: void translateColors(org.apache.harmony.awt.gl.color.NativeImageFormat,org.apache.harmony.awt.gl.color.NativeImageFormat)>($r4, $r5);

        return;

     label01:
        $r4 = specialinvoke $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.NativeImageFormat createImageFormat(java.awt.image.BufferedImage)>($r2);

        $r5 = specialinvoke $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.NativeImageFormat createImageFormat(java.awt.image.BufferedImage)>($r3);

        $r6 = virtualinvoke $r4.<org.apache.harmony.awt.gl.color.NativeImageFormat: java.lang.Object getChannelData()>();

        $r7 = (short[]) $r6;

        $r7 = (short[]) $r7;

        $r6 = virtualinvoke $r5.<org.apache.harmony.awt.gl.color.NativeImageFormat: java.lang.Object getChannelData()>();

        $r8 = (short[]) $r6;

        $r8 = (short[]) $r8;

        $r9 = virtualinvoke $r2.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $i0 = virtualinvoke $r9.<java.awt.image.ColorModel: int getNumColorComponents()>();

        $r10 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        $r11 = virtualinvoke $r9.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        virtualinvoke $r10.<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.color.ColorSpace)>($r11);

        $r12 = virtualinvoke $r3.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $r13 = null;

        $z0 = virtualinvoke $r9.<java.awt.image.ColorModel: boolean hasAlpha()>();

        if $z0 == 0 goto label07;

        $z0 = virtualinvoke $r12.<java.awt.image.ColorModel: boolean hasAlpha()>();

        if $z0 == 0 goto label07;

        $z0 = 1;

     label02:
        if $z0 == 0 goto label03;

        $i1 = virtualinvoke $r2.<java.awt.image.BufferedImage: int getWidth()>();

        $i2 = virtualinvoke $r2.<java.awt.image.BufferedImage: int getHeight()>();

        $i1 = $i1 * $i2;

        $r13 = newarray (float)[$i1];

     label03:
        $r14 = virtualinvoke $r2.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        $i1 = 0;

        $i3 = 0;

        $i2 = 0;

        $i4 = virtualinvoke $r4.<org.apache.harmony.awt.gl.color.NativeImageFormat: int getNumRows()>();

     label04:
        if $i2 >= $i4 goto label09;

        $i5 = 0;

        $i6 = virtualinvoke $r4.<org.apache.harmony.awt.gl.color.NativeImageFormat: int getNumCols()>();

     label05:
        if $i5 >= $i6 goto label08;

        $r6 = virtualinvoke $r14.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>($i5, $i2, null);

        $r15 = virtualinvoke $r9.<java.awt.image.ColorModel: float[] getNormalizedComponents(java.lang.Object,float[],int)>($r6, null, 0);

        if $z0 == 0 goto label16;

        $i7 = $i3 + 1;

        $f0 = $r15[$i0];

        $r13[$i3] = $f0;

     label06:
        $r10 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        virtualinvoke $r10.<org.apache.harmony.awt.gl.color.ColorScaler: void scale(float[],short[],int)>($r15, $r7, $i1);

        $i1 = $i1 + $i0;

        $i5 = $i5 + 1;

        $i3 = $i7;

        goto label05;

     label07:
        $z0 = 0;

        goto label02;

     label08:
        $i2 = $i2 + 1;

        goto label04;

     label09:
        virtualinvoke $r1.<org.apache.harmony.awt.gl.color.ICC_Transform: void translateColors(org.apache.harmony.awt.gl.color.NativeImageFormat,org.apache.harmony.awt.gl.color.NativeImageFormat)>($r4, $r5);

        $i0 = virtualinvoke $r12.<java.awt.image.ColorModel: int getNumColorComponents()>();

        $z1 = virtualinvoke $r12.<java.awt.image.ColorModel: boolean hasAlpha()>();

        $r10 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        $r11 = virtualinvoke $r12.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        virtualinvoke $r10.<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.color.ColorSpace)>($r11);

        $i1 = virtualinvoke $r12.<java.awt.image.ColorModel: int getNumComponents()>();

        $r15 = newarray (float)[$i1];

        $i1 = 0;

        $i3 = 0;

        $r14 = virtualinvoke $r3.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        $i2 = 0;

        $i4 = virtualinvoke $r5.<org.apache.harmony.awt.gl.color.NativeImageFormat: int getNumRows()>();

     label10:
        if $i2 >= $i4 goto label17;

        $i5 = 0;

        $i6 = virtualinvoke $r5.<org.apache.harmony.awt.gl.color.NativeImageFormat: int getNumCols()>();

     label11:
        if $i5 >= $i6 goto label15;

        $r10 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        virtualinvoke $r10.<org.apache.harmony.awt.gl.color.ColorScaler: void unscale(float[],short[],int)>($r15, $r8, $i1);

        $i1 = $i1 + $i0;

        if $z1 == 0 goto label14;

        if $z0 == 0 goto label13;

        $i7 = $i3 + 1;

        $f0 = $r13[$i3];

        $r15[$i0] = $f0;

     label12:
        $r6 = virtualinvoke $r12.<java.awt.image.ColorModel: java.lang.Object getDataElements(float[],int,java.lang.Object)>($r15, 0, null);

        virtualinvoke $r14.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>($i5, $i2, $r6);

        $i5 = $i5 + 1;

        $i3 = $i7;

        goto label11;

     label13:
        $f0 = 1.06535322E9F;

        $r15[$i0] = $f0;

     label14:
        $i7 = $i3;

        goto label12;

     label15:
        $i2 = $i2 + 1;

        goto label10;

     label16:
        $i7 = $i3;

        goto label06;

     label17:
        return;
    }

    public void translateColor(org.apache.harmony.awt.gl.color.ICC_Transform, java.awt.image.Raster, java.awt.image.WritableRaster)
    {
        org.apache.harmony.awt.gl.color.ColorConverter $r0;
        org.apache.harmony.awt.gl.color.ICC_Transform $r1;
        java.awt.image.Raster $r2;
        java.awt.image.WritableRaster $r3;
        org.apache.harmony.awt.gl.color.NativeImageFormat $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        org.apache.harmony.awt.gl.color.ColorScaler $r7;
        java.awt.color.ICC_Profile $r8;
        short[] $r9;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorConverter;

        $r1 := @parameter0: org.apache.harmony.awt.gl.color.ICC_Transform;

        $r2 := @parameter1: java.awt.image.Raster;

        $r3 := @parameter2: java.awt.image.WritableRaster;

     label1:
        $r4 = staticinvoke <org.apache.harmony.awt.gl.color.NativeImageFormat: org.apache.harmony.awt.gl.color.NativeImageFormat createNativeImageFormat(java.awt.image.Raster)>($r2);

        $r5 = staticinvoke <org.apache.harmony.awt.gl.color.NativeImageFormat: org.apache.harmony.awt.gl.color.NativeImageFormat createNativeImageFormat(java.awt.image.Raster)>($r3);

     label2:
        if $r4 == null goto label6;

     label3:
        if $r5 == null goto label6;

        virtualinvoke $r1.<org.apache.harmony.awt.gl.color.ICC_Transform: void translateColors(org.apache.harmony.awt.gl.color.NativeImageFormat,org.apache.harmony.awt.gl.color.NativeImageFormat)>($r4, $r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        $r7 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        $r8 = virtualinvoke $r1.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile getSrc()>();

        virtualinvoke $r7.<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.image.Raster,java.awt.color.ICC_Profile)>($r2, $r8);

        $r7 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        $r9 = virtualinvoke $r7.<org.apache.harmony.awt.gl.color.ColorScaler: short[] scale(java.awt.image.Raster)>($r2);

        $r9 = virtualinvoke $r0.<org.apache.harmony.awt.gl.color.ColorConverter: short[] translateColor(org.apache.harmony.awt.gl.color.ICC_Transform,short[],short[])>($r1, $r9, null);

        $r7 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        $r8 = virtualinvoke $r1.<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile getDst()>();

        virtualinvoke $r7.<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.image.Raster,java.awt.color.ICC_Profile)>($r3, $r8);

        $r7 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        virtualinvoke $r7.<org.apache.harmony.awt.gl.color.ColorScaler: void unscale(short[],java.awt.image.WritableRaster)>($r9, $r3);

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
    }

    public short[] translateColor(org.apache.harmony.awt.gl.color.ICC_Transform, short[], short[])
    {
        org.apache.harmony.awt.gl.color.ICC_Transform $r0;
        short[] $r1, $r2;
        org.apache.harmony.awt.gl.color.ColorConverter $r3;
        org.apache.harmony.awt.gl.color.NativeImageFormat $r4, $r5;
        int $i0;
        java.lang.Object $r6;

        $r3 := @this: org.apache.harmony.awt.gl.color.ColorConverter;

        $r0 := @parameter0: org.apache.harmony.awt.gl.color.ICC_Transform;

        $r1 := @parameter1: short[];

        $r2 := @parameter2: short[];

        $r4 = specialinvoke $r3.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.NativeImageFormat createImageFormat(org.apache.harmony.awt.gl.color.ICC_Transform,short[],int,boolean)>($r0, $r1, 0, 1);

        $i0 = virtualinvoke $r4.<org.apache.harmony.awt.gl.color.NativeImageFormat: int getNumCols()>();

        $r5 = specialinvoke $r3.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.NativeImageFormat createImageFormat(org.apache.harmony.awt.gl.color.ICC_Transform,short[],int,boolean)>($r0, $r2, $i0, 0);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.color.ICC_Transform: void translateColors(org.apache.harmony.awt.gl.color.NativeImageFormat,org.apache.harmony.awt.gl.color.NativeImageFormat)>($r4, $r5);

        $r6 = virtualinvoke $r5.<org.apache.harmony.awt.gl.color.NativeImageFormat: java.lang.Object getChannelData()>();

        $r1 = (short[]) $r6;

        $r1 = (short[]) $r1;

        return $r1;
    }

    public float[][] translateColor(org.apache.harmony.awt.gl.color.ICC_Transform, float[][], java.awt.color.ColorSpace, java.awt.color.ColorSpace, int)
    {
        org.apache.harmony.awt.gl.color.ColorConverter $r0;
        org.apache.harmony.awt.gl.color.ICC_Transform $r1;
        float[][] $r2;
        java.awt.color.ColorSpace $r3, $r4;
        int $i0, $i1, $i2, $i3;
        short[] $r5;
        org.apache.harmony.awt.gl.color.ColorScaler $r6;
        float[] $r7;

        $r0 := @this: org.apache.harmony.awt.gl.color.ColorConverter;

        $r1 := @parameter0: org.apache.harmony.awt.gl.color.ICC_Transform;

        $r2 := @parameter1: float[][];

        $r3 := @parameter2: java.awt.color.ColorSpace;

        $r4 := @parameter3: java.awt.color.ColorSpace;

        $i0 := @parameter4: int;

        if $r3 == null goto label1;

        $r6 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        virtualinvoke $r6.<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.color.ColorSpace)>($r3);

     label1:
        $i2 = virtualinvoke $r1.<org.apache.harmony.awt.gl.color.ICC_Transform: int getNumInputChannels()>();

        $i1 = $i0 * $i2;

        $r5 = newarray (short)[$i1];

        $i1 = 0;

        $i3 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r6 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        $r7 = $r2[$i1];

        virtualinvoke $r6.<org.apache.harmony.awt.gl.color.ColorScaler: void scale(float[],short[],int)>($r7, $r5, $i3);

        $i3 = $i3 + $i2;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r5 = virtualinvoke $r0.<org.apache.harmony.awt.gl.color.ColorConverter: short[] translateColor(org.apache.harmony.awt.gl.color.ICC_Transform,short[],short[])>($r1, $r5, null);

        $i2 = virtualinvoke $r1.<org.apache.harmony.awt.gl.color.ICC_Transform: int getNumOutputChannels()>();

        $r7 = $r2[0];

        $i1 = lengthof $r7;

        $i3 = $i2 + 1;

        if $i1 >= $i3 goto label5;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label5;

        $i3 = $i2 + 1;

        $r7 = newarray (float)[$i3];

        $r2[$i1] = $r7;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        if $r4 == null goto label6;

        $r6 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        virtualinvoke $r6.<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.color.ColorSpace)>($r4);

     label6:
        $i1 = 0;

        $i3 = 0;

     label7:
        if $i1 >= $i0 goto label8;

        $r6 = $r0.<org.apache.harmony.awt.gl.color.ColorConverter: org.apache.harmony.awt.gl.color.ColorScaler scaler>;

        $r7 = $r2[$i1];

        virtualinvoke $r6.<org.apache.harmony.awt.gl.color.ColorScaler: void unscale(float[],short[],int)>($r7, $r5, $i3);

        $i3 = $i3 + $i2;

        $i1 = $i1 + 1;

        goto label7;

     label8:
        return $r2;
    }
}
