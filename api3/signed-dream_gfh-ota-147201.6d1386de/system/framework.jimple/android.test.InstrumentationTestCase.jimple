public class android.test.InstrumentationTestCase extends junit.framework.TestCase
{
    private android.app.Instrumentation mInstrumentation;

    public void <init>()
    {
        android.test.InstrumentationTestCase $r0;

        $r0 := @this: android.test.InstrumentationTestCase;

        specialinvoke $r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    static void access$000(android.test.InstrumentationTestCase, java.lang.reflect.Method, int) throws java.lang.Throwable
    {
        android.test.InstrumentationTestCase $r0;
        java.lang.reflect.Method $r1;
        int $i0;

        $r0 := @parameter0: android.test.InstrumentationTestCase;

        $r1 := @parameter1: java.lang.reflect.Method;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int)>($r1, $i0);

        return;
    }

    private void runMethod(java.lang.reflect.Method, int) throws java.lang.Throwable
    {
        android.test.InstrumentationTestCase $r0;
        java.lang.reflect.Method $r1;
        int $i0, $i1;
        java.lang.Throwable $r2;
        java.lang.reflect.InvocationTargetException $r3;
        java.lang.IllegalAccessException $r4;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r1 := @parameter0: java.lang.reflect.Method;

        $i0 := @parameter1: int;

        $i1 = 0;

     label01:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, null);

     label02:
        $r2 = null;

        $i1 = $i1 + 1;

     label03:
        if $i1 >= $i0 goto label04;

        if $r2 != null goto label01;

     label04:
        if $r2 == null goto label11;

        throw $r2;

     label05:
        $r3 := @caughtexception;

     label06:
        virtualinvoke $r3.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        $r2 = virtualinvoke $r3.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

     label07:
        $i1 = $i1 + 1;

        goto label03;

     label08:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

     label09:
        $r2 = $r4;

        $i1 = $i1 + 1;

        goto label03;

     label10:
        $r2 := @caughtexception;

        throw $r2;

     label11:
        return;

        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label05;
        catch java.lang.IllegalAccessException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.app.Instrumentation getInstrumentation()
    {
        android.test.InstrumentationTestCase $r0;
        android.app.Instrumentation r1;

        $r0 := @this: android.test.InstrumentationTestCase;

        r1 = $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation mInstrumentation>;

        return r1;
    }

    public void injectInsrumentation(android.app.Instrumentation)
    {
        android.test.InstrumentationTestCase $r0;
        android.app.Instrumentation $r1;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r1 := @parameter0: android.app.Instrumentation;

        $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation mInstrumentation> = $r1;

        return;
    }

    public final android.app.Activity launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)
    {
        android.test.InstrumentationTestCase $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        android.os.Bundle $r3;
        android.content.Intent $r4;
        android.app.Activity $r5;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: android.os.Bundle;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        if $r3 == null goto label1;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r3);

     label1:
        $r5 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Activity launchActivityWithIntent(java.lang.String,java.lang.Class,android.content.Intent)>($r1, $r2, $r4);

        return $r5;
    }

    public final android.app.Activity launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)
    {
        android.test.InstrumentationTestCase $r0;
        java.lang.String $r1, $r4;
        java.lang.Class $r2;
        android.content.Intent $r3;
        android.app.Instrumentation $r5;
        android.app.Activity $r6;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: android.content.Intent;

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r1, $r4);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r5 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $r6 = virtualinvoke $r5.<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r3);

        $r5 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r5.<android.app.Instrumentation: void waitForIdleSync()>();

        return $r6;
    }

    protected void runTest() throws java.lang.Throwable
    {
        android.test.InstrumentationTestCase $r0;
        java.lang.Throwable[] $r1;
        java.lang.String $r2, $r12;
        java.lang.reflect.Method $r3;
        java.lang.Class $r4;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.annotation.Annotation $r6;
        android.test.FlakyTest $r7;
        android.app.Instrumentation $r8;
        android.test.InstrumentationTestCase$2 $r9;
        java.lang.Throwable $r10;
        java.lang.NoSuchMethodException $r11;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r2 = virtualinvoke $r0.<junit.framework.TestCase: java.lang.String getName()>();

        staticinvoke <android.test.InstrumentationTestCase: void assertNotNull(java.lang.Object)>($r2);

        $r3 = null;

     label1:
        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r2, null);

     label2:
        $i0 = virtualinvoke $r3.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 != 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method \"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" should be public");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.test.InstrumentationTestCase: void fail(java.lang.String)>($r2);

     label3:
        $i0 = 1;

        $z0 = virtualinvoke $r3.<java.lang.reflect.AccessibleObject: boolean isAnnotationPresent(java.lang.Class)>(class "android/test/FlakyTest");

        if $z0 == 0 goto label4;

        $r6 = virtualinvoke $r3.<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "android/test/FlakyTest");

        $r7 = (android.test.FlakyTest) $r6;

        $i0 = interfaceinvoke $r7.<android.test.FlakyTest: int tolerance()>();

     label4:
        $z0 = virtualinvoke $r3.<java.lang.reflect.AccessibleObject: boolean isAnnotationPresent(java.lang.Class)>(class "android/test/UiThreadTest");

        if $z0 == 0 goto label6;

        $r1 = newarray (java.lang.Throwable)[1];

        $r8 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $r9 = new android.test.InstrumentationTestCase$2;

        specialinvoke $r9.<android.test.InstrumentationTestCase$2: void <init>(android.test.InstrumentationTestCase,java.lang.reflect.Method,int,java.lang.Throwable[])>($r0, $r3, $i0, $r1);

        virtualinvoke $r8.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r9);

        $r10 = $r1[0];

        if $r10 == null goto label7;

        $r10 = $r1[0];

        throw $r10;

     label5:
        $r11 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method \"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" not found");

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.test.InstrumentationTestCase: void fail(java.lang.String)>($r12);

        goto label2;

     label6:
        specialinvoke $r0.<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int)>($r3, $i0);

        return;

     label7:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
    }

    public void runTestOnUiThread(java.lang.Runnable) throws java.lang.Throwable
    {
        android.test.InstrumentationTestCase $r0;
        java.lang.Runnable $r1;
        java.lang.Throwable[] $r2;
        android.test.InstrumentationTestCase$1 $r3;
        android.app.Instrumentation $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = newarray (java.lang.Throwable)[1];

        $r4 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $r3 = new android.test.InstrumentationTestCase$1;

        specialinvoke $r3.<android.test.InstrumentationTestCase$1: void <init>(android.test.InstrumentationTestCase,java.lang.Runnable,java.lang.Throwable[])>($r0, $r1, $r2);

        virtualinvoke $r4.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r3);

        $r5 = $r2[0];

        if $r5 == null goto label1;

        $r5 = $r2[0];

        throw $r5;

     label1:
        return;
    }

    public void sendKeys(java.lang.String)
    {
        android.test.InstrumentationTestCase $r0;
        java.lang.String $r1, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String[] $r2;
        android.app.Instrumentation $r3;
        java.lang.Class $r4;
        java.lang.StringBuilder $r5;
        java.lang.reflect.Field $r7;
        java.lang.NumberFormatException $r8;
        java.lang.NoSuchFieldException $r9;
        java.lang.IllegalAccessException $r10;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof $r2;

        $r3 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label13;

        $r1 = $r2[$i1];

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(42);

        if $i2 != -1 goto label07;

        $i3 = 1;

     label02:
        if $i2 == -1 goto label03;

        $i2 = $i2 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i2);

     label03:
        $i2 = 0;

     label04:
        if $i2 >= $i3 goto label10;

        $r4 = class "android/view/KeyEvent";

        $r5 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KEYCODE_");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r6);

        $i4 = virtualinvoke $r7.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke $r3.<android.app.Instrumentation: void sendKeyDownUpSync(int)>($i4);

     label06:
        $i2 = $i2 + 1;

        goto label04;

     label07:
        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

     label08:
        goto label02;

     label09:
        $r8 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid repeat count: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityTestCase", $r1);

     label10:
        $i1 = $i1 + 1;

        goto label01;

     label11:
        $r9 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown keycode: KEYCODE_");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityTestCase", $r1);

        goto label10;

     label12:
        $r10 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown keycode: KEYCODE_");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityTestCase", $r1);

        goto label10;

     label13:
        virtualinvoke $r3.<android.app.Instrumentation: void waitForIdleSync()>();

        return;

        catch java.lang.NoSuchFieldException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label12;
        catch java.lang.NumberFormatException from label07 to label08 with label09;
    }

    public transient void sendKeys(int[])
    {
        android.test.InstrumentationTestCase $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        android.app.Instrumentation $r2;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r1 := @parameter0: int[];

        $i0 = lengthof $r1;

        $r2 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $i1 = $r1[$i2];

        virtualinvoke $r2.<android.app.Instrumentation: void sendKeyDownUpSync(int)>($i1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r2.<android.app.Instrumentation: void waitForIdleSync()>();

        return;
    }

    public transient void sendRepeatedKeys(int[])
    {
        android.test.InstrumentationTestCase $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.app.Instrumentation $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r1 := @parameter0: int[];

        $i0 = lengthof $r1;

        $i2 = $i0 & 1;

        if $i2 != 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The size of the keys array must be a multiple of 2");

        throw $r3;

     label1:
        $r2 = virtualinvoke $r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $i3 = 0;

     label2:
        if $i3 >= $i0 goto label5;

        $i2 = $r1[$i3];

        $i1 = $i3 + 1;

        $i1 = $r1[$i1];

        $i4 = 0;

     label3:
        if $i4 >= $i2 goto label4;

        virtualinvoke $r2.<android.app.Instrumentation: void sendKeyDownUpSync(int)>($i1);

        $i4 = $i4 + 1;

        goto label3;

     label4:
        $i3 = $i3 + 2;

        goto label2;

     label5:
        virtualinvoke $r2.<android.app.Instrumentation: void waitForIdleSync()>();

        return;
    }

    protected void tearDown() throws java.lang.Exception
    {
        android.test.InstrumentationTestCase $r0;
        java.lang.Runtime $r1;

        $r0 := @this: android.test.InstrumentationTestCase;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void runFinalization()>();

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        specialinvoke $r0.<junit.framework.TestCase: void tearDown()>();

        return;
    }
}
