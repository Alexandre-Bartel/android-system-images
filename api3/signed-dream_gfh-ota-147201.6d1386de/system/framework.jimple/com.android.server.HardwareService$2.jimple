class com.android.server.HardwareService$2 extends android.content.BroadcastReceiver
{
    final com.android.server.HardwareService this$0;

    void <init>(com.android.server.HardwareService)
    {
        com.android.server.HardwareService$2 $r0;
        com.android.server.HardwareService $r1;

        $r0 := @this: com.android.server.HardwareService$2;

        $r1 := @parameter0: com.android.server.HardwareService;

        $r0.<com.android.server.HardwareService$2: com.android.server.HardwareService this$0> = $r1;

        specialinvoke $r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.HardwareService$2 $r0;
        android.content.Context $r1;
        android.content.Intent $r2;
        java.lang.String $r3;
        boolean $z0;
        com.android.server.HardwareService $r4;

        $r0 := @this: com.android.server.HardwareService$2;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r3 = virtualinvoke $r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_OFF");

        if $z0 == 0 goto label1;

        $r4 = $r0.<com.android.server.HardwareService$2: com.android.server.HardwareService this$0>;

        staticinvoke <com.android.server.HardwareService: void access$500(com.android.server.HardwareService)>($r4);

        return;

     label1:
        return;
    }
}
