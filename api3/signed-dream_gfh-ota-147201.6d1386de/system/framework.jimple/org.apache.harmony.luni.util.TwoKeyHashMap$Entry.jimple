public class org.apache.harmony.luni.util.TwoKeyHashMap$Entry extends java.lang.Object implements java.util.Map$Entry
{
    int hash;
    java.lang.Object key1;
    java.lang.Object key2;
    org.apache.harmony.luni.util.TwoKeyHashMap$Entry next;
    java.lang.Object value;

    public void <init>(int, java.lang.Object, java.lang.Object, java.lang.Object, org.apache.harmony.luni.util.TwoKeyHashMap$Entry)
    {
        org.apache.harmony.luni.util.TwoKeyHashMap$Entry $r0, $r4;
        int $i0;
        java.lang.Object $r1, $r2, $r3;

        $r0 := @this: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.Object;

        $r4 := @parameter4: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: int hash> = $i0;

        $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key1> = $r1;

        $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key2> = $r2;

        $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object value> = $r3;

        $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: org.apache.harmony.luni.util.TwoKeyHashMap$Entry next> = $r4;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.harmony.luni.util.TwoKeyHashMap$Entry $r0, $r2;
        java.lang.Object $r1, $r3, $r4, $r5;
        boolean $z0;

        $r0 := @this: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (org.apache.harmony.luni.util.TwoKeyHashMap$Entry) $r1;

        $r3 = virtualinvoke $r2.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object getKey1()>();

        $r4 = virtualinvoke $r2.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object getKey2()>();

        $r1 = virtualinvoke $r2.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object getValue()>();

        $r5 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key1>;

        if $r5 != null goto label2;

        if $r3 != null goto label5;

     label2:
        $r3 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key2>;

        if $r3 != null goto label3;

        if $r4 != null goto label5;

     label3:
        $r4 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object value>;

        if $r4 != null goto label4;

        if $r1 != null goto label5;

     label4:
        $r4 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key1>;

        $r3 = virtualinvoke $r2.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object getKey1()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r4 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key2>;

        $r3 = virtualinvoke $r2.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object getKey2()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r4 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object value>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label6;

     label5:
        return 0;

     label6:
        return 1;
    }

    public volatile java.lang.Object getKey()
    {
        org.apache.harmony.luni.util.TwoKeyHashMap$Entry $r0;
        java.lang.String $r1;

        $r0 := @this: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        $r1 = virtualinvoke $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.String getKey()>();

        return $r1;
    }

    public java.lang.String getKey()
    {
        org.apache.harmony.luni.util.TwoKeyHashMap$Entry $r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @this: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key1>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key2>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.Object getKey1()
    {
        org.apache.harmony.luni.util.TwoKeyHashMap$Entry $r0;
        java.lang.Object r1;

        $r0 := @this: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        r1 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key1>;

        return r1;
    }

    public java.lang.Object getKey2()
    {
        org.apache.harmony.luni.util.TwoKeyHashMap$Entry $r0;
        java.lang.Object r1;

        $r0 := @this: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        r1 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key2>;

        return r1;
    }

    public java.lang.Object getValue()
    {
        org.apache.harmony.luni.util.TwoKeyHashMap$Entry $r0;
        java.lang.Object r1;

        $r0 := @this: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        r1 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object value>;

        return r1;
    }

    public int hashCode()
    {
        org.apache.harmony.luni.util.TwoKeyHashMap$Entry $r0;
        java.lang.Object $r1;
        int $i0, $i1;

        $r0 := @this: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        $r1 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key1>;

        if $r1 != null goto label4;

        $i0 = 0;

     label1:
        $r1 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key2>;

        if $r1 != null goto label5;

        $i1 = 0;

     label2:
        $i0 = $i0 + $i1;

        $r1 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object value>;

        if $r1 != null goto label6;

        $i1 = 0;

     label3:
        $i0 = $i0 ^ $i1;

        return $i0;

     label4:
        $r1 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key1>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label1;

     label5:
        $r1 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object key2>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label6:
        $r1 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object value>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label3;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.apache.harmony.luni.util.TwoKeyHashMap$Entry $r0;
        java.lang.Object $r1, r2;

        $r0 := @this: org.apache.harmony.luni.util.TwoKeyHashMap$Entry;

        $r1 := @parameter0: java.lang.Object;

        r2 = $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object value>;

        $r0.<org.apache.harmony.luni.util.TwoKeyHashMap$Entry: java.lang.Object value> = $r1;

        return r2;
    }
}
