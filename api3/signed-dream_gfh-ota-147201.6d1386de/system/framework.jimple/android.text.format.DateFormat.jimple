public class android.text.format.DateFormat extends java.lang.Object
{
    public static final char AM_PM;
    public static final char CAPITAL_AM_PM;
    public static final char DATE;
    public static final char DAY;
    public static final char HOUR;
    public static final char HOUR_OF_DAY;
    public static final char MINUTE;
    public static final char MONTH;
    public static final char QUOTE;
    public static final char SECONDS;
    public static final char TIME_ZONE;
    public static final char YEAR;
    private static boolean sIs24Hour;
    private static java.util.Locale sIs24HourLocale;
    private static final java.lang.Object sLocaleLock;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.text.format.DateFormat: char YEAR> = 121;

        <android.text.format.DateFormat: char TIME_ZONE> = 122;

        <android.text.format.DateFormat: char SECONDS> = 115;

        <android.text.format.DateFormat: char QUOTE> = 39;

        <android.text.format.DateFormat: char MONTH> = 77;

        <android.text.format.DateFormat: char MINUTE> = 109;

        <android.text.format.DateFormat: char HOUR_OF_DAY> = 107;

        <android.text.format.DateFormat: char HOUR> = 104;

        <android.text.format.DateFormat: char DAY> = 69;

        <android.text.format.DateFormat: char DATE> = 100;

        <android.text.format.DateFormat: char CAPITAL_AM_PM> = 65;

        <android.text.format.DateFormat: char AM_PM> = 97;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.text.format.DateFormat: java.lang.Object sLocaleLock> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.format.DateFormat $r0;

        $r0 := @this: android.text.format.DateFormat;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static final int appendQuotedText(android.text.SpannableStringBuilder, int, int)
    {
        android.text.SpannableStringBuilder $r0;
        int $i0, $i1, $i2, $i4;
        char $c3;

        $r0 := @parameter0: android.text.SpannableStringBuilder;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $i0 + 1;

        if $i2 >= $i1 goto label1;

        $i2 = $i0 + 1;

        $c3 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i2);

        if $c3 != 39 goto label1;

        $i1 = $i0 + 1;

        virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>($i0, $i1);

        return 1;

     label1:
        $i2 = 0;

        $i4 = $i0 + 1;

        virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>($i0, $i4);

        $i1 = $i1 + -1;

     label2:
        if $i0 >= $i1 goto label4;

        $c3 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i0);

        if $c3 != 39 goto label5;

        $i4 = $i0 + 1;

        if $i4 >= $i1 goto label3;

        $i4 = $i0 + 1;

        $c3 = virtualinvoke $r0.<android.text.SpannableStringBuilder: char charAt(int)>($i4);

        if $c3 != 39 goto label3;

        $i4 = $i0 + 1;

        virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>($i0, $i4);

        $i1 = $i1 + -1;

        $i2 = $i2 + 1;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $i1 = $i0 + 1;

        virtualinvoke $r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>($i0, $i1);

     label4:
        return $i2;

     label5:
        $i0 = $i0 + 1;

        $i2 = $i2 + 1;

        goto label2;
    }

    public static final java.lang.CharSequence format(java.lang.CharSequence, long)
    {
        java.lang.CharSequence $r0;
        long $l0;
        java.util.Date $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $l0 := @parameter1: long;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r0 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>($r0, $r1);

        return $r0;
    }

    public static final java.lang.CharSequence format(java.lang.CharSequence, java.util.Calendar)
    {
        java.lang.CharSequence $r0;
        java.util.Calendar $r1;
        android.text.SpannableStringBuilder $r2;
        int $i0, $i1, $i2, $i4, $i7;
        char $c3, $c5;
        java.lang.String $r3;
        byte $b6;
        boolean $z0;
        android.text.SpannedString $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Calendar;

        $r2 = new android.text.SpannableStringBuilder;

        specialinvoke $r2.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r0);

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = 0;

     label01:
        if $i0 >= $i1 goto label21;

        $i2 = 1;

        $c3 = virtualinvoke $r2.<android.text.SpannableStringBuilder: char charAt(int)>($i0);

        if $c3 != 39 goto label03;

        $i2 = staticinvoke <android.text.format.DateFormat: int appendQuotedText(android.text.SpannableStringBuilder,int,int)>($r2, $i0, $i1);

        $i1 = virtualinvoke $r2.<android.text.SpannableStringBuilder: int length()>();

     label02:
        $i0 = $i0 + $i2;

        goto label01;

     label03:
        $i4 = $i0 + $i2;

        if $i4 >= $i1 goto label04;

        $i4 = $i0 + $i2;

        $c5 = virtualinvoke $r2.<android.text.SpannableStringBuilder: char charAt(int)>($i4);

        if $c5 != $c3 goto label04;

        $i2 = $i2 + 1;

        goto label03;

     label04:
        lookupswitch($c3)
        {
            case 65: goto label08;
            case 69: goto label10;
            case 77: goto label17;
            case 97: goto label07;
            case 100: goto label09;
            case 104: goto label13;
            case 107: goto label15;
            case 109: goto label16;
            case 115: goto label18;
            case 121: goto label20;
            case 122: goto label19;
            default: goto label05;
        };

     label05:
        $r3 = null;

     label06:
        if $r3 == null goto label02;

        $i2 = $i0 + $i2;

        virtualinvoke $r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>($i0, $i2, $r3);

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<android.text.SpannableStringBuilder: int length()>();

        goto label02;

     label07:
        $i4 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(9);

        $r3 = staticinvoke <android.text.format.DateUtils: java.lang.String getAMPMString(int)>($i4);

        goto label06;

     label08:
        $i4 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(9);

        $r3 = staticinvoke <android.text.format.DateUtils: java.lang.String getAMPMString(int)>($i4);

        goto label06;

     label09:
        $i4 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i4, $i2);

        goto label06;

     label10:
        $i4 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(7);

        if $i2 >= 4 goto label12;

        $b6 = 20;

     label11:
        $r3 = staticinvoke <android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>($i4, $b6);

        goto label06;

     label12:
        $b6 = 10;

        goto label11;

     label13:
        $i4 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(10);

        $i7 = $i4;

        if $i4 != 0 goto label14;

        $i7 = 12;

     label14:
        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i7, $i2);

        goto label06;

     label15:
        $i4 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(11);

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i4, $i2);

        goto label06;

     label16:
        $i4 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(12);

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i4, $i2);

        goto label06;

     label17:
        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getMonthString(java.util.Calendar,int)>($r1, $i2);

        goto label06;

     label18:
        $i4 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(13);

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i4, $i2);

        goto label06;

     label19:
        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getTimeZoneString(java.util.Calendar,int)>($r1, $i2);

        goto label06;

     label20:
        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getYearString(java.util.Calendar,int)>($r1, $i2);

        goto label06;

     label21:
        $z0 = $r0 instanceof android.text.Spanned;

        if $z0 == 0 goto label22;

        $r4 = new android.text.SpannedString;

        specialinvoke $r4.<android.text.SpannedString: void <init>(java.lang.CharSequence)>($r2);

        return $r4;

     label22:
        $r3 = virtualinvoke $r2.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static final java.lang.CharSequence format(java.lang.CharSequence, java.util.Date)
    {
        java.lang.CharSequence $r0;
        java.util.Date $r1;
        java.util.GregorianCalendar $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Date;

        $r2 = new java.util.GregorianCalendar;

        specialinvoke $r2.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r1);

        $r0 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>($r0, $r2);

        return $r0;
    }

    private static final java.lang.String formatZoneOffset(int, int)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i0 = $i1 / 1000;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        if $i0 >= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "-");

        $i0 = neg $i0;

     label1:
        $i1 = $i0 / 3600;

        $i0 = $i0 % 3600;

        $i0 = $i0 / 60;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i1, 2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i0, 2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "+");

        goto label1;
    }

    public static final java.text.DateFormat getDateFormat(android.content.Context)
    {
        android.content.Context $r0;
        java.text.SimpleDateFormat $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)>($r0);

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r2);

        return $r1;
    }

    public static final char[] getDateFormatOrder(android.content.Context)
    {
        android.content.Context $r0;
        char $c0;
        int $i1, $i2, $i3;
        char[] $r1, $r3;
        java.lang.String $r2;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: android.content.Context;

        $r1 = newarray (char)[3];

        $r1[0] = 100;

        $r1[1] = 77;

        $r1[2] = 121;

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)>($r0);

        $i2 = 0;

        $z0 = 0;

        $z1 = 0;

        $z2 = 0;

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $i1 = lengthof $r3;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label5;

        $c0 = $r3[$i3];

        if $z0 != 0 goto label2;

        if $c0 != 100 goto label2;

        $z0 = 1;

        $r1[$i2] = 100;

        $i2 = $i2 + 1;

     label2:
        if $z1 != 0 goto label3;

        if $c0 != 77 goto label3;

        $z1 = 1;

        $r1[$i2] = 77;

        $i2 = $i2 + 1;

     label3:
        if $z2 != 0 goto label4;

        if $c0 != 121 goto label4;

        $z2 = 1;

        $r1[$i2] = 121;

        $i2 = $i2 + 1;

     label4:
        $i3 = $i3 + 1;

        goto label1;

     label5:
        return $r1;
    }

    private static java.lang.String getDateFormatString(android.content.Context)
    {
        android.content.Context $r0;
        android.content.ContentResolver $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "date_format");

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= 6 goto label2;

     label1:
        return "MM-dd-yyyy";

     label2:
        return $r2;
    }

    public static final java.text.DateFormat getLongDateFormat(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.text.SimpleDateFormat $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)>($r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(77);

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(100);

        if $i0 >= $i1 goto label2;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(17039815);

     label1:
        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r1);

        return $r2;

     label2:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(17039816);

        goto label1;
    }

    public static final java.text.DateFormat getMediumDateFormat(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.text.SimpleDateFormat $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)>($r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(77);

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(100);

        if $i0 >= $i1 goto label2;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(17039817);

     label1:
        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r1);

        return $r2;

     label2:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(17039818);

        goto label1;
    }

    private static final java.lang.String getMonthString(java.util.Calendar, int)
    {
        java.util.Calendar $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.Calendar;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(2);

        if $i0 < 4 goto label1;

        $r1 = staticinvoke <android.text.format.DateUtils: java.lang.String getMonthString(int,int)>($i1, 10);

        return $r1;

     label1:
        if $i0 != 3 goto label2;

        $r1 = staticinvoke <android.text.format.DateUtils: java.lang.String getMonthString(int,int)>($i1, 20);

        return $r1;

     label2:
        $i1 = $i1 + 1;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i1, $i0);

        return $r1;
    }

    public static final java.text.DateFormat getTimeFormat(android.content.Context)
    {
        android.content.Context $r0;
        java.text.SimpleDateFormat $r1;
        boolean $z0;
        int $i0;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>($r0);

        if $z0 == 0 goto label2;

        $i0 = 17039820;

     label1:
        $r1 = new java.text.SimpleDateFormat;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>($i0);

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r2);

        return $r1;

     label2:
        $i0 = 17039819;

        goto label1;
    }

    private static final java.lang.String getTimeZoneString(java.util.Calendar, int)
    {
        java.util.Calendar $r0;
        int $i0, $i1, $i2;
        java.util.TimeZone $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Calendar;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        if $i0 >= 2 goto label1;

        $i1 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(16);

        $i2 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(15);

        $i1 = $i1 + $i2;

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String formatZoneOffset(int,int)>($i1, $i0);

        return $r2;

     label1:
        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(16);

        if $i0 == 0 goto label3;

        $z0 = 1;

     label2:
        $r2 = virtualinvoke $r1.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>($z0, 0);

        return $r2;

     label3:
        $z0 = 0;

        goto label2;
    }

    private static final java.lang.String getYearString(java.util.Calendar, int)
    {
        java.util.Calendar $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.Calendar;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(1);

        if $i0 > 2 goto label1;

        $i0 = $i1 % 100;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i0, 2);

        return $r1;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        return $r1;
    }

    public static boolean is24HourFormat(android.content.Context)
    {
        android.content.Context $r0;
        java.util.Locale $r1, $r8;
        android.content.ContentResolver $r2;
        java.lang.String $r3, $r4;
        android.content.res.Resources $r5;
        android.content.res.Configuration $r6;
        java.lang.Object $r7;
        boolean $z0;
        java.text.DateFormat $r9;
        java.text.SimpleDateFormat $r10;
        int $i0;
        java.lang.Throwable $r11, $r12;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "time_12_24");

        $r4 = $r3;

        if $r3 != null goto label08;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r1 = $r6.<android.content.res.Configuration: java.util.Locale locale>;

        $r7 = <android.text.format.DateFormat: java.lang.Object sLocaleLock>;

        entermonitor $r7;

     label01:
        $r8 = <android.text.format.DateFormat: java.util.Locale sIs24HourLocale>;

        if $r8 == null goto label03;

        $r8 = <android.text.format.DateFormat: java.util.Locale sIs24HourLocale>;

        $z0 = virtualinvoke $r8.<java.util.Locale: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label03;

        $z0 = <android.text.format.DateFormat: boolean sIs24Hour>;

        exitmonitor $r7;

     label02:
        return $z0;

     label03:
        exitmonitor $r7;

     label04:
        $r9 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>(1, $r1);

        $z0 = $r9 instanceof java.text.SimpleDateFormat;

        if $z0 == 0 goto label14;

        $r10 = (java.text.SimpleDateFormat) $r9;

        $r3 = virtualinvoke $r10.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(72);

        if $i0 < 0 goto label13;

        $r4 = "24";

     label05:
        $r7 = <android.text.format.DateFormat: java.lang.Object sLocaleLock>;

        entermonitor $r7;

     label06:
        <android.text.format.DateFormat: java.util.Locale sIs24HourLocale> = $r1;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("12");

        if $z0 != 0 goto label15;

        $z0 = 1;

     label07:
        <android.text.format.DateFormat: boolean sIs24Hour> = $z0;

        exitmonitor $r7;

     label08:
        if $r4 == null goto label19;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("12");

        if $z0 != 0 goto label19;

        $z0 = 1;

     label09:
        return $z0;

     label10:
        $r11 := @caughtexception;

     label11:
        exitmonitor $r7;

     label12:
        throw $r11;

     label13:
        $r4 = "12";

        goto label05;

     label14:
        $r4 = "12";

        goto label05;

     label15:
        $z0 = 0;

        goto label07;

     label16:
        $r12 := @caughtexception;

     label17:
        exitmonitor $r7;

     label18:
        throw $r12;

     label19:
        $z0 = 0;

        goto label09;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label08 with label16;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private static final java.lang.String zeroPad(int, int)
    {
        int $i0, $i1, $i2;
        char[] $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        $r0 = newarray (char)[$i1];

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label2;

        $r0[$i0] = 48;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r0, $i1);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r0);

        return $r1;

     label3:
        return $r1;
    }
}
