class org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed extends org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver
{
    org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher local;

    void <init>(int, int, int, int, org.apache.harmony.awt.gl.MultiRectArea, org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher, boolean)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed $r0;
        int $i0, $i1, $i2, $i3;
        org.apache.harmony.awt.gl.MultiRectArea $r1;
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher $r2;
        boolean $z0;
        float $f0, $f1;
        double $d0;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: org.apache.harmony.awt.gl.MultiRectArea;

        $r2 := @parameter5: org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher;

        $z0 := @parameter6: boolean;

        specialinvoke $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$Ver: void <init>(int,int,int,int,org.apache.harmony.awt.gl.MultiRectArea)>($i0, $i1, $i2, $i3, $r1);

        $f0 = virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: float getLength()>();

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int xcount>;

        $f1 = (float) $i0;

        $f1 = $f1 / $f0;

        $d0 = (double) $f1;

        $r2 = virtualinvoke $r2.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher: org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher createDiagonal(double,float,boolean)>($d0, $f0, $z0);

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed: org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher local> = $r2;

        return;
    }

    void rasterize()
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed $r0;
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher $r1;
        int $i0;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int eBase>;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y1>;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y> = $i0;

        $i0 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int xcount>;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed: org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher local>;

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: void rasterizeDash(int,org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher)>($i0, $r1);

        return;
    }

    void rasterizeClipped(int, int, int, int)
    {
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher $r1;
        float $f0;

        $r0 := @this: org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int eBase>;

        $i4 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int adx>;

        $i5 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y1>;

        $i5 = $i1 - $i5;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        $i4 = $i4 * $i5;

        $i5 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int ady>;

        $i6 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x1>;

        $i6 = $i0 - $i6;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i5 = $i5 * $i6;

        $i4 = $i4 - $i5;

        $i4 = $i4 * 2;

        $i2 = $i2 + $i4;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag: int e> = $i2;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int x> = $i0;

        $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y> = $i1;

        $i0 = $i3 - $i1;

        $r1 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line$Diag$VerDashed: org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher local>;

        $i2 = $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: int y1>;

        $i1 = $i1 - $i2;

        $f0 = (float) $i1;

        $r1 = virtualinvoke $r1.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher: org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher createChild(float)>($f0);

        virtualinvoke $r0.<org.apache.harmony.awt.gl.render.JavaLineRasterizer$Line: void rasterizeDash(int,org.apache.harmony.awt.gl.render.JavaLineRasterizer$LineDasher)>($i0, $r1);

        return;
    }
}
