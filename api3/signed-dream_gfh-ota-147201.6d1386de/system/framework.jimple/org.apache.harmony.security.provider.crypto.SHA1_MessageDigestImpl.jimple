public class org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl extends java.security.MessageDigestSpi implements java.lang.Cloneable, org.apache.harmony.security.provider.crypto.SHA1_Data
{
    private int[] buffer;
    private int messageLength;
    private byte[] oneByte;

    public void <init>()
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl $r0;
        int[] $r1;
        byte[] $r2;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        specialinvoke $r0.<java.security.MessageDigestSpi: void <init>()>();

        $r1 = newarray (int)[87];

        $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer> = $r1;

        $r2 = newarray (byte)[1];

        $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte> = $r2;

        virtualinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void engineReset()>();

        return;
    }

    private void processDigest(byte[], int)
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl $r0;
        byte[] $r1;
        int $i0, $i1, $i3, $i4, $i7;
        long $l2, $l5;
        int[] $r2;
        byte $b6;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int messageLength>;

        $i3 = $i3 << 3;

        $l2 = (long) $i3;

        virtualinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void engineUpdate(byte)>(-128);

        $i3 = 0;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $i1 = $r2[81];

        $i1 = $i1 + 3;

        $i1 = $i1 >> 2;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $i4 = $r2[81];

        if $i4 == 0 goto label1;

        if $i1 >= 15 goto label3;

        $i3 = $i1;

     label1:
        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>($r2, $i3, 14, 0);

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $l5 = $l2 >>> 32;

        $i3 = (int) $l5;

        $r2[14] = $i3;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $l2 = -1L & $l2;

        $i3 = (int) $l2;

        $r2[15] = $i3;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r2);

        $i3 = $i0;

        $i1 = 82;

     label2:
        if $i1 >= 87 goto label5;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $i0 = $r2[$i1];

        $i4 = $i0 >>> 24;

        $b6 = (byte) $i4;

        $r1[$i3] = $b6;

        $i4 = $i3 + 1;

        $i7 = $i0 >>> 16;

        $b6 = (byte) $i7;

        $r1[$i4] = $b6;

        $i4 = $i3 + 2;

        $i7 = $i0 >>> 8;

        $b6 = (byte) $i7;

        $r1[$i4] = $b6;

        $i4 = $i3 + 3;

        $b6 = (byte) $i0;

        $r1[$i4] = $b6;

        $i3 = $i3 + 4;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        if $i1 != 15 goto label4;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r2[15] = 0;

     label4:
        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r2);

        $i3 = 0;

        goto label1;

     label5:
        virtualinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void engineReset()>();

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl $r0, $r2;
        java.lang.Object $r1;
        int[] $r3;
        byte[] $r4;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        $r1 = specialinvoke $r0.<java.security.MessageDigestSpi: java.lang.Object clone()>();

        $r2 = (org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl) $r1;

        $r3 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r1 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (int[]) $r1;

        $r3 = (int[]) $r3;

        $r2.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer> = $r3;

        $r4 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte>;

        $r1 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r1;

        $r4 = (byte[]) $r4;

        $r2.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte> = $r4;

        return $r2;
    }

    protected int engineDigest(byte[], int, int) throws java.security.DigestException
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;
        java.security.DigestException $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.162");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $i2 = lengthof $r1;

        if $i0 > $i2 goto label2;

        $i2 = lengthof $r1;

        if $i1 > $i2 goto label2;

        $i2 = $i1 + $i0;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.163");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        if $i1 >= 20 goto label4;

        $r4 = new java.security.DigestException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.164");

        specialinvoke $r4.<java.security.DigestException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label4:
        if $i0 >= 0 goto label5;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.165", $i0);

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label5:
        specialinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void processDigest(byte[],int)>($r1, $i0);

        return 20;
    }

    protected byte[] engineDigest()
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl $r0;
        byte[] $r1;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        $r1 = newarray (byte)[20];

        specialinvoke $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void processDigest(byte[],int)>($r1, 0);

        return $r1;
    }

    protected int engineGetDigestLength()
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl $r0;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        return 20;
    }

    protected void engineReset()
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl $r0;
        int[] $r1;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int messageLength> = 0;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r1[81] = 0;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r1[82] = 1732584193;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r1[83] = -271733879;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r1[84] = -1732584194;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r1[85] = 271733878;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r1[86] = -1009589776;

        return;
    }

    protected void engineUpdate(byte)
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl $r0;
        byte $b0;
        byte[] $r1;
        int[] $r2;
        int $i1;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        $b0 := @parameter0: byte;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte>;

        $r1[0] = $b0;

        $r2 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void updateHash(int[],byte[],int,int)>($r2, $r1, 0, 0);

        $i1 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int messageLength>;

        $i1 = $i1 + 1;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int messageLength> = $i1;

        return;
    }

    protected void engineUpdate(byte[], int, int)
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        int[] $r5;

        $r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.166");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        if $i1 > 0 goto label2;

        return;

     label2:
        if $i0 >= 0 goto label3;

        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String,int)>("security.165", $i0);

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label3:
        $i2 = lengthof $r1;

        if $i0 > $i2 goto label4;

        $i2 = lengthof $r1;

        if $i1 > $i2 goto label4;

        $i2 = $i1 + $i0;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label5;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.harmony.security.internal.nls.Messages: java.lang.String getString(java.lang.String)>("security.167");

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label5:
        $r5 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $i2 = $i0 + $i1;

        $i2 = $i2 - 1;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void updateHash(int[],byte[],int,int)>($r5, $r1, $i0, $i2);

        $i0 = $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int messageLength>;

        $i0 = $i0 + $i1;

        $r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int messageLength> = $i0;

        return;
    }
}
